package org.usfirst.frc.team1197.robot;

public class LoadingPos3 extends TorTrajectory {

	public LoadingPos3() {
		super(6.8867, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0621, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1243, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1864, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2486, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3107, 0, 0, 0);
		testMethod(30, 0.0001, 0.0065, 0.3728, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.435, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4971, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.5593, 0, 0, 0);
		testMethod(50, 0.0003, 0.0171, 0.6214, 0, 0, 0);
		testMethod(55, 0.0004, 0.0205, 0.6835, 0, 0, 0);
		testMethod(60, 0.0005, 0.0242, 0.7457, 0, 0, 0);
		testMethod(65, 0.0006, 0.0283, 0.8078, 0, 0, 0);
		testMethod(70, 0.0008, 0.0326, 0.87, 0, 0, 0);
		testMethod(75, 0.001, 0.0373, 0.9321, 0, 0, 0);
		testMethod(80, 0.0012, 0.0423, 0.9942, 0, 0, 0);
		testMethod(85, 0.0014, 0.0475, 1.0564, 0, 0, 0);
		testMethod(90, 0.0016, 0.0531, 1.1185, 0, 0, 0);
		testMethod(95, 0.0019, 0.059, 1.1807, 0, 0, 0);
		testMethod(100, 0.0022, 0.0652, 1.2428, 0, 0, 0);
		testMethod(105, 0.0026, 0.0718, 1.3049, 0, 0, 0);
		testMethod(110, 0.0029, 0.0786, 1.3671, 0, 0, 0);
		testMethod(115, 0.0034, 0.0858, 1.4292, 0, 0, 0);
		testMethod(120, 0.0038, 0.0932, 1.4914, 0, 0, 0);
		testMethod(125, 0.0043, 0.101, 1.5535, 0, 0, 0);
		testMethod(130, 0.0048, 0.1091, 1.6156, 0, 0, 0);
		testMethod(135, 0.0054, 0.1174, 1.6778, 0, 0, 0);
		testMethod(140, 0.006, 0.1261, 1.7399, 0, 0, 0);
		testMethod(145, 0.0066, 0.1352, 1.8021, 0, 0, 0);
		testMethod(150, 0.0073, 0.1445, 1.8642, 0, 0, 0);
		testMethod(155, 0.0081, 0.1541, 1.9263, 0, 0, 0);
		testMethod(160, 0.0089, 0.164, 1.9885, 0, 0, 0);
		testMethod(165, 0.0097, 0.1743, 2.0506, 0, 0, 0);
		testMethod(170, 0.0106, 0.1849, 2.1128, 0, 0, 0);
		testMethod(175, 0.0116, 0.1957, 2.1749, 0, 0, 0);
		testMethod(180, 0.0126, 0.2069, 2.237, 0, 0, 0);
		testMethod(185, 0.0137, 0.2184, 2.2992, 0, 0, 0);
		testMethod(190, 0.0148, 0.2302, 2.3613, 0, 0, 0);
		testMethod(195, 0.016, 0.2423, 2.4235, 0, 0, 0);
		testMethod(200, 0.0172, 0.2548, 2.4856, 0, 0, 0);
		testMethod(205, 0.0185, 0.2672, 2.4856, 0, 0, 0);
		testMethod(210, 0.0199, 0.2796, 2.4856, 0, 0, 0);
		testMethod(215, 0.0213, 0.2921, 2.4856, 0, 0, 0);
		testMethod(220, 0.0228, 0.3045, 2.4856, 0, 0, 0);
		testMethod(225, 0.0243, 0.3169, 2.4856, 0, 0, 0);
		testMethod(230, 0.026, 0.3293, 2.4856, 0, 0, 0);
		testMethod(235, 0.0276, 0.3418, 2.4856, 0, 0, 0);
		testMethod(240, 0.0294, 0.3542, 2.4856, 0, 0, 0);
		testMethod(245, 0.0312, 0.3666, 2.4856, 0, 0, 0);
		testMethod(250, 0.033, 0.3791, 2.4856, 0, 0, 0);
		testMethod(255, 0.035, 0.3915, 2.4856, 0, 0, 0.0009);
		testMethod(260, 0.037, 0.4039, 2.4856, 0, 0, 0.0027);
		testMethod(265, 0.039, 0.4163, 2.4856, 0, 0, 0.0049);
		testMethod(270, 0.0411, 0.4288, 2.4856, 0, 0.0001, 0.0074);
		testMethod(275, 0.0433, 0.4412, 2.4856, 0, 0.0001, 0.0104);
		testMethod(280, 0.0455, 0.4536, 2.4856, 0, 0.0002, 0.0137);
		testMethod(285, 0.0478, 0.4661, 2.4856, 0, 0.0003, 0.0175);
		testMethod(290, 0.0502, 0.4785, 2.4856, 0, 0.0004, 0.0217);
		testMethod(295, 0.0526, 0.4909, 2.4856, 0, 0.0005, 0.0265);
		testMethod(300, 0.0551, 0.5033, 2.4856, 0, 0.0007, 0.0318);
		testMethod(305, 0.0577, 0.5158, 2.4856, 0, 0.0009, 0.0377);
		testMethod(310, 0.0603, 0.5282, 2.4856, 0, 0.0011, 0.0441);
		testMethod(315, 0.0629, 0.5406, 2.4856, 0, 0.0014, 0.0512);
		testMethod(320, 0.0657, 0.553, 2.4856, 0, 0.0016, 0.059);
		testMethod(325, 0.0685, 0.5655, 2.4856, 0, 0.002, 0.0674);
		testMethod(330, 0.0713, 0.5779, 2.4856, 0.0001, 0.0024, 0.0766);
		testMethod(335, 0.0742, 0.5903, 2.4856, 0.0001, 0.0028, 0.0866);
		testMethod(340, 0.0772, 0.6028, 2.4856, 0.0001, 0.0033, 0.0974);
		testMethod(345, 0.0803, 0.6152, 2.4856, 0.0001, 0.0038, 0.109);
		testMethod(350, 0.0834, 0.6276, 2.4856, 0.0001, 0.0044, 0.1215);
		testMethod(355, 0.0865, 0.64, 2.4856, 0.0001, 0.0051, 0.135);
		testMethod(360, 0.0898, 0.6525, 2.4856, 0.0002, 0.0059, 0.1494);
		testMethod(365, 0.0931, 0.6649, 2.4856, 0.0002, 0.0067, 0.1648);
		testMethod(370, 0.0964, 0.6773, 2.4856, 0.0002, 0.0076, 0.1813);
		testMethod(375, 0.0998, 0.6898, 2.4856, 0.0003, 0.0086, 0.1988);
		testMethod(380, 0.1033, 0.7022, 2.4856, 0.0003, 0.0097, 0.2175);
		testMethod(385, 0.1069, 0.7146, 2.4856, 0.0004, 0.0109, 0.2374);
		testMethod(390, 0.1105, 0.727, 2.4856, 0.0004, 0.0122, 0.2585);
		testMethod(395, 0.1141, 0.7395, 2.4856, 0.0005, 0.0136, 0.2809);
		testMethod(400, 0.1179, 0.7519, 2.4856, 0.0006, 0.0151, 0.3046);
		testMethod(405, 0.1217, 0.7643, 2.4856, 0.0006, 0.0167, 0.3297);
		testMethod(410, 0.1255, 0.7768, 2.4856, 0.0007, 0.0185, 0.3561);
		testMethod(415, 0.1294, 0.7892, 2.4856, 0.0008, 0.0204, 0.3841);
		testMethod(420, 0.1334, 0.8016, 2.4856, 0.0009, 0.0225, 0.4136);
		testMethod(425, 0.1374, 0.814, 2.4856, 0.0011, 0.0247, 0.4446);
		testMethod(430, 0.1415, 0.8265, 2.4856, 0.0012, 0.0271, 0.4772);
		testMethod(435, 0.1457, 0.8389, 2.4856, 0.0013, 0.0297, 0.5115);
		testMethod(440, 0.1499, 0.8513, 2.4856, 0.0015, 0.0324, 0.5476);
		testMethod(445, 0.1542, 0.8637, 2.4856, 0.0017, 0.0353, 0.5854);
		testMethod(450, 0.1586, 0.8762, 2.4856, 0.0018, 0.0385, 0.625);
		testMethod(455, 0.163, 0.8886, 2.4856, 0.002, 0.0418, 0.6666);
		testMethod(460, 0.1675, 0.901, 2.4856, 0.0023, 0.0453, 0.7101);
		testMethod(465, 0.172, 0.9135, 2.4856, 0.0025, 0.0491, 0.7555);
		testMethod(470, 0.1766, 0.9259, 2.4856, 0.0027, 0.0531, 0.8031);
		testMethod(475, 0.1812, 0.9383, 2.4856, 0.003, 0.0574, 0.8527);
		testMethod(480, 0.186, 0.9507, 2.4856, 0.0033, 0.0619, 0.9046);
		testMethod(485, 0.1908, 0.9632, 2.4856, 0.0036, 0.0667, 0.9587);
		testMethod(490, 0.1956, 0.9756, 2.4856, 0.004, 0.0718, 1.015);
		testMethod(495, 0.2005, 0.988, 2.4856, 0.0044, 0.0772, 1.0738);
		testMethod(500, 0.2055, 1.0005, 2.4856, 0.0048, 0.0828, 1.1349);
		testMethod(505, 0.2105, 1.0129, 2.4856, 0.0052, 0.0888, 1.1986);
		testMethod(510, 0.2156, 1.0253, 2.4856, 0.0057, 0.0951, 1.2648);
		testMethod(515, 0.2208, 1.0377, 2.4856, 0.0061, 0.1018, 1.3336);
		testMethod(520, 0.226, 1.0502, 2.4856, 0.0067, 0.1088, 1.4051);
		testMethod(525, 0.2313, 1.0626, 2.4856, 0.0072, 0.1162, 1.4793);
		testMethod(530, 0.2366, 1.075, 2.4856, 0.0078, 0.124, 1.5564);
		testMethod(535, 0.242, 1.0875, 2.4856, 0.0085, 0.1322, 1.6364);
		testMethod(540, 0.2475, 1.0999, 2.4856, 0.0092, 0.1408, 1.7193);
		testMethod(545, 0.253, 1.1123, 2.4856, 0.0099, 0.1498, 1.8052);
		testMethod(550, 0.2586, 1.1247, 2.4856, 0.0107, 0.1593, 1.8943);
		testMethod(555, 0.2643, 1.1372, 2.4856, 0.0115, 0.1692, 1.9865);
		testMethod(560, 0.27, 1.1496, 2.4856, 0.0123, 0.1796, 2.0819);
		testMethod(565, 0.2758, 1.162, 2.4856, 0.0133, 0.1905, 2.1807);
		testMethod(570, 0.2816, 1.1744, 2.4856, 0.0143, 0.202, 2.2828);
		testMethod(575, 0.2875, 1.1869, 2.4856, 0.0153, 0.2139, 2.3885);
		testMethod(580, 0.2935, 1.1993, 2.4856, 0.0164, 0.2264, 2.4976);
		testMethod(585, 0.2995, 1.2117, 2.4856, 0.0176, 0.2394, 2.6104);
		testMethod(590, 0.3056, 1.2242, 2.4856, 0.0188, 0.2531, 2.7268);
		testMethod(595, 0.3117, 1.2366, 2.4856, 0.0201, 0.2673, 2.8471);
		testMethod(600, 0.318, 1.249, 2.4856, 0.0215, 0.2822, 2.9712);
		testMethod(605, 0.3242, 1.2614, 2.4856, 0.0229, 0.2977, 3.0992);
		testMethod(610, 0.3306, 1.2739, 2.4856, 0.0244, 0.3138, 3.2312);
		testMethod(615, 0.337, 1.2863, 2.4856, 0.0261, 0.3307, 3.3673);
		testMethod(620, 0.3434, 1.2987, 2.4856, 0.0277, 0.3482, 3.5076);
		testMethod(625, 0.35, 1.3112, 2.4856, 0.0295, 0.3665, 3.6521);
		testMethod(630, 0.3565, 1.3236, 2.4856, 0.0314, 0.3855, 3.801);
		testMethod(635, 0.3632, 1.336, 2.4856, 0.0334, 0.4052, 3.9543);
		testMethod(640, 0.3699, 1.3484, 2.4856, 0.0355, 0.4258, 4.1122);
		testMethod(645, 0.3767, 1.3609, 2.4856, 0.0376, 0.4472, 4.2746);
		testMethod(650, 0.3835, 1.3733, 2.4856, 0.0399, 0.4694, 4.4417);
		testMethod(655, 0.3904, 1.3857, 2.4856, 0.0423, 0.4924, 4.6135);
		testMethod(660, 0.3974, 1.3982, 2.4856, 0.0449, 0.5164, 4.7902);
		testMethod(665, 0.4044, 1.4106, 2.4856, 0.0475, 0.5412, 4.9719);
		testMethod(670, 0.4115, 1.423, 2.4856, 0.0503, 0.567, 5.1586);
		testMethod(675, 0.4186, 1.4354, 2.4856, 0.0532, 0.5938, 5.3505);
		testMethod(680, 0.4258, 1.4479, 2.4856, 0.0562, 0.6215, 5.5475);
		testMethod(685, 0.4331, 1.4603, 2.4856, 0.0594, 0.6503, 5.7499);
		testMethod(690, 0.4404, 1.4727, 2.4856, 0.0627, 0.6801, 5.9577);
		testMethod(695, 0.4478, 1.4851, 2.4856, 0.0662, 0.7109, 6.171);
		testMethod(700, 0.4553, 1.4976, 2.4856, 0.0698, 0.7429, 6.3898);
		testMethod(705, 0.4628, 1.51, 2.4856, 0.0736, 0.7759, 6.6144);
		testMethod(710, 0.4704, 1.5224, 2.4856, 0.0776, 0.8102, 6.843);
		testMethod(715, 0.478, 1.5349, 2.4856, 0.0817, 0.8451, 6.9901);
		testMethod(720, 0.4857, 1.5473, 2.4856, 0.086, 0.8808, 7.1284);
		testMethod(725, 0.4935, 1.5597, 2.4856, 0.0905, 0.9171, 7.2677);
		testMethod(730, 0.5013, 1.5721, 2.4856, 0.0952, 0.9541, 7.4082);
		testMethod(735, 0.5092, 1.5846, 2.4856, 0.1001, 0.9921, 7.5891);
		testMethod(740, 0.5172, 1.597, 2.4856, 0.1051, 1.0302, 7.6339);
		testMethod(745, 0.5252, 1.6094, 2.4856, 0.1104, 1.0686, 7.6618);
		testMethod(750, 0.5333, 1.6219, 2.4856, 0.1158, 1.107, 7.6854);
		testMethod(755, 0.5414, 1.6343, 2.4856, 0.1215, 1.1455, 7.7047);
		testMethod(760, 0.5496, 1.6467, 2.4856, 0.1273, 1.1841, 7.7195);
		testMethod(765, 0.5579, 1.6591, 2.4856, 0.1333, 1.2228, 7.7298);
		testMethod(770, 0.5662, 1.6716, 2.4856, 0.1395, 1.2614, 7.7354);
		testMethod(775, 0.5746, 1.684, 2.4856, 0.1459, 1.3001, 7.7362);
		testMethod(780, 0.583, 1.6961, 2.4235, 0.1525, 1.3385, 7.6826);
		testMethod(785, 0.5916, 1.7079, 2.3613, 0.1593, 1.3766, 7.6198);
		testMethod(790, 0.6001, 1.7194, 2.2992, 0.1663, 1.4144, 7.548);
		testMethod(795, 0.6087, 1.7306, 2.237, 0.1734, 1.4517, 7.4672);
		testMethod(800, 0.6174, 1.7415, 2.1749, 0.1808, 1.4886, 7.3775);
		testMethod(805, 0.6262, 1.752, 2.1128, 0.1883, 1.525, 7.2791);
		testMethod(810, 0.6349, 1.7623, 2.0506, 0.196, 1.5608, 7.172);
		testMethod(815, 0.6438, 1.7722, 1.9885, 0.2039, 1.5961, 7.0563);
		testMethod(820, 0.6527, 1.7819, 1.9263, 0.212, 1.6308, 6.9323);
		testMethod(825, 0.6616, 1.7912, 1.8642, 0.2202, 1.6648, 6.8);
		testMethod(830, 0.6706, 1.8002, 1.8021, 0.2286, 1.6981, 6.6596);
		testMethod(835, 0.6796, 1.8089, 1.7399, 0.2372, 1.7306, 6.5113);
		testMethod(840, 0.6887, 1.8173, 1.6778, 0.246, 1.7624, 6.3553);
		testMethod(845, 0.6978, 1.8254, 1.6156, 0.2548, 1.7934, 6.1917);
		testMethod(850, 0.7069, 1.8331, 1.5535, 0.2639, 1.8235, 6.0208);
		testMethod(855, 0.7161, 1.8406, 1.4914, 0.2731, 1.8527, 5.8428);
		testMethod(860, 0.7253, 1.8477, 1.4292, 0.2824, 1.881, 5.6578);
		testMethod(865, 0.7346, 1.8546, 1.3671, 0.2919, 1.9083, 5.4661);
		testMethod(870, 0.7439, 1.8611, 1.3049, 0.3015, 1.9347, 5.268);
		testMethod(875, 0.7532, 1.8673, 1.2428, 0.3112, 1.96, 5.0636);
		testMethod(880, 0.7625, 1.8732, 1.1807, 0.3211, 1.9842, 4.8532);
		testMethod(885, 0.7719, 1.8788, 1.1185, 0.3311, 2.0074, 4.6371);
		testMethod(890, 0.7813, 1.8841, 1.0564, 0.3412, 2.0295, 4.4156);
		testMethod(895, 0.7908, 1.8891, 0.9942, 0.3514, 2.0504, 4.1888);
		testMethod(900, 0.8002, 1.8937, 0.9321, 0.3617, 2.0702, 3.9571);
		testMethod(905, 0.8097, 1.8981, 0.87, 0.3721, 2.0888, 3.7207);
		testMethod(910, 0.8192, 1.9021, 0.8078, 0.3825, 2.1062, 3.4799);
		testMethod(915, 0.8287, 1.9058, 0.7457, 0.3931, 2.1224, 3.2351);
		testMethod(920, 0.8383, 1.9093, 0.6835, 0.4038, 2.1373, 2.9864);
		testMethod(925, 0.8478, 1.9124, 0.6214, 0.4145, 2.151, 2.7343);
		testMethod(930, 0.8574, 1.9152, 0.5593, 0.4253, 2.1634, 2.4789);
		testMethod(935, 0.867, 1.9176, 0.4971, 0.4361, 2.1745, 2.2207);
		testMethod(940, 0.8766, 1.9198, 0.435, 0.447, 2.1843, 1.9598);
		testMethod(945, 0.8862, 1.9217, 0.3728, 0.458, 2.1928, 1.6967);
		testMethod(950, 0.8958, 1.9232, 0.3107, 0.4689, 2.1999, 1.4316);
		testMethod(955, 0.9054, 1.9245, 0.2486, 0.48, 2.2058, 1.1649);
		testMethod(960, 0.915, 1.9254, 0.1864, 0.491, 2.2103, 0.8968);
		testMethod(965, 0.9246, 1.926, 0.1243, 0.5021, 2.2134, 0.6277);
		testMethod(970, 0.9343, 1.9263, 0.0621, 0.5131, 2.2152, 0.3579);
		testMethod(975, 0.9439, 1.9263, 0, 0.5242, 2.2156, 0.0877);
		testMethod(980, 0.9535, 1.9263, 0, 0.5353, 2.2151, -0.1112);
		testMethod(985, 0.9632, 1.9263, 0, 0.5464, 2.2135, -0.31);
		testMethod(990, 0.9728, 1.9263, 0, 0.5574, 2.211, -0.5088);
		testMethod(995, 0.9824, 1.9263, 0, 0.5685, 2.2074, -0.7076);
		testMethod(1000, 0.9921, 1.9263, 0, 0.5795, 2.2029, -0.9063);
		testMethod(1005, 1.0017, 1.9263, 0, 0.5905, 2.1974, -1.1051);
		testMethod(1010, 1.0113, 1.9263, 0, 0.6015, 2.1909, -1.3039);
		testMethod(1015, 1.021, 1.9263, 0, 0.6124, 2.1833, -1.5027);
		testMethod(1020, 1.0306, 1.9263, 0, 0.6233, 2.1748, -1.7015);
		testMethod(1025, 1.0402, 1.9263, 0, 0.6341, 2.1653, -1.9003);
		testMethod(1030, 1.0499, 1.9263, 0, 0.6449, 2.1548, -2.099);
		testMethod(1035, 1.0595, 1.9263, 0, 0.6557, 2.1434, -2.2978);
		testMethod(1040, 1.0691, 1.9263, 0, 0.6664, 2.1309, -2.4966);
		testMethod(1045, 1.0788, 1.9263, 0, 0.677, 2.1174, -2.6954);
		testMethod(1050, 1.0884, 1.9263, 0, 0.6876, 2.1029, -2.8942);
		testMethod(1055, 1.098, 1.9263, 0, 0.698, 2.0875, -3.093);
		testMethod(1060, 1.1076, 1.9263, 0, 0.7084, 2.071, -3.2917);
		testMethod(1065, 1.1173, 1.9263, 0, 0.7187, 2.0535, -3.4905);
		testMethod(1070, 1.1269, 1.9263, 0, 0.729, 2.0351, -3.6893);
		testMethod(1075, 1.1365, 1.9263, 0, 0.7391, 2.0157, -3.8881);
		testMethod(1080, 1.1462, 1.9263, 0, 0.7491, 1.9952, -4.0869);
		testMethod(1085, 1.1558, 1.9263, 0, 0.759, 1.9738, -4.2857);
		testMethod(1090, 1.1654, 1.9263, 0, 0.7689, 1.9514, -4.4844);
		testMethod(1095, 1.1751, 1.9263, 0, 0.7785, 1.928, -4.6832);
		testMethod(1100, 1.1847, 1.9263, 0, 0.7881, 1.9035, -4.882);
		testMethod(1105, 1.1943, 1.9263, 0, 0.7976, 1.8781, -5.0808);
		testMethod(1110, 1.204, 1.9263, 0, 0.8069, 1.8517, -5.2796);
		testMethod(1115, 1.2136, 1.9263, 0, 0.8161, 1.8244, -5.4784);
		testMethod(1120, 1.2232, 1.9263, 0, 0.8252, 1.796, -5.6772);
		testMethod(1125, 1.2329, 1.9263, 0, 0.8341, 1.7666, -5.8759);
		testMethod(1130, 1.2425, 1.9263, 0, 0.8428, 1.7362, -6.0747);
		testMethod(1135, 1.2521, 1.9263, 0, 0.8514, 1.7048, -6.2735);
		testMethod(1140, 1.2618, 1.9263, 0, 0.8599, 1.6725, -6.4723);
		testMethod(1145, 1.2714, 1.9263, 0, 0.8681, 1.6391, -6.6711);
		testMethod(1150, 1.281, 1.9263, 0, 0.8763, 1.6048, -6.8699);
		testMethod(1155, 1.2906, 1.9263, 0, 0.8842, 1.5694, -7.0686);
		testMethod(1160, 1.3003, 1.9263, 0, 0.8919, 1.5331, -7.2674);
		testMethod(1165, 1.3099, 1.9263, 0, 0.8995, 1.4958, -7.4662);
		testMethod(1170, 1.3195, 1.9263, 0, 0.9069, 1.4574, -7.665);
		testMethod(1175, 1.3292, 1.9263, 0, 0.9141, 1.4181, -7.8638);
		testMethod(1180, 1.3388, 1.9263, 0, 0.9211, 1.3778, -8.0626);
		testMethod(1185, 1.3484, 1.9263, 0, 0.9279, 1.3365, -8.2613);
		testMethod(1190, 1.3581, 1.9263, 0, 0.9344, 1.2942, -8.4601);
		testMethod(1195, 1.3677, 1.9263, 0, 0.9408, 1.2509, -8.6589);
		testMethod(1200, 1.3773, 1.9263, 0, 0.947, 1.2066, -8.8577);
		testMethod(1205, 1.387, 1.9263, 0, 0.9529, 1.1618, -8.9717);
		testMethod(1210, 1.3966, 1.9263, 0, 0.9586, 1.1169, -8.9635);
		testMethod(1215, 1.4062, 1.9263, 0, 0.964, 1.0721, -8.9635);
		testMethod(1220, 1.4159, 1.9263, 0, 0.9693, 1.0273, -8.9635);
		testMethod(1225, 1.4255, 1.9263, 0, 0.9743, 0.9825, -8.9721);
		testMethod(1230, 1.4351, 1.9263, 0, 0.9791, 0.9388, -8.7391);
		testMethod(1235, 1.4448, 1.9263, 0, 0.9837, 0.8961, -8.5403);
		testMethod(1240, 1.4544, 1.9263, 0, 0.9881, 0.8543, -8.3415);
		testMethod(1245, 1.464, 1.9263, 0, 0.9922, 0.8136, -8.1427);
		testMethod(1250, 1.4737, 1.9263, 0, 0.9962, 0.7739, -7.9439);
		testMethod(1255, 1.4833, 1.9263, 0, 1, 0.7352, -7.7451);
		testMethod(1260, 1.4929, 1.9263, 0, 1.0036, 0.6975, -7.5464);
		testMethod(1265, 1.5025, 1.9263, 0, 1.007, 0.6607, -7.3476);
		testMethod(1270, 1.5122, 1.9263, 0, 1.0102, 0.625, -7.1488);
		testMethod(1275, 1.5218, 1.9263, 0, 1.0132, 0.5902, -6.95);
		testMethod(1280, 1.5314, 1.9263, 0, 1.0161, 0.5565, -6.7512);
		testMethod(1285, 1.5411, 1.9263, 0, 1.0188, 0.5237, -6.5524);
		testMethod(1290, 1.5507, 1.9263, 0, 1.0213, 0.4919, -6.3537);
		testMethod(1295, 1.5603, 1.9263, 0, 1.0237, 0.4612, -6.1549);
		testMethod(1300, 1.57, 1.9263, 0, 1.0259, 0.4314, -5.9561);
		testMethod(1305, 1.5796, 1.9263, 0, 1.028, 0.4026, -5.7573);
		testMethod(1310, 1.5892, 1.9263, 0, 1.03, 0.3748, -5.5585);
		testMethod(1315, 1.5989, 1.9263, 0, 1.0318, 0.348, -5.3597);
		testMethod(1320, 1.6085, 1.9263, 0, 1.0334, 0.3222, -5.161);
		testMethod(1325, 1.6181, 1.9263, 0, 1.035, 0.2974, -4.9622);
		testMethod(1330, 1.6278, 1.9263, 0, 1.0364, 0.2736, -4.7634);
		testMethod(1335, 1.6374, 1.9263, 0, 1.0377, 0.2508, -4.5646);
		testMethod(1340, 1.647, 1.9263, 0, 1.0389, 0.2289, -4.3658);
		testMethod(1345, 1.6567, 1.9263, 0, 1.04, 0.2081, -4.167);
		testMethod(1350, 1.6663, 1.9263, 0, 1.041, 0.1882, -3.9682);
		testMethod(1355, 1.6759, 1.9263, 0, 1.0419, 0.1694, -3.7695);
		testMethod(1360, 1.6855, 1.9263, 0, 1.0427, 0.1515, -3.5707);
		testMethod(1365, 1.6952, 1.9263, 0, 1.0434, 0.1347, -3.3719);
		testMethod(1370, 1.7048, 1.9263, 0, 1.0441, 0.1188, -3.1731);
		testMethod(1375, 1.7144, 1.9263, 0, 1.0446, 0.1039, -2.9743);
		testMethod(1380, 1.7241, 1.9263, 0, 1.0451, 0.0901, -2.7755);
		testMethod(1385, 1.7337, 1.9263, 0, 1.0455, 0.0772, -2.5768);
		testMethod(1390, 1.7433, 1.9263, 0, 1.0459, 0.0653, -2.378);
		testMethod(1395, 1.753, 1.9263, 0, 1.0462, 0.0544, -2.1792);
		testMethod(1400, 1.7626, 1.9263, 0, 1.0464, 0.0445, -1.9804);
		testMethod(1405, 1.7722, 1.9263, 0, 1.0466, 0.0356, -1.7816);
		testMethod(1410, 1.7819, 1.9263, 0, 1.0468, 0.0277, -1.5828);
		testMethod(1415, 1.7915, 1.9263, 0, 1.0469, 0.0208, -1.3841);
		testMethod(1420, 1.8011, 1.9263, 0, 1.047, 0.0148, -1.1853);
		testMethod(1425, 1.8108, 1.9263, 0, 1.047, 0.0099, -0.9865);
		testMethod(1430, 1.8204, 1.9263, 0, 1.0471, 0.006, -0.7877);
		testMethod(1435, 1.83, 1.9263, 0, 1.0471, 0.003, -0.5889);
		testMethod(1440, 1.8397, 1.9263, 0, 1.0471, 0.0011, -0.3901);
		testMethod(1445, 1.8493, 1.9263, 0, 1.0471, 0.0001, -0.1914);
		testMethod(1450, 1.8589, 1.9263, 0, 1.0471, 0, -0.0213);
		testMethod(1455, 1.8686, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1460, 1.8782, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1465, 1.8878, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1470, 1.8974, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1475, 1.9071, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1480, 1.9167, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1485, 1.9263, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1490, 1.936, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1495, 1.9456, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1500, 1.9552, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1505, 1.9649, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1510, 1.9745, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1515, 1.9841, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1520, 1.9938, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1525, 2.0034, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1530, 2.013, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1535, 2.0227, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1540, 2.0323, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1545, 2.0419, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1550, 2.0516, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1555, 2.0612, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1560, 2.0708, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1565, 2.0804, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1570, 2.0901, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1575, 2.0997, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1580, 2.1093, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1585, 2.119, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1590, 2.1286, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1595, 2.1382, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1600, 2.1479, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1605, 2.1575, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1610, 2.1671, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1615, 2.1768, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1620, 2.1864, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1625, 2.196, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1630, 2.2057, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1635, 2.2153, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1640, 2.2249, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1645, 2.2346, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1650, 2.2442, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1655, 2.2538, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1660, 2.2635, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1665, 2.2731, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1670, 2.2827, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1675, 2.2923, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1680, 2.302, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1685, 2.3116, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1690, 2.3212, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1695, 2.3309, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1700, 2.3405, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1705, 2.3501, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1710, 2.3598, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1715, 2.3694, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1720, 2.379, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1725, 2.3887, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1730, 2.3983, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1735, 2.4079, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1740, 2.4176, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1745, 2.4272, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1750, 2.4368, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1755, 2.4465, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1760, 2.4561, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1765, 2.4657, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1770, 2.4753, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1775, 2.485, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1780, 2.4946, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1785, 2.5042, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1790, 2.5139, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1795, 2.5235, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1800, 2.5331, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1805, 2.5428, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1810, 2.5524, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1815, 2.562, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1820, 2.5717, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1825, 2.5813, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1830, 2.5909, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1835, 2.6006, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1840, 2.6102, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1845, 2.6198, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1850, 2.6295, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1855, 2.6391, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1860, 2.6487, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1865, 2.6584, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1870, 2.668, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1875, 2.6776, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1880, 2.6872, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1885, 2.6969, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1890, 2.7065, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1895, 2.7161, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1900, 2.7258, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1905, 2.7354, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1910, 2.745, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1915, 2.7547, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1920, 2.7643, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1925, 2.7739, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1930, 2.7836, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1935, 2.7932, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1940, 2.8028, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1945, 2.8125, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1950, 2.8221, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1955, 2.8317, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1960, 2.8414, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1965, 2.851, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1970, 2.8606, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1975, 2.8702, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1980, 2.8799, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1985, 2.8895, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1990, 2.8991, 1.9263, 0, 1.0471, 0, 0);
		testMethod(1995, 2.9088, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2000, 2.9184, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2005, 2.928, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2010, 2.9377, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2015, 2.9473, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2020, 2.9569, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2025, 2.9666, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2030, 2.9762, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2035, 2.9858, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2040, 2.9955, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2045, 3.0051, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2050, 3.0147, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2055, 3.0244, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2060, 3.034, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2065, 3.0436, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2070, 3.0533, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2075, 3.0629, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2080, 3.0725, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2085, 3.0821, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2090, 3.0918, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2095, 3.1014, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2100, 3.111, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2105, 3.1207, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2110, 3.1303, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2115, 3.1399, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2120, 3.1496, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2125, 3.1592, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2130, 3.1688, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2135, 3.1785, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2140, 3.1881, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2145, 3.1977, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2150, 3.2074, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2155, 3.217, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2160, 3.2266, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2165, 3.2363, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2170, 3.2459, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2175, 3.2555, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2180, 3.2651, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2185, 3.2748, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2190, 3.2844, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2195, 3.294, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2200, 3.3037, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2205, 3.3133, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2210, 3.3229, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2215, 3.3326, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2220, 3.3422, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2225, 3.3518, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2230, 3.3615, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2235, 3.3711, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2240, 3.3807, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2245, 3.3904, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2250, 3.4, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2255, 3.4096, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2260, 3.4193, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2265, 3.4289, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2270, 3.4385, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2275, 3.4482, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2280, 3.4578, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2285, 3.4674, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2290, 3.477, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2295, 3.4867, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2300, 3.4963, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2305, 3.5059, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2310, 3.5156, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2315, 3.5252, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2320, 3.5348, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2325, 3.5445, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2330, 3.5541, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2335, 3.5637, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2340, 3.5734, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2345, 3.583, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2350, 3.5926, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2355, 3.6023, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2360, 3.6119, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2365, 3.6215, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2370, 3.6312, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2375, 3.6408, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2380, 3.6504, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2385, 3.66, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2390, 3.6697, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2395, 3.6793, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2400, 3.6889, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2405, 3.6986, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2410, 3.7082, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2415, 3.7178, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2420, 3.7275, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2425, 3.7371, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2430, 3.7467, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2435, 3.7564, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2440, 3.766, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2445, 3.7756, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2450, 3.7853, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2455, 3.7949, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2460, 3.8045, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2465, 3.8142, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2470, 3.8238, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2475, 3.8334, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2480, 3.8431, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2485, 3.8527, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2490, 3.8623, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2495, 3.8719, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2500, 3.8816, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2505, 3.8912, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2510, 3.9008, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2515, 3.9105, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2520, 3.9201, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2525, 3.9297, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2530, 3.9394, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2535, 3.949, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2540, 3.9586, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2545, 3.9683, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2550, 3.9779, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2555, 3.9875, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2560, 3.9972, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2565, 4.0068, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2570, 4.0164, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2575, 4.0261, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2580, 4.0357, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2585, 4.0453, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2590, 4.0549, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2595, 4.0646, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2600, 4.0742, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2605, 4.0838, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2610, 4.0935, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2615, 4.1031, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2620, 4.1127, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2625, 4.1224, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2630, 4.132, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2635, 4.1416, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2640, 4.1513, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2645, 4.1609, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2650, 4.1705, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2655, 4.1802, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2660, 4.1898, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2665, 4.1994, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2670, 4.2091, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2675, 4.2187, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2680, 4.2283, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2685, 4.238, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2690, 4.2476, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2695, 4.2572, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2700, 4.2668, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2705, 4.2765, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2710, 4.2861, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2715, 4.2957, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2720, 4.3054, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2725, 4.315, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2730, 4.3246, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2735, 4.3343, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2740, 4.3439, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2745, 4.3535, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2750, 4.3632, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2755, 4.3728, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2760, 4.3824, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2765, 4.3921, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2770, 4.4017, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2775, 4.4113, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2780, 4.421, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2785, 4.4306, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2790, 4.4402, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2795, 4.4498, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2800, 4.4595, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2805, 4.4691, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2810, 4.4787, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2815, 4.4884, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2820, 4.498, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2825, 4.5076, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2830, 4.5173, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2835, 4.5269, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2840, 4.5365, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2845, 4.5462, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2850, 4.5558, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2855, 4.5654, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2860, 4.5751, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2865, 4.5847, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2870, 4.5943, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2875, 4.604, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2880, 4.6136, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2885, 4.6232, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2890, 4.6329, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2895, 4.6425, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2900, 4.6521, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2905, 4.6617, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2910, 4.6714, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2915, 4.681, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2920, 4.6906, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2925, 4.7003, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2930, 4.7099, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2935, 4.7195, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2940, 4.7292, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2945, 4.7388, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2950, 4.7484, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2955, 4.7581, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2960, 4.7677, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2965, 4.7773, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2970, 4.787, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2975, 4.7966, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2980, 4.8062, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2985, 4.8159, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2990, 4.8255, 1.9263, 0, 1.0471, 0, 0);
		testMethod(2995, 4.8351, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3000, 4.8447, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3005, 4.8544, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3010, 4.864, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3015, 4.8736, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3020, 4.8833, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3025, 4.8929, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3030, 4.9025, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3035, 4.9122, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3040, 4.9218, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3045, 4.9314, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3050, 4.9411, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3055, 4.9507, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3060, 4.9603, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3065, 4.97, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3070, 4.9796, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3075, 4.9892, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3080, 4.9989, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3085, 5.0085, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3090, 5.0181, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3095, 5.0277, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3100, 5.0374, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3105, 5.047, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3110, 5.0566, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3115, 5.0663, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3120, 5.0759, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3125, 5.0855, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3130, 5.0952, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3135, 5.1048, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3140, 5.1144, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3145, 5.1241, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3150, 5.1337, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3155, 5.1433, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3160, 5.153, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3165, 5.1626, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3170, 5.1722, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3175, 5.1819, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3180, 5.1915, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3185, 5.2011, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3190, 5.2108, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3195, 5.2204, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3200, 5.23, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3205, 5.2396, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3210, 5.2493, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3215, 5.2589, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3220, 5.2685, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3225, 5.2782, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3230, 5.2878, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3235, 5.2974, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3240, 5.3071, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3245, 5.3167, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3250, 5.3263, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3255, 5.336, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3260, 5.3456, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3265, 5.3552, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3270, 5.3649, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3275, 5.3745, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3280, 5.3841, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3285, 5.3938, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3290, 5.4034, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3295, 5.413, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3300, 5.4226, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3305, 5.4323, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3310, 5.4419, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3315, 5.4515, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3320, 5.4612, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3325, 5.4708, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3330, 5.4804, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3335, 5.4901, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3340, 5.4997, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3345, 5.5093, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3350, 5.519, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3355, 5.5286, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3360, 5.5382, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3365, 5.5479, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3370, 5.5575, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3375, 5.5671, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3380, 5.5768, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3385, 5.5864, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3390, 5.596, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3395, 5.6057, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3400, 5.6153, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3405, 5.6249, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3410, 5.6345, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3415, 5.6442, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3420, 5.6538, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3425, 5.6634, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3430, 5.6731, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3435, 5.6827, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3440, 5.6923, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3445, 5.702, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3450, 5.7116, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3455, 5.7212, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3460, 5.7309, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3465, 5.7405, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3470, 5.7501, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3475, 5.7598, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3480, 5.7694, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3485, 5.779, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3490, 5.7887, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3495, 5.7983, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3500, 5.8079, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3505, 5.8175, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3510, 5.8272, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3515, 5.8368, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3520, 5.8464, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3525, 5.8561, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3530, 5.8657, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3535, 5.8753, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3540, 5.885, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3545, 5.8946, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3550, 5.9042, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3555, 5.9139, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3560, 5.9235, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3565, 5.9331, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3570, 5.9428, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3575, 5.9524, 1.9263, 0, 1.0471, 0, 0);
		testMethod(3580, 5.962, 1.926, -0.0621, 1.0471, 0, 0);
		testMethod(3585, 5.9717, 1.9254, -0.1243, 1.0471, 0, 0);
		testMethod(3590, 5.9813, 1.9245, -0.1864, 1.0471, 0, 0);
		testMethod(3595, 5.9909, 1.9232, -0.2486, 1.0471, 0, 0);
		testMethod(3600, 6.0005, 1.9217, -0.3107, 1.0471, 0, 0);
		testMethod(3605, 6.0101, 1.9198, -0.3728, 1.0471, 0, 0);
		testMethod(3610, 6.0197, 1.9176, -0.435, 1.0471, 0, 0);
		testMethod(3615, 6.0293, 1.9152, -0.4971, 1.0471, 0, 0);
		testMethod(3620, 6.0389, 1.9124, -0.5593, 1.0471, 0, 0);
		testMethod(3625, 6.0484, 1.9093, -0.6214, 1.0471, 0, 0);
		testMethod(3630, 6.0579, 1.9058, -0.6835, 1.0471, 0, 0);
		testMethod(3635, 6.0675, 1.9021, -0.7457, 1.0471, 0, 0);
		testMethod(3640, 6.077, 1.8981, -0.8078, 1.0471, 0, 0);
		testMethod(3645, 6.0864, 1.8937, -0.87, 1.0471, 0, 0);
		testMethod(3650, 6.0959, 1.8891, -0.9321, 1.0471, 0, 0);
		testMethod(3655, 6.1053, 1.8841, -0.9942, 1.0471, 0, 0);
		testMethod(3660, 6.1147, 1.8788, -1.0564, 1.0471, 0, 0);
		testMethod(3665, 6.1241, 1.8732, -1.1185, 1.0471, 0, 0);
		testMethod(3670, 6.1335, 1.8673, -1.1807, 1.0471, 0, 0);
		testMethod(3675, 6.1428, 1.8611, -1.2428, 1.0471, 0, 0);
		testMethod(3680, 6.1521, 1.8546, -1.3049, 1.0471, 0, 0);
		testMethod(3685, 6.1613, 1.8477, -1.3671, 1.0471, 0, 0);
		testMethod(3690, 6.1706, 1.8406, -1.4292, 1.0471, 0, 0);
		testMethod(3695, 6.1797, 1.8331, -1.4914, 1.0471, 0, 0);
		testMethod(3700, 6.1889, 1.8254, -1.5535, 1.0471, 0, 0);
		testMethod(3705, 6.198, 1.8173, -1.6156, 1.0471, 0, 0);
		testMethod(3710, 6.2071, 1.8089, -1.6778, 1.0471, 0, 0);
		testMethod(3715, 6.2161, 1.8002, -1.7399, 1.0471, 0, 0);
		testMethod(3720, 6.2251, 1.7912, -1.8021, 1.0471, 0, 0);
		testMethod(3725, 6.234, 1.7819, -1.8642, 1.0471, 0, 0);
		testMethod(3730, 6.2429, 1.7722, -1.9263, 1.0471, 0, 0);
		testMethod(3735, 6.2517, 1.7623, -1.9885, 1.0471, 0, 0);
		testMethod(3740, 6.2605, 1.752, -2.0506, 1.0471, 0, 0);
		testMethod(3745, 6.2692, 1.7415, -2.1128, 1.0471, 0, 0);
		testMethod(3750, 6.2779, 1.7306, -2.1749, 1.0471, 0, 0);
		testMethod(3755, 6.2865, 1.7194, -2.237, 1.0471, 0, 0);
		testMethod(3760, 6.2951, 1.7079, -2.2992, 1.0471, 0, 0);
		testMethod(3765, 6.3036, 1.6961, -2.3613, 1.0471, 0, 0);
		testMethod(3770, 6.3121, 1.684, -2.4235, 1.0471, 0, 0);
		testMethod(3775, 6.3205, 1.6716, -2.4856, 1.0471, 0, 0);
		testMethod(3780, 6.3288, 1.6591, -2.4856, 1.0471, 0, 0);
		testMethod(3785, 6.3371, 1.6467, -2.4856, 1.0471, 0, 0);
		testMethod(3790, 6.3453, 1.6343, -2.4856, 1.0471, 0, 0);
		testMethod(3795, 6.3534, 1.6219, -2.4856, 1.0471, 0, 0);
		testMethod(3800, 6.3615, 1.6094, -2.4856, 1.0471, 0, 0);
		testMethod(3805, 6.3695, 1.597, -2.4856, 1.0471, 0, 0);
		testMethod(3810, 6.3774, 1.5846, -2.4856, 1.0471, 0, 0);
		testMethod(3815, 6.3853, 1.5721, -2.4856, 1.0471, 0, 0);
		testMethod(3820, 6.3932, 1.5597, -2.4856, 1.0471, 0, 0);
		testMethod(3825, 6.4009, 1.5473, -2.4856, 1.0471, 0, 0);
		testMethod(3830, 6.4086, 1.5349, -2.4856, 1.0471, 0, 0);
		testMethod(3835, 6.4163, 1.5224, -2.4856, 1.0471, 0, 0);
		testMethod(3840, 6.4239, 1.51, -2.4856, 1.0471, 0, 0);
		testMethod(3845, 6.4314, 1.4976, -2.4856, 1.0471, 0, 0);
		testMethod(3850, 6.4388, 1.4851, -2.4856, 1.0471, 0, 0);
		testMethod(3855, 6.4462, 1.4727, -2.4856, 1.0471, 0, 0);
		testMethod(3860, 6.4536, 1.4603, -2.4856, 1.0471, 0, 0);
		testMethod(3865, 6.4608, 1.4479, -2.4856, 1.0471, 0, 0);
		testMethod(3870, 6.468, 1.4354, -2.4856, 1.0471, 0, 0);
		testMethod(3875, 6.4752, 1.423, -2.4856, 1.0471, 0, 0);
		testMethod(3880, 6.4823, 1.4106, -2.4856, 1.0471, 0, 0);
		testMethod(3885, 6.4893, 1.3982, -2.4856, 1.0471, 0, 0);
		testMethod(3890, 6.4963, 1.3857, -2.4856, 1.0471, 0, 0);
		testMethod(3895, 6.5032, 1.3733, -2.4856, 1.0471, 0, 0);
		testMethod(3900, 6.51, 1.3609, -2.4856, 1.0471, 0, 0);
		testMethod(3905, 6.5168, 1.3484, -2.4856, 1.0471, 0, 0);
		testMethod(3910, 6.5235, 1.336, -2.4856, 1.0471, 0, 0);
		testMethod(3915, 6.5301, 1.3236, -2.4856, 1.0471, 0, 0);
		testMethod(3920, 6.5367, 1.3112, -2.4856, 1.0471, 0, 0);
		testMethod(3925, 6.5432, 1.2987, -2.4856, 1.0471, 0, 0);
		testMethod(3930, 6.5497, 1.2863, -2.4856, 1.0471, 0, 0);
		testMethod(3935, 6.5561, 1.2739, -2.4856, 1.0471, 0, 0);
		testMethod(3940, 6.5624, 1.2614, -2.4856, 1.0471, 0, 0);
		testMethod(3945, 6.5687, 1.249, -2.4856, 1.0471, 0, 0);
		testMethod(3950, 6.5749, 1.2366, -2.4856, 1.0471, 0, 0);
		testMethod(3955, 6.5811, 1.2242, -2.4856, 1.0471, 0, 0);
		testMethod(3960, 6.5872, 1.2117, -2.4856, 1.0471, 0, 0);
		testMethod(3965, 6.5932, 1.1993, -2.4856, 1.0471, 0, 0);
		testMethod(3970, 6.5992, 1.1869, -2.4856, 1.0471, 0, 0);
		testMethod(3975, 6.6051, 1.1744, -2.4856, 1.0471, 0, 0);
		testMethod(3980, 6.6109, 1.162, -2.4856, 1.0471, 0, 0);
		testMethod(3985, 6.6167, 1.1496, -2.4856, 1.0471, 0, 0);
		testMethod(3990, 6.6224, 1.1372, -2.4856, 1.0471, 0, 0);
		testMethod(3995, 6.6281, 1.1247, -2.4856, 1.0471, 0, 0);
		testMethod(4000, 6.6337, 1.1123, -2.4856, 1.0471, 0, 0);
		testMethod(4005, 6.6392, 1.0999, -2.4856, 1.0471, 0, 0);
		testMethod(4010, 6.6446, 1.0875, -2.4856, 1.0471, 0, 0);
		testMethod(4015, 6.6501, 1.075, -2.4856, 1.0471, 0, 0);
		testMethod(4020, 6.6554, 1.0626, -2.4856, 1.0471, 0, 0);
		testMethod(4025, 6.6607, 1.0502, -2.4856, 1.0471, 0, 0);
		testMethod(4030, 6.6659, 1.0377, -2.4856, 1.0471, 0, 0);
		testMethod(4035, 6.6711, 1.0253, -2.4856, 1.0471, 0, 0);
		testMethod(4040, 6.6762, 1.0129, -2.4856, 1.0471, 0, 0);
		testMethod(4045, 6.6812, 1.0005, -2.4856, 1.0471, 0, 0);
		testMethod(4050, 6.6862, 0.988, -2.4856, 1.0471, 0, 0);
		testMethod(4055, 6.6911, 0.9756, -2.4856, 1.0471, 0, 0);
		testMethod(4060, 6.6959, 0.9632, -2.4856, 1.0471, 0, 0);
		testMethod(4065, 6.7007, 0.9507, -2.4856, 1.0471, 0, 0);
		testMethod(4070, 6.7054, 0.9383, -2.4856, 1.0471, 0, 0);
		testMethod(4075, 6.7101, 0.9259, -2.4856, 1.0471, 0, 0);
		testMethod(4080, 6.7147, 0.9135, -2.4856, 1.0471, 0, 0);
		testMethod(4085, 6.7192, 0.901, -2.4856, 1.0471, 0, 0);
		testMethod(4090, 6.7237, 0.8886, -2.4856, 1.0471, 0, 0);
		testMethod(4095, 6.7281, 0.8762, -2.4856, 1.0471, 0, 0);
		testMethod(4100, 6.7325, 0.8637, -2.4856, 1.0471, 0, 0);
		testMethod(4105, 6.7367, 0.8513, -2.4856, 1.0471, 0, 0);
		testMethod(4110, 6.741, 0.8389, -2.4856, 1.0471, 0, 0);
		testMethod(4115, 6.7451, 0.8265, -2.4856, 1.0471, 0, 0);
		testMethod(4120, 6.7492, 0.814, -2.4856, 1.0471, 0, 0);
		testMethod(4125, 6.7533, 0.8016, -2.4856, 1.0471, 0, 0);
		testMethod(4130, 6.7572, 0.7892, -2.4856, 1.0471, 0, 0);
		testMethod(4135, 6.7612, 0.7768, -2.4856, 1.0471, 0, 0);
		testMethod(4140, 6.765, 0.7643, -2.4856, 1.0471, 0, 0);
		testMethod(4145, 6.7688, 0.7519, -2.4856, 1.0471, 0, 0);
		testMethod(4150, 6.7725, 0.7395, -2.4856, 1.0471, 0, 0);
		testMethod(4155, 6.7762, 0.727, -2.4856, 1.0471, 0, 0);
		testMethod(4160, 6.7798, 0.7146, -2.4856, 1.0471, 0, 0);
		testMethod(4165, 6.7833, 0.7022, -2.4856, 1.0471, 0, 0);
		testMethod(4170, 6.7868, 0.6898, -2.4856, 1.0471, 0, 0);
		testMethod(4175, 6.7902, 0.6773, -2.4856, 1.0471, 0, 0);
		testMethod(4180, 6.7936, 0.6649, -2.4856, 1.0471, 0, 0);
		testMethod(4185, 6.7969, 0.6525, -2.4856, 1.0471, 0, 0);
		testMethod(4190, 6.8001, 0.64, -2.4856, 1.0471, 0, 0);
		testMethod(4195, 6.8033, 0.6276, -2.4856, 1.0471, 0, 0);
		testMethod(4200, 6.8064, 0.6152, -2.4856, 1.0471, 0, 0);
		testMethod(4205, 6.8094, 0.6028, -2.4856, 1.0471, 0, 0);
		testMethod(4210, 6.8124, 0.5903, -2.4856, 1.0471, 0, 0);
		testMethod(4215, 6.8153, 0.5779, -2.4856, 1.0471, 0, 0);
		testMethod(4220, 6.8182, 0.5655, -2.4856, 1.0471, 0, 0);
		testMethod(4225, 6.821, 0.553, -2.4856, 1.0471, 0, 0);
		testMethod(4230, 6.8237, 0.5406, -2.4856, 1.0471, 0, 0);
		testMethod(4235, 6.8264, 0.5282, -2.4856, 1.0471, 0, 0);
		testMethod(4240, 6.829, 0.5158, -2.4856, 1.0471, 0, 0);
		testMethod(4245, 6.8316, 0.5033, -2.4856, 1.0471, 0, 0);
		testMethod(4250, 6.8341, 0.4909, -2.4856, 1.0471, 0, 0);
		testMethod(4255, 6.8365, 0.4785, -2.4856, 1.0471, 0, 0);
		testMethod(4260, 6.8388, 0.4661, -2.4856, 1.0471, 0, 0);
		testMethod(4265, 6.8411, 0.4536, -2.4856, 1.0471, 0, 0);
		testMethod(4270, 6.8434, 0.4412, -2.4856, 1.0471, 0, 0);
		testMethod(4275, 6.8455, 0.4288, -2.4856, 1.0471, 0, 0);
		testMethod(4280, 6.8477, 0.4163, -2.4856, 1.0471, 0, 0);
		testMethod(4285, 6.8497, 0.4039, -2.4856, 1.0471, 0, 0);
		testMethod(4290, 6.8517, 0.3915, -2.4856, 1.0471, 0, 0);
		testMethod(4295, 6.8536, 0.3791, -2.4856, 1.0471, 0, 0);
		testMethod(4300, 6.8555, 0.3666, -2.4856, 1.0471, 0, 0);
		testMethod(4305, 6.8573, 0.3542, -2.4856, 1.0471, 0, 0);
		testMethod(4310, 6.859, 0.3418, -2.4856, 1.0471, 0, 0);
		testMethod(4315, 6.8607, 0.3293, -2.4856, 1.0471, 0, 0);
		testMethod(4320, 6.8623, 0.3169, -2.4856, 1.0471, 0, 0);
		testMethod(4325, 6.8639, 0.3045, -2.4856, 1.0471, 0, 0);
		testMethod(4330, 6.8654, 0.2921, -2.4856, 1.0471, 0, 0);
		testMethod(4335, 6.8668, 0.2796, -2.4856, 1.0471, 0, 0);
		testMethod(4340, 6.8682, 0.2672, -2.4856, 1.0471, 0, 0);
		testMethod(4345, 6.8695, 0.2548, -2.4856, 1.0471, 0, 0);
		testMethod(4350, 6.8707, 0.2423, -2.4856, 1.0471, 0, 0);
		testMethod(4355, 6.8719, 0.2302, -2.4235, 1.0471, 0, 0);
		testMethod(4360, 6.873, 0.2184, -2.3613, 1.0471, 0, 0);
		testMethod(4365, 6.8741, 0.2069, -2.2992, 1.0471, 0, 0);
		testMethod(4370, 6.8751, 0.1957, -2.237, 1.0471, 0, 0);
		testMethod(4375, 6.876, 0.1849, -2.1749, 1.0471, 0, 0);
		testMethod(4380, 6.8769, 0.1743, -2.1128, 1.0471, 0, 0);
		testMethod(4385, 6.8778, 0.164, -2.0506, 1.0471, 0, 0);
		testMethod(4390, 6.8786, 0.1541, -1.9885, 1.0471, 0, 0);
		testMethod(4395, 6.8793, 0.1445, -1.9263, 1.0471, 0, 0);
		testMethod(4400, 6.88, 0.1352, -1.8642, 1.0471, 0, 0);
		testMethod(4405, 6.8807, 0.1261, -1.8021, 1.0471, 0, 0);
		testMethod(4410, 6.8813, 0.1174, -1.7399, 1.0471, 0, 0);
		testMethod(4415, 6.8819, 0.1091, -1.6778, 1.0471, 0, 0);
		testMethod(4420, 6.8824, 0.101, -1.6156, 1.0471, 0, 0);
		testMethod(4425, 6.8829, 0.0932, -1.5535, 1.0471, 0, 0);
		testMethod(4430, 6.8833, 0.0858, -1.4914, 1.0471, 0, 0);
		testMethod(4435, 6.8837, 0.0786, -1.4292, 1.0471, 0, 0);
		testMethod(4440, 6.8841, 0.0718, -1.3671, 1.0471, 0, 0);
		testMethod(4445, 6.8844, 0.0652, -1.3049, 1.0471, 0, 0);
		testMethod(4450, 6.8848, 0.059, -1.2428, 1.0471, 0, 0);
		testMethod(4455, 6.885, 0.0531, -1.1807, 1.0471, 0, 0);
		testMethod(4460, 6.8853, 0.0475, -1.1185, 1.0471, 0, 0);
		testMethod(4465, 6.8855, 0.0423, -1.0564, 1.0471, 0, 0);
		testMethod(4470, 6.8857, 0.0373, -0.9942, 1.0471, 0, 0);
		testMethod(4475, 6.8859, 0.0326, -0.9321, 1.0471, 0, 0);
		testMethod(4480, 6.886, 0.0283, -0.87, 1.0471, 0, 0);
		testMethod(4485, 6.8862, 0.0242, -0.8078, 1.0471, 0, 0);
		testMethod(4490, 6.8863, 0.0205, -0.7457, 1.0471, 0, 0);
		testMethod(4495, 6.8864, 0.0171, -0.6835, 1.0471, 0, 0);
		testMethod(4500, 6.8864, 0.014, -0.6214, 1.0471, 0, 0);
		testMethod(4505, 6.8865, 0.0112, -0.5593, 1.0471, 0, 0);
		testMethod(4510, 6.8866, 0.0087, -0.4971, 1.0471, 0, 0);
		testMethod(4515, 6.8866, 0.0065, -0.435, 1.0471, 0, 0);
		testMethod(4520, 6.8866, 0.0047, -0.3728, 1.0471, 0, 0);
		testMethod(4525, 6.8866, 0.0031, -0.3107, 1.0471, 0, 0);
		testMethod(4530, 6.8867, 0.0019, -0.2486, 1.0471, 0, 0);
		testMethod(4535, 6.8867, 0.0009, -0.1864, 1.0471, 0, 0);
		testMethod(4540, 6.8867, 0.0003, -0.1243, 1.0471, 0, 0);
		testMethod(4545, 6.8867, 0, -0.0621, 1.0471, 0, 0);
		testMethod(4550, 6.8867, 0, 0, 1.0471, 0, 0);
		testMethod(4550, 6.8867, 0, 0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}