package org.usfirst.frc.team1197.robot;

public class LoadingPos3 extends TorTrajectory {

	public LoadingPos3() {
		super(3.3867, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0625, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.125, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1874, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2499, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3124, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.3749, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4373, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4998, 0, 0, 0);
		testMethod(45, 0.0002, 0.0141, 0.5623, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.6248, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6872, 0, 0, 0);
		testMethod(60, 0.0005, 0.0244, 0.7497, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8122, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.8747, 0, 0, 0);
		testMethod(75, 0.001, 0.0375, 0.9371, 0, 0, 0);
		testMethod(80, 0.0012, 0.0425, 0.9996, 0, 0, 0);
		testMethod(85, 0.0014, 0.0478, 1.0621, 0, 0, 0);
		testMethod(90, 0.0016, 0.0534, 1.1246, 0, 0, 0);
		testMethod(95, 0.0019, 0.0594, 1.187, 0, 0, 0);
		testMethod(100, 0.0022, 0.0656, 1.2495, 0, 0, 0);
		testMethod(105, 0.0026, 0.0722, 1.312, 0, 0, 0);
		testMethod(110, 0.003, 0.079, 1.3745, 0, 0, 0);
		testMethod(115, 0.0034, 0.0862, 1.4369, 0, 0, 0);
		testMethod(120, 0.0038, 0.0937, 1.4994, 0, 0, 0);
		testMethod(125, 0.0043, 0.1015, 1.5619, 0, 0, 0);
		testMethod(130, 0.0048, 0.1096, 1.6244, 0, 0, 0);
		testMethod(135, 0.0054, 0.1181, 1.6868, 0, 0, 0);
		testMethod(140, 0.006, 0.1268, 1.7493, 0, 0, 0);
		testMethod(145, 0.0067, 0.1359, 1.8118, 0, 0, 0);
		testMethod(150, 0.0074, 0.1453, 1.8743, 0, 0, 0);
		testMethod(155, 0.0081, 0.1549, 1.9367, 0, 0, 0);
		testMethod(160, 0.0089, 0.1649, 1.9992, 0, 0, 0);
		testMethod(165, 0.0098, 0.1752, 2.0617, 0, 0, 0);
		testMethod(170, 0.0107, 0.1859, 2.1242, 0, 0, 0);
		testMethod(175, 0.0116, 0.1968, 2.1866, 0, 0, 0);
		testMethod(180, 0.0127, 0.208, 2.2491, 0, 0, 0);
		testMethod(185, 0.0137, 0.2196, 2.3116, 0, 0, 0);
		testMethod(190, 0.0149, 0.2315, 2.3741, 0, 0, 0);
		testMethod(195, 0.016, 0.2437, 2.4365, 0, 0, 0);
		testMethod(200, 0.0173, 0.2561, 2.499, 0, 0, 0);
		testMethod(205, 0.0186, 0.2686, 2.499, 0, 0, 0);
		testMethod(210, 0.02, 0.2811, 2.499, 0, 0, 0);
		testMethod(215, 0.0214, 0.2936, 2.499, 0, 0, 0);
		testMethod(220, 0.0229, 0.3061, 2.499, 0, 0, 0);
		testMethod(225, 0.0245, 0.3186, 2.499, 0, 0, 0);
		testMethod(230, 0.0261, 0.3311, 2.499, 0, 0, 0);
		testMethod(235, 0.0278, 0.3436, 2.499, 0, 0, 0);
		testMethod(240, 0.0295, 0.3561, 2.499, 0, 0, 0);
		testMethod(245, 0.0313, 0.3686, 2.499, 0, 0, 0);
		testMethod(250, 0.0332, 0.3811, 2.499, 0, 0, 0);
		testMethod(255, 0.0352, 0.3936, 2.499, 0, 0, 0.0011);
		testMethod(260, 0.0372, 0.4061, 2.499, 0, 0, 0.0029);
		testMethod(265, 0.0392, 0.4186, 2.499, 0, 0, 0.0052);
		testMethod(270, 0.0413, 0.4311, 2.499, 0, 0.0001, 0.0078);
		testMethod(275, 0.0435, 0.4436, 2.499, 0, 0.0001, 0.0107);
		testMethod(280, 0.0458, 0.4561, 2.499, 0, 0.0002, 0.0142);
		testMethod(285, 0.0481, 0.4686, 2.499, 0, 0.0003, 0.018);
		testMethod(290, 0.0505, 0.4811, 2.499, 0, 0.0004, 0.0224);
		testMethod(295, 0.0529, 0.4936, 2.499, 0, 0.0005, 0.0272);
		testMethod(300, 0.0554, 0.5061, 2.499, 0, 0.0007, 0.0326);
		testMethod(305, 0.058, 0.5185, 2.499, 0, 0.0009, 0.0386);
		testMethod(310, 0.0606, 0.531, 2.499, 0, 0.0011, 0.0452);
		testMethod(315, 0.0633, 0.5435, 2.499, 0, 0.0014, 0.0524);
		testMethod(320, 0.066, 0.556, 2.499, 0, 0.0017, 0.0603);
		testMethod(325, 0.0688, 0.5685, 2.499, 0, 0.002, 0.0689);
		testMethod(330, 0.0717, 0.581, 2.499, 0.0001, 0.0024, 0.0783);
		testMethod(335, 0.0746, 0.5935, 2.499, 0.0001, 0.0029, 0.0885);
		testMethod(340, 0.0776, 0.606, 2.499, 0.0001, 0.0034, 0.0994);
		testMethod(345, 0.0807, 0.6185, 2.499, 0.0001, 0.0039, 0.1113);
		testMethod(350, 0.0838, 0.631, 2.499, 0.0001, 0.0045, 0.124);
		testMethod(355, 0.087, 0.6435, 2.499, 0.0001, 0.0052, 0.1377);
		testMethod(360, 0.0903, 0.656, 2.499, 0.0002, 0.006, 0.1524);
		testMethod(365, 0.0936, 0.6685, 2.499, 0.0002, 0.0068, 0.1681);
		testMethod(370, 0.0969, 0.681, 2.499, 0.0002, 0.0078, 0.1848);
		testMethod(375, 0.1004, 0.6935, 2.499, 0.0003, 0.0088, 0.2027);
		testMethod(380, 0.1039, 0.706, 2.499, 0.0003, 0.0099, 0.2217);
		testMethod(385, 0.1074, 0.7185, 2.499, 0.0004, 0.0111, 0.242);
		testMethod(390, 0.1111, 0.731, 2.499, 0.0004, 0.0124, 0.2634);
		testMethod(395, 0.1148, 0.7435, 2.499, 0.0005, 0.0138, 0.2862);
		testMethod(400, 0.1185, 0.756, 2.499, 0.0006, 0.0154, 0.3103);
		testMethod(405, 0.1223, 0.7684, 2.499, 0.0007, 0.0171, 0.3358);
		testMethod(410, 0.1262, 0.7809, 2.499, 0.0008, 0.0189, 0.3628);
		testMethod(415, 0.1301, 0.7934, 2.499, 0.0009, 0.0208, 0.3912);
		testMethod(420, 0.1341, 0.8059, 2.499, 0.001, 0.0229, 0.4212);
		testMethod(425, 0.1382, 0.8184, 2.499, 0.0011, 0.0252, 0.4527);
		testMethod(430, 0.1423, 0.8309, 2.499, 0.0012, 0.0276, 0.4859);
		testMethod(435, 0.1465, 0.8434, 2.499, 0.0014, 0.0302, 0.5208);
		testMethod(440, 0.1507, 0.8559, 2.499, 0.0015, 0.033, 0.5575);
		testMethod(445, 0.155, 0.8684, 2.499, 0.0017, 0.036, 0.596);
		testMethod(450, 0.1594, 0.8809, 2.499, 0.0019, 0.0392, 0.6363);
		testMethod(455, 0.1639, 0.8934, 2.499, 0.0021, 0.0426, 0.6785);
		testMethod(460, 0.1684, 0.9059, 2.499, 0.0023, 0.0462, 0.7228);
		testMethod(465, 0.1729, 0.9184, 2.499, 0.0025, 0.05, 0.769);
		testMethod(470, 0.1775, 0.9309, 2.499, 0.0028, 0.0541, 0.8174);
		testMethod(475, 0.1822, 0.9434, 2.499, 0.0031, 0.0585, 0.8679);
		testMethod(480, 0.187, 0.9559, 2.499, 0.0034, 0.0631, 0.9206);
		testMethod(485, 0.1918, 0.9684, 2.499, 0.0037, 0.068, 0.9756);
		testMethod(490, 0.1967, 0.9809, 2.499, 0.0041, 0.0731, 1.0329);
		testMethod(495, 0.2016, 0.9934, 2.499, 0.0044, 0.0786, 1.0926);
		testMethod(500, 0.2066, 1.0059, 2.499, 0.0049, 0.0844, 1.1548);
		testMethod(505, 0.2117, 1.0183, 2.499, 0.0053, 0.0904, 1.2195);
		testMethod(510, 0.2168, 1.0308, 2.499, 0.0058, 0.0969, 1.2868);
		testMethod(515, 0.222, 1.0433, 2.499, 0.0063, 0.1037, 1.3568);
		testMethod(520, 0.2272, 1.0558, 2.499, 0.0068, 0.1108, 1.4295);
		testMethod(525, 0.2325, 1.0683, 2.499, 0.0074, 0.1183, 1.505);
		testMethod(530, 0.2379, 1.0808, 2.499, 0.008, 0.1263, 1.5834);
		testMethod(535, 0.2433, 1.0933, 2.499, 0.0086, 0.1346, 1.6647);
		testMethod(540, 0.2488, 1.1058, 2.499, 0.0093, 0.1433, 1.749);
		testMethod(545, 0.2544, 1.1183, 2.499, 0.0101, 0.1525, 1.8364);
		testMethod(550, 0.26, 1.1308, 2.499, 0.0109, 0.1621, 1.9269);
		testMethod(555, 0.2657, 1.1433, 2.499, 0.0117, 0.1722, 2.0207);
		testMethod(560, 0.2714, 1.1558, 2.499, 0.0126, 0.1828, 2.1177);
		testMethod(565, 0.2773, 1.1683, 2.499, 0.0135, 0.1939, 2.2181);
		testMethod(570, 0.2831, 1.1808, 2.499, 0.0145, 0.2055, 2.322);
		testMethod(575, 0.2891, 1.1933, 2.499, 0.0156, 0.2177, 2.4294);
		testMethod(580, 0.2951, 1.2058, 2.499, 0.0167, 0.2304, 2.5403);
		testMethod(585, 0.3011, 1.2183, 2.499, 0.0179, 0.2437, 2.655);
		testMethod(590, 0.3072, 1.2308, 2.499, 0.0191, 0.2575, 2.7734);
		testMethod(595, 0.3134, 1.2433, 2.499, 0.0205, 0.272, 2.8956);
		testMethod(600, 0.3197, 1.2558, 2.499, 0.0219, 0.2871, 3.0218);
		testMethod(605, 0.326, 1.2683, 2.499, 0.0233, 0.3029, 3.1519);
		testMethod(610, 0.3324, 1.2807, 2.499, 0.0249, 0.3193, 3.2861);
		testMethod(615, 0.3388, 1.2932, 2.499, 0.0265, 0.3364, 3.4245);
		testMethod(620, 0.3453, 1.3057, 2.499, 0.0282, 0.3543, 3.5671);
		testMethod(625, 0.3518, 1.3182, 2.499, 0.0301, 0.3728, 3.7141);
		testMethod(630, 0.3585, 1.3307, 2.499, 0.032, 0.3922, 3.8654);
		testMethod(635, 0.3652, 1.3432, 2.499, 0.034, 0.4123, 4.0213);
		testMethod(640, 0.3719, 1.3557, 2.499, 0.0361, 0.4332, 4.1817);
		testMethod(645, 0.3787, 1.3682, 2.499, 0.0383, 0.4549, 4.3468);
		testMethod(650, 0.3856, 1.3807, 2.499, 0.0407, 0.4775, 4.5167);
		testMethod(655, 0.3925, 1.3932, 2.499, 0.0431, 0.5009, 4.6914);
		testMethod(660, 0.3995, 1.4057, 2.499, 0.0457, 0.5253, 4.8711);
		testMethod(665, 0.4066, 1.4182, 2.499, 0.0484, 0.5506, 5.0558);
		testMethod(670, 0.4137, 1.4307, 2.499, 0.0512, 0.5768, 5.2456);
		testMethod(675, 0.4209, 1.4432, 2.499, 0.0541, 0.604, 5.4406);
		testMethod(680, 0.4281, 1.4557, 2.499, 0.0572, 0.6322, 5.6409);
		testMethod(685, 0.4354, 1.4682, 2.499, 0.0604, 0.6615, 5.8466);
		testMethod(690, 0.4428, 1.4807, 2.499, 0.0638, 0.6917, 6.0578);
		testMethod(695, 0.4502, 1.4932, 2.499, 0.0674, 0.7231, 6.2746);
		testMethod(700, 0.4577, 1.5057, 2.499, 0.0711, 0.7556, 6.4971);
		testMethod(705, 0.4653, 1.5182, 2.499, 0.0749, 0.7892, 6.7254);
		testMethod(710, 0.4729, 1.5306, 2.499, 0.079, 0.8239, 6.9387);
		testMethod(715, 0.4806, 1.5431, 2.499, 0.0832, 0.8593, 7.0739);
		testMethod(720, 0.4884, 1.5556, 2.499, 0.0876, 0.8954, 7.2137);
		testMethod(725, 0.4962, 1.5681, 2.499, 0.0921, 0.9321, 7.3545);
		testMethod(730, 0.504, 1.5806, 2.499, 0.0969, 0.9696, 7.4965);
		testMethod(735, 0.512, 1.5931, 2.499, 0.1018, 1.008, 7.6716);
		testMethod(740, 0.52, 1.6056, 2.499, 0.107, 1.0464, 7.6851);
		testMethod(745, 0.528, 1.6181, 2.499, 0.1123, 1.085, 7.7117);
		testMethod(750, 0.5361, 1.6306, 2.499, 0.1178, 1.1236, 7.734);
		testMethod(755, 0.5443, 1.6431, 2.499, 0.1235, 1.1624, 7.7518);
		testMethod(760, 0.5526, 1.6556, 2.499, 0.1294, 1.2012, 7.7651);
		testMethod(765, 0.5609, 1.6681, 2.499, 0.1355, 1.2401, 7.7738);
		testMethod(770, 0.5693, 1.6806, 2.499, 0.1418, 1.279, 7.7777);
		testMethod(775, 0.5777, 1.6928, 2.4365, 0.1483, 1.3176, 7.7276);
		testMethod(780, 0.5862, 1.7046, 2.3741, 0.155, 1.3559, 7.6683);
		testMethod(785, 0.5947, 1.7162, 2.3116, 0.1619, 1.3939, 7.5999);
		testMethod(790, 0.6033, 1.7274, 2.2491, 0.1689, 1.4316, 7.5224);
		testMethod(795, 0.612, 1.7384, 2.1866, 0.1762, 1.4687, 7.436);
		testMethod(800, 0.6207, 1.749, 2.1242, 0.1836, 1.5054, 7.3407);
		testMethod(805, 0.6295, 1.7593, 2.0617, 0.1912, 1.5416, 7.2367);
		testMethod(810, 0.6383, 1.7693, 1.9992, 0.199, 1.5772, 7.124);
		testMethod(815, 0.6472, 1.779, 1.9367, 0.207, 1.6123, 7.0029);
		testMethod(820, 0.6561, 1.7884, 1.8743, 0.2152, 1.6466, 6.8735);
		testMethod(825, 0.6651, 1.7974, 1.8118, 0.2235, 1.6803, 6.7359);
		testMethod(830, 0.6741, 1.8062, 1.7493, 0.232, 1.7133, 6.5904);
		testMethod(835, 0.6831, 1.8146, 1.6868, 0.2406, 1.7454, 6.437);
		testMethod(840, 0.6922, 1.8227, 1.6244, 0.2494, 1.7768, 6.2759);
		testMethod(845, 0.7014, 1.8305, 1.5619, 0.2584, 1.8074, 6.1075);
		testMethod(850, 0.7105, 1.838, 1.4994, 0.2675, 1.837, 5.9318);
		testMethod(855, 0.7197, 1.8452, 1.4369, 0.2767, 1.8658, 5.7491);
		testMethod(860, 0.729, 1.8521, 1.3745, 0.2861, 1.8936, 5.5597);
		testMethod(865, 0.7383, 1.8586, 1.312, 0.2957, 1.9204, 5.3636);
		testMethod(870, 0.7476, 1.8649, 1.2495, 0.3053, 1.9462, 5.1613);
		testMethod(875, 0.7569, 1.8708, 1.187, 0.3151, 1.971, 4.9529);
		testMethod(880, 0.7663, 1.8765, 1.1246, 0.3251, 1.9946, 4.7386);
		testMethod(885, 0.7757, 1.8818, 1.0621, 0.3351, 2.0172, 4.5188);
		testMethod(890, 0.7851, 1.8868, 0.9996, 0.3452, 2.0387, 4.2937);
		testMethod(895, 0.7945, 1.8914, 0.9371, 0.3555, 2.059, 4.0635);
		testMethod(900, 0.804, 1.8958, 0.8747, 0.3658, 2.0782, 3.8287);
		testMethod(905, 0.8135, 1.8999, 0.8122, 0.3762, 2.0961, 3.5893);
		testMethod(910, 0.823, 1.9036, 0.7497, 0.3868, 2.1128, 3.3458);
		testMethod(915, 0.8325, 1.9071, 0.6872, 0.3974, 2.1283, 3.0984);
		testMethod(920, 0.8421, 1.9102, 0.6248, 0.4081, 2.1426, 2.8474);
		testMethod(925, 0.8516, 1.913, 0.5623, 0.4188, 2.1555, 2.5931);
		testMethod(930, 0.8612, 1.9155, 0.4998, 0.4296, 2.1672, 2.3358);
		testMethod(935, 0.8708, 1.9177, 0.4373, 0.4405, 2.1776, 2.0758);
		testMethod(940, 0.8804, 1.9196, 0.3749, 0.4514, 2.1867, 1.8135);
		testMethod(945, 0.89, 1.9211, 0.3124, 0.4623, 2.1944, 1.5492);
		testMethod(950, 0.8996, 1.9224, 0.2499, 0.4733, 2.2008, 1.2831);
		testMethod(955, 0.9092, 1.9233, 0.1874, 0.4843, 2.2059, 1.0155);
		testMethod(960, 0.9188, 1.9239, 0.125, 0.4954, 2.2096, 0.7469);
		testMethod(965, 0.9284, 1.9242, 0.0625, 0.5064, 2.212, 0.4775);
		testMethod(970, 0.9381, 1.9242, 0, 0.5175, 2.2131, 0.2077);
		testMethod(975, 0.9477, 1.9242, 0, 0.5286, 2.2131, 0.0095);
		testMethod(980, 0.9573, 1.9242, 0, 0.5396, 2.2122, -0.1888);
		testMethod(985, 0.9669, 1.9242, 0, 0.5507, 2.2102, -0.3869);
		testMethod(990, 0.9766, 1.9242, 0, 0.5617, 2.2073, -0.585);
		testMethod(995, 0.9862, 1.9242, 0, 0.5728, 2.2034, -0.7832);
		testMethod(1000, 0.9958, 1.9242, 0, 0.5838, 2.1985, -0.9813);
		testMethod(1005, 1.0054, 1.9242, 0, 0.5947, 2.1926, -1.1794);
		testMethod(1010, 1.015, 1.9242, 0, 0.6057, 2.1857, -1.3776);
		testMethod(1015, 1.0247, 1.9242, 0, 0.6166, 2.1778, -1.5757);
		testMethod(1020, 1.0343, 1.9242, 0, 0.6275, 2.169, -1.7738);
		testMethod(1025, 1.0439, 1.9242, 0, 0.6383, 2.1591, -1.972);
		testMethod(1030, 1.0535, 1.9242, 0, 0.649, 2.1482, -2.1701);
		testMethod(1035, 1.0631, 1.9242, 0, 0.6598, 2.1364, -2.3682);
		testMethod(1040, 1.0728, 1.9242, 0, 0.6704, 2.1236, -2.5664);
		testMethod(1045, 1.0824, 1.9242, 0, 0.681, 2.1097, -2.7645);
		testMethod(1050, 1.092, 1.9242, 0, 0.6915, 2.0949, -2.9627);
		testMethod(1055, 1.1016, 1.9242, 0, 0.7019, 2.0791, -3.1608);
		testMethod(1060, 1.1113, 1.9242, 0, 0.7123, 2.0623, -3.3589);
		testMethod(1065, 1.1209, 1.9242, 0, 0.7226, 2.0446, -3.5571);
		testMethod(1070, 1.1305, 1.9242, 0, 0.7327, 2.0258, -3.7552);
		testMethod(1075, 1.1401, 1.9242, 0, 0.7428, 2.006, -3.9533);
		testMethod(1080, 1.1497, 1.9242, 0, 0.7528, 1.9853, -4.1515);
		testMethod(1085, 1.1594, 1.9242, 0, 0.7627, 1.9635, -4.3496);
		testMethod(1090, 1.169, 1.9242, 0, 0.7724, 1.9408, -4.5477);
		testMethod(1095, 1.1786, 1.9242, 0, 0.7821, 1.917, -4.7459);
		testMethod(1100, 1.1882, 1.9242, 0, 0.7916, 1.8923, -4.944);
		testMethod(1105, 1.1978, 1.9242, 0, 0.801, 1.8666, -5.1421);
		testMethod(1110, 1.2075, 1.9242, 0, 0.8103, 1.8399, -5.3403);
		testMethod(1115, 1.2171, 1.9242, 0, 0.8194, 1.8122, -5.5384);
		testMethod(1120, 1.2267, 1.9242, 0, 0.8284, 1.7835, -5.7365);
		testMethod(1125, 1.2363, 1.9242, 0, 0.8372, 1.7539, -5.9347);
		testMethod(1130, 1.2459, 1.9242, 0, 0.8459, 1.7232, -6.1328);
		testMethod(1135, 1.2556, 1.9242, 0, 0.8545, 1.6915, -6.331);
		testMethod(1140, 1.2652, 1.9242, 0, 0.8628, 1.6589, -6.5291);
		testMethod(1145, 1.2748, 1.9242, 0, 0.871, 1.6253, -6.7272);
		testMethod(1150, 1.2844, 1.9242, 0, 0.8791, 1.5906, -6.9254);
		testMethod(1155, 1.2941, 1.9242, 0, 0.887, 1.555, -7.1235);
		testMethod(1160, 1.3037, 1.9242, 0, 0.8946, 1.5184, -7.3216);
		testMethod(1165, 1.3133, 1.9242, 0, 0.9021, 1.4808, -7.5198);
		testMethod(1170, 1.3229, 1.9242, 0, 0.9094, 1.4422, -7.7179);
		testMethod(1175, 1.3325, 1.9242, 0, 0.9166, 1.4026, -7.916);
		testMethod(1180, 1.3422, 1.9242, 0, 0.9235, 1.3621, -8.1142);
		testMethod(1185, 1.3518, 1.9242, 0, 0.9302, 1.3205, -8.3123);
		testMethod(1190, 1.3614, 1.9242, 0, 0.9367, 1.2779, -8.5104);
		testMethod(1195, 1.371, 1.9242, 0, 0.943, 1.2344, -8.7086);
		testMethod(1200, 1.3806, 1.9242, 0, 0.949, 1.1899, -8.9054);
		testMethod(1205, 1.3903, 1.9242, 0, 0.9548, 1.1452, -8.944);
		testMethod(1210, 1.3999, 1.9242, 0, 0.9605, 1.1004, -8.944);
		testMethod(1215, 1.4095, 1.9242, 0, 0.9659, 1.0557, -8.944);
		testMethod(1220, 1.4191, 1.9242, 0, 0.971, 1.011, -8.944);
		testMethod(1225, 1.4288, 1.9242, 0, 0.976, 0.9665, -8.8989);
		testMethod(1230, 1.4384, 1.9242, 0, 0.9807, 0.9232, -8.653);
		testMethod(1235, 1.448, 1.9242, 0, 0.9852, 0.881, -8.4549);
		testMethod(1240, 1.4576, 1.9242, 0, 0.9895, 0.8397, -8.2568);
		testMethod(1245, 1.4672, 1.9242, 0, 0.9936, 0.7994, -8.0586);
		testMethod(1250, 1.4769, 1.9242, 0, 0.9975, 0.7601, -7.8605);
		testMethod(1255, 1.4865, 1.9242, 0, 1.0012, 0.7218, -7.6624);
		testMethod(1260, 1.4961, 1.9242, 0, 1.0047, 0.6845, -7.4642);
		testMethod(1265, 1.5057, 1.9242, 0, 1.008, 0.6481, -7.2661);
		testMethod(1270, 1.5153, 1.9242, 0, 1.0112, 0.6128, -7.068);
		testMethod(1275, 1.525, 1.9242, 0, 1.0142, 0.5784, -6.8698);
		testMethod(1280, 1.5346, 1.9242, 0, 1.017, 0.5451, -6.6717);
		testMethod(1285, 1.5442, 1.9242, 0, 1.0196, 0.5127, -6.4736);
		testMethod(1290, 1.5538, 1.9242, 0, 1.0221, 0.4813, -6.2754);
		testMethod(1295, 1.5634, 1.9242, 0, 1.0244, 0.4509, -6.0773);
		testMethod(1300, 1.5731, 1.9242, 0, 1.0266, 0.4215, -5.8791);
		testMethod(1305, 1.5827, 1.9242, 0, 1.0287, 0.3931, -5.681);
		testMethod(1310, 1.5923, 1.9242, 0, 1.0306, 0.3657, -5.4829);
		testMethod(1315, 1.6019, 1.9242, 0, 1.0323, 0.3393, -5.2847);
		testMethod(1320, 1.6116, 1.9242, 0, 1.0339, 0.3139, -5.0866);
		testMethod(1325, 1.6212, 1.9242, 0, 1.0355, 0.2894, -4.8885);
		testMethod(1330, 1.6308, 1.9242, 0, 1.0368, 0.266, -4.6903);
		testMethod(1335, 1.6404, 1.9242, 0, 1.0381, 0.2435, -4.4922);
		testMethod(1340, 1.65, 1.9242, 0, 1.0393, 0.222, -4.2941);
		testMethod(1345, 1.6597, 1.9242, 0, 1.0403, 0.2016, -4.0959);
		testMethod(1350, 1.6693, 1.9242, 0, 1.0413, 0.1821, -3.8978);
		testMethod(1355, 1.6789, 1.9242, 0, 1.0422, 0.1636, -3.6997);
		testMethod(1360, 1.6885, 1.9242, 0, 1.0429, 0.1461, -3.5015);
		testMethod(1365, 1.6981, 1.9242, 0, 1.0436, 0.1296, -3.3034);
		testMethod(1370, 1.7078, 1.9242, 0, 1.0442, 0.114, -3.1053);
		testMethod(1375, 1.7174, 1.9242, 0, 1.0448, 0.0995, -2.9071);
		testMethod(1380, 1.727, 1.9242, 0, 1.0452, 0.0859, -2.709);
		testMethod(1385, 1.7366, 1.9242, 0, 1.0456, 0.0734, -2.5109);
		testMethod(1390, 1.7463, 1.9242, 0, 1.046, 0.0618, -2.3127);
		testMethod(1395, 1.7559, 1.9242, 0, 1.0462, 0.0513, -2.1146);
		testMethod(1400, 1.7655, 1.9242, 0, 1.0465, 0.0417, -1.9164);
		testMethod(1405, 1.7751, 1.9242, 0, 1.0467, 0.0331, -1.7183);
		testMethod(1410, 1.7847, 1.9242, 0, 1.0468, 0.0255, -1.5202);
		testMethod(1415, 1.7944, 1.9242, 0, 1.0469, 0.0189, -1.322);
		testMethod(1420, 1.804, 1.9242, 0, 1.047, 0.0133, -1.1239);
		testMethod(1425, 1.8136, 1.9242, 0, 1.0471, 0.0086, -0.9258);
		testMethod(1430, 1.8232, 1.9242, 0, 1.0471, 0.005, -0.7276);
		testMethod(1435, 1.8328, 1.9242, 0, 1.0471, 0.0023, -0.5295);
		testMethod(1440, 1.8425, 1.9242, 0, 1.0471, 0.0007, -0.3314);
		testMethod(1445, 1.8521, 1.9242, 0, 1.0471, 0, -0.1332);
		testMethod(1450, 1.8617, 1.9242, 0, 1.0471, 0, -0.0029);
		testMethod(1455, 1.8713, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1460, 1.8809, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1465, 1.8906, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1470, 1.9002, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1475, 1.9098, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1480, 1.9194, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1485, 1.9291, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1490, 1.9387, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1495, 1.9483, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1500, 1.9579, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1505, 1.9675, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1510, 1.9772, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1515, 1.9868, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1520, 1.9964, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1525, 2.006, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1530, 2.0156, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1535, 2.0253, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1540, 2.0349, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1545, 2.0445, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1550, 2.0541, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1555, 2.0638, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1560, 2.0734, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1565, 2.083, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1570, 2.0926, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1575, 2.1022, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1580, 2.1119, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1585, 2.1215, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1590, 2.1311, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1595, 2.1407, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1600, 2.1503, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1605, 2.16, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1610, 2.1696, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1615, 2.1792, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1620, 2.1888, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1625, 2.1984, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1630, 2.2081, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1635, 2.2177, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1640, 2.2273, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1645, 2.2369, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1650, 2.2466, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1655, 2.2562, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1660, 2.2658, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1665, 2.2754, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1670, 2.285, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1675, 2.2947, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1680, 2.3043, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1685, 2.3139, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1690, 2.3235, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1695, 2.3331, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1700, 2.3428, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1705, 2.3524, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1710, 2.362, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1715, 2.3716, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1720, 2.3813, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1725, 2.3909, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1730, 2.4005, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1735, 2.4101, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1740, 2.4197, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1745, 2.4294, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1750, 2.439, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1755, 2.4486, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1760, 2.4582, 1.9242, 0, 1.0471, 0, 0);
		testMethod(1765, 2.4678, 1.9239, -0.0625, 1.0471, 0, 0);
		testMethod(1770, 2.4775, 1.9233, -0.125, 1.0471, 0, 0);
		testMethod(1775, 2.4871, 1.9224, -0.1874, 1.0471, 0, 0);
		testMethod(1780, 2.4967, 1.9211, -0.2499, 1.0471, 0, 0);
		testMethod(1785, 2.5063, 1.9196, -0.3124, 1.0471, 0, 0);
		testMethod(1790, 2.5159, 1.9177, -0.3749, 1.0471, 0, 0);
		testMethod(1795, 2.5255, 1.9155, -0.4373, 1.0471, 0, 0);
		testMethod(1800, 2.535, 1.913, -0.4998, 1.0471, 0, 0);
		testMethod(1805, 2.5446, 1.9102, -0.5623, 1.0471, 0, 0);
		testMethod(1810, 2.5541, 1.9071, -0.6248, 1.0471, 0, 0);
		testMethod(1815, 2.5637, 1.9036, -0.6872, 1.0471, 0, 0);
		testMethod(1820, 2.5732, 1.8999, -0.7497, 1.0471, 0, 0);
		testMethod(1825, 2.5827, 1.8958, -0.8122, 1.0471, 0, 0);
		testMethod(1830, 2.5921, 1.8914, -0.8747, 1.0471, 0, 0);
		testMethod(1835, 2.6016, 1.8868, -0.9371, 1.0471, 0, 0);
		testMethod(1840, 2.611, 1.8818, -0.9996, 1.0471, 0, 0);
		testMethod(1845, 2.6204, 1.8765, -1.0621, 1.0471, 0, 0);
		testMethod(1850, 2.6298, 1.8708, -1.1246, 1.0471, 0, 0);
		testMethod(1855, 2.6391, 1.8649, -1.187, 1.0471, 0, 0);
		testMethod(1860, 2.6484, 1.8586, -1.2495, 1.0471, 0, 0);
		testMethod(1865, 2.6577, 1.8521, -1.312, 1.0471, 0, 0);
		testMethod(1870, 2.6669, 1.8452, -1.3745, 1.0471, 0, 0);
		testMethod(1875, 2.6761, 1.838, -1.4369, 1.0471, 0, 0);
		testMethod(1880, 2.6853, 1.8305, -1.4994, 1.0471, 0, 0);
		testMethod(1885, 2.6944, 1.8227, -1.5619, 1.0471, 0, 0);
		testMethod(1890, 2.7035, 1.8146, -1.6244, 1.0471, 0, 0);
		testMethod(1895, 2.7126, 1.8062, -1.6868, 1.0471, 0, 0);
		testMethod(1900, 2.7216, 1.7974, -1.7493, 1.0471, 0, 0);
		testMethod(1905, 2.7306, 1.7884, -1.8118, 1.0471, 0, 0);
		testMethod(1910, 2.7395, 1.779, -1.8743, 1.0471, 0, 0);
		testMethod(1915, 2.7483, 1.7693, -1.9367, 1.0471, 0, 0);
		testMethod(1920, 2.7572, 1.7593, -1.9992, 1.0471, 0, 0);
		testMethod(1925, 2.7659, 1.749, -2.0617, 1.0471, 0, 0);
		testMethod(1930, 2.7747, 1.7384, -2.1242, 1.0471, 0, 0);
		testMethod(1935, 2.7833, 1.7274, -2.1866, 1.0471, 0, 0);
		testMethod(1940, 2.7919, 1.7162, -2.2491, 1.0471, 0, 0);
		testMethod(1945, 2.8005, 1.7046, -2.3116, 1.0471, 0, 0);
		testMethod(1950, 2.809, 1.6928, -2.3741, 1.0471, 0, 0);
		testMethod(1955, 2.8174, 1.6806, -2.4365, 1.0471, 0, 0);
		testMethod(1960, 2.8258, 1.6681, -2.499, 1.0471, 0, 0);
		testMethod(1965, 2.8341, 1.6556, -2.499, 1.0471, 0, 0);
		testMethod(1970, 2.8423, 1.6431, -2.499, 1.0471, 0, 0);
		testMethod(1975, 2.8505, 1.6306, -2.499, 1.0471, 0, 0);
		testMethod(1980, 2.8586, 1.6181, -2.499, 1.0471, 0, 0);
		testMethod(1985, 2.8667, 1.6056, -2.499, 1.0471, 0, 0);
		testMethod(1990, 2.8747, 1.5931, -2.499, 1.0471, 0, 0);
		testMethod(1995, 2.8826, 1.5806, -2.499, 1.0471, 0, 0);
		testMethod(2000, 2.8905, 1.5681, -2.499, 1.0471, 0, 0);
		testMethod(2005, 2.8983, 1.5556, -2.499, 1.0471, 0, 0);
		testMethod(2010, 2.9061, 1.5431, -2.499, 1.0471, 0, 0);
		testMethod(2015, 2.9137, 1.5306, -2.499, 1.0471, 0, 0);
		testMethod(2020, 2.9214, 1.5182, -2.499, 1.0471, 0, 0);
		testMethod(2025, 2.9289, 1.5057, -2.499, 1.0471, 0, 0);
		testMethod(2030, 2.9364, 1.4932, -2.499, 1.0471, 0, 0);
		testMethod(2035, 2.9439, 1.4807, -2.499, 1.0471, 0, 0);
		testMethod(2040, 2.9512, 1.4682, -2.499, 1.0471, 0, 0);
		testMethod(2045, 2.9585, 1.4557, -2.499, 1.0471, 0, 0);
		testMethod(2050, 2.9658, 1.4432, -2.499, 1.0471, 0, 0);
		testMethod(2055, 2.973, 1.4307, -2.499, 1.0471, 0, 0);
		testMethod(2060, 2.9801, 1.4182, -2.499, 1.0471, 0, 0);
		testMethod(2065, 2.9872, 1.4057, -2.499, 1.0471, 0, 0);
		testMethod(2070, 2.9942, 1.3932, -2.499, 1.0471, 0, 0);
		testMethod(2075, 3.0011, 1.3807, -2.499, 1.0471, 0, 0);
		testMethod(2080, 3.008, 1.3682, -2.499, 1.0471, 0, 0);
		testMethod(2085, 3.0148, 1.3557, -2.499, 1.0471, 0, 0);
		testMethod(2090, 3.0215, 1.3432, -2.499, 1.0471, 0, 0);
		testMethod(2095, 3.0282, 1.3307, -2.499, 1.0471, 0, 0);
		testMethod(2100, 3.0348, 1.3182, -2.499, 1.0471, 0, 0);
		testMethod(2105, 3.0414, 1.3057, -2.499, 1.0471, 0, 0);
		testMethod(2110, 3.0479, 1.2932, -2.499, 1.0471, 0, 0);
		testMethod(2115, 3.0543, 1.2807, -2.499, 1.0471, 0, 0);
		testMethod(2120, 3.0607, 1.2683, -2.499, 1.0471, 0, 0);
		testMethod(2125, 3.067, 1.2558, -2.499, 1.0471, 0, 0);
		testMethod(2130, 3.0732, 1.2433, -2.499, 1.0471, 0, 0);
		testMethod(2135, 3.0794, 1.2308, -2.499, 1.0471, 0, 0);
		testMethod(2140, 3.0856, 1.2183, -2.499, 1.0471, 0, 0);
		testMethod(2145, 3.0916, 1.2058, -2.499, 1.0471, 0, 0);
		testMethod(2150, 3.0976, 1.1933, -2.499, 1.0471, 0, 0);
		testMethod(2155, 3.1035, 1.1808, -2.499, 1.0471, 0, 0);
		testMethod(2160, 3.1094, 1.1683, -2.499, 1.0471, 0, 0);
		testMethod(2165, 3.1152, 1.1558, -2.499, 1.0471, 0, 0);
		testMethod(2170, 3.121, 1.1433, -2.499, 1.0471, 0, 0);
		testMethod(2175, 3.1267, 1.1308, -2.499, 1.0471, 0, 0);
		testMethod(2180, 3.1323, 1.1183, -2.499, 1.0471, 0, 0);
		testMethod(2185, 3.1378, 1.1058, -2.499, 1.0471, 0, 0);
		testMethod(2190, 3.1433, 1.0933, -2.499, 1.0471, 0, 0);
		testMethod(2195, 3.1488, 1.0808, -2.499, 1.0471, 0, 0);
		testMethod(2200, 3.1542, 1.0683, -2.499, 1.0471, 0, 0);
		testMethod(2205, 3.1595, 1.0558, -2.499, 1.0471, 0, 0);
		testMethod(2210, 3.1647, 1.0433, -2.499, 1.0471, 0, 0);
		testMethod(2215, 3.1699, 1.0308, -2.499, 1.0471, 0, 0);
		testMethod(2220, 3.175, 1.0183, -2.499, 1.0471, 0, 0);
		testMethod(2225, 3.1801, 1.0059, -2.499, 1.0471, 0, 0);
		testMethod(2230, 3.1851, 0.9934, -2.499, 1.0471, 0, 0);
		testMethod(2235, 3.19, 0.9809, -2.499, 1.0471, 0, 0);
		testMethod(2240, 3.1949, 0.9684, -2.499, 1.0471, 0, 0);
		testMethod(2245, 3.1997, 0.9559, -2.499, 1.0471, 0, 0);
		testMethod(2250, 3.2044, 0.9434, -2.499, 1.0471, 0, 0);
		testMethod(2255, 3.2091, 0.9309, -2.499, 1.0471, 0, 0);
		testMethod(2260, 3.2138, 0.9184, -2.499, 1.0471, 0, 0);
		testMethod(2265, 3.2183, 0.9059, -2.499, 1.0471, 0, 0);
		testMethod(2270, 3.2228, 0.8934, -2.499, 1.0471, 0, 0);
		testMethod(2275, 3.2272, 0.8809, -2.499, 1.0471, 0, 0);
		testMethod(2280, 3.2316, 0.8684, -2.499, 1.0471, 0, 0);
		testMethod(2285, 3.2359, 0.8559, -2.499, 1.0471, 0, 0);
		testMethod(2290, 3.2402, 0.8434, -2.499, 1.0471, 0, 0);
		testMethod(2295, 3.2444, 0.8309, -2.499, 1.0471, 0, 0);
		testMethod(2300, 3.2485, 0.8184, -2.499, 1.0471, 0, 0);
		testMethod(2305, 3.2525, 0.8059, -2.499, 1.0471, 0, 0);
		testMethod(2310, 3.2565, 0.7934, -2.499, 1.0471, 0, 0);
		testMethod(2315, 3.2605, 0.7809, -2.499, 1.0471, 0, 0);
		testMethod(2320, 3.2644, 0.7684, -2.499, 1.0471, 0, 0);
		testMethod(2325, 3.2682, 0.756, -2.499, 1.0471, 0, 0);
		testMethod(2330, 3.2719, 0.7435, -2.499, 1.0471, 0, 0);
		testMethod(2335, 3.2756, 0.731, -2.499, 1.0471, 0, 0);
		testMethod(2340, 3.2792, 0.7185, -2.499, 1.0471, 0, 0);
		testMethod(2345, 3.2828, 0.706, -2.499, 1.0471, 0, 0);
		testMethod(2350, 3.2863, 0.6935, -2.499, 1.0471, 0, 0);
		testMethod(2355, 3.2897, 0.681, -2.499, 1.0471, 0, 0);
		testMethod(2360, 3.2931, 0.6685, -2.499, 1.0471, 0, 0);
		testMethod(2365, 3.2964, 0.656, -2.499, 1.0471, 0, 0);
		testMethod(2370, 3.2997, 0.6435, -2.499, 1.0471, 0, 0);
		testMethod(2375, 3.3028, 0.631, -2.499, 1.0471, 0, 0);
		testMethod(2380, 3.306, 0.6185, -2.499, 1.0471, 0, 0);
		testMethod(2385, 3.309, 0.606, -2.499, 1.0471, 0, 0);
		testMethod(2390, 3.312, 0.5935, -2.499, 1.0471, 0, 0);
		testMethod(2395, 3.315, 0.581, -2.499, 1.0471, 0, 0);
		testMethod(2400, 3.3178, 0.5685, -2.499, 1.0471, 0, 0);
		testMethod(2405, 3.3206, 0.556, -2.499, 1.0471, 0, 0);
		testMethod(2410, 3.3234, 0.5435, -2.499, 1.0471, 0, 0);
		testMethod(2415, 3.3261, 0.531, -2.499, 1.0471, 0, 0);
		testMethod(2420, 3.3287, 0.5185, -2.499, 1.0471, 0, 0);
		testMethod(2425, 3.3313, 0.5061, -2.499, 1.0471, 0, 0);
		testMethod(2430, 3.3338, 0.4936, -2.499, 1.0471, 0, 0);
		testMethod(2435, 3.3362, 0.4811, -2.499, 1.0471, 0, 0);
		testMethod(2440, 3.3386, 0.4686, -2.499, 1.0471, 0, 0);
		testMethod(2445, 3.3409, 0.4561, -2.499, 1.0471, 0, 0);
		testMethod(2450, 3.3431, 0.4436, -2.499, 1.0471, 0, 0);
		testMethod(2455, 3.3453, 0.4311, -2.499, 1.0471, 0, 0);
		testMethod(2460, 3.3475, 0.4186, -2.499, 1.0471, 0, 0);
		testMethod(2465, 3.3495, 0.4061, -2.499, 1.0471, 0, 0);
		testMethod(2470, 3.3515, 0.3936, -2.499, 1.0471, 0, 0);
		testMethod(2475, 3.3534, 0.3811, -2.499, 1.0471, 0, 0);
		testMethod(2480, 3.3553, 0.3686, -2.499, 1.0471, 0, 0);
		testMethod(2485, 3.3571, 0.3561, -2.499, 1.0471, 0, 0);
		testMethod(2490, 3.3589, 0.3436, -2.499, 1.0471, 0, 0);
		testMethod(2495, 3.3606, 0.3311, -2.499, 1.0471, 0, 0);
		testMethod(2500, 3.3622, 0.3186, -2.499, 1.0471, 0, 0);
		testMethod(2505, 3.3638, 0.3061, -2.499, 1.0471, 0, 0);
		testMethod(2510, 3.3653, 0.2936, -2.499, 1.0471, 0, 0);
		testMethod(2515, 3.3667, 0.2811, -2.499, 1.0471, 0, 0);
		testMethod(2520, 3.3681, 0.2686, -2.499, 1.0471, 0, 0);
		testMethod(2525, 3.3694, 0.2561, -2.499, 1.0471, 0, 0);
		testMethod(2530, 3.3706, 0.2437, -2.499, 1.0471, 0, 0);
		testMethod(2535, 3.3718, 0.2315, -2.4365, 1.0471, 0, 0);
		testMethod(2540, 3.3729, 0.2196, -2.3741, 1.0471, 0, 0);
		testMethod(2545, 3.374, 0.208, -2.3116, 1.0471, 0, 0);
		testMethod(2550, 3.375, 0.1968, -2.2491, 1.0471, 0, 0);
		testMethod(2555, 3.376, 0.1859, -2.1866, 1.0471, 0, 0);
		testMethod(2560, 3.3769, 0.1752, -2.1242, 1.0471, 0, 0);
		testMethod(2565, 3.3777, 0.1649, -2.0617, 1.0471, 0, 0);
		testMethod(2570, 3.3785, 0.1549, -1.9992, 1.0471, 0, 0);
		testMethod(2575, 3.3793, 0.1453, -1.9367, 1.0471, 0, 0);
		testMethod(2580, 3.38, 0.1359, -1.8743, 1.0471, 0, 0);
		testMethod(2585, 3.3806, 0.1268, -1.8118, 1.0471, 0, 0);
		testMethod(2590, 3.3813, 0.1181, -1.7493, 1.0471, 0, 0);
		testMethod(2595, 3.3818, 0.1096, -1.6868, 1.0471, 0, 0);
		testMethod(2600, 3.3824, 0.1015, -1.6244, 1.0471, 0, 0);
		testMethod(2605, 3.3828, 0.0937, -1.5619, 1.0471, 0, 0);
		testMethod(2610, 3.3833, 0.0862, -1.4994, 1.0471, 0, 0);
		testMethod(2615, 3.3837, 0.079, -1.4369, 1.0471, 0, 0);
		testMethod(2620, 3.3841, 0.0722, -1.3745, 1.0471, 0, 0);
		testMethod(2625, 3.3844, 0.0656, -1.312, 1.0471, 0, 0);
		testMethod(2630, 3.3847, 0.0594, -1.2495, 1.0471, 0, 0);
		testMethod(2635, 3.385, 0.0534, -1.187, 1.0471, 0, 0);
		testMethod(2640, 3.3853, 0.0478, -1.1246, 1.0471, 0, 0);
		testMethod(2645, 3.3855, 0.0425, -1.0621, 1.0471, 0, 0);
		testMethod(2650, 3.3857, 0.0375, -0.9996, 1.0471, 0, 0);
		testMethod(2655, 3.3859, 0.0328, -0.9371, 1.0471, 0, 0);
		testMethod(2660, 3.386, 0.0284, -0.8747, 1.0471, 0, 0);
		testMethod(2665, 3.3862, 0.0244, -0.8122, 1.0471, 0, 0);
		testMethod(2670, 3.3863, 0.0206, -0.7497, 1.0471, 0, 0);
		testMethod(2675, 3.3864, 0.0172, -0.6872, 1.0471, 0, 0);
		testMethod(2680, 3.3864, 0.0141, -0.6248, 1.0471, 0, 0);
		testMethod(2685, 3.3865, 0.0112, -0.5623, 1.0471, 0, 0);
		testMethod(2690, 3.3866, 0.0087, -0.4998, 1.0471, 0, 0);
		testMethod(2695, 3.3866, 0.0066, -0.4373, 1.0471, 0, 0);
		testMethod(2700, 3.3866, 0.0047, -0.3749, 1.0471, 0, 0);
		testMethod(2705, 3.3866, 0.0031, -0.3124, 1.0471, 0, 0);
		testMethod(2710, 3.3867, 0.0019, -0.2499, 1.0471, 0, 0);
		testMethod(2715, 3.3867, 0.0009, -0.1874, 1.0471, 0, 0);
		testMethod(2720, 3.3867, 0.0003, -0.125, 1.0471, 0, 0);
		testMethod(2725, 3.3867, 0, -0.0625, 1.0471, 0, 0);
		testMethod(2730, 3.3867, 0, 0, 1.0471, 0, 0);
		testMethod(2730, 3.3867, 0, 0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}