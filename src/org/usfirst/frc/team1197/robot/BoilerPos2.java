package org.usfirst.frc.team1197.robot;

public class BoilerPos2 extends TorTrajectory {

	public BoilerPos2() {
		super(-3.1281, 0.0004);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.1, 0.1311, 0, 0);
		testMethod(10, -0, -0.0015, -0.2, 0.1311, 0, 0);
		testMethod(15, -0, -0.003, -0.3, 0.1311, 0, 0);
		testMethod(20, -0, -0.005, -0.4, 0.1311, 0, 0);
		testMethod(25, -0.0001, -0.0075, -0.5, 0.1311, 0, 0);
		testMethod(30, -0.0001, -0.0105, -0.6, 0.1311, 0, 0);
		testMethod(35, -0.0002, -0.014, -0.7, 0.1311, 0, 0);
		testMethod(40, -0.0003, -0.018, -0.8, 0.1311, 0, 0);
		testMethod(45, -0.0004, -0.0225, -0.9, 0.1311, 0, 0);
		testMethod(50, -0.0005, -0.0275, -1, 0.1311, 0, 0);
		testMethod(55, -0.0006, -0.033, -1.1, 0.1311, 0, 0);
		testMethod(60, -0.0008, -0.039, -1.2, 0.1311, 0, 0);
		testMethod(65, -0.001, -0.0455, -1.3, 0.1311, 0, 0);
		testMethod(70, -0.0013, -0.0525, -1.4, 0.1311, 0, 0);
		testMethod(75, -0.0015, -0.06, -1.5, 0.1311, 0, 0);
		testMethod(80, -0.0019, -0.068, -1.6, 0.1311, 0, 0);
		testMethod(85, -0.0022, -0.0765, -1.7, 0.1311, 0, 0);
		testMethod(90, -0.0026, -0.0855, -1.8, 0.1311, 0, 0);
		testMethod(95, -0.0031, -0.095, -1.9, 0.1311, 0, 0);
		testMethod(100, -0.0036, -0.105, -2, 0.1311, 0, 0);
		testMethod(105, -0.0041, -0.1155, -2.1, 0.1311, 0, 0);
		testMethod(110, -0.0047, -0.1265, -2.2, 0.1311, 0, 0);
		testMethod(115, -0.0054, -0.138, -2.3, 0.1311, 0, 0);
		testMethod(120, -0.0061, -0.15, -2.4, 0.1311, 0, 0);
		testMethod(125, -0.0069, -0.1625, -2.5, 0.1311, 0, 0);
		testMethod(130, -0.0078, -0.1755, -2.6, 0.1311, 0, 0);
		testMethod(135, -0.0087, -0.189, -2.7, 0.1311, 0, 0);
		testMethod(140, -0.0096, -0.203, -2.8, 0.1311, 0, 0);
		testMethod(145, -0.0107, -0.2175, -2.9, 0.1311, 0, 0);
		testMethod(150, -0.0118, -0.2325, -3, 0.1311, 0, 0);
		testMethod(155, -0.013, -0.248, -3.1, 0.1311, 0, 0);
		testMethod(160, -0.0143, -0.264, -3.2, 0.1311, 0, 0);
		testMethod(165, -0.0157, -0.2805, -3.3, 0.1311, 0, 0);
		testMethod(170, -0.0171, -0.2975, -3.4, 0.1311, 0, 0);
		testMethod(175, -0.0186, -0.315, -3.5, 0.1311, 0, 0);
		testMethod(180, -0.0203, -0.3325, -3.5, 0.1311, 0, 0);
		testMethod(185, -0.022, -0.35, -3.5, 0.1311, 0, 0);
		testMethod(190, -0.0238, -0.3675, -3.5, 0.1311, 0, 0);
		testMethod(195, -0.0256, -0.385, -3.5, 0.1311, 0, 0);
		testMethod(200, -0.0276, -0.4025, -3.5, 0.1311, 0, 0);
		testMethod(205, -0.0297, -0.42, -3.5, 0.1311, 0, 0);
		testMethod(210, -0.0318, -0.4375, -3.5, 0.1311, 0, 0);
		testMethod(215, -0.034, -0.455, -3.5, 0.1311, 0, 0);
		testMethod(220, -0.0364, -0.4725, -3.5, 0.1311, 0, 0);
		testMethod(225, -0.0388, -0.49, -3.5, 0.1311, 0, 0);
		testMethod(230, -0.0413, -0.5075, -3.5, 0.1311, 0, 0);
		testMethod(235, -0.0438, -0.525, -3.5, 0.1311, 0, 0);
		testMethod(240, -0.0465, -0.5425, -3.5, 0.1311, 0, 0);
		testMethod(245, -0.0493, -0.56, -3.5, 0.1311, 0, 0);
		testMethod(250, -0.0521, -0.5775, -3.5, 0.1311, 0, 0);
		testMethod(255, -0.055, -0.595, -3.5, 0.1311, 0, 0);
		testMethod(260, -0.0581, -0.6125, -3.5, 0.1311, 0, 0);
		testMethod(265, -0.0612, -0.63, -3.5, 0.1311, 0, 0);
		testMethod(270, -0.0644, -0.6475, -3.5, 0.1311, 0, 0);
		testMethod(275, -0.0676, -0.665, -3.5, 0.1311, 0, 0);
		testMethod(280, -0.071, -0.6825, -3.5, 0.1311, 0, 0);
		testMethod(285, -0.0745, -0.7, -3.5, 0.1311, 0, 0);
		testMethod(290, -0.078, -0.7175, -3.5, 0.1311, 0, 0);
		testMethod(295, -0.0816, -0.735, -3.5, 0.1311, 0, 0);
		testMethod(300, -0.0854, -0.7525, -3.5, 0.1311, 0, 0);
		testMethod(305, -0.0892, -0.77, -3.5, 0.1311, 0, 0);
		testMethod(310, -0.0931, -0.7875, -3.5, 0.1311, 0, 0);
		testMethod(315, -0.097, -0.805, -3.5, 0.1311, 0, 0);
		testMethod(320, -0.1011, -0.8225, -3.5, 0.1311, 0, 0);
		testMethod(325, -0.1053, -0.84, -3.5, 0.1311, 0, 0);
		testMethod(330, -0.1095, -0.8575, -3.5, 0.1311, 0, 0);
		testMethod(335, -0.1138, -0.875, -3.5, 0.1311, 0, 0);
		testMethod(340, -0.1183, -0.8925, -3.5, 0.1311, 0, 0);
		testMethod(345, -0.1228, -0.91, -3.5, 0.1311, 0, 0);
		testMethod(350, -0.1274, -0.9275, -3.5, 0.1311, 0, 0);
		testMethod(355, -0.132, -0.945, -3.5, 0.1311, 0, 0);
		testMethod(360, -0.1368, -0.9625, -3.5, 0.1311, 0, 0);
		testMethod(365, -0.1417, -0.98, -3.5, 0.1311, 0, 0);
		testMethod(370, -0.1466, -0.9975, -3.5, 0.1311, 0, 0);
		testMethod(375, -0.1516, -1.015, -3.5, 0.1311, 0, 0);
		testMethod(380, -0.1568, -1.0325, -3.5, 0.1311, 0, 0);
		testMethod(385, -0.162, -1.05, -3.5, 0.1311, 0, 0);
		testMethod(390, -0.1673, -1.0675, -3.5, 0.1311, 0, 0);
		testMethod(395, -0.1726, -1.085, -3.5, 0.1311, 0, 0);
		testMethod(400, -0.1781, -1.1025, -3.5, 0.1311, 0, 0);
		testMethod(405, -0.1837, -1.12, -3.5, 0.1311, 0, 0);
		testMethod(410, -0.1893, -1.1375, -3.5, 0.1311, 0, 0);
		testMethod(415, -0.195, -1.155, -3.5, 0.1311, 0, 0);
		testMethod(420, -0.2009, -1.1725, -3.5, 0.1311, 0, 0);
		testMethod(425, -0.2068, -1.19, -3.5, 0.1311, 0, 0);
		testMethod(430, -0.2128, -1.2075, -3.5, 0.1311, 0, 0);
		testMethod(435, -0.2188, -1.225, -3.5, 0.1311, 0, 0);
		testMethod(440, -0.225, -1.2425, -3.5, 0.1311, 0, 0);
		testMethod(445, -0.2313, -1.26, -3.5, 0.1311, 0, 0);
		testMethod(450, -0.2376, -1.2775, -3.5, 0.1311, 0, 0);
		testMethod(455, -0.244, -1.295, -3.5, 0.1311, 0, 0);
		testMethod(460, -0.2506, -1.3125, -3.5, 0.1311, 0, 0);
		testMethod(465, -0.2572, -1.33, -3.5, 0.1311, 0, 0);
		testMethod(470, -0.2639, -1.3475, -3.5, 0.1311, 0, 0);
		testMethod(475, -0.2706, -1.365, -3.5, 0.1311, 0, 0);
		testMethod(480, -0.2775, -1.3825, -3.5, 0.1311, 0, 0);
		testMethod(485, -0.2845, -1.4, -3.5, 0.1311, 0, 0);
		testMethod(490, -0.2915, -1.4175, -3.5, 0.1311, 0, 0);
		testMethod(495, -0.2986, -1.435, -3.5, 0.1311, 0, 0);
		testMethod(500, -0.3059, -1.4525, -3.5, 0.1311, 0, 0);
		testMethod(505, -0.3132, -1.47, -3.5, 0.1311, 0, 0);
		testMethod(510, -0.3206, -1.4875, -3.5, 0.1311, 0, 0);
		testMethod(515, -0.328, -1.505, -3.5, 0.1311, 0, 0);
		testMethod(520, -0.3356, -1.5225, -3.5, 0.1311, 0, 0);
		testMethod(525, -0.3433, -1.54, -3.5, 0.1311, 0, 0);
		testMethod(530, -0.351, -1.5575, -3.5, 0.1311, 0, 0);
		testMethod(535, -0.3588, -1.575, -3.5, 0.1311, 0, 0);
		testMethod(540, -0.3668, -1.5925, -3.5, 0.1311, 0, 0);
		testMethod(545, -0.3748, -1.61, -3.5, 0.1311, 0, 0);
		testMethod(550, -0.3829, -1.6275, -3.5, 0.1311, 0, 0);
		testMethod(555, -0.391, -1.6445, -3.4, 0.1311, 0, 0);
		testMethod(560, -0.3993, -1.661, -3.3, 0.1311, -0.0001, -0.0105);
		testMethod(565, -0.4076, -1.677, -3.2, 0.1311, -0.0006, -0.1176);
		testMethod(570, -0.4161, -1.6925, -3.1, 0.1311, -0.0019, -0.2538);
		testMethod(575, -0.4246, -1.7075, -3, 0.1311, -0.0039, -0.3972);
		testMethod(580, -0.4331, -1.722, -2.9, 0.131, -0.0066, -0.5474);
		testMethod(585, -0.4418, -1.736, -2.8, 0.131, -0.0102, -0.7042);
		testMethod(590, -0.4505, -1.7495, -2.7, 0.1309, -0.0145, -0.8673);
		testMethod(595, -0.4593, -1.7625, -2.6, 0.1308, -0.0197, -1.0365);
		testMethod(600, -0.4681, -1.775, -2.5, 0.1307, -0.0257, -1.2113);
		testMethod(605, -0.477, -1.787, -2.4, 0.1306, -0.0327, -1.3916);
		testMethod(610, -0.486, -1.7985, -2.3, 0.1304, -0.0406, -1.5768);
		testMethod(615, -0.495, -1.8095, -2.2, 0.1302, -0.0494, -1.7667);
		testMethod(620, -0.5041, -1.82, -2.1, 0.1299, -0.0592, -1.9608);
		testMethod(625, -0.5132, -1.83, -2, 0.1296, -0.07, -2.1588);
		testMethod(630, -0.5224, -1.8395, -1.9, 0.1292, -0.0818, -2.3603);
		testMethod(635, -0.5316, -1.8485, -1.8, 0.1288, -0.0946, -2.5648);
		testMethod(640, -0.5409, -1.857, -1.7, 0.1283, -0.1085, -2.7719);
		testMethod(645, -0.5502, -1.865, -1.6, 0.1277, -0.1234, -2.9811);
		testMethod(650, -0.5595, -1.8725, -1.5, 0.127, -0.1394, -3.192);
		testMethod(655, -0.5689, -1.8795, -1.4, 0.1263, -0.1564, -3.4042);
		testMethod(660, -0.5783, -1.886, -1.3, 0.1255, -0.1745, -3.617);
		testMethod(665, -0.5878, -1.892, -1.2, 0.1245, -0.1936, -3.8302);
		testMethod(670, -0.5972, -1.8975, -1.1, 0.1235, -0.2138, -4.043);
		testMethod(675, -0.6067, -1.9025, -1, 0.1224, -0.2351, -4.2552);
		testMethod(680, -0.6162, -1.907, -0.9, 0.1212, -0.2574, -4.466);
		testMethod(685, -0.6258, -1.911, -0.8, 0.1198, -0.2808, -4.6751);
		testMethod(690, -0.6354, -1.9145, -0.7, 0.1184, -0.3052, -4.8819);
		testMethod(695, -0.6449, -1.9175, -0.6, 0.1168, -0.3306, -5.0859);
		testMethod(700, -0.6545, -1.92, -0.5, 0.115, -0.3571, -5.2866);
		testMethod(705, -0.6641, -1.922, -0.4, 0.1132, -0.3845, -5.4834);
		testMethod(710, -0.6737, -1.9235, -0.3, 0.1112, -0.4129, -5.6758);
		testMethod(715, -0.6834, -1.9245, -0.2, 0.1091, -0.4422, -5.8633);
		testMethod(720, -0.693, -1.925, -0.1, 0.1068, -0.4724, -6.0454);
		testMethod(725, -0.7026, -1.925, -0, 0.1043, -0.5033, -6.175);
		testMethod(730, -0.7122, -1.925, -0, 0.1017, -0.5332, -5.9714);
		testMethod(735, -0.7219, -1.925, -0, 0.099, -0.562, -5.773);
		testMethod(740, -0.7315, -1.925, -0, 0.0961, -0.5899, -5.5747);
		testMethod(745, -0.7411, -1.925, -0, 0.0931, -0.6168, -5.3763);
		testMethod(750, -0.7507, -1.925, -0, 0.09, -0.6427, -5.1779);
		testMethod(755, -0.7604, -1.925, -0, 0.0867, -0.6676, -4.9796);
		testMethod(760, -0.77, -1.925, -0, 0.0833, -0.6915, -4.7812);
		testMethod(765, -0.7796, -1.925, -0, 0.0798, -0.7144, -4.5829);
		testMethod(770, -0.7892, -1.925, -0, 0.0761, -0.7363, -4.3845);
		testMethod(775, -0.7989, -1.925, -0, 0.0724, -0.7572, -4.1861);
		testMethod(780, -0.8085, -1.925, -0, 0.0686, -0.7772, -3.9878);
		testMethod(785, -0.8181, -1.925, -0, 0.0646, -0.7961, -3.7894);
		testMethod(790, -0.8277, -1.925, -0, 0.0606, -0.8141, -3.591);
		testMethod(795, -0.8374, -1.925, -0, 0.0565, -0.831, -3.3927);
		testMethod(800, -0.847, -1.925, -0, 0.0523, -0.847, -3.1943);
		testMethod(805, -0.8566, -1.925, -0, 0.048, -0.862, -2.996);
		testMethod(810, -0.8662, -1.925, -0, 0.0437, -0.876, -2.7976);
		testMethod(815, -0.8759, -1.925, -0, 0.0393, -0.889, -2.5992);
		testMethod(820, -0.8855, -1.925, -0, 0.0348, -0.901, -2.4009);
		testMethod(825, -0.8951, -1.925, -0, 0.0303, -0.912, -2.2025);
		testMethod(830, -0.9047, -1.925, -0, 0.0257, -0.922, -2.0041);
		testMethod(835, -0.9144, -1.925, -0, 0.021, -0.931, -1.8058);
		testMethod(840, -0.924, -1.925, -0, 0.0164, -0.9391, -1.6074);
		testMethod(845, -0.9336, -1.925, -0, 0.0117, -0.9461, -1.409);
		testMethod(850, -0.9432, -1.925, -0, 0.0069, -0.9522, -1.2107);
		testMethod(855, -0.9529, -1.925, -0, 0.0021, -0.9572, -1.0123);
		testMethod(860, -0.9625, -1.925, -0, -0.0027, -0.9613, -0.814);
		testMethod(865, -0.9721, -1.925, -0, -0.0075, -0.9644, -0.6156);
		testMethod(870, -0.9817, -1.925, -0, -0.0123, -0.9665, -0.4172);
		testMethod(875, -0.9914, -1.925, -0, -0.0171, -0.9676, -0.2189);
		testMethod(880, -1.001, -1.925, -0, -0.022, -0.9677, -0.0201);
		testMethod(885, -1.0106, -1.925, -0, -0.0268, -0.9668, 0.1789);
		testMethod(890, -1.0202, -1.925, -0, -0.0316, -0.9649, 0.3772);
		testMethod(895, -1.0299, -1.925, -0, -0.0365, -0.962, 0.5756);
		testMethod(900, -1.0395, -1.925, -0, -0.0413, -0.9581, 0.774);
		testMethod(905, -1.0491, -1.925, -0, -0.046, -0.9533, 0.9723);
		testMethod(910, -1.0587, -1.925, -0, -0.0508, -0.9474, 1.1707);
		testMethod(915, -1.0684, -1.925, -0, -0.0555, -0.9406, 1.3691);
		testMethod(920, -1.078, -1.925, -0, -0.0602, -0.9327, 1.5674);
		testMethod(925, -1.0876, -1.925, -0, -0.0648, -0.9239, 1.7658);
		testMethod(930, -1.0972, -1.925, -0, -0.0694, -0.9141, 1.9642);
		testMethod(935, -1.1069, -1.925, -0, -0.074, -0.9033, 2.1625);
		testMethod(940, -1.1165, -1.925, -0, -0.0785, -0.8915, 2.3609);
		testMethod(945, -1.1261, -1.925, -0, -0.0829, -0.8787, 2.5592);
		testMethod(950, -1.1357, -1.925, -0, -0.0873, -0.8649, 2.7576);
		testMethod(955, -1.1454, -1.925, -0, -0.0915, -0.8501, 2.956);
		testMethod(960, -1.155, -1.925, -0, -0.0958, -0.8343, 3.1543);
		testMethod(965, -1.1646, -1.925, -0, -0.0999, -0.8176, 3.3527);
		testMethod(970, -1.1742, -1.925, -0, -0.1039, -0.7998, 3.5511);
		testMethod(975, -1.1839, -1.925, -0, -0.1079, -0.7811, 3.7494);
		testMethod(980, -1.1935, -1.925, -0, -0.1117, -0.7613, 3.9478);
		testMethod(985, -1.2031, -1.925, -0, -0.1155, -0.7406, 4.1461);
		testMethod(990, -1.2127, -1.925, -0, -0.1191, -0.7189, 4.3445);
		testMethod(995, -1.2224, -1.925, -0, -0.1227, -0.6962, 4.5429);
		testMethod(1000, -1.232, -1.925, -0, -0.1261, -0.6725, 4.7412);
		testMethod(1005, -1.2416, -1.925, -0, -0.1294, -0.6478, 4.9396);
		testMethod(1010, -1.2512, -1.925, -0, -0.1326, -0.6221, 5.138);
		testMethod(1015, -1.2609, -1.925, -0, -0.1356, -0.5954, 5.3363);
		testMethod(1020, -1.2705, -1.925, -0, -0.1385, -0.5677, 5.5347);
		testMethod(1025, -1.2801, -1.925, -0, -0.1413, -0.539, 5.733);
		testMethod(1030, -1.2897, -1.925, -0, -0.1439, -0.5094, 5.9314);
		testMethod(1035, -1.2994, -1.925, -0, -0.1464, -0.4786, 6.1565);
		testMethod(1040, -1.309, -1.925, -0, -0.1487, -0.4483, 6.0632);
		testMethod(1045, -1.3186, -1.925, -0, -0.1509, -0.419, 5.8649);
		testMethod(1050, -1.3282, -1.925, -0, -0.1529, -0.3906, 5.6665);
		testMethod(1055, -1.3379, -1.925, -0, -0.1548, -0.3633, 5.4681);
		testMethod(1060, -1.3475, -1.925, -0, -0.1565, -0.3369, 5.2698);
		testMethod(1065, -1.3571, -1.925, -0, -0.1581, -0.3116, 5.0714);
		testMethod(1070, -1.3667, -1.925, -0, -0.1596, -0.2872, 4.8731);
		testMethod(1075, -1.3764, -1.925, -0, -0.161, -0.2639, 4.6747);
		testMethod(1080, -1.386, -1.925, -0, -0.1623, -0.2415, 4.4763);
		testMethod(1085, -1.3956, -1.925, -0, -0.1634, -0.2201, 4.278);
		testMethod(1090, -1.4052, -1.925, -0, -0.1645, -0.1997, 4.0796);
		testMethod(1095, -1.4149, -1.925, -0, -0.1654, -0.1803, 3.8812);
		testMethod(1100, -1.4245, -1.925, -0, -0.1663, -0.1619, 3.6829);
		testMethod(1105, -1.4341, -1.925, -0, -0.1671, -0.1444, 3.4845);
		testMethod(1110, -1.4437, -1.925, -0, -0.1677, -0.128, 3.2861);
		testMethod(1115, -1.4534, -1.925, -0, -0.1683, -0.1126, 3.0878);
		testMethod(1120, -1.463, -1.925, -0, -0.1689, -0.0981, 2.8894);
		testMethod(1125, -1.4726, -1.925, -0, -0.1693, -0.0847, 2.6911);
		testMethod(1130, -1.4822, -1.925, -0, -0.1697, -0.0722, 2.4927);
		testMethod(1135, -1.4919, -1.925, -0, -0.17, -0.0607, 2.2943);
		testMethod(1140, -1.5015, -1.925, -0, -0.1703, -0.0503, 2.096);
		testMethod(1145, -1.5111, -1.925, -0, -0.1706, -0.0408, 1.8976);
		testMethod(1150, -1.5207, -1.925, -0, -0.1707, -0.0323, 1.6992);
		testMethod(1155, -1.5304, -1.925, -0, -0.1709, -0.0248, 1.5009);
		testMethod(1160, -1.54, -1.925, -0, -0.171, -0.0182, 1.3025);
		testMethod(1165, -1.5496, -1.925, -0, -0.1711, -0.0127, 1.1042);
		testMethod(1170, -1.5592, -1.925, -0, -0.1711, -0.0082, 0.9058);
		testMethod(1175, -1.5689, -1.925, -0, -0.1711, -0.0047, 0.7074);
		testMethod(1180, -1.5785, -1.925, -0, -0.1712, -0.0021, 0.5091);
		testMethod(1185, -1.5881, -1.925, -0, -0.1712, -0.0006, 0.3107);
		testMethod(1190, -1.5977, -1.925, -0, -0.1712, -0, 0.1123);
		testMethod(1195, -1.6074, -1.925, -0, -0.1712, 0, 0.0004);
		testMethod(1200, -1.617, -1.925, -0, -0.1712, 0, 0);
		testMethod(1205, -1.6266, -1.925, -0, -0.1712, 0, 0);
		testMethod(1210, -1.6362, -1.925, -0, -0.1712, 0, 0);
		testMethod(1215, -1.6459, -1.925, -0, -0.1712, 0, 0);
		testMethod(1220, -1.6555, -1.925, -0, -0.1712, 0, 0);
		testMethod(1225, -1.6651, -1.925, -0, -0.1712, 0, 0);
		testMethod(1230, -1.6747, -1.925, -0, -0.1712, 0, 0);
		testMethod(1235, -1.6844, -1.925, -0, -0.1712, 0, 0);
		testMethod(1240, -1.694, -1.925, -0, -0.1712, 0, 0);
		testMethod(1245, -1.7036, -1.925, -0, -0.1712, 0, 0);
		testMethod(1250, -1.7132, -1.925, -0, -0.1712, 0, 0);
		testMethod(1255, -1.7229, -1.925, -0, -0.1712, 0, 0);
		testMethod(1260, -1.7325, -1.925, -0, -0.1712, 0, 0);
		testMethod(1265, -1.7421, -1.925, -0, -0.1712, 0, 0);
		testMethod(1270, -1.7517, -1.925, -0, -0.1712, 0, 0);
		testMethod(1275, -1.7614, -1.925, -0, -0.1712, 0, 0);
		testMethod(1280, -1.771, -1.925, -0, -0.1712, 0, 0);
		testMethod(1285, -1.7806, -1.925, -0, -0.1712, 0, 0);
		testMethod(1290, -1.7902, -1.925, -0, -0.1712, 0, 0);
		testMethod(1295, -1.7999, -1.925, -0, -0.1712, 0, 0);
		testMethod(1300, -1.8095, -1.925, -0, -0.1712, 0, 0);
		testMethod(1305, -1.8191, -1.925, -0, -0.1712, 0, 0);
		testMethod(1310, -1.8287, -1.925, -0, -0.1712, 0, 0);
		testMethod(1315, -1.8384, -1.925, -0, -0.1712, 0, 0);
		testMethod(1320, -1.848, -1.925, -0, -0.1712, 0, 0);
		testMethod(1325, -1.8576, -1.925, -0, -0.1712, 0, 0);
		testMethod(1330, -1.8672, -1.925, -0, -0.1712, 0, 0);
		testMethod(1335, -1.8769, -1.925, -0, -0.1712, 0, 0);
		testMethod(1340, -1.8865, -1.925, -0, -0.1712, 0, 0);
		testMethod(1345, -1.8961, -1.925, -0, -0.1712, 0, 0);
		testMethod(1350, -1.9057, -1.925, -0, -0.1712, 0, 0);
		testMethod(1355, -1.9154, -1.925, -0, -0.1712, 0, 0);
		testMethod(1360, -1.925, -1.925, -0, -0.1712, 0, 0);
		testMethod(1365, -1.9346, -1.925, -0, -0.1712, 0, 0);
		testMethod(1370, -1.9442, -1.925, -0, -0.1712, 0, 0);
		testMethod(1375, -1.9539, -1.925, -0, -0.1712, 0, 0);
		testMethod(1380, -1.9635, -1.925, -0, -0.1712, 0.0005, 0.103);
		testMethod(1385, -1.9731, -1.925, -0, -0.1712, 0.002, 0.3014);
		testMethod(1390, -1.9827, -1.925, -0, -0.1711, 0.0045, 0.4997);
		testMethod(1395, -1.9924, -1.925, -0, -0.1711, 0.008, 0.6981);
		testMethod(1400, -2.002, -1.925, -0, -0.1711, 0.0125, 0.8965);
		testMethod(1405, -2.0116, -1.925, -0, -0.171, 0.018, 1.0948);
		testMethod(1410, -2.0212, -1.925, -0, -0.1709, 0.0244, 1.2932);
		testMethod(1415, -2.0309, -1.925, -0, -0.1707, 0.0319, 1.4916);
		testMethod(1420, -2.0405, -1.925, -0, -0.1706, 0.0403, 1.6899);
		testMethod(1425, -2.0501, -1.925, -0, -0.1703, 0.0498, 1.8883);
		testMethod(1430, -2.0597, -1.925, -0, -0.1701, 0.0602, 2.0866);
		testMethod(1435, -2.0694, -1.925, -0, -0.1697, 0.0716, 2.285);
		testMethod(1440, -2.079, -1.925, -0, -0.1693, 0.0841, 2.4834);
		testMethod(1445, -2.0886, -1.925, -0, -0.1689, 0.0975, 2.6817);
		testMethod(1450, -2.0982, -1.925, -0, -0.1684, 0.1119, 2.8801);
		testMethod(1455, -2.1079, -1.925, -0, -0.1678, 0.1273, 3.0785);
		testMethod(1460, -2.1175, -1.925, -0, -0.1671, 0.1436, 3.2768);
		testMethod(1465, -2.1271, -1.925, -0, -0.1663, 0.161, 3.4752);
		testMethod(1470, -2.1367, -1.925, -0, -0.1655, 0.1794, 3.6735);
		testMethod(1475, -2.1464, -1.925, -0, -0.1645, 0.1987, 3.8719);
		testMethod(1480, -2.156, -1.925, -0, -0.1635, 0.2191, 4.0703);
		testMethod(1485, -2.1656, -1.925, -0, -0.1623, 0.2404, 4.2686);
		testMethod(1490, -2.1752, -1.925, -0, -0.1611, 0.2628, 4.467);
		testMethod(1495, -2.1849, -1.925, -0, -0.1597, 0.2861, 4.6654);
		testMethod(1500, -2.1945, -1.925, -0, -0.1582, 0.3104, 4.8637);
		testMethod(1505, -2.2041, -1.925, -0, -0.1566, 0.3358, 5.0688);
		testMethod(1510, -2.2137, -1.925, -0, -0.1549, 0.3608, 4.9993);
		testMethod(1515, -2.2234, -1.925, -0, -0.153, 0.3848, 4.801);
		testMethod(1520, -2.233, -1.925, -0, -0.151, 0.4078, 4.6026);
		testMethod(1525, -2.2426, -1.925, -0, -0.1489, 0.4298, 4.4042);
		testMethod(1530, -2.2522, -1.925, -0, -0.1467, 0.4508, 4.2059);
		testMethod(1535, -2.2619, -1.925, -0, -0.1444, 0.4709, 4.0075);
		testMethod(1540, -2.2715, -1.925, -0, -0.142, 0.4899, 3.8091);
		testMethod(1545, -2.2811, -1.925, -0, -0.1395, 0.508, 3.6108);
		testMethod(1550, -2.2907, -1.925, -0, -0.1369, 0.525, 3.4124);
		testMethod(1555, -2.3004, -1.925, -0, -0.1343, 0.5411, 3.2141);
		testMethod(1560, -2.31, -1.925, -0, -0.1315, 0.5562, 3.0157);
		testMethod(1565, -2.3196, -1.925, -0, -0.1287, 0.5703, 2.8173);
		testMethod(1570, -2.3292, -1.925, -0, -0.1258, 0.5834, 2.619);
		testMethod(1575, -2.3389, -1.925, -0, -0.1229, 0.5955, 2.4206);
		testMethod(1580, -2.3485, -1.925, -0, -0.1199, 0.6066, 2.2222);
		testMethod(1585, -2.3581, -1.925, -0, -0.1168, 0.6167, 2.0239);
		testMethod(1590, -2.3677, -1.925, -0, -0.1137, 0.6258, 1.8255);
		testMethod(1595, -2.3774, -1.925, -0, -0.1106, 0.634, 1.6272);
		testMethod(1600, -2.387, -1.925, -0, -0.1074, 0.6411, 1.4288);
		testMethod(1605, -2.3966, -1.925, -0, -0.1042, 0.6473, 1.2304);
		testMethod(1610, -2.4062, -1.925, -0, -0.1009, 0.6524, 1.0321);
		testMethod(1615, -2.4159, -1.925, -0, -0.0976, 0.6566, 0.8337);
		testMethod(1620, -2.4255, -1.925, -0, -0.0943, 0.6598, 0.6353);
		testMethod(1625, -2.4351, -1.925, -0, -0.091, 0.6619, 0.437);
		testMethod(1630, -2.4447, -1.9245, 0.1, -0.0877, 0.663, 0.2042);
		testMethod(1635, -2.4543, -1.9235, 0.2, -0.0844, 0.6628, -0.0287);
		testMethod(1640, -2.464, -1.922, 0.3, -0.0811, 0.6615, -0.2613);
		testMethod(1645, -2.4736, -1.92, 0.4, -0.0778, 0.6591, -0.4924);
		testMethod(1650, -2.4832, -1.9175, 0.5, -0.0745, 0.6554, -0.7219);
		testMethod(1655, -2.4927, -1.9145, 0.6, -0.0712, 0.6507, -0.9493);
		testMethod(1660, -2.5023, -1.911, 0.7, -0.068, 0.6448, -1.1741);
		testMethod(1665, -2.5118, -1.907, 0.8, -0.0648, 0.6378, -1.3957);
		testMethod(1670, -2.5214, -1.9025, 0.9, -0.0616, 0.6298, -1.6138);
		testMethod(1675, -2.5309, -1.8975, 1, -0.0585, 0.6206, -1.8278);
		testMethod(1680, -2.5403, -1.892, 1.1, -0.0554, 0.6105, -2.0373);
		testMethod(1685, -2.5498, -1.886, 1.2, -0.0524, 0.5992, -2.2417);
		testMethod(1690, -2.5592, -1.8795, 1.3, -0.0494, 0.587, -2.4406);
		testMethod(1695, -2.5686, -1.8725, 1.4, -0.0465, 0.5739, -2.6336);
		testMethod(1700, -2.5779, -1.865, 1.5, -0.0437, 0.5598, -2.8203);
		testMethod(1705, -2.5872, -1.857, 1.6, -0.0409, 0.5448, -3.0002);
		testMethod(1710, -2.5965, -1.8485, 1.7, -0.0382, 0.5289, -3.1728);
		testMethod(1715, -2.6057, -1.8395, 1.8, -0.0356, 0.5122, -3.3379);
		testMethod(1720, -2.6149, -1.83, 1.9, -0.0331, 0.4947, -3.495);
		testMethod(1725, -2.624, -1.82, 2, -0.0307, 0.4765, -3.6438);
		testMethod(1730, -2.6331, -1.8095, 2.1, -0.0284, 0.4576, -3.7839);
		testMethod(1735, -2.6421, -1.7985, 2.2, -0.0261, 0.438, -3.9149);
		testMethod(1740, -2.6511, -1.787, 2.3, -0.024, 0.4178, -4.0367);
		testMethod(1745, -2.66, -1.775, 2.4, -0.0219, 0.3971, -4.1488);
		testMethod(1750, -2.6688, -1.7625, 2.5, -0.02, 0.3758, -4.251);
		testMethod(1755, -2.6776, -1.7495, 2.6, -0.0182, 0.3541, -4.3431);
		testMethod(1760, -2.6863, -1.736, 2.7, -0.0165, 0.332, -4.4247);
		testMethod(1765, -2.695, -1.722, 2.8, -0.0149, 0.3095, -4.4958);
		testMethod(1770, -2.7035, -1.7075, 2.9, -0.0134, 0.2868, -4.5476);
		testMethod(1775, -2.712, -1.6925, 3, -0.012, 0.2649, -4.3686);
		testMethod(1780, -2.7205, -1.677, 3.1, -0.0107, 0.2442, -4.1473);
		testMethod(1785, -2.7288, -1.661, 3.2, -0.0096, 0.2246, -3.9299);
		testMethod(1790, -2.7371, -1.6445, 3.3, -0.0085, 0.206, -3.7167);
		testMethod(1795, -2.7452, -1.6275, 3.4, -0.0075, 0.1884, -3.5081);
		testMethod(1800, -2.7533, -1.61, 3.5, -0.0066, 0.1719, -3.3042);
		testMethod(1805, -2.7613, -1.5925, 3.5, -0.0058, 0.1564, -3.096);
		testMethod(1810, -2.7693, -1.575, 3.5, -0.005, 0.142, -2.8963);
		testMethod(1815, -2.7771, -1.5575, 3.5, -0.0043, 0.1284, -2.7049);
		testMethod(1820, -2.7848, -1.54, 3.5, -0.0037, 0.1158, -2.5215);
		testMethod(1825, -2.7925, -1.5225, 3.5, -0.0032, 0.1041, -2.3459);
		testMethod(1830, -2.8001, -1.505, 3.5, -0.0027, 0.0932, -2.1781);
		testMethod(1835, -2.8075, -1.4875, 3.5, -0.0023, 0.0831, -2.0177);
		testMethod(1840, -2.8149, -1.47, 3.5, -0.0019, 0.0738, -1.8646);
		testMethod(1845, -2.8222, -1.4525, 3.5, -0.0015, 0.0652, -1.7186);
		testMethod(1850, -2.8295, -1.435, 3.5, -0.0012, 0.0573, -1.5795);
		testMethod(1855, -2.8366, -1.4175, 3.5, -0.0009, 0.0501, -1.4471);
		testMethod(1860, -2.8436, -1.4, 3.5, -0.0007, 0.0435, -1.3212);
		testMethod(1865, -2.8506, -1.3825, 3.5, -0.0005, 0.0375, -1.2017);
		testMethod(1870, -2.8575, -1.365, 3.5, -0.0003, 0.032, -1.0884);
		testMethod(1875, -2.8642, -1.3475, 3.5, -0.0002, 0.0271, -0.981);
		testMethod(1880, -2.8709, -1.33, 3.5, -0.0001, 0.0227, -0.8795);
		testMethod(1885, -2.8775, -1.3125, 3.5, 0, 0.0188, -0.7836);
		testMethod(1890, -2.8841, -1.295, 3.5, 0.0001, 0.0153, -0.6933);
		testMethod(1895, -2.8905, -1.2775, 3.5, 0.0002, 0.0123, -0.6082);
		testMethod(1900, -2.8968, -1.26, 3.5, 0.0003, 0.0096, -0.5283);
		testMethod(1905, -2.9031, -1.2425, 3.5, 0.0003, 0.0074, -0.4533);
		testMethod(1910, -2.9093, -1.225, 3.5, 0.0003, 0.0055, -0.3832);
		testMethod(1915, -2.9153, -1.2075, 3.5, 0.0003, 0.0039, -0.3178);
		testMethod(1920, -2.9213, -1.19, 3.5, 0.0004, 0.0026, -0.2568);
		testMethod(1925, -2.9272, -1.1725, 3.5, 0.0004, 0.0016, -0.2002);
		testMethod(1930, -2.9331, -1.155, 3.5, 0.0004, 0.0008, -0.1478);
		testMethod(1935, -2.9388, -1.1375, 3.5, 0.0004, 0.0003, -0.0995);
		testMethod(1940, -2.9444, -1.12, 3.5, 0.0004, 0.0001, -0.0551);
		testMethod(1945, -2.95, -1.1025, 3.5, 0.0004, 0, -0.0147);
		testMethod(1950, -2.9555, -1.085, 3.5, 0.0004, 0, 0);
		testMethod(1955, -2.9608, -1.0675, 3.5, 0.0004, 0, 0);
		testMethod(1960, -2.9661, -1.05, 3.5, 0.0004, 0, 0);
		testMethod(1965, -2.9713, -1.0325, 3.5, 0.0004, 0, 0);
		testMethod(1970, -2.9765, -1.015, 3.5, 0.0004, 0, 0);
		testMethod(1975, -2.9815, -0.9975, 3.5, 0.0004, 0, 0);
		testMethod(1980, -2.9864, -0.98, 3.5, 0.0004, 0, 0);
		testMethod(1985, -2.9913, -0.9625, 3.5, 0.0004, 0, 0);
		testMethod(1990, -2.9961, -0.945, 3.5, 0.0004, 0, 0);
		testMethod(1995, -3.0007, -0.9275, 3.5, 0.0004, 0, 0);
		testMethod(2000, -3.0053, -0.91, 3.5, 0.0004, 0, 0);
		testMethod(2005, -3.0098, -0.8925, 3.5, 0.0004, 0, 0);
		testMethod(2010, -3.0143, -0.875, 3.5, 0.0004, 0, 0);
		testMethod(2015, -3.0186, -0.8575, 3.5, 0.0004, 0, 0);
		testMethod(2020, -3.0228, -0.84, 3.5, 0.0004, 0, 0);
		testMethod(2025, -3.027, -0.8225, 3.5, 0.0004, 0, 0);
		testMethod(2030, -3.0311, -0.805, 3.5, 0.0004, 0, 0);
		testMethod(2035, -3.035, -0.7875, 3.5, 0.0004, 0, 0);
		testMethod(2040, -3.0389, -0.77, 3.5, 0.0004, 0, 0);
		testMethod(2045, -3.0427, -0.7525, 3.5, 0.0004, 0, 0);
		testMethod(2050, -3.0465, -0.735, 3.5, 0.0004, 0, 0);
		testMethod(2055, -3.0501, -0.7175, 3.5, 0.0004, 0, 0);
		testMethod(2060, -3.0536, -0.7, 3.5, 0.0004, 0, 0);
		testMethod(2065, -3.0571, -0.6825, 3.5, 0.0004, 0, 0);
		testMethod(2070, -3.0605, -0.665, 3.5, 0.0004, 0, 0);
		testMethod(2075, -3.0637, -0.6475, 3.5, 0.0004, 0, 0);
		testMethod(2080, -3.0669, -0.63, 3.5, 0.0004, 0, 0);
		testMethod(2085, -3.07, -0.6125, 3.5, 0.0004, 0, 0);
		testMethod(2090, -3.0731, -0.595, 3.5, 0.0004, 0, 0);
		testMethod(2095, -3.076, -0.5775, 3.5, 0.0004, 0, 0);
		testMethod(2100, -3.0788, -0.56, 3.5, 0.0004, 0, 0);
		testMethod(2105, -3.0816, -0.5425, 3.5, 0.0004, 0, 0);
		testMethod(2110, -3.0843, -0.525, 3.5, 0.0004, 0, 0);
		testMethod(2115, -3.0868, -0.5075, 3.5, 0.0004, 0, 0);
		testMethod(2120, -3.0893, -0.49, 3.5, 0.0004, 0, 0);
		testMethod(2125, -3.0917, -0.4725, 3.5, 0.0004, 0, 0);
		testMethod(2130, -3.0941, -0.455, 3.5, 0.0004, 0, 0);
		testMethod(2135, -3.0963, -0.4375, 3.5, 0.0004, 0, 0);
		testMethod(2140, -3.0984, -0.42, 3.5, 0.0004, 0, 0);
		testMethod(2145, -3.1005, -0.4025, 3.5, 0.0004, 0, 0);
		testMethod(2150, -3.1025, -0.385, 3.5, 0.0004, 0, 0);
		testMethod(2155, -3.1043, -0.3675, 3.5, 0.0004, 0, 0);
		testMethod(2160, -3.1061, -0.35, 3.5, 0.0004, 0, 0);
		testMethod(2165, -3.1078, -0.3325, 3.5, 0.0004, 0, 0);
		testMethod(2170, -3.1095, -0.315, 3.5, 0.0004, 0, 0);
		testMethod(2175, -3.111, -0.2975, 3.5, 0.0004, 0, 0);
		testMethod(2180, -3.1124, -0.2805, 3.4, 0.0004, 0, 0);
		testMethod(2185, -3.1138, -0.264, 3.3, 0.0004, 0, 0);
		testMethod(2190, -3.1151, -0.248, 3.2, 0.0004, 0, 0);
		testMethod(2195, -3.1163, -0.2325, 3.1, 0.0004, 0, 0);
		testMethod(2200, -3.1174, -0.2175, 3, 0.0004, 0, 0);
		testMethod(2205, -3.1185, -0.203, 2.9, 0.0004, 0, 0);
		testMethod(2210, -3.1194, -0.189, 2.8, 0.0004, 0, 0);
		testMethod(2215, -3.1203, -0.1755, 2.7, 0.0004, 0, 0);
		testMethod(2220, -3.1212, -0.1625, 2.6, 0.0004, 0, 0);
		testMethod(2225, -3.122, -0.15, 2.5, 0.0004, 0, 0);
		testMethod(2230, -3.1227, -0.138, 2.4, 0.0004, 0, 0);
		testMethod(2235, -3.1233, -0.1265, 2.3, 0.0004, 0, 0);
		testMethod(2240, -3.124, -0.1155, 2.2, 0.0004, 0, 0);
		testMethod(2245, -3.1245, -0.105, 2.1, 0.0004, 0, 0);
		testMethod(2250, -3.125, -0.095, 2, 0.0004, 0, 0);
		testMethod(2255, -3.1255, -0.0855, 1.9, 0.0004, 0, 0);
		testMethod(2260, -3.1259, -0.0765, 1.8, 0.0004, 0, 0);
		testMethod(2265, -3.1262, -0.068, 1.7, 0.0004, 0, 0);
		testMethod(2270, -3.1265, -0.06, 1.6, 0.0004, 0, 0);
		testMethod(2275, -3.1268, -0.0525, 1.5, 0.0004, 0, 0);
		testMethod(2280, -3.1271, -0.0455, 1.4, 0.0004, 0, 0);
		testMethod(2285, -3.1273, -0.039, 1.3, 0.0004, 0, 0);
		testMethod(2290, -3.1275, -0.033, 1.2, 0.0004, 0, 0);
		testMethod(2295, -3.1276, -0.0275, 1.1, 0.0004, 0, 0);
		testMethod(2300, -3.1277, -0.0225, 1, 0.0004, 0, 0);
		testMethod(2305, -3.1278, -0.018, 0.9, 0.0004, 0, 0);
		testMethod(2310, -3.1279, -0.014, 0.8, 0.0004, 0, 0);
		testMethod(2315, -3.128, -0.0105, 0.7, 0.0004, 0, 0);
		testMethod(2320, -3.128, -0.0075, 0.6, 0.0004, 0, 0);
		testMethod(2325, -3.1281, -0.005, 0.5, 0.0004, 0, 0);
		testMethod(2330, -3.1281, -0.003, 0.4, 0.0004, 0, 0);
		testMethod(2335, -3.1281, -0.0015, 0.3, 0.0004, 0, 0);
		testMethod(2340, -3.1281, -0.0005, 0.2, 0.0004, 0, 0);
		testMethod(2345, -3.1281, -0, 0.1, 0.0004, 0, 0);
		testMethod(2350, -3.1281, -0, -0, 0.0004, 0, 0);
		testMethod(2350, -3.1281, -0, -0, 0.0004, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}