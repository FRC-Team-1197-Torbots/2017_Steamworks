package org.usfirst.frc.team1197.robot;

public class BoilerPos1 extends TorTrajectory {

	public BoilerPos1() {
		super(-4.2483, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0622, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1243, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.1865, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2486, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3108, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.3729, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.4351, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4972, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5594, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6215, 0, 0, 0);
		testMethod(55, -0.0004, -0.0205, -0.6837, 0, 0, 0);
		testMethod(60, -0.0005, -0.0242, -0.7458, 0, 0, 0);
		testMethod(65, -0.0006, -0.0283, -0.808, 0, 0, 0);
		testMethod(70, -0.0008, -0.0326, -0.8701, 0, 0, 0);
		testMethod(75, -0.001, -0.0373, -0.9323, 0, 0, 0);
		testMethod(80, -0.0012, -0.0423, -0.9944, 0, 0, 0);
		testMethod(85, -0.0014, -0.0475, -1.0566, 0, 0, 0);
		testMethod(90, -0.0016, -0.0531, -1.1187, 0, 0, 0);
		testMethod(95, -0.0019, -0.059, -1.1809, 0, 0, 0);
		testMethod(100, -0.0022, -0.0653, -1.243, 0, 0, 0);
		testMethod(105, -0.0026, -0.0718, -1.3052, 0, 0, 0);
		testMethod(110, -0.0029, -0.0786, -1.3673, 0, 0, 0);
		testMethod(115, -0.0034, -0.0858, -1.4295, 0, 0, 0);
		testMethod(120, -0.0038, -0.0932, -1.4916, 0, 0, 0);
		testMethod(125, -0.0043, -0.101, -1.5538, 0, 0, 0);
		testMethod(130, -0.0048, -0.1091, -1.6159, 0, 0, 0);
		testMethod(135, -0.0054, -0.1175, -1.6781, 0, 0, 0);
		testMethod(140, -0.006, -0.1262, -1.7402, 0, 0, 0);
		testMethod(145, -0.0066, -0.1352, -1.8024, 0, 0, 0);
		testMethod(150, -0.0073, -0.1445, -1.8645, 0, 0, 0);
		testMethod(155, -0.0081, -0.1541, -1.9267, 0, 0, 0);
		testMethod(160, -0.0089, -0.1641, -1.9888, 0, 0, 0);
		testMethod(165, -0.0097, -0.1743, -2.051, 0, 0, 0);
		testMethod(170, -0.0106, -0.1849, -2.1131, 0, 0, 0);
		testMethod(175, -0.0116, -0.1958, -2.1753, 0, 0, 0);
		testMethod(180, -0.0126, -0.207, -2.2374, 0, 0, 0);
		testMethod(185, -0.0137, -0.2185, -2.2996, 0, 0, 0);
		testMethod(190, -0.0148, -0.2303, -2.3617, 0, 0, 0);
		testMethod(195, -0.016, -0.2424, -2.4239, 0, 0, 0);
		testMethod(200, -0.0172, -0.2548, -2.486, 0, 0, 0);
		testMethod(205, -0.0185, -0.2672, -2.486, 0, 0, 0);
		testMethod(210, -0.0199, -0.2797, -2.486, 0, 0, 0);
		testMethod(215, -0.0213, -0.2921, -2.486, 0, 0, 0);
		testMethod(220, -0.0228, -0.3045, -2.486, 0, 0, 0);
		testMethod(225, -0.0243, -0.317, -2.486, 0, 0, 0);
		testMethod(230, -0.026, -0.3294, -2.486, 0, 0, 0);
		testMethod(235, -0.0276, -0.3418, -2.486, 0, 0, 0);
		testMethod(240, -0.0294, -0.3543, -2.486, 0, 0, 0);
		testMethod(245, -0.0312, -0.3667, -2.486, 0, 0, 0);
		testMethod(250, -0.033, -0.3791, -2.486, 0, 0, 0);
		testMethod(255, -0.035, -0.3916, -2.486, 0, 0, 0);
		testMethod(260, -0.037, -0.404, -2.486, 0, 0, 0);
		testMethod(265, -0.039, -0.4164, -2.486, 0, 0, 0);
		testMethod(270, -0.0411, -0.4288, -2.486, 0, 0, 0);
		testMethod(275, -0.0433, -0.4413, -2.486, 0, 0, 0);
		testMethod(280, -0.0455, -0.4537, -2.486, 0, 0, 0);
		testMethod(285, -0.0478, -0.4661, -2.486, 0, 0, 0);
		testMethod(290, -0.0502, -0.4786, -2.486, 0, 0, 0);
		testMethod(295, -0.0526, -0.491, -2.486, 0, 0, 0);
		testMethod(300, -0.0551, -0.5034, -2.486, 0, 0, 0);
		testMethod(305, -0.0577, -0.5159, -2.486, 0, 0, 0);
		testMethod(310, -0.0603, -0.5283, -2.486, 0, 0, 0);
		testMethod(315, -0.0629, -0.5407, -2.486, 0, 0, 0);
		testMethod(320, -0.0657, -0.5531, -2.486, 0, 0, 0);
		testMethod(325, -0.0685, -0.5656, -2.486, 0, 0, 0);
		testMethod(330, -0.0713, -0.578, -2.486, 0, 0, 0);
		testMethod(335, -0.0743, -0.5904, -2.486, 0, 0, 0);
		testMethod(340, -0.0772, -0.6029, -2.486, 0, 0, 0);
		testMethod(345, -0.0803, -0.6153, -2.486, 0, 0, 0);
		testMethod(350, -0.0834, -0.6277, -2.486, 0, 0, 0);
		testMethod(355, -0.0866, -0.6402, -2.486, 0, 0, 0);
		testMethod(360, -0.0898, -0.6526, -2.486, 0, 0, 0);
		testMethod(365, -0.0931, -0.665, -2.486, 0, 0, 0);
		testMethod(370, -0.0964, -0.6774, -2.486, 0, 0, 0);
		testMethod(375, -0.0999, -0.6899, -2.486, 0, 0, 0);
		testMethod(380, -0.1033, -0.7023, -2.486, 0, 0, 0);
		testMethod(385, -0.1069, -0.7147, -2.486, 0, 0, 0);
		testMethod(390, -0.1105, -0.7272, -2.486, 0, 0, 0);
		testMethod(395, -0.1142, -0.7396, -2.486, 0, 0, 0);
		testMethod(400, -0.1179, -0.752, -2.486, 0, 0, 0);
		testMethod(405, -0.1217, -0.7645, -2.486, 0, 0, 0);
		testMethod(410, -0.1255, -0.7769, -2.486, 0, 0, 0);
		testMethod(415, -0.1294, -0.7893, -2.486, 0, 0, 0);
		testMethod(420, -0.1334, -0.8017, -2.486, 0, 0, 0);
		testMethod(425, -0.1375, -0.8142, -2.486, 0, 0, 0);
		testMethod(430, -0.1416, -0.8266, -2.486, 0, 0, 0);
		testMethod(435, -0.1457, -0.839, -2.486, 0, 0, 0);
		testMethod(440, -0.15, -0.8515, -2.486, 0, 0, 0);
		testMethod(445, -0.1542, -0.8639, -2.486, 0, 0, 0);
		testMethod(450, -0.1586, -0.8763, -2.486, 0, 0, 0);
		testMethod(455, -0.163, -0.8888, -2.486, 0, 0, 0);
		testMethod(460, -0.1675, -0.9012, -2.486, 0, 0, 0);
		testMethod(465, -0.172, -0.9136, -2.486, 0, 0, 0);
		testMethod(470, -0.1766, -0.926, -2.486, 0, 0, 0);
		testMethod(475, -0.1813, -0.9385, -2.486, 0, 0, 0);
		testMethod(480, -0.186, -0.9509, -2.486, 0, 0, 0);
		testMethod(485, -0.1908, -0.9633, -2.486, 0, 0, 0);
		testMethod(490, -0.1956, -0.9758, -2.486, 0, 0, 0);
		testMethod(495, -0.2005, -0.9882, -2.486, 0, 0, 0);
		testMethod(500, -0.2055, -1.0006, -2.486, 0, 0, 0);
		testMethod(505, -0.2106, -1.0131, -2.486, 0, 0, 0);
		testMethod(510, -0.2156, -1.0255, -2.486, 0, 0, 0);
		testMethod(515, -0.2208, -1.0379, -2.486, 0, 0, 0);
		testMethod(520, -0.226, -1.0504, -2.486, 0, 0, 0);
		testMethod(525, -0.2313, -1.0628, -2.486, 0, 0, 0);
		testMethod(530, -0.2367, -1.0752, -2.486, 0, 0, 0);
		testMethod(535, -0.2421, -1.0876, -2.486, 0, 0, 0);
		testMethod(540, -0.2475, -1.1001, -2.486, 0, 0, 0);
		testMethod(545, -0.2531, -1.1125, -2.486, 0, 0, 0);
		testMethod(550, -0.2587, -1.1249, -2.486, 0, 0, 0);
		testMethod(555, -0.2643, -1.1374, -2.486, 0, 0, 0);
		testMethod(560, -0.27, -1.1498, -2.486, 0, 0, 0);
		testMethod(565, -0.2758, -1.1622, -2.486, 0, 0, 0);
		testMethod(570, -0.2817, -1.1747, -2.486, 0, 0, 0);
		testMethod(575, -0.2876, -1.1871, -2.486, 0, 0, 0);
		testMethod(580, -0.2935, -1.1995, -2.486, 0, 0, 0);
		testMethod(585, -0.2996, -1.2119, -2.486, 0, 0, 0);
		testMethod(590, -0.3056, -1.2244, -2.486, 0, 0, 0);
		testMethod(595, -0.3118, -1.2368, -2.486, 0, 0, 0);
		testMethod(600, -0.318, -1.2492, -2.486, 0, 0, 0);
		testMethod(605, -0.3243, -1.2617, -2.486, 0, 0, 0);
		testMethod(610, -0.3306, -1.2741, -2.486, 0, 0, 0);
		testMethod(615, -0.337, -1.2865, -2.486, 0, 0, 0);
		testMethod(620, -0.3435, -1.299, -2.486, 0, 0, 0);
		testMethod(625, -0.35, -1.3114, -2.486, 0, 0, 0);
		testMethod(630, -0.3566, -1.3238, -2.486, 0, 0, 0);
		testMethod(635, -0.3633, -1.3362, -2.486, 0, 0, 0);
		testMethod(640, -0.37, -1.3487, -2.486, 0, 0, 0);
		testMethod(645, -0.3767, -1.3611, -2.486, 0, 0, 0);
		testMethod(650, -0.3836, -1.3735, -2.486, 0, 0, 0);
		testMethod(655, -0.3905, -1.386, -2.486, 0, 0, 0);
		testMethod(660, -0.3974, -1.3984, -2.486, 0, 0, 0);
		testMethod(665, -0.4045, -1.4108, -2.486, 0, 0, 0);
		testMethod(670, -0.4115, -1.4233, -2.486, 0, 0, 0);
		testMethod(675, -0.4187, -1.4357, -2.486, 0, 0, 0);
		testMethod(680, -0.4259, -1.4481, -2.486, 0, 0, 0);
		testMethod(685, -0.4332, -1.4605, -2.486, 0, 0, 0);
		testMethod(690, -0.4405, -1.473, -2.486, 0, 0, 0);
		testMethod(695, -0.4479, -1.4854, -2.486, 0, 0, 0);
		testMethod(700, -0.4554, -1.4978, -2.486, 0, 0, 0);
		testMethod(705, -0.4629, -1.5103, -2.486, 0, 0, 0);
		testMethod(710, -0.4705, -1.5227, -2.486, 0, 0, 0);
		testMethod(715, -0.4781, -1.5351, -2.486, 0, 0, 0);
		testMethod(720, -0.4858, -1.5476, -2.486, 0, 0, 0);
		testMethod(725, -0.4936, -1.56, -2.486, 0, 0, 0);
		testMethod(730, -0.5014, -1.5724, -2.486, 0, 0, 0);
		testMethod(735, -0.5093, -1.5848, -2.486, 0, 0, 0);
		testMethod(740, -0.5173, -1.5973, -2.486, 0, 0, 0);
		testMethod(745, -0.5253, -1.6097, -2.486, 0, 0, 0);
		testMethod(750, -0.5334, -1.6221, -2.486, 0, 0, 0);
		testMethod(755, -0.5415, -1.6346, -2.486, 0, 0, 0);
		testMethod(760, -0.5497, -1.647, -2.486, 0, 0, 0);
		testMethod(765, -0.558, -1.6594, -2.486, 0, 0, 0);
		testMethod(770, -0.5663, -1.6719, -2.486, 0, 0, 0);
		testMethod(775, -0.5747, -1.6843, -2.486, 0, 0, 0);
		testMethod(780, -0.5831, -1.6964, -2.4239, 0, 0, 0);
		testMethod(785, -0.5917, -1.7082, -2.3617, 0, 0, 0);
		testMethod(790, -0.6002, -1.7197, -2.2996, 0, 0, 0);
		testMethod(795, -0.6089, -1.7309, -2.2374, 0, 0, 0);
		testMethod(800, -0.6175, -1.7418, -2.1753, 0, 0, 0);
		testMethod(805, -0.6263, -1.7523, -2.1131, 0, 0, 0);
		testMethod(810, -0.6351, -1.7626, -2.051, 0, 0, 0);
		testMethod(815, -0.6439, -1.7725, -1.9888, 0, 0, 0);
		testMethod(820, -0.6528, -1.7822, -1.9267, 0, 0, 0);
		testMethod(825, -0.6617, -1.7915, -1.8645, 0, 0, 0);
		testMethod(830, -0.6707, -1.8005, -1.8024, 0, 0, 0);
		testMethod(835, -0.6797, -1.8092, -1.7402, 0, 0, 0);
		testMethod(840, -0.6888, -1.8176, -1.6781, 0, 0, 0);
		testMethod(845, -0.6979, -1.8257, -1.6159, 0, 0, 0);
		testMethod(850, -0.707, -1.8335, -1.5538, 0, 0, 0);
		testMethod(855, -0.7162, -1.8409, -1.4916, 0, 0, 0);
		testMethod(860, -0.7255, -1.8481, -1.4295, 0, 0, 0);
		testMethod(865, -0.7347, -1.8549, -1.3673, 0, 0, 0);
		testMethod(870, -0.744, -1.8614, -1.3052, 0, 0, 0);
		testMethod(875, -0.7533, -1.8676, -1.243, 0, 0, 0);
		testMethod(880, -0.7627, -1.8735, -1.1809, 0, 0, 0);
		testMethod(885, -0.7721, -1.8791, -1.1187, 0, 0, 0);
		testMethod(890, -0.7815, -1.8844, -1.0566, 0, 0, 0);
		testMethod(895, -0.7909, -1.8894, -0.9944, 0, 0, 0);
		testMethod(900, -0.8004, -1.894, -0.9323, 0, 0, 0);
		testMethod(905, -0.8098, -1.8984, -0.8701, 0, 0, 0);
		testMethod(910, -0.8193, -1.9024, -0.808, 0, 0, 0);
		testMethod(915, -0.8289, -1.9062, -0.7458, 0, 0, 0);
		testMethod(920, -0.8384, -1.9096, -0.6837, 0, 0, 0);
		testMethod(925, -0.848, -1.9127, -0.6215, 0, 0, 0);
		testMethod(930, -0.8575, -1.9155, -0.5594, 0, 0, 0);
		testMethod(935, -0.8671, -1.918, -0.4972, 0, 0, 0);
		testMethod(940, -0.8767, -1.9202, -0.4351, 0, 0, 0);
		testMethod(945, -0.8863, -1.922, -0.3729, 0, 0, 0);
		testMethod(950, -0.8959, -1.9236, -0.3108, 0, 0, 0);
		testMethod(955, -0.9056, -1.9248, -0.2486, 0, 0, 0);
		testMethod(960, -0.9152, -1.9257, -0.1865, 0, 0, 0);
		testMethod(965, -0.9248, -1.9264, -0.1243, 0, 0, 0);
		testMethod(970, -0.9344, -1.9267, -0.0622, 0, 0, 0);
		testMethod(975, -0.9441, -1.9267, -0, 0, 0, 0);
		testMethod(980, -0.9537, -1.9267, -0, 0, 0, 0.0081);
		testMethod(985, -0.9633, -1.9267, -0, 0, 0.0008, 0.1561);
		testMethod(990, -0.973, -1.9267, -0, 0, 0.0026, 0.355);
		testMethod(995, -0.9826, -1.9267, -0, 0, 0.0054, 0.5538);
		testMethod(1000, -0.9922, -1.9267, -0, 0.0001, 0.0091, 0.7527);
		testMethod(1005, -1.0019, -1.9267, -0, 0.0001, 0.0139, 0.9516);
		testMethod(1010, -1.0115, -1.9267, -0, 0.0002, 0.0196, 1.1505);
		testMethod(1015, -1.0211, -1.9267, -0, 0.0003, 0.0264, 1.3494);
		testMethod(1020, -1.0308, -1.9267, -0, 0.0005, 0.0341, 1.5483);
		testMethod(1025, -1.0404, -1.9267, -0, 0.0007, 0.0429, 1.7472);
		testMethod(1030, -1.05, -1.9267, -0, 0.0009, 0.0526, 1.9461);
		testMethod(1035, -1.0597, -1.9267, -0, 0.0012, 0.0633, 2.1449);
		testMethod(1040, -1.0693, -1.9267, -0, 0.0015, 0.075, 2.3438);
		testMethod(1045, -1.0789, -1.9267, -0, 0.0019, 0.0878, 2.5427);
		testMethod(1050, -1.0886, -1.9267, -0, 0.0024, 0.1015, 2.7416);
		testMethod(1055, -1.0982, -1.9267, -0, 0.003, 0.1162, 2.9405);
		testMethod(1060, -1.1078, -1.9267, -0, 0.0036, 0.1319, 3.1394);
		testMethod(1065, -1.1175, -1.9267, -0, 0.0043, 0.1485, 3.3383);
		testMethod(1070, -1.1271, -1.9267, -0, 0.0051, 0.1662, 3.5372);
		testMethod(1075, -1.1367, -1.9267, -0, 0.0059, 0.1849, 3.7361);
		testMethod(1080, -1.1464, -1.9267, -0, 0.0069, 0.2046, 3.9349);
		testMethod(1085, -1.156, -1.9267, -0, 0.008, 0.2253, 4.1338);
		testMethod(1090, -1.1656, -1.9267, -0, 0.0092, 0.2469, 4.3327);
		testMethod(1095, -1.1753, -1.9267, -0, 0.0105, 0.2696, 4.5316);
		testMethod(1100, -1.1849, -1.9267, -0, 0.0119, 0.2932, 4.7305);
		testMethod(1105, -1.1945, -1.9267, -0, 0.0134, 0.3179, 4.9294);
		testMethod(1110, -1.2042, -1.9267, -0, 0.015, 0.3435, 5.1283);
		testMethod(1115, -1.2138, -1.9267, -0, 0.0168, 0.3702, 5.3272);
		testMethod(1120, -1.2234, -1.9267, -0, 0.0188, 0.3978, 5.526);
		testMethod(1125, -1.2331, -1.9267, -0, 0.0208, 0.4264, 5.7249);
		testMethod(1130, -1.2427, -1.9267, -0, 0.023, 0.456, 5.9238);
		testMethod(1135, -1.2523, -1.9267, -0, 0.0254, 0.4866, 6.1227);
		testMethod(1140, -1.262, -1.9267, -0, 0.0279, 0.5183, 6.3216);
		testMethod(1145, -1.2716, -1.9267, -0, 0.0306, 0.5509, 6.5205);
		testMethod(1150, -1.2812, -1.9267, -0, 0.0334, 0.5845, 6.7194);
		testMethod(1155, -1.2909, -1.9267, -0, 0.0364, 0.619, 6.9183);
		testMethod(1160, -1.3005, -1.9267, -0, 0.0396, 0.6546, 7.1172);
		testMethod(1165, -1.3101, -1.9267, -0, 0.043, 0.6912, 7.316);
		testMethod(1170, -1.3198, -1.9267, -0, 0.0465, 0.7281, 7.369);
		testMethod(1175, -1.3294, -1.9267, -0, 0.0502, 0.7637, 7.1234);
		testMethod(1180, -1.339, -1.9267, -0, 0.0541, 0.7983, 6.9246);
		testMethod(1185, -1.3487, -1.9267, -0, 0.0582, 0.8319, 6.7257);
		testMethod(1190, -1.3583, -1.9267, -0, 0.0625, 0.8646, 6.5268);
		testMethod(1195, -1.3679, -1.9267, -0, 0.0669, 0.8962, 6.3279);
		testMethod(1200, -1.3776, -1.9267, -0, 0.0714, 0.9268, 6.129);
		testMethod(1205, -1.3872, -1.9267, -0, 0.0761, 0.9565, 5.9301);
		testMethod(1210, -1.3968, -1.9267, -0, 0.081, 0.9851, 5.7312);
		testMethod(1215, -1.4065, -1.9267, -0, 0.086, 1.0128, 5.5323);
		testMethod(1220, -1.4161, -1.9267, -0, 0.0911, 1.0395, 5.3334);
		testMethod(1225, -1.4257, -1.9267, -0, 0.0964, 1.0652, 5.1346);
		testMethod(1230, -1.4354, -1.9267, -0, 0.1018, 1.0898, 4.9357);
		testMethod(1235, -1.445, -1.9267, -0, 0.1073, 1.1135, 4.7368);
		testMethod(1240, -1.4546, -1.9267, -0, 0.1129, 1.1362, 4.5379);
		testMethod(1245, -1.4643, -1.9267, -0, 0.1186, 1.1579, 4.339);
		testMethod(1250, -1.4739, -1.9267, -0, 0.1245, 1.1786, 4.1401);
		testMethod(1255, -1.4835, -1.9267, -0, 0.1304, 1.1983, 3.9412);
		testMethod(1260, -1.4932, -1.9267, -0, 0.1364, 1.217, 3.7423);
		testMethod(1265, -1.5028, -1.9267, -0, 0.1426, 1.2347, 3.5435);
		testMethod(1270, -1.5124, -1.9267, -0, 0.1488, 1.2515, 3.3446);
		testMethod(1275, -1.5221, -1.9267, -0, 0.1551, 1.2672, 3.1457);
		testMethod(1280, -1.5317, -1.9267, -0, 0.1615, 1.2819, 2.9468);
		testMethod(1285, -1.5413, -1.9267, -0, 0.1679, 1.2957, 2.7479);
		testMethod(1290, -1.551, -1.9267, -0, 0.1744, 1.3084, 2.549);
		testMethod(1295, -1.5606, -1.9267, -0, 0.181, 1.3202, 2.3501);
		testMethod(1300, -1.5702, -1.9267, -0, 0.1876, 1.3309, 2.1512);
		testMethod(1305, -1.5799, -1.9267, -0, 0.1943, 1.3407, 1.9523);
		testMethod(1310, -1.5895, -1.9267, -0, 0.201, 1.3494, 1.7535);
		testMethod(1315, -1.5991, -1.9267, -0, 0.2078, 1.3572, 1.5546);
		testMethod(1320, -1.6088, -1.9267, -0, 0.2146, 1.364, 1.3557);
		testMethod(1325, -1.6184, -1.9267, -0, 0.2214, 1.3698, 1.1568);
		testMethod(1330, -1.628, -1.9267, -0, 0.2283, 1.3746, 0.9579);
		testMethod(1335, -1.6377, -1.9267, -0, 0.2352, 1.3784, 0.759);
		testMethod(1340, -1.6473, -1.9267, -0, 0.2421, 1.3812, 0.5601);
		testMethod(1345, -1.6569, -1.9267, -0, 0.249, 1.383, 0.3612);
		testMethod(1350, -1.6666, -1.9267, -0, 0.2559, 1.3838, 0.1623);
		testMethod(1355, -1.6762, -1.9267, -0, 0.2628, 1.3838, 0.0099);
		testMethod(1360, -1.6858, -1.9267, -0, 0.2697, 1.3838, 0);
		testMethod(1365, -1.6955, -1.9267, -0, 0.2767, 1.3838, 0);
		testMethod(1370, -1.7051, -1.9267, -0, 0.2836, 1.3838, 0);
		testMethod(1375, -1.7147, -1.9267, -0, 0.2905, 1.3838, 0);
		testMethod(1380, -1.7244, -1.9267, -0, 0.2974, 1.3838, 0);
		testMethod(1385, -1.734, -1.9267, -0, 0.3043, 1.3838, 0);
		testMethod(1390, -1.7436, -1.9267, -0, 0.3113, 1.3838, 0);
		testMethod(1395, -1.7533, -1.9267, -0, 0.3182, 1.3838, 0);
		testMethod(1400, -1.7629, -1.9267, -0, 0.3251, 1.3838, 0);
		testMethod(1405, -1.7725, -1.9267, -0, 0.332, 1.3838, 0);
		testMethod(1410, -1.7822, -1.9267, -0, 0.3389, 1.3838, 0);
		testMethod(1415, -1.7918, -1.9267, -0, 0.3458, 1.3838, 0);
		testMethod(1420, -1.8014, -1.9267, -0, 0.3528, 1.3838, 0);
		testMethod(1425, -1.8111, -1.9267, -0, 0.3597, 1.3838, 0);
		testMethod(1430, -1.8207, -1.9267, -0, 0.3666, 1.3838, 0);
		testMethod(1435, -1.8303, -1.9267, -0, 0.3735, 1.3838, 0);
		testMethod(1440, -1.84, -1.9267, -0, 0.3804, 1.3838, 0);
		testMethod(1445, -1.8496, -1.9267, -0, 0.3874, 1.3838, 0);
		testMethod(1450, -1.8592, -1.9267, -0, 0.3943, 1.3838, 0);
		testMethod(1455, -1.8689, -1.9267, -0, 0.4012, 1.3838, 0);
		testMethod(1460, -1.8785, -1.9267, -0, 0.4081, 1.3838, 0);
		testMethod(1465, -1.8881, -1.9267, -0, 0.415, 1.3838, 0);
		testMethod(1470, -1.8978, -1.9267, -0, 0.422, 1.3838, 0);
		testMethod(1475, -1.9074, -1.9267, -0, 0.4289, 1.3838, 0);
		testMethod(1480, -1.917, -1.9267, -0, 0.4358, 1.3838, 0);
		testMethod(1485, -1.9267, -1.9267, -0, 0.4427, 1.3838, 0);
		testMethod(1490, -1.9363, -1.9267, -0, 0.4496, 1.3838, 0);
		testMethod(1495, -1.9459, -1.9267, -0, 0.4566, 1.3838, 0);
		testMethod(1500, -1.9556, -1.9267, -0, 0.4635, 1.3838, 0);
		testMethod(1505, -1.9652, -1.9267, -0, 0.4704, 1.3838, 0);
		testMethod(1510, -1.9748, -1.9267, -0, 0.4773, 1.3838, 0);
		testMethod(1515, -1.9845, -1.9267, -0, 0.4842, 1.3838, 0);
		testMethod(1520, -1.9941, -1.9267, -0, 0.4911, 1.3838, 0);
		testMethod(1525, -2.0037, -1.9267, -0, 0.4981, 1.3838, 0);
		testMethod(1530, -2.0134, -1.9267, -0, 0.505, 1.3838, 0);
		testMethod(1535, -2.023, -1.9267, -0, 0.5119, 1.3838, 0);
		testMethod(1540, -2.0326, -1.9267, -0, 0.5188, 1.3838, 0);
		testMethod(1545, -2.0423, -1.9267, -0, 0.5257, 1.3838, 0);
		testMethod(1550, -2.0519, -1.9267, -0, 0.5327, 1.3838, 0);
		testMethod(1555, -2.0615, -1.9267, -0, 0.5396, 1.3838, 0);
		testMethod(1560, -2.0712, -1.9267, -0, 0.5465, 1.3838, 0);
		testMethod(1565, -2.0808, -1.9267, -0, 0.5534, 1.3838, 0);
		testMethod(1570, -2.0904, -1.9267, -0, 0.5603, 1.3838, 0);
		testMethod(1575, -2.1001, -1.9267, -0, 0.5673, 1.3838, 0);
		testMethod(1580, -2.1097, -1.9267, -0, 0.5742, 1.3838, 0);
		testMethod(1585, -2.1193, -1.9267, -0, 0.5811, 1.3838, 0);
		testMethod(1590, -2.129, -1.9267, -0, 0.588, 1.3838, 0);
		testMethod(1595, -2.1386, -1.9267, -0, 0.5949, 1.3838, 0);
		testMethod(1600, -2.1482, -1.9267, -0, 0.6019, 1.3838, 0);
		testMethod(1605, -2.1579, -1.9267, -0, 0.6088, 1.3838, 0);
		testMethod(1610, -2.1675, -1.9267, -0, 0.6157, 1.3838, 0);
		testMethod(1615, -2.1771, -1.9267, -0, 0.6226, 1.3838, 0);
		testMethod(1620, -2.1868, -1.9267, -0, 0.6295, 1.3838, 0);
		testMethod(1625, -2.1964, -1.9267, -0, 0.6365, 1.3838, 0);
		testMethod(1630, -2.206, -1.9267, -0, 0.6434, 1.3838, 0);
		testMethod(1635, -2.2157, -1.9267, -0, 0.6503, 1.3838, 0);
		testMethod(1640, -2.2253, -1.9267, -0, 0.6572, 1.3838, 0);
		testMethod(1645, -2.2349, -1.9267, -0, 0.6641, 1.3838, 0);
		testMethod(1650, -2.2446, -1.9267, -0, 0.671, 1.3838, 0);
		testMethod(1655, -2.2542, -1.9267, -0, 0.678, 1.3838, 0);
		testMethod(1660, -2.2638, -1.9267, -0, 0.6849, 1.3838, 0);
		testMethod(1665, -2.2735, -1.9267, -0, 0.6918, 1.3838, 0);
		testMethod(1670, -2.2831, -1.9267, -0, 0.6987, 1.3838, 0);
		testMethod(1675, -2.2927, -1.9267, -0, 0.7056, 1.3838, 0);
		testMethod(1680, -2.3024, -1.9267, -0, 0.7126, 1.3838, 0);
		testMethod(1685, -2.312, -1.9267, -0, 0.7195, 1.3838, 0);
		testMethod(1690, -2.3216, -1.9267, -0, 0.7264, 1.3838, 0);
		testMethod(1695, -2.3313, -1.9267, -0, 0.7333, 1.3838, 0);
		testMethod(1700, -2.3409, -1.9267, -0, 0.7402, 1.3838, 0);
		testMethod(1705, -2.3505, -1.9267, -0, 0.7472, 1.3838, 0);
		testMethod(1710, -2.3602, -1.9267, -0, 0.7541, 1.3838, 0);
		testMethod(1715, -2.3698, -1.9267, -0, 0.761, 1.3838, 0);
		testMethod(1720, -2.3794, -1.9267, -0, 0.7679, 1.3838, 0);
		testMethod(1725, -2.3891, -1.9267, -0, 0.7748, 1.3838, 0);
		testMethod(1730, -2.3987, -1.9267, -0, 0.7818, 1.3838, 0);
		testMethod(1735, -2.4083, -1.9267, -0, 0.7887, 1.3838, 0);
		testMethod(1740, -2.418, -1.9267, -0, 0.7956, 1.3834, -0.0911);
		testMethod(1745, -2.4276, -1.9267, -0, 0.8025, 1.3819, -0.2898);
		testMethod(1750, -2.4372, -1.9267, -0, 0.8094, 1.3795, -0.4887);
		testMethod(1755, -2.4469, -1.9267, -0, 0.8163, 1.376, -0.6875);
		testMethod(1760, -2.4565, -1.9267, -0, 0.8232, 1.3716, -0.8864);
		testMethod(1765, -2.4661, -1.9267, -0, 0.83, 1.3662, -1.0853);
		testMethod(1770, -2.4758, -1.9267, -0, 0.8368, 1.3598, -1.2842);
		testMethod(1775, -2.4854, -1.9267, -0, 0.8436, 1.3523, -1.4831);
		testMethod(1780, -2.495, -1.9267, -0, 0.8503, 1.3439, -1.682);
		testMethod(1785, -2.5047, -1.9267, -0, 0.857, 1.3345, -1.8809);
		testMethod(1790, -2.5143, -1.9267, -0, 0.8637, 1.3241, -2.0798);
		testMethod(1795, -2.5239, -1.9267, -0, 0.8703, 1.3127, -2.2787);
		testMethod(1800, -2.5336, -1.9267, -0, 0.8768, 1.3004, -2.4775);
		testMethod(1805, -2.5432, -1.9267, -0, 0.8833, 1.287, -2.6764);
		testMethod(1810, -2.5528, -1.9267, -0, 0.8897, 1.2726, -2.8753);
		testMethod(1815, -2.5625, -1.9267, -0, 0.896, 1.2572, -3.0742);
		testMethod(1820, -2.5721, -1.9267, -0, 0.9023, 1.2409, -3.2731);
		testMethod(1825, -2.5817, -1.9267, -0, 0.9084, 1.2235, -3.472);
		testMethod(1830, -2.5914, -1.9267, -0, 0.9145, 1.2051, -3.6709);
		testMethod(1835, -2.601, -1.9267, -0, 0.9205, 1.1858, -3.8698);
		testMethod(1840, -2.6107, -1.9267, -0, 0.9263, 1.1655, -4.0686);
		testMethod(1845, -2.6203, -1.9267, -0, 0.9321, 1.1441, -4.2675);
		testMethod(1850, -2.6299, -1.9267, -0, 0.9378, 1.1218, -4.4664);
		testMethod(1855, -2.6396, -1.9267, -0, 0.9433, 1.0985, -4.6653);
		testMethod(1860, -2.6492, -1.9267, -0, 0.9488, 1.0741, -4.8642);
		testMethod(1865, -2.6588, -1.9267, -0, 0.9541, 1.0488, -5.0631);
		testMethod(1870, -2.6685, -1.9267, -0, 0.9593, 1.0225, -5.262);
		testMethod(1875, -2.6781, -1.9267, -0, 0.9643, 0.9952, -5.4609);
		testMethod(1880, -2.6877, -1.9267, -0, 0.9692, 0.9669, -5.6598);
		testMethod(1885, -2.6974, -1.9267, -0, 0.974, 0.9376, -5.8586);
		testMethod(1890, -2.707, -1.9267, -0, 0.9786, 0.9073, -6.0575);
		testMethod(1895, -2.7166, -1.9267, -0, 0.983, 0.876, -6.2564);
		testMethod(1900, -2.7263, -1.9267, -0, 0.9873, 0.8438, -6.4553);
		testMethod(1905, -2.7359, -1.9267, -0, 0.9915, 0.8105, -6.6542);
		testMethod(1910, -2.7455, -1.9267, -0, 0.9954, 0.7762, -6.8531);
		testMethod(1915, -2.7552, -1.9267, -0, 0.9992, 0.741, -7.052);
		testMethod(1920, -2.7648, -1.9267, -0, 1.0028, 0.7047, -7.2509);
		testMethod(1925, -2.7744, -1.9267, -0, 1.0063, 0.6677, -7.4107);
		testMethod(1930, -2.7841, -1.9267, -0, 1.0095, 0.6317, -7.1886);
		testMethod(1935, -2.7937, -1.9267, -0, 1.0126, 0.5968, -6.9897);
		testMethod(1940, -2.8033, -1.9267, -0, 1.0155, 0.5628, -6.7908);
		testMethod(1945, -2.813, -1.9267, -0, 1.0182, 0.5299, -6.592);
		testMethod(1950, -2.8226, -1.9267, -0, 1.0208, 0.4979, -6.3931);
		testMethod(1955, -2.8322, -1.9267, -0, 1.0232, 0.4669, -6.1942);
		testMethod(1960, -2.8419, -1.9267, -0, 1.0255, 0.4369, -5.9953);
		testMethod(1965, -2.8515, -1.9267, -0, 1.0276, 0.408, -5.7964);
		testMethod(1970, -2.8611, -1.9267, -0, 1.0295, 0.38, -5.5975);
		testMethod(1975, -2.8708, -1.9267, -0, 1.0314, 0.353, -5.3986);
		testMethod(1980, -2.8804, -1.9267, -0, 1.0331, 0.327, -5.1997);
		testMethod(1985, -2.89, -1.9267, -0, 1.0347, 0.302, -5.0009);
		testMethod(1990, -2.8997, -1.9267, -0, 1.0361, 0.278, -4.802);
		testMethod(1995, -2.9093, -1.9267, -0, 1.0374, 0.255, -4.6031);
		testMethod(2000, -2.9189, -1.9267, -0, 1.0387, 0.2329, -4.4042);
		testMethod(2005, -2.9286, -1.9267, -0, 1.0398, 0.2119, -4.2053);
		testMethod(2010, -2.9382, -1.9267, -0, 1.0408, 0.1919, -4.0064);
		testMethod(2015, -2.9478, -1.9267, -0, 1.0417, 0.1728, -3.8075);
		testMethod(2020, -2.9575, -1.9267, -0, 1.0425, 0.1548, -3.6086);
		testMethod(2025, -2.9671, -1.9267, -0, 1.0432, 0.1377, -3.4097);
		testMethod(2030, -2.9767, -1.9267, -0, 1.0439, 0.1217, -3.2109);
		testMethod(2035, -2.9864, -1.9267, -0, 1.0445, 0.1066, -3.012);
		testMethod(2040, -2.996, -1.9267, -0, 1.045, 0.0926, -2.8131);
		testMethod(2045, -3.0056, -1.9267, -0, 1.0454, 0.0795, -2.6142);
		testMethod(2050, -3.0153, -1.9267, -0, 1.0457, 0.0674, -2.4153);
		testMethod(2055, -3.0249, -1.9267, -0, 1.0461, 0.0563, -2.2164);
		testMethod(2060, -3.0345, -1.9267, -0, 1.0463, 0.0462, -2.0175);
		testMethod(2065, -3.0442, -1.9267, -0, 1.0465, 0.0372, -1.8186);
		testMethod(2070, -3.0538, -1.9267, -0, 1.0467, 0.0291, -1.6198);
		testMethod(2075, -3.0634, -1.9267, -0, 1.0468, 0.0219, -1.4209);
		testMethod(2080, -3.0731, -1.9267, -0, 1.0469, 0.0158, -1.222);
		testMethod(2085, -3.0827, -1.9267, -0, 1.047, 0.0107, -1.0231);
		testMethod(2090, -3.0923, -1.9267, -0, 1.047, 0.0066, -0.8242);
		testMethod(2095, -3.102, -1.9267, -0, 1.047, 0.0035, -0.6253);
		testMethod(2100, -3.1116, -1.9267, -0, 1.0471, 0.0013, -0.4264);
		testMethod(2105, -3.1212, -1.9267, -0, 1.0471, 0.0002, -0.2275);
		testMethod(2110, -3.1309, -1.9267, -0, 1.0471, 0, -0.0412);
		testMethod(2115, -3.1405, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2120, -3.1501, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2125, -3.1598, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2130, -3.1694, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2135, -3.179, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2140, -3.1887, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2145, -3.1983, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2150, -3.2079, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2155, -3.2176, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2160, -3.2272, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2165, -3.2368, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2170, -3.2465, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2175, -3.2561, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2180, -3.2657, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2185, -3.2754, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2190, -3.285, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2195, -3.2946, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2200, -3.3043, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2205, -3.3139, -1.9267, -0, 1.0471, 0, 0);
		testMethod(2210, -3.3235, -1.9264, 0.0622, 1.0471, 0, 0);
		testMethod(2215, -3.3332, -1.9257, 0.1243, 1.0471, 0, 0);
		testMethod(2220, -3.3428, -1.9248, 0.1865, 1.0471, 0, 0);
		testMethod(2225, -3.3524, -1.9236, 0.2486, 1.0471, 0, 0);
		testMethod(2230, -3.362, -1.922, 0.3108, 1.0471, 0, 0);
		testMethod(2235, -3.3716, -1.9202, 0.3729, 1.0471, 0, 0);
		testMethod(2240, -3.3812, -1.918, 0.4351, 1.0471, 0, 0);
		testMethod(2245, -3.3908, -1.9155, 0.4972, 1.0471, 0, 0);
		testMethod(2250, -3.4004, -1.9127, 0.5594, 1.0471, 0, 0);
		testMethod(2255, -3.4099, -1.9096, 0.6215, 1.0471, 0, 0);
		testMethod(2260, -3.4195, -1.9062, 0.6837, 1.0471, 0, 0);
		testMethod(2265, -3.429, -1.9024, 0.7458, 1.0471, 0, 0);
		testMethod(2270, -3.4385, -1.8984, 0.808, 1.0471, 0, 0);
		testMethod(2275, -3.448, -1.894, 0.8701, 1.0471, 0, 0);
		testMethod(2280, -3.4574, -1.8894, 0.9323, 1.0471, 0, 0);
		testMethod(2285, -3.4669, -1.8844, 0.9944, 1.0471, 0, 0);
		testMethod(2290, -3.4763, -1.8791, 1.0566, 1.0471, 0, 0);
		testMethod(2295, -3.4857, -1.8735, 1.1187, 1.0471, 0, 0);
		testMethod(2300, -3.495, -1.8676, 1.1809, 1.0471, 0, 0);
		testMethod(2305, -3.5043, -1.8614, 1.243, 1.0471, 0, 0);
		testMethod(2310, -3.5136, -1.8549, 1.3052, 1.0471, 0, 0);
		testMethod(2315, -3.5229, -1.8481, 1.3673, 1.0471, 0, 0);
		testMethod(2320, -3.5321, -1.8409, 1.4295, 1.0471, 0, 0);
		testMethod(2325, -3.5413, -1.8335, 1.4916, 1.0471, 0, 0);
		testMethod(2330, -3.5504, -1.8257, 1.5538, 1.0471, 0, 0);
		testMethod(2335, -3.5595, -1.8176, 1.6159, 1.0471, 0, 0);
		testMethod(2340, -3.5686, -1.8092, 1.6781, 1.0471, 0, 0);
		testMethod(2345, -3.5776, -1.8005, 1.7402, 1.0471, 0, 0);
		testMethod(2350, -3.5866, -1.7915, 1.8024, 1.0471, 0, 0);
		testMethod(2355, -3.5955, -1.7822, 1.8645, 1.0471, 0, 0);
		testMethod(2360, -3.6044, -1.7725, 1.9267, 1.0471, 0, 0);
		testMethod(2365, -3.6133, -1.7626, 1.9888, 1.0471, 0, 0);
		testMethod(2370, -3.6221, -1.7523, 2.051, 1.0471, 0, 0);
		testMethod(2375, -3.6308, -1.7418, 2.1131, 1.0471, 0, 0);
		testMethod(2380, -3.6395, -1.7309, 2.1753, 1.0471, 0, 0);
		testMethod(2385, -3.6481, -1.7197, 2.2374, 1.0471, 0, 0);
		testMethod(2390, -3.6567, -1.7082, 2.2996, 1.0471, 0, 0);
		testMethod(2395, -3.6652, -1.6964, 2.3617, 1.0471, 0, 0);
		testMethod(2400, -3.6736, -1.6843, 2.4239, 1.0471, 0, 0);
		testMethod(2405, -3.682, -1.6719, 2.486, 1.0471, 0, 0);
		testMethod(2410, -3.6904, -1.6594, 2.486, 1.0471, 0, 0);
		testMethod(2415, -3.6986, -1.647, 2.486, 1.0471, 0, 0);
		testMethod(2420, -3.7068, -1.6346, 2.486, 1.0471, 0, 0);
		testMethod(2425, -3.715, -1.6221, 2.486, 1.0471, 0, 0);
		testMethod(2430, -3.723, -1.6097, 2.486, 1.0471, 0, 0);
		testMethod(2435, -3.7311, -1.5973, 2.486, 1.0471, 0, 0);
		testMethod(2440, -3.739, -1.5848, 2.486, 1.0471, 0, 0);
		testMethod(2445, -3.7469, -1.5724, 2.486, 1.0471, 0, 0);
		testMethod(2450, -3.7547, -1.56, 2.486, 1.0471, 0, 0);
		testMethod(2455, -3.7625, -1.5476, 2.486, 1.0471, 0, 0);
		testMethod(2460, -3.7702, -1.5351, 2.486, 1.0471, 0, 0);
		testMethod(2465, -3.7779, -1.5227, 2.486, 1.0471, 0, 0);
		testMethod(2470, -3.7854, -1.5103, 2.486, 1.0471, 0, 0);
		testMethod(2475, -3.793, -1.4978, 2.486, 1.0471, 0, 0);
		testMethod(2480, -3.8004, -1.4854, 2.486, 1.0471, 0, 0);
		testMethod(2485, -3.8078, -1.473, 2.486, 1.0471, 0, 0);
		testMethod(2490, -3.8152, -1.4605, 2.486, 1.0471, 0, 0);
		testMethod(2495, -3.8224, -1.4481, 2.486, 1.0471, 0, 0);
		testMethod(2500, -3.8296, -1.4357, 2.486, 1.0471, 0, 0);
		testMethod(2505, -3.8368, -1.4233, 2.486, 1.0471, 0, 0);
		testMethod(2510, -3.8439, -1.4108, 2.486, 1.0471, 0, 0);
		testMethod(2515, -3.8509, -1.3984, 2.486, 1.0471, 0, 0);
		testMethod(2520, -3.8578, -1.386, 2.486, 1.0471, 0, 0);
		testMethod(2525, -3.8647, -1.3735, 2.486, 1.0471, 0, 0);
		testMethod(2530, -3.8716, -1.3611, 2.486, 1.0471, 0, 0);
		testMethod(2535, -3.8784, -1.3487, 2.486, 1.0471, 0, 0);
		testMethod(2540, -3.8851, -1.3362, 2.486, 1.0471, 0, 0);
		testMethod(2545, -3.8917, -1.3238, 2.486, 1.0471, 0, 0);
		testMethod(2550, -3.8983, -1.3114, 2.486, 1.0471, 0, 0);
		testMethod(2555, -3.9048, -1.299, 2.486, 1.0471, 0, 0);
		testMethod(2560, -3.9113, -1.2865, 2.486, 1.0471, 0, 0);
		testMethod(2565, -3.9177, -1.2741, 2.486, 1.0471, 0, 0);
		testMethod(2570, -3.924, -1.2617, 2.486, 1.0471, 0, 0);
		testMethod(2575, -3.9303, -1.2492, 2.486, 1.0471, 0, 0);
		testMethod(2580, -3.9365, -1.2368, 2.486, 1.0471, 0, 0);
		testMethod(2585, -3.9427, -1.2244, 2.486, 1.0471, 0, 0);
		testMethod(2590, -3.9488, -1.2119, 2.486, 1.0471, 0, 0);
		testMethod(2595, -3.9548, -1.1995, 2.486, 1.0471, 0, 0);
		testMethod(2600, -3.9608, -1.1871, 2.486, 1.0471, 0, 0);
		testMethod(2605, -3.9667, -1.1747, 2.486, 1.0471, 0, 0);
		testMethod(2610, -3.9725, -1.1622, 2.486, 1.0471, 0, 0);
		testMethod(2615, -3.9783, -1.1498, 2.486, 1.0471, 0, 0);
		testMethod(2620, -3.984, -1.1374, 2.486, 1.0471, 0, 0);
		testMethod(2625, -3.9897, -1.1249, 2.486, 1.0471, 0, 0);
		testMethod(2630, -3.9953, -1.1125, 2.486, 1.0471, 0, 0);
		testMethod(2635, -4.0008, -1.1001, 2.486, 1.0471, 0, 0);
		testMethod(2640, -4.0063, -1.0876, 2.486, 1.0471, 0, 0);
		testMethod(2645, -4.0117, -1.0752, 2.486, 1.0471, 0, 0);
		testMethod(2650, -4.017, -1.0628, 2.486, 1.0471, 0, 0);
		testMethod(2655, -4.0223, -1.0504, 2.486, 1.0471, 0, 0);
		testMethod(2660, -4.0275, -1.0379, 2.486, 1.0471, 0, 0);
		testMethod(2665, -4.0327, -1.0255, 2.486, 1.0471, 0, 0);
		testMethod(2670, -4.0378, -1.0131, 2.486, 1.0471, 0, 0);
		testMethod(2675, -4.0428, -1.0006, 2.486, 1.0471, 0, 0);
		testMethod(2680, -4.0478, -0.9882, 2.486, 1.0471, 0, 0);
		testMethod(2685, -4.0527, -0.9758, 2.486, 1.0471, 0, 0);
		testMethod(2690, -4.0575, -0.9633, 2.486, 1.0471, 0, 0);
		testMethod(2695, -4.0623, -0.9509, 2.486, 1.0471, 0, 0);
		testMethod(2700, -4.067, -0.9385, 2.486, 1.0471, 0, 0);
		testMethod(2705, -4.0717, -0.926, 2.486, 1.0471, 0, 0);
		testMethod(2710, -4.0763, -0.9136, 2.486, 1.0471, 0, 0);
		testMethod(2715, -4.0808, -0.9012, 2.486, 1.0471, 0, 0);
		testMethod(2720, -4.0853, -0.8888, 2.486, 1.0471, 0, 0);
		testMethod(2725, -4.0897, -0.8763, 2.486, 1.0471, 0, 0);
		testMethod(2730, -4.0941, -0.8639, 2.486, 1.0471, 0, 0);
		testMethod(2735, -4.0984, -0.8515, 2.486, 1.0471, 0, 0);
		testMethod(2740, -4.1026, -0.839, 2.486, 1.0471, 0, 0);
		testMethod(2745, -4.1068, -0.8266, 2.486, 1.0471, 0, 0);
		testMethod(2750, -4.1109, -0.8142, 2.486, 1.0471, 0, 0);
		testMethod(2755, -4.1149, -0.8017, 2.486, 1.0471, 0, 0);
		testMethod(2760, -4.1189, -0.7893, 2.486, 1.0471, 0, 0);
		testMethod(2765, -4.1228, -0.7769, 2.486, 1.0471, 0, 0);
		testMethod(2770, -4.1267, -0.7645, 2.486, 1.0471, 0, 0);
		testMethod(2775, -4.1304, -0.752, 2.486, 1.0471, 0, 0);
		testMethod(2780, -4.1342, -0.7396, 2.486, 1.0471, 0, 0);
		testMethod(2785, -4.1378, -0.7272, 2.486, 1.0471, 0, 0);
		testMethod(2790, -4.1414, -0.7147, 2.486, 1.0471, 0, 0);
		testMethod(2795, -4.145, -0.7023, 2.486, 1.0471, 0, 0);
		testMethod(2800, -4.1485, -0.6899, 2.486, 1.0471, 0, 0);
		testMethod(2805, -4.1519, -0.6774, 2.486, 1.0471, 0, 0);
		testMethod(2810, -4.1552, -0.665, 2.486, 1.0471, 0, 0);
		testMethod(2815, -4.1585, -0.6526, 2.486, 1.0471, 0, 0);
		testMethod(2820, -4.1618, -0.6402, 2.486, 1.0471, 0, 0);
		testMethod(2825, -4.1649, -0.6277, 2.486, 1.0471, 0, 0);
		testMethod(2830, -4.168, -0.6153, 2.486, 1.0471, 0, 0);
		testMethod(2835, -4.1711, -0.6029, 2.486, 1.0471, 0, 0);
		testMethod(2840, -4.1741, -0.5904, 2.486, 1.0471, 0, 0);
		testMethod(2845, -4.177, -0.578, 2.486, 1.0471, 0, 0);
		testMethod(2850, -4.1799, -0.5656, 2.486, 1.0471, 0, 0);
		testMethod(2855, -4.1826, -0.5531, 2.486, 1.0471, 0, 0);
		testMethod(2860, -4.1854, -0.5407, 2.486, 1.0471, 0, 0);
		testMethod(2865, -4.1881, -0.5283, 2.486, 1.0471, 0, 0);
		testMethod(2870, -4.1907, -0.5159, 2.486, 1.0471, 0, 0);
		testMethod(2875, -4.1932, -0.5034, 2.486, 1.0471, 0, 0);
		testMethod(2880, -4.1957, -0.491, 2.486, 1.0471, 0, 0);
		testMethod(2885, -4.1981, -0.4786, 2.486, 1.0471, 0, 0);
		testMethod(2890, -4.2005, -0.4661, 2.486, 1.0471, 0, 0);
		testMethod(2895, -4.2028, -0.4537, 2.486, 1.0471, 0, 0);
		testMethod(2900, -4.205, -0.4413, 2.486, 1.0471, 0, 0);
		testMethod(2905, -4.2072, -0.4288, 2.486, 1.0471, 0, 0);
		testMethod(2910, -4.2093, -0.4164, 2.486, 1.0471, 0, 0);
		testMethod(2915, -4.2114, -0.404, 2.486, 1.0471, 0, 0);
		testMethod(2920, -4.2134, -0.3916, 2.486, 1.0471, 0, 0);
		testMethod(2925, -4.2153, -0.3791, 2.486, 1.0471, 0, 0);
		testMethod(2930, -4.2171, -0.3667, 2.486, 1.0471, 0, 0);
		testMethod(2935, -4.2189, -0.3543, 2.486, 1.0471, 0, 0);
		testMethod(2940, -4.2207, -0.3418, 2.486, 1.0471, 0, 0);
		testMethod(2945, -4.2224, -0.3294, 2.486, 1.0471, 0, 0);
		testMethod(2950, -4.224, -0.317, 2.486, 1.0471, 0, 0);
		testMethod(2955, -4.2255, -0.3045, 2.486, 1.0471, 0, 0);
		testMethod(2960, -4.227, -0.2921, 2.486, 1.0471, 0, 0);
		testMethod(2965, -4.2285, -0.2797, 2.486, 1.0471, 0, 0);
		testMethod(2970, -4.2298, -0.2672, 2.486, 1.0471, 0, 0);
		testMethod(2975, -4.2311, -0.2548, 2.486, 1.0471, 0, 0);
		testMethod(2980, -4.2324, -0.2424, 2.486, 1.0471, 0, 0);
		testMethod(2985, -4.2336, -0.2303, 2.4239, 1.0471, 0, 0);
		testMethod(2990, -4.2347, -0.2185, 2.3617, 1.0471, 0, 0);
		testMethod(2995, -4.2357, -0.207, 2.2996, 1.0471, 0, 0);
		testMethod(3000, -4.2367, -0.1958, 2.2374, 1.0471, 0, 0);
		testMethod(3005, -4.2377, -0.1849, 2.1753, 1.0471, 0, 0);
		testMethod(3010, -4.2386, -0.1743, 2.1131, 1.0471, 0, 0);
		testMethod(3015, -4.2394, -0.1641, 2.051, 1.0471, 0, 0);
		testMethod(3020, -4.2402, -0.1541, 1.9888, 1.0471, 0, 0);
		testMethod(3025, -4.241, -0.1445, 1.9267, 1.0471, 0, 0);
		testMethod(3030, -4.2417, -0.1352, 1.8645, 1.0471, 0, 0);
		testMethod(3035, -4.2423, -0.1262, 1.8024, 1.0471, 0, 0);
		testMethod(3040, -4.2429, -0.1175, 1.7402, 1.0471, 0, 0);
		testMethod(3045, -4.2435, -0.1091, 1.6781, 1.0471, 0, 0);
		testMethod(3050, -4.244, -0.101, 1.6159, 1.0471, 0, 0);
		testMethod(3055, -4.2445, -0.0932, 1.5538, 1.0471, 0, 0);
		testMethod(3060, -4.245, -0.0858, 1.4916, 1.0471, 0, 0);
		testMethod(3065, -4.2454, -0.0786, 1.4295, 1.0471, 0, 0);
		testMethod(3070, -4.2458, -0.0718, 1.3673, 1.0471, 0, 0);
		testMethod(3075, -4.2461, -0.0653, 1.3052, 1.0471, 0, 0);
		testMethod(3080, -4.2464, -0.059, 1.243, 1.0471, 0, 0);
		testMethod(3085, -4.2467, -0.0531, 1.1809, 1.0471, 0, 0);
		testMethod(3090, -4.2469, -0.0475, 1.1187, 1.0471, 0, 0);
		testMethod(3095, -4.2472, -0.0423, 1.0566, 1.0471, 0, 0);
		testMethod(3100, -4.2474, -0.0373, 0.9944, 1.0471, 0, 0);
		testMethod(3105, -4.2475, -0.0326, 0.9323, 1.0471, 0, 0);
		testMethod(3110, -4.2477, -0.0283, 0.8701, 1.0471, 0, 0);
		testMethod(3115, -4.2478, -0.0242, 0.808, 1.0471, 0, 0);
		testMethod(3120, -4.2479, -0.0205, 0.7458, 1.0471, 0, 0);
		testMethod(3125, -4.248, -0.0171, 0.6837, 1.0471, 0, 0);
		testMethod(3130, -4.2481, -0.014, 0.6215, 1.0471, 0, 0);
		testMethod(3135, -4.2482, -0.0112, 0.5594, 1.0471, 0, 0);
		testMethod(3140, -4.2482, -0.0087, 0.4972, 1.0471, 0, 0);
		testMethod(3145, -4.2483, -0.0065, 0.4351, 1.0471, 0, 0);
		testMethod(3150, -4.2483, -0.0047, 0.3729, 1.0471, 0, 0);
		testMethod(3155, -4.2483, -0.0031, 0.3108, 1.0471, 0, 0);
		testMethod(3160, -4.2483, -0.0019, 0.2486, 1.0471, 0, 0);
		testMethod(3165, -4.2483, -0.0009, 0.1865, 1.0471, 0, 0);
		testMethod(3170, -4.2483, -0.0003, 0.1243, 1.0471, 0, 0);
		testMethod(3175, -4.2483, -0, 0.0622, 1.0471, 0, 0);
		testMethod(3180, -4.2483, -0, -0, 1.0471, 0, 0);
		testMethod(3180, -4.2483, -0, -0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}