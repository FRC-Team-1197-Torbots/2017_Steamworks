package org.usfirst.frc.team1197.robot;

public class TwoGearPos1 extends TorTrajectory {

	public TwoGearPos1() {
		super(-4.255, 0);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.0991, 0, 0, 0);
		testMethod(10, -0, -0.0015, -0.1982, 0, 0, 0);
		testMethod(15, -0, -0.003, -0.2974, 0, 0, 0);
		testMethod(20, -0, -0.005, -0.3965, 0, 0, 0);
		testMethod(25, -0.0001, -0.0074, -0.4956, 0, 0, 0);
		testMethod(30, -0.0001, -0.0104, -0.5947, 0, 0, 0);
		testMethod(35, -0.0002, -0.0139, -0.6938, 0, 0, 0);
		testMethod(40, -0.0003, -0.0178, -0.7929, 0, 0, 0);
		testMethod(45, -0.0004, -0.0223, -0.8921, 0, 0, 0);
		testMethod(50, -0.0005, -0.0273, -0.9912, 0, 0, 0);
		testMethod(55, -0.0006, -0.0327, -1.0903, 0, 0, 0);
		testMethod(60, -0.0008, -0.0387, -1.1894, 0, 0, 0);
		testMethod(65, -0.001, -0.0451, -1.2885, 0, 0, 0);
		testMethod(70, -0.0013, -0.052, -1.3876, 0, 0, 0);
		testMethod(75, -0.0015, -0.0595, -1.4868, 0, 0, 0);
		testMethod(80, -0.0019, -0.0674, -1.5859, 0, 0, 0);
		testMethod(85, -0.0022, -0.0758, -1.685, 0, 0, 0);
		testMethod(90, -0.0026, -0.0847, -1.7841, 0, 0, 0);
		testMethod(95, -0.0031, -0.0942, -1.8832, 0, 0, 0);
		testMethod(100, -0.0036, -0.1041, -1.9823, 0, 0, 0);
		testMethod(105, -0.0041, -0.1145, -2.0815, 0, 0, 0);
		testMethod(110, -0.0047, -0.1254, -2.1806, 0, 0, 0);
		testMethod(115, -0.0054, -0.1368, -2.2797, 0, 0, 0);
		testMethod(120, -0.0061, -0.1487, -2.3788, 0, 0, 0);
		testMethod(125, -0.0068, -0.1611, -2.4779, 0, 0, 0);
		testMethod(130, -0.0077, -0.174, -2.577, 0, 0, 0);
		testMethod(135, -0.0086, -0.1873, -2.6762, 0, 0, 0);
		testMethod(140, -0.0096, -0.2012, -2.7753, 0, 0, 0);
		testMethod(145, -0.0106, -0.2156, -2.8744, 0, 0, 0);
		testMethod(150, -0.0117, -0.2304, -2.9735, 0, 0, 0);
		testMethod(155, -0.0129, -0.2458, -3.0726, 0, 0, 0);
		testMethod(160, -0.0142, -0.2617, -3.1717, 0, 0, 0);
		testMethod(165, -0.0155, -0.278, -3.2709, 0, 0, 0);
		testMethod(170, -0.017, -0.2949, -3.37, 0, 0, 0);
		testMethod(175, -0.0185, -0.3122, -3.4691, 0, 0, 0);
		testMethod(180, -0.0201, -0.3296, -3.4691, 0, 0, 0);
		testMethod(185, -0.0218, -0.3469, -3.4691, 0, 0, 0);
		testMethod(190, -0.0235, -0.3643, -3.4691, 0, 0, 0);
		testMethod(195, -0.0254, -0.3816, -3.4691, 0, 0, 0);
		testMethod(200, -0.0274, -0.3989, -3.4691, 0, 0, 0);
		testMethod(205, -0.0294, -0.4163, -3.4691, 0, 0, 0);
		testMethod(210, -0.0315, -0.4336, -3.4691, 0, 0, 0);
		testMethod(215, -0.0337, -0.451, -3.4691, 0, 0, 0);
		testMethod(220, -0.036, -0.4683, -3.4691, 0, 0, 0);
		testMethod(225, -0.0384, -0.4857, -3.4691, 0, 0, 0);
		testMethod(230, -0.0409, -0.503, -3.4691, 0, 0, 0);
		testMethod(235, -0.0435, -0.5204, -3.4691, 0, 0, 0);
		testMethod(240, -0.0461, -0.5377, -3.4691, 0, 0, 0);
		testMethod(245, -0.0488, -0.5551, -3.4691, 0, 0, 0);
		testMethod(250, -0.0516, -0.5724, -3.4691, 0, 0, 0);
		testMethod(255, -0.0546, -0.5897, -3.4691, 0, 0, 0);
		testMethod(260, -0.0575, -0.6071, -3.4691, 0, 0, 0);
		testMethod(265, -0.0606, -0.6244, -3.4691, 0, 0, 0);
		testMethod(270, -0.0638, -0.6418, -3.4691, 0, 0, 0);
		testMethod(275, -0.067, -0.6591, -3.4691, 0, 0, 0);
		testMethod(280, -0.0704, -0.6765, -3.4691, 0, 0, 0);
		testMethod(285, -0.0738, -0.6938, -3.4691, 0, 0, 0);
		testMethod(290, -0.0773, -0.7112, -3.4691, 0, 0, 0);
		testMethod(295, -0.0809, -0.7285, -3.4691, 0, 0, 0);
		testMethod(300, -0.0846, -0.7459, -3.4691, 0, 0, 0);
		testMethod(305, -0.0884, -0.7632, -3.4691, 0, 0, 0);
		testMethod(310, -0.0922, -0.7805, -3.4691, 0, 0, 0);
		testMethod(315, -0.0962, -0.7979, -3.4691, 0, 0, 0);
		testMethod(320, -0.1002, -0.8152, -3.4691, 0, 0, 0);
		testMethod(325, -0.1043, -0.8326, -3.4691, 0, 0, 0);
		testMethod(330, -0.1085, -0.8499, -3.4691, 0, 0, 0);
		testMethod(335, -0.1128, -0.8673, -3.4691, 0, 0, 0);
		testMethod(340, -0.1172, -0.8846, -3.4691, 0, 0, 0);
		testMethod(345, -0.1217, -0.902, -3.4691, 0, 0, 0);
		testMethod(350, -0.1262, -0.9193, -3.4691, 0, 0, 0);
		testMethod(355, -0.1309, -0.9367, -3.4691, 0, 0, 0);
		testMethod(360, -0.1356, -0.954, -3.4691, 0, 0, 0);
		testMethod(365, -0.1404, -0.9713, -3.4691, 0, 0, 0);
		testMethod(370, -0.1453, -0.9887, -3.4691, 0, 0, 0);
		testMethod(375, -0.1503, -1.006, -3.4691, 0, 0, 0);
		testMethod(380, -0.1554, -1.0234, -3.4691, -0, -0, -0.0003);
		testMethod(385, -0.1605, -1.0407, -3.4691, -0, -0.0003, -0.0605);
		testMethod(390, -0.1658, -1.0581, -3.4691, -0, -0.0012, -0.172);
		testMethod(395, -0.1711, -1.0754, -3.4691, -0, -0.0026, -0.2944);
		testMethod(400, -0.1765, -1.0928, -3.4691, -0, -0.0048, -0.4281);
		testMethod(405, -0.182, -1.1101, -3.4691, -0.0001, -0.0076, -0.5737);
		testMethod(410, -0.1876, -1.1275, -3.4691, -0.0001, -0.0113, -0.7315);
		testMethod(415, -0.1933, -1.1448, -3.4691, -0.0002, -0.0158, -0.902);
		testMethod(420, -0.1991, -1.1621, -3.4691, -0.0003, -0.0212, -1.0858);
		testMethod(425, -0.2049, -1.1795, -3.4691, -0.0004, -0.0277, -1.2832);
		testMethod(430, -0.2109, -1.1968, -3.4691, -0.0005, -0.0351, -1.4948);
		testMethod(435, -0.2169, -1.2142, -3.4691, -0.0007, -0.0437, -1.7212);
		testMethod(440, -0.223, -1.2315, -3.4691, -0.001, -0.0536, -1.9627);
		testMethod(445, -0.2292, -1.2489, -3.4691, -0.0013, -0.0647, -2.2199);
		testMethod(450, -0.2355, -1.2662, -3.4691, -0.0016, -0.0771, -2.4934);
		testMethod(455, -0.2419, -1.2836, -3.4691, -0.0021, -0.091, -2.7836);
		testMethod(460, -0.2483, -1.3009, -3.4691, -0.0025, -0.1065, -3.0911);
		testMethod(465, -0.2549, -1.3183, -3.4691, -0.0031, -0.1236, -3.4164);
		testMethod(470, -0.2615, -1.3356, -3.4691, -0.0038, -0.1424, -3.7602);
		testMethod(475, -0.2682, -1.3529, -3.4691, -0.0045, -0.163, -4.1228);
		testMethod(480, -0.2751, -1.3703, -3.4691, -0.0054, -0.1855, -4.505);
		testMethod(485, -0.282, -1.3876, -3.4691, -0.0064, -0.21, -4.9073);
		testMethod(490, -0.2889, -1.405, -3.4691, -0.0075, -0.2367, -5.3303);
		testMethod(495, -0.296, -1.4223, -3.4691, -0.0088, -0.2656, -5.7745);
		testMethod(500, -0.3032, -1.4397, -3.4691, -0.0102, -0.2968, -6.2406);
		testMethod(505, -0.3104, -1.457, -3.4691, -0.0118, -0.3304, -6.7291);
		testMethod(510, -0.3177, -1.4744, -3.4691, -0.0135, -0.3666, -7.2406);
		testMethod(515, -0.3251, -1.4917, -3.4691, -0.0154, -0.4055, -7.7759);
		testMethod(520, -0.3326, -1.5091, -3.4691, -0.0176, -0.4472, -8.3355);
		testMethod(525, -0.3402, -1.5264, -3.4691, -0.0199, -0.4918, -8.92);
		testMethod(530, -0.3479, -1.5437, -3.4691, -0.0225, -0.5394, -9.53);
		testMethod(535, -0.3557, -1.5611, -3.4691, -0.0253, -0.5903, -10.1663);
		testMethod(540, -0.3635, -1.5784, -3.4691, -0.0284, -0.6444, -10.8295);
		testMethod(545, -0.3715, -1.5958, -3.4691, -0.0317, -0.702, -11.5202);
		testMethod(550, -0.3795, -1.6131, -3.4691, -0.0354, -0.7632, -12.2391);
		testMethod(555, -0.3876, -1.6305, -3.4691, -0.0394, -0.8281, -12.9869);
		testMethod(560, -0.3958, -1.6473, -3.37, -0.0437, -0.8967, -13.7085);
		testMethod(565, -0.4041, -1.6637, -3.2709, -0.0484, -0.9689, -14.4448);
		testMethod(570, -0.4124, -1.6795, -3.1717, -0.0534, -1.0449, -15.1951);
		testMethod(575, -0.4208, -1.6949, -3.0726, -0.0588, -1.1247, -15.9581);
		testMethod(580, -0.4294, -1.7098, -2.9735, -0.0646, -1.2083, -16.7327);
		testMethod(585, -0.4379, -1.7241, -2.8744, -0.0709, -1.2959, -17.5179);
		testMethod(590, -0.4466, -1.738, -2.7753, -0.0776, -1.3878, -18.3722);
		testMethod(595, -0.4553, -1.7514, -2.6762, -0.0848, -1.4815, -18.7441);
		testMethod(600, -0.4641, -1.7643, -2.577, -0.0924, -1.5767, -19.0353);
		testMethod(605, -0.473, -1.7767, -2.4779, -0.1006, -1.6732, -19.3102);
		testMethod(610, -0.4819, -1.7886, -2.3788, -0.1092, -1.7711, -19.5686);
		testMethod(615, -0.4909, -1.8, -2.2797, -0.1183, -1.8701, -19.81);
		testMethod(620, -0.4999, -1.8109, -2.1806, -0.1279, -1.9703, -20.0342);
		testMethod(625, -0.509, -1.8213, -2.0815, -0.138, -2.0715, -20.241);
		testMethod(630, -0.5181, -1.8312, -1.9823, -0.1486, -2.1737, -20.4299);
		testMethod(635, -0.5273, -1.8406, -1.8832, -0.1597, -2.2768, -20.6374);
		testMethod(640, -0.5365, -1.8495, -1.7841, -0.1713, -2.3777, -20.1751);
		testMethod(645, -0.5458, -1.8579, -1.685, -0.1835, -2.4762, -19.7032);
		testMethod(650, -0.5551, -1.8659, -1.5859, -0.1961, -2.5722, -19.1974);
		testMethod(655, -0.5644, -1.8733, -1.4868, -0.2092, -2.6655, -18.6589);
		testMethod(660, -0.5738, -1.8802, -1.3876, -0.2228, -2.756, -18.089);
		testMethod(665, -0.5832, -1.8867, -1.2885, -0.2368, -2.8434, -17.489);
		testMethod(670, -0.5927, -1.8926, -1.1894, -0.2512, -2.9277, -16.8603);
		testMethod(675, -0.6021, -1.8981, -1.0903, -0.266, -3.0087, -16.2043);
		testMethod(680, -0.6116, -1.903, -0.9912, -0.2813, -3.0863, -15.5224);
		testMethod(685, -0.6212, -1.9075, -0.8921, -0.2969, -3.1604, -14.8163);
		testMethod(690, -0.6307, -1.9115, -0.7929, -0.3129, -3.2309, -14.0873);
		testMethod(695, -0.6403, -1.9149, -0.6938, -0.3292, -3.2975, -13.3372);
		testMethod(700, -0.6499, -1.9179, -0.5947, -0.3458, -3.3604, -12.5674);
		testMethod(705, -0.6595, -1.9204, -0.4956, -0.3628, -3.4193, -11.7796);
		testMethod(710, -0.6691, -1.9224, -0.3965, -0.38, -3.4742, -10.9755);
		testMethod(715, -0.6787, -1.9239, -0.2974, -0.3975, -3.5249, -10.1567);
		testMethod(720, -0.6883, -1.9248, -0.1982, -0.4153, -3.5716, -9.3249);
		testMethod(725, -0.6979, -1.9253, -0.0991, -0.4332, -3.614, -8.4818);
		testMethod(730, -0.7076, -1.9253, -0, -0.4514, -3.6521, -7.6291);
		testMethod(735, -0.7172, -1.9253, -0, -0.4697, -3.6869, -6.9593);
		testMethod(740, -0.7268, -1.9253, -0, -0.4882, -3.7184, -6.2894);
		testMethod(745, -0.7364, -1.9253, -0, -0.5069, -3.7465, -5.6196);
		testMethod(750, -0.7461, -1.9253, -0, -0.5257, -3.7712, -4.9497);
		testMethod(755, -0.7557, -1.9253, -0, -0.5446, -3.7926, -4.2799);
		testMethod(760, -0.7653, -1.9253, -0, -0.5636, -3.8107, -3.61);
		testMethod(765, -0.775, -1.9253, -0, -0.5827, -3.8254, -2.9402);
		testMethod(770, -0.7846, -1.9253, -0, -0.6019, -3.8367, -2.2703);
		testMethod(775, -0.7942, -1.9253, -0, -0.6211, -3.8447, -1.6005);
		testMethod(780, -0.8038, -1.9253, -0, -0.6403, -3.8494, -0.9306);
		testMethod(785, -0.8135, -1.9253, -0, -0.6596, -3.8507, -0.2649);
		testMethod(790, -0.8231, -1.9253, -0, -0.6788, -3.8507, 0);
		testMethod(795, -0.8327, -1.9253, -0, -0.6981, -3.8507, 0);
		testMethod(800, -0.8423, -1.9253, -0, -0.7173, -3.8507, 0);
		testMethod(805, -0.852, -1.9253, -0, -0.7366, -3.8507, 0);
		testMethod(810, -0.8616, -1.9253, -0, -0.7558, -3.8507, 0);
		testMethod(815, -0.8712, -1.9253, -0, -0.7751, -3.8507, 0);
		testMethod(820, -0.8808, -1.9253, -0, -0.7943, -3.8507, 0);
		testMethod(825, -0.8905, -1.9253, -0, -0.8136, -3.8507, 0);
		testMethod(830, -0.9001, -1.9253, -0, -0.8328, -3.8507, 0);
		testMethod(835, -0.9097, -1.9253, -0, -0.8521, -3.8507, 0);
		testMethod(840, -0.9194, -1.9253, -0, -0.8714, -3.8507, 0);
		testMethod(845, -0.929, -1.9253, -0, -0.8906, -3.8507, 0);
		testMethod(850, -0.9386, -1.9253, -0, -0.9099, -3.8507, 0);
		testMethod(855, -0.9482, -1.9253, -0, -0.9291, -3.8495, 0.2359);
		testMethod(860, -0.9579, -1.9253, -0, -0.9484, -3.845, 0.8971);
		testMethod(865, -0.9675, -1.9253, -0, -0.9676, -3.8372, 1.567);
		testMethod(870, -0.9771, -1.9253, -0, -0.9867, -3.826, 2.2368);
		testMethod(875, -0.9867, -1.9253, -0, -1.0058, -3.8115, 2.9067);
		testMethod(880, -0.9964, -1.9253, -0, -1.0248, -3.7936, 3.5765);
		testMethod(885, -1.006, -1.9253, -0, -1.0437, -3.7724, 4.2464);
		testMethod(890, -1.0156, -1.9253, -0, -1.0625, -3.7478, 4.9162);
		testMethod(895, -1.0252, -1.9253, -0, -1.0812, -3.7198, 5.5861);
		testMethod(900, -1.0349, -1.9253, -0, -1.0997, -3.6886, 6.2559);
		testMethod(905, -1.0445, -1.9253, -0, -1.1181, -3.6539, 6.9258);
		testMethod(910, -1.0541, -1.9253, -0, -1.1363, -3.616, 7.5956);
		testMethod(915, -1.0638, -1.9253, -0, -1.1543, -3.5746, 8.2655);
		testMethod(920, -1.0734, -1.9253, -0, -1.172, -3.53, 8.9354);
		testMethod(925, -1.083, -1.9253, -0, -1.1895, -3.4819, 9.6052);
		testMethod(930, -1.0926, -1.9253, -0, -1.2068, -3.4306, 10.2751);
		testMethod(935, -1.1023, -1.9253, -0, -1.2238, -3.3758, 10.9449);
		testMethod(940, -1.1119, -1.9253, -0, -1.2406, -3.3178, 11.6148);
		testMethod(945, -1.1215, -1.9253, -0, -1.257, -3.2563, 12.2846);
		testMethod(950, -1.1311, -1.9253, -0, -1.2731, -3.1916, 12.9545);
		testMethod(955, -1.1408, -1.9253, -0, -1.2889, -3.1234, 13.6243);
		testMethod(960, -1.1504, -1.9253, -0, -1.3044, -3.052, 14.2942);
		testMethod(965, -1.16, -1.9253, -0, -1.3194, -2.9771, 14.964);
		testMethod(970, -1.1696, -1.9253, -0, -1.3341, -2.899, 15.6339);
		testMethod(975, -1.1793, -1.9253, -0, -1.3484, -2.8175, 16.3037);
		testMethod(980, -1.1889, -1.9253, -0, -1.3623, -2.7326, 16.9736);
		testMethod(985, -1.1985, -1.9253, -0, -1.3757, -2.6444, 17.6435);
		testMethod(990, -1.2082, -1.9253, -0, -1.3887, -2.5528, 18.3133);
		testMethod(995, -1.2178, -1.9253, -0, -1.4013, -2.4579, 18.9832);
		testMethod(1000, -1.2274, -1.9253, -0, -1.4133, -2.3596, 19.653);
		testMethod(1005, -1.237, -1.9253, -0, -1.4249, -2.2586, 20.2104);
		testMethod(1010, -1.2467, -1.9253, -0, -1.4359, -2.1578, 20.1469);
		testMethod(1015, -1.2563, -1.9253, -0, -1.4464, -2.0571, 20.1469);
		testMethod(1020, -1.2659, -1.9253, -0, -1.4565, -1.9564, 20.1469);
		testMethod(1025, -1.2755, -1.9253, -0, -1.466, -1.8556, 20.1469);
		testMethod(1030, -1.2852, -1.9253, -0, -1.475, -1.7549, 20.1469);
		testMethod(1035, -1.2948, -1.9253, -0, -1.4835, -1.6542, 20.1469);
		testMethod(1040, -1.3044, -1.9253, -0, -1.4916, -1.5534, 20.1469);
		testMethod(1045, -1.314, -1.9253, -0, -1.4991, -1.4528, 20.1259);
		testMethod(1050, -1.3237, -1.9253, -0, -1.5061, -1.3558, 19.3949);
		testMethod(1055, -1.3333, -1.9253, -0, -1.5126, -1.2622, 18.725);
		testMethod(1060, -1.3429, -1.9253, -0, -1.5187, -1.1719, 18.0552);
		testMethod(1065, -1.3526, -1.9253, -0, -1.5244, -1.085, 17.3853);
		testMethod(1070, -1.3622, -1.9253, -0, -1.5296, -1.0014, 16.7155);
		testMethod(1075, -1.3718, -1.9253, -0, -1.5344, -0.9212, 16.0456);
		testMethod(1080, -1.3814, -1.9253, -0, -1.5388, -0.8443, 15.3758);
		testMethod(1085, -1.3911, -1.9253, -0, -1.5428, -0.7708, 14.7059);
		testMethod(1090, -1.4007, -1.9253, -0, -1.5465, -0.7006, 14.0361);
		testMethod(1095, -1.4103, -1.9253, -0, -1.5499, -0.6338, 13.3662);
		testMethod(1100, -1.4199, -1.9253, -0, -1.5529, -0.5703, 12.6963);
		testMethod(1105, -1.4296, -1.9253, -0, -1.5556, -0.5102, 12.0265);
		testMethod(1110, -1.4392, -1.9253, -0, -1.558, -0.4534, 11.3566);
		testMethod(1115, -1.4488, -1.9253, -0, -1.5601, -0.3999, 10.6868);
		testMethod(1120, -1.4584, -1.9253, -0, -1.562, -0.3499, 10.0169);
		testMethod(1125, -1.4681, -1.9253, -0, -1.5636, -0.3031, 9.3471);
		testMethod(1130, -1.4777, -1.9253, -0, -1.565, -0.2597, 8.6772);
		testMethod(1135, -1.4873, -1.9253, -0, -1.5662, -0.2197, 8.0074);
		testMethod(1140, -1.497, -1.9253, -0, -1.5672, -0.183, 7.3375);
		testMethod(1145, -1.5066, -1.9253, -0, -1.568, -0.1497, 6.6677);
		testMethod(1150, -1.5162, -1.9253, -0, -1.5687, -0.1197, 5.9978);
		testMethod(1155, -1.5258, -1.9253, -0, -1.5692, -0.093, 5.328);
		testMethod(1160, -1.5355, -1.9253, -0, -1.5696, -0.0698, 4.6581);
		testMethod(1165, -1.5451, -1.9253, -0, -1.5699, -0.0498, 3.9883);
		testMethod(1170, -1.5547, -1.9253, -0, -1.5702, -0.0332, 3.3184);
		testMethod(1175, -1.5643, -1.9253, -0, -1.5703, -0.02, 2.6485);
		testMethod(1180, -1.574, -1.9253, -0, -1.5704, -0.0101, 1.9787);
		testMethod(1185, -1.5836, -1.9253, -0, -1.5704, -0.0035, 1.3088);
		testMethod(1190, -1.5932, -1.9253, -0, -1.5704, -0.0003, 0.639);
		testMethod(1195, -1.6028, -1.9253, -0, -1.5704, 0, 0.069);
		testMethod(1200, -1.6125, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1205, -1.6221, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1210, -1.6317, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1215, -1.6414, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1220, -1.651, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1225, -1.6606, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1230, -1.6702, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1235, -1.6799, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1240, -1.6895, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1245, -1.6991, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1250, -1.7087, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1255, -1.7184, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1260, -1.728, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1265, -1.7376, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1270, -1.7472, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1275, -1.7569, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1280, -1.7665, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1285, -1.7761, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1290, -1.7858, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1295, -1.7954, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1300, -1.805, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1305, -1.8146, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1310, -1.8243, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1315, -1.8339, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1320, -1.8435, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1325, -1.8531, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1330, -1.8628, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1335, -1.8724, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1340, -1.882, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1345, -1.8917, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1350, -1.9013, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1355, -1.9109, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1360, -1.9205, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1365, -1.9302, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1370, -1.9398, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1375, -1.9494, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1380, -1.959, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1385, -1.9687, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1390, -1.9783, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1395, -1.9879, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1400, -1.9975, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1405, -2.0072, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1410, -2.0168, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1415, -2.0264, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1420, -2.0361, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1425, -2.0457, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1430, -2.0553, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1435, -2.0649, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1440, -2.0746, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1445, -2.0842, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1450, -2.0938, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1455, -2.1034, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1460, -2.1131, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1465, -2.1227, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1470, -2.1323, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1475, -2.1419, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1480, -2.1516, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1485, -2.1612, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1490, -2.1708, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1495, -2.1805, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1500, -2.1901, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1505, -2.1997, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1510, -2.2093, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1515, -2.219, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1520, -2.2286, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1525, -2.2382, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1530, -2.2478, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1535, -2.2575, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1540, -2.2671, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1545, -2.2767, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1550, -2.2863, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1555, -2.296, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1560, -2.3056, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1565, -2.3152, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1570, -2.3249, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1575, -2.3345, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1580, -2.3441, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1585, -2.3537, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1590, -2.3634, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1595, -2.373, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1600, -2.3826, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1605, -2.3922, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1610, -2.4019, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1615, -2.4115, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1620, -2.4211, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1625, -2.4307, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1630, -2.4404, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1635, -2.45, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1640, -2.4596, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1645, -2.4693, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1650, -2.4789, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1655, -2.4885, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1660, -2.4981, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1665, -2.5078, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1670, -2.5174, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1675, -2.527, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1680, -2.5366, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1685, -2.5463, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1690, -2.5559, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1695, -2.5655, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1700, -2.5751, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1705, -2.5848, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1710, -2.5944, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1715, -2.604, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1720, -2.6137, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1725, -2.6233, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1730, -2.6329, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1735, -2.6425, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1740, -2.6522, -1.9253, -0, -1.5704, 0, 0);
		testMethod(1745, -2.6618, -1.9253, -0, -1.5704, 0.0003, 0.0678);
		testMethod(1750, -2.6714, -1.9253, -0, -1.5704, 0.0035, 0.6362);
		testMethod(1755, -2.681, -1.9253, -0, -1.5704, 0.0101, 1.3061);
		testMethod(1760, -2.6907, -1.9253, -0, -1.5703, 0.0199, 1.976);
		testMethod(1765, -2.7003, -1.9253, -0, -1.5702, 0.0332, 2.6458);
		testMethod(1770, -2.7099, -1.9253, -0, -1.5699, 0.0497, 3.3157);
		testMethod(1775, -2.7195, -1.9253, -0, -1.5697, 0.0697, 3.9855);
		testMethod(1780, -2.7292, -1.9253, -0, -1.5692, 0.0929, 4.6554);
		testMethod(1785, -2.7388, -1.9253, -0, -1.5687, 0.1196, 5.3252);
		testMethod(1790, -2.7484, -1.9253, -0, -1.568, 0.1495, 5.9951);
		testMethod(1795, -2.7581, -1.9253, -0, -1.5672, 0.1829, 6.6649);
		testMethod(1800, -2.7677, -1.9253, -0, -1.5662, 0.2195, 7.3348);
		testMethod(1805, -2.7773, -1.9253, -0, -1.565, 0.2596, 8.0046);
		testMethod(1810, -2.7869, -1.9253, -0, -1.5636, 0.3029, 8.6745);
		testMethod(1815, -2.7966, -1.9253, -0, -1.562, 0.3497, 9.3443);
		testMethod(1820, -2.8062, -1.9253, -0, -1.5601, 0.3997, 10.0142);
		testMethod(1825, -2.8158, -1.9253, -0, -1.558, 0.4532, 10.6841);
		testMethod(1830, -2.8254, -1.9253, -0, -1.5556, 0.5099, 11.3539);
		testMethod(1835, -2.8351, -1.9253, -0, -1.5529, 0.57, 12.0238);
		testMethod(1840, -2.8447, -1.9253, -0, -1.5499, 0.6335, 12.6936);
		testMethod(1845, -2.8543, -1.9253, -0, -1.5465, 0.7003, 13.3635);
		testMethod(1850, -2.8639, -1.9253, -0, -1.5429, 0.7705, 14.0333);
		testMethod(1855, -2.8736, -1.9253, -0, -1.5388, 0.844, 14.7032);
		testMethod(1860, -2.8832, -1.9253, -0, -1.5344, 0.9209, 15.373);
		testMethod(1865, -2.8928, -1.9253, -0, -1.5296, 1.0011, 16.0429);
		testMethod(1870, -2.9025, -1.9253, -0, -1.5244, 1.0847, 16.7127);
		testMethod(1875, -2.9121, -1.9253, -0, -1.5188, 1.1716, 17.3826);
		testMethod(1880, -2.9217, -1.9253, -0, -1.5127, 1.2618, 18.0524);
		testMethod(1885, -2.9313, -1.9253, -0, -1.5061, 1.3554, 18.7223);
		testMethod(1890, -2.941, -1.9253, -0, -1.4991, 1.4524, 19.3921);
		testMethod(1895, -2.9506, -1.9253, -0, -1.4916, 1.5529, 20.0977);
		testMethod(1900, -2.9602, -1.9253, -0, -1.4836, 1.6536, 20.1469);
		testMethod(1905, -2.9698, -1.9253, -0, -1.4751, 1.7544, 20.1469);
		testMethod(1910, -2.9795, -1.9253, -0, -1.466, 1.8551, 20.1469);
		testMethod(1915, -2.9891, -1.9253, -0, -1.4565, 1.9558, 20.1469);
		testMethod(1920, -2.9987, -1.9253, -0, -1.4465, 2.0566, 20.1469);
		testMethod(1925, -3.0084, -1.9253, -0, -1.4359, 2.1573, 20.1469);
		testMethod(1930, -3.018, -1.9253, -0, -1.4249, 2.258, 20.1469);
		testMethod(1935, -3.0276, -1.9253, -0, -1.4134, 2.3592, 20.2375);
		testMethod(1940, -3.0372, -1.9253, -0, -1.4013, 2.4575, 19.6557);
		testMethod(1945, -3.0469, -1.9253, -0, -1.3888, 2.5524, 18.9859);
		testMethod(1950, -3.0565, -1.9253, -0, -1.3758, 2.644, 18.316);
		testMethod(1955, -3.0661, -1.9253, -0, -1.3624, 2.7322, 17.6462);
		testMethod(1960, -3.0757, -1.9253, -0, -1.3485, 2.8171, 16.9763);
		testMethod(1965, -3.0854, -1.9253, -0, -1.3342, 2.8986, 16.3065);
		testMethod(1970, -3.095, -1.9253, -0, -1.3195, 2.9768, 15.6366);
		testMethod(1975, -3.1046, -1.9253, -0, -1.3044, 3.0517, 14.9668);
		testMethod(1980, -3.1142, -1.9253, -0, -1.289, 3.1232, 14.2969);
		testMethod(1985, -3.1239, -1.9253, -0, -1.2732, 3.1913, 13.6271);
		testMethod(1990, -3.1335, -1.9253, -0, -1.2571, 3.2561, 12.9572);
		testMethod(1995, -3.1431, -1.9253, -0, -1.2407, 3.3175, 12.2874);
		testMethod(2000, -3.1528, -1.9253, -0, -1.2239, 3.3756, 11.6175);
		testMethod(2005, -3.1624, -1.9253, -0, -1.2069, 3.4303, 10.9477);
		testMethod(2010, -3.172, -1.9253, -0, -1.1896, 3.4817, 10.2778);
		testMethod(2015, -3.1816, -1.9253, -0, -1.1721, 3.5298, 9.6079);
		testMethod(2020, -3.1913, -1.9253, -0, -1.1543, 3.5745, 8.9381);
		testMethod(2025, -3.2009, -1.9253, -0, -1.1364, 3.6158, 8.2682);
		testMethod(2030, -3.2105, -1.9253, -0, -1.1182, 3.6538, 7.5984);
		testMethod(2035, -3.2201, -1.9253, -0, -1.0998, 3.6884, 6.9285);
		testMethod(2040, -3.2298, -1.9253, -0, -1.0813, 3.7197, 6.2587);
		testMethod(2045, -3.2394, -1.9253, -0, -1.0626, 3.7477, 5.5888);
		testMethod(2050, -3.249, -1.9253, -0, -1.0438, 3.7723, 4.919);
		testMethod(2055, -3.2586, -1.9253, -0, -1.0249, 3.7935, 4.2491);
		testMethod(2060, -3.2683, -1.9253, -0, -1.0059, 3.8114, 3.5793);
		testMethod(2065, -3.2779, -1.9253, -0, -0.9868, 3.826, 2.9094);
		testMethod(2070, -3.2875, -1.9253, -0, -0.9676, 3.8371, 2.2396);
		testMethod(2075, -3.2972, -1.9253, -0, -0.9484, 3.845, 1.5697);
		testMethod(2080, -3.3068, -1.9253, -0, -0.9292, 3.8495, 0.8998);
		testMethod(2085, -3.3164, -1.9253, -0, -0.9099, 3.8507, 0.2382);
		testMethod(2090, -3.326, -1.9253, -0, -0.8907, 3.8507, 0);
		testMethod(2095, -3.3357, -1.9253, -0, -0.8714, 3.8507, 0);
		testMethod(2100, -3.3453, -1.9253, -0, -0.8522, 3.8507, 0);
		testMethod(2105, -3.3549, -1.9253, -0, -0.8329, 3.8507, 0);
		testMethod(2110, -3.3645, -1.9253, -0, -0.8137, 3.8507, 0);
		testMethod(2115, -3.3742, -1.9253, -0, -0.7944, 3.8507, 0);
		testMethod(2120, -3.3838, -1.9253, -0, -0.7752, 3.8507, 0);
		testMethod(2125, -3.3934, -1.9253, -0, -0.7559, 3.8507, 0);
		testMethod(2130, -3.403, -1.9253, -0, -0.7367, 3.8507, 0);
		testMethod(2135, -3.4127, -1.9253, -0, -0.7174, 3.8507, 0);
		testMethod(2140, -3.4223, -1.9253, -0, -0.6982, 3.8507, 0);
		testMethod(2145, -3.4319, -1.9253, -0, -0.6789, 3.8507, 0);
		testMethod(2150, -3.4416, -1.9253, -0, -0.6597, 3.8507, 0);
		testMethod(2155, -3.4512, -1.9253, -0, -0.6404, 3.8494, -0.2624);
		testMethod(2160, -3.4608, -1.9253, -0, -0.6212, 3.8447, -0.9279);
		testMethod(2165, -3.4704, -1.9253, -0, -0.602, 3.8367, -1.5977);
		testMethod(2170, -3.4801, -1.9253, -0, -0.5828, 3.8254, -2.2676);
		testMethod(2175, -3.4897, -1.9253, -0, -0.5637, 3.8107, -2.9374);
		testMethod(2180, -3.4993, -1.9253, -0, -0.5447, 3.7927, -3.6073);
		testMethod(2185, -3.5089, -1.9253, -0, -0.5258, 3.7713, -4.2771);
		testMethod(2190, -3.5186, -1.9253, -0, -0.507, 3.7466, -4.947);
		testMethod(2195, -3.5282, -1.9253, -0, -0.4883, 3.7185, -5.6168);
		testMethod(2200, -3.5378, -1.9253, -0, -0.4698, 3.687, -6.2867);
		testMethod(2205, -3.5474, -1.9253, -0, -0.4515, 3.6523, -6.9566);
		testMethod(2210, -3.5571, -1.9253, -0, -0.4333, 3.6141, -7.6264);
		testMethod(2215, -3.5667, -1.9248, 0.0991, -0.4153, 3.5717, -8.4791);
		testMethod(2220, -3.5763, -1.9239, 0.1982, -0.3976, 3.5251, -9.3222);
		testMethod(2225, -3.5859, -1.9224, 0.2974, -0.3801, 3.4744, -10.154);
		testMethod(2230, -3.5955, -1.9204, 0.3965, -0.3629, 3.4195, -10.9728);
		testMethod(2235, -3.6051, -1.9179, 0.4956, -0.3459, 3.3606, -11.7769);
		testMethod(2240, -3.6147, -1.9149, 0.5947, -0.3293, 3.2978, -12.5647);
		testMethod(2245, -3.6243, -1.9115, 0.6938, -0.3129, 3.2311, -13.3345);
		testMethod(2250, -3.6338, -1.9075, 0.7929, -0.2969, 3.1607, -14.0847);
		testMethod(2255, -3.6434, -1.903, 0.8921, -0.2813, 3.0866, -14.8137);
		testMethod(2260, -3.6529, -1.8981, 0.9912, -0.2661, 3.009, -15.5199);
		testMethod(2265, -3.6623, -1.8926, 1.0903, -0.2512, 2.928, -16.2018);
		testMethod(2270, -3.6718, -1.8867, 1.1894, -0.2368, 2.8437, -16.8578);
		testMethod(2275, -3.6812, -1.8802, 1.2885, -0.2228, 2.7563, -17.4866);
		testMethod(2280, -3.6906, -1.8733, 1.3876, -0.2093, 2.6659, -18.0866);
		testMethod(2285, -3.6999, -1.8659, 1.4868, -0.1962, 2.5726, -18.6566);
		testMethod(2290, -3.7092, -1.8579, 1.5859, -0.1835, 2.4766, -19.1951);
		testMethod(2295, -3.7185, -1.8495, 1.685, -0.1714, 2.3781, -19.701);
		testMethod(2300, -3.7277, -1.8406, 1.7841, -0.1598, 2.2772, -20.1729);
		testMethod(2305, -3.7369, -1.8312, 1.8832, -0.1486, 2.1742, -20.6114);
		testMethod(2310, -3.7461, -1.8213, 1.9823, -0.138, 2.072, -20.4305);
		testMethod(2315, -3.7551, -1.8109, 2.0815, -0.1279, 1.9708, -20.2416);
		testMethod(2320, -3.7642, -1.8, 2.1806, -0.1183, 1.8706, -20.0349);
		testMethod(2325, -3.7731, -1.7886, 2.2797, -0.1092, 1.7716, -19.8106);
		testMethod(2330, -3.782, -1.7767, 2.3788, -0.1006, 1.6737, -19.5692);
		testMethod(2335, -3.7909, -1.7643, 2.4779, -0.0925, 1.5772, -19.3109);
		testMethod(2340, -3.7997, -1.7514, 2.577, -0.0848, 1.482, -19.036);
		testMethod(2345, -3.8084, -1.738, 2.6762, -0.0776, 1.3883, -18.7449);
		testMethod(2350, -3.8171, -1.7241, 2.7753, -0.0709, 1.2963, -18.3983);
		testMethod(2355, -3.8256, -1.7098, 2.8744, -0.0647, 1.2087, -17.5207);
		testMethod(2360, -3.8342, -1.6949, 2.9735, -0.0588, 1.125, -16.7355);
		testMethod(2365, -3.8426, -1.6795, 3.0726, -0.0534, 1.0452, -15.9608);
		testMethod(2370, -3.851, -1.6637, 3.1717, -0.0484, 0.9692, -15.1977);
		testMethod(2375, -3.8592, -1.6473, 3.2709, -0.0437, 0.897, -14.4475);
		testMethod(2380, -3.8674, -1.6305, 3.37, -0.0394, 0.8284, -13.711);
		testMethod(2385, -3.8755, -1.6131, 3.4691, -0.0354, 0.7635, -12.9894);
		testMethod(2390, -3.8836, -1.5958, 3.4691, -0.0318, 0.7023, -12.2416);
		testMethod(2395, -3.8915, -1.5784, 3.4691, -0.0284, 0.6447, -11.5226);
		testMethod(2400, -3.8993, -1.5611, 3.4691, -0.0253, 0.5905, -10.8318);
		testMethod(2405, -3.9071, -1.5437, 3.4691, -0.0225, 0.5397, -10.1686);
		testMethod(2410, -3.9148, -1.5264, 3.4691, -0.0199, 0.492, -9.5323);
		testMethod(2415, -3.9224, -1.5091, 3.4691, -0.0176, 0.4474, -8.9221);
		testMethod(2420, -3.9299, -1.4917, 3.4691, -0.0154, 0.4057, -8.3376);
		testMethod(2425, -3.9373, -1.4744, 3.4691, -0.0135, 0.3668, -7.778);
		testMethod(2430, -3.9446, -1.457, 3.4691, -0.0118, 0.3306, -7.2426);
		testMethod(2435, -3.9519, -1.4397, 3.4691, -0.0102, 0.2969, -6.731);
		testMethod(2440, -3.959, -1.4223, 3.4691, -0.0088, 0.2657, -6.2424);
		testMethod(2445, -3.9661, -1.405, 3.4691, -0.0075, 0.2368, -5.7763);
		testMethod(2450, -3.9731, -1.3876, 3.4691, -0.0064, 0.2102, -5.3321);
		testMethod(2455, -3.98, -1.3703, 3.4691, -0.0054, 0.1856, -4.9091);
		testMethod(2460, -3.9868, -1.3529, 3.4691, -0.0046, 0.1631, -4.5067);
		testMethod(2465, -3.9935, -1.3356, 3.4691, -0.0038, 0.1425, -4.1245);
		testMethod(2470, -4.0001, -1.3183, 3.4691, -0.0031, 0.1237, -3.7617);
		testMethod(2475, -4.0067, -1.3009, 3.4691, -0.0026, 0.1066, -3.4179);
		testMethod(2480, -4.0131, -1.2836, 3.4691, -0.0021, 0.0911, -3.0925);
		testMethod(2485, -4.0195, -1.2662, 3.4691, -0.0016, 0.0772, -2.785);
		testMethod(2490, -4.0258, -1.2489, 3.4691, -0.0013, 0.0647, -2.4947);
		testMethod(2495, -4.032, -1.2315, 3.4691, -0.001, 0.0536, -2.2212);
		testMethod(2500, -4.0381, -1.2142, 3.4691, -0.0007, 0.0438, -1.964);
		testMethod(2505, -4.0441, -1.1968, 3.4691, -0.0005, 0.0352, -1.7224);
		testMethod(2510, -4.0501, -1.1795, 3.4691, -0.0004, 0.0277, -1.496);
		testMethod(2515, -4.0559, -1.1621, 3.4691, -0.0003, 0.0213, -1.2843);
		testMethod(2520, -4.0617, -1.1448, 3.4691, -0.0002, 0.0158, -1.0869);
		testMethod(2525, -4.0674, -1.1275, 3.4691, -0.0001, 0.0113, -0.9031);
		testMethod(2530, -4.073, -1.1101, 3.4691, -0.0001, 0.0077, -0.7325);
		testMethod(2535, -4.0785, -1.0928, 3.4691, -0, 0.0048, -0.5746);
		testMethod(2540, -4.0839, -1.0754, 3.4691, -0, 0.0026, -0.429);
		testMethod(2545, -4.0892, -1.0581, 3.4691, -0, 0.0012, -0.2953);
		testMethod(2550, -4.0945, -1.0407, 3.4691, -0, 0.0003, -0.1728);
		testMethod(2555, -4.0996, -1.0234, 3.4691, -0, 0, -0.0613);
		testMethod(2560, -4.1047, -1.006, 3.4691, 0, 0, -0.0004);
		testMethod(2565, -4.1097, -0.9887, 3.4691, 0, 0, 0);
		testMethod(2570, -4.1146, -0.9713, 3.4691, 0, 0, 0);
		testMethod(2575, -4.1194, -0.954, 3.4691, 0, 0, 0);
		testMethod(2580, -4.1241, -0.9367, 3.4691, 0, 0, 0);
		testMethod(2585, -4.1288, -0.9193, 3.4691, 0, 0, 0);
		testMethod(2590, -4.1333, -0.902, 3.4691, 0, 0, 0);
		testMethod(2595, -4.1378, -0.8846, 3.4691, 0, 0, 0);
		testMethod(2600, -4.1422, -0.8673, 3.4691, 0, 0, 0);
		testMethod(2605, -4.1465, -0.8499, 3.4691, 0, 0, 0);
		testMethod(2610, -4.1507, -0.8326, 3.4691, 0, 0, 0);
		testMethod(2615, -4.1548, -0.8152, 3.4691, 0, 0, 0);
		testMethod(2620, -4.1588, -0.7979, 3.4691, 0, 0, 0);
		testMethod(2625, -4.1628, -0.7805, 3.4691, 0, 0, 0);
		testMethod(2630, -4.1666, -0.7632, 3.4691, 0, 0, 0);
		testMethod(2635, -4.1704, -0.7459, 3.4691, 0, 0, 0);
		testMethod(2640, -4.1741, -0.7285, 3.4691, 0, 0, 0);
		testMethod(2645, -4.1777, -0.7112, 3.4691, 0, 0, 0);
		testMethod(2650, -4.1812, -0.6938, 3.4691, 0, 0, 0);
		testMethod(2655, -4.1846, -0.6765, 3.4691, 0, 0, 0);
		testMethod(2660, -4.188, -0.6591, 3.4691, 0, 0, 0);
		testMethod(2665, -4.1912, -0.6418, 3.4691, 0, 0, 0);
		testMethod(2670, -4.1944, -0.6244, 3.4691, 0, 0, 0);
		testMethod(2675, -4.1975, -0.6071, 3.4691, 0, 0, 0);
		testMethod(2680, -4.2005, -0.5897, 3.4691, 0, 0, 0);
		testMethod(2685, -4.2034, -0.5724, 3.4691, 0, 0, 0);
		testMethod(2690, -4.2062, -0.5551, 3.4691, 0, 0, 0);
		testMethod(2695, -4.2089, -0.5377, 3.4691, 0, 0, 0);
		testMethod(2700, -4.2116, -0.5204, 3.4691, 0, 0, 0);
		testMethod(2705, -4.2141, -0.503, 3.4691, 0, 0, 0);
		testMethod(2710, -4.2166, -0.4857, 3.4691, 0, 0, 0);
		testMethod(2715, -4.219, -0.4683, 3.4691, 0, 0, 0);
		testMethod(2720, -4.2213, -0.451, 3.4691, 0, 0, 0);
		testMethod(2725, -4.2235, -0.4336, 3.4691, 0, 0, 0);
		testMethod(2730, -4.2256, -0.4163, 3.4691, 0, 0, 0);
		testMethod(2735, -4.2276, -0.3989, 3.4691, 0, 0, 0);
		testMethod(2740, -4.2296, -0.3816, 3.4691, 0, 0, 0);
		testMethod(2745, -4.2315, -0.3643, 3.4691, 0, 0, 0);
		testMethod(2750, -4.2332, -0.3469, 3.4691, 0, 0, 0);
		testMethod(2755, -4.2349, -0.3296, 3.4691, 0, 0, 0);
		testMethod(2760, -4.2365, -0.3122, 3.4691, 0, 0, 0);
		testMethod(2765, -4.2381, -0.2949, 3.4691, 0, 0, 0);
		testMethod(2770, -4.2395, -0.278, 3.37, 0, 0, 0);
		testMethod(2775, -4.2408, -0.2617, 3.2709, 0, 0, 0);
		testMethod(2780, -4.2421, -0.2458, 3.1717, 0, 0, 0);
		testMethod(2785, -4.2433, -0.2304, 3.0726, 0, 0, 0);
		testMethod(2790, -4.2444, -0.2156, 2.9735, 0, 0, 0);
		testMethod(2795, -4.2455, -0.2012, 2.8744, 0, 0, 0);
		testMethod(2800, -4.2464, -0.1873, 2.7753, 0, 0, 0);
		testMethod(2805, -4.2473, -0.174, 2.6762, 0, 0, 0);
		testMethod(2810, -4.2482, -0.1611, 2.577, 0, 0, 0);
		testMethod(2815, -4.2489, -0.1487, 2.4779, 0, 0, 0);
		testMethod(2820, -4.2497, -0.1368, 2.3788, 0, 0, 0);
		testMethod(2825, -4.2503, -0.1254, 2.2797, 0, 0, 0);
		testMethod(2830, -4.2509, -0.1145, 2.1806, 0, 0, 0);
		testMethod(2835, -4.2515, -0.1041, 2.0815, 0, 0, 0);
		testMethod(2840, -4.252, -0.0942, 1.9823, 0, 0, 0);
		testMethod(2845, -4.2524, -0.0847, 1.8832, 0, 0, 0);
		testMethod(2850, -4.2528, -0.0758, 1.7841, 0, 0, 0);
		testMethod(2855, -4.2532, -0.0674, 1.685, 0, 0, 0);
		testMethod(2860, -4.2535, -0.0595, 1.5859, 0, 0, 0);
		testMethod(2865, -4.2538, -0.052, 1.4868, 0, 0, 0);
		testMethod(2870, -4.254, -0.0451, 1.3876, 0, 0, 0);
		testMethod(2875, -4.2542, -0.0387, 1.2885, 0, 0, 0);
		testMethod(2880, -4.2544, -0.0327, 1.1894, 0, 0, 0);
		testMethod(2885, -4.2545, -0.0273, 1.0903, 0, 0, 0);
		testMethod(2890, -4.2547, -0.0223, 0.9912, 0, 0, 0);
		testMethod(2895, -4.2548, -0.0178, 0.8921, 0, 0, 0);
		testMethod(2900, -4.2548, -0.0139, 0.7929, 0, 0, 0);
		testMethod(2905, -4.2549, -0.0104, 0.6938, 0, 0, 0);
		testMethod(2910, -4.2549, -0.0074, 0.5947, 0, 0, 0);
		testMethod(2915, -4.255, -0.005, 0.4956, 0, 0, 0);
		testMethod(2920, -4.255, -0.003, 0.3965, 0, 0, 0);
		testMethod(2925, -4.255, -0.0015, 0.2974, 0, 0, 0);
		testMethod(2930, -4.255, -0.0005, 0.1982, 0, 0, 0);
		testMethod(2935, -4.255, -0, 0.0991, 0, 0, 0);
		testMethod(2940, -4.255, -0, -0, 0, 0, 0);
		testMethod(2940, -4.255, -0, -0, 0, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}