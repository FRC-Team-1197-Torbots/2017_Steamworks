package org.usfirst.frc.team1197.robot;

public class Figure8 extends TorTrajectory {

	public Figure8() {
		super(10.4077, -0);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0004, 0.074, 0, 0, 0);
		testMethod(10, 0, 0.0011, 0.1479, 0, 0, 0);
		testMethod(15, 0, 0.0022, 0.2219, 0, 0, 0);
		testMethod(20, 0, 0.0037, 0.2958, 0, 0, 0);
		testMethod(25, 0.0001, 0.0055, 0.3698, 0, 0, 0);
		testMethod(30, 0.0001, 0.0078, 0.4437, 0, 0, 0);
		testMethod(35, 0.0001, 0.0104, 0.5177, 0, 0, 0);
		testMethod(40, 0.0002, 0.0133, 0.5916, 0, 0, 0);
		testMethod(45, 0.0003, 0.0166, 0.6656, 0, 0, 0);
		testMethod(50, 0.0004, 0.0203, 0.7396, 0, 0, 0);
		testMethod(55, 0.0005, 0.0244, 0.8135, 0, 0, 0);
		testMethod(60, 0.0006, 0.0288, 0.8875, 0, 0, 0);
		testMethod(65, 0.0008, 0.0336, 0.9614, 0, 0, 0);
		testMethod(70, 0.0009, 0.0388, 1.0354, 0, 0, 0);
		testMethod(75, 0.0011, 0.0444, 1.1093, 0, 0, 0);
		testMethod(80, 0.0014, 0.0503, 1.1833, 0, 0, 0);
		testMethod(85, 0.0017, 0.0566, 1.2572, 0, 0, 0);
		testMethod(90, 0.0019, 0.0632, 1.3312, 0, 0, 0);
		testMethod(95, 0.0023, 0.0703, 1.4052, 0, 0, 0);
		testMethod(100, 0.0027, 0.0777, 1.4791, 0, 0, 0);
		testMethod(105, 0.0031, 0.0854, 1.5531, 0, 0, 0);
		testMethod(110, 0.0035, 0.0936, 1.627, 0, 0, 0);
		testMethod(115, 0.004, 0.1021, 1.701, 0, 0, 0);
		testMethod(120, 0.0045, 0.1109, 1.7749, 0, 0, 0);
		testMethod(125, 0.0051, 0.1202, 1.8489, 0, 0, 0);
		testMethod(130, 0.0057, 0.1298, 1.9228, 0, 0, 0);
		testMethod(135, 0.0064, 0.1398, 1.9968, 0, 0, 0);
		testMethod(140, 0.0071, 0.1501, 2.0708, 0, 0, 0);
		testMethod(145, 0.0079, 0.1609, 2.1447, 0, 0, 0);
		testMethod(150, 0.0087, 0.1719, 2.2187, 0, 0, 0);
		testMethod(155, 0.0096, 0.1834, 2.2926, 0, 0, 0);
		testMethod(160, 0.0106, 0.1952, 2.3666, 0, 0, 0);
		testMethod(165, 0.0116, 0.2074, 2.4405, 0, 0, 0);
		testMethod(170, 0.0127, 0.22, 2.5145, 0, 0, 0);
		testMethod(175, 0.0138, 0.233, 2.5884, 0, 0, 0);
		testMethod(180, 0.015, 0.2463, 2.6624, 0, 0, 0);
		testMethod(185, 0.0162, 0.26, 2.7364, 0, 0, 0);
		testMethod(190, 0.0176, 0.274, 2.8103, 0, 0, 0);
		testMethod(195, 0.019, 0.2884, 2.8843, 0, 0, 0);
		testMethod(200, 0.0205, 0.3032, 2.9582, 0, 0, 0);
		testMethod(205, 0.022, 0.3184, 3.0322, 0, 0, 0);
		testMethod(210, 0.0237, 0.3339, 3.1061, 0, 0, 0);
		testMethod(215, 0.0254, 0.3498, 3.1801, 0, 0, 0);
		testMethod(220, 0.0272, 0.3661, 3.254, 0, 0, 0);
		testMethod(225, 0.029, 0.3827, 3.328, 0, 0, 0);
		testMethod(230, 0.031, 0.3997, 3.402, 0, 0, 0);
		testMethod(235, 0.033, 0.4171, 3.4759, 0, 0, 0);
		testMethod(240, 0.0352, 0.4345, 3.4759, 0, 0, 0);
		testMethod(245, 0.0374, 0.4519, 3.4759, 0, 0, 0);
		testMethod(250, 0.0397, 0.4692, 3.4759, 0, 0, 0);
		testMethod(255, 0.0421, 0.4866, 3.4759, 0, 0, 0);
		testMethod(260, 0.0445, 0.504, 3.4759, 0, 0, 0);
		testMethod(265, 0.0471, 0.5214, 3.4759, 0, 0, 0);
		testMethod(270, 0.0497, 0.5388, 3.4759, 0, 0, 0);
		testMethod(275, 0.0525, 0.5561, 3.4759, 0, 0, 0);
		testMethod(280, 0.0553, 0.5735, 3.4759, 0, 0, 0);
		testMethod(285, 0.0582, 0.5909, 3.4759, 0, 0, 0);
		testMethod(290, 0.0612, 0.6083, 3.4759, 0, 0, 0);
		testMethod(295, 0.0643, 0.6257, 3.4759, 0, 0, 0);
		testMethod(300, 0.0675, 0.643, 3.4759, 0, 0, 0);
		testMethod(305, 0.0707, 0.6604, 3.4759, 0, 0, 0);
		testMethod(310, 0.0741, 0.6778, 3.4759, 0, 0, 0);
		testMethod(315, 0.0775, 0.6952, 3.4759, 0, 0, 0);
		testMethod(320, 0.081, 0.7126, 3.4759, 0, 0, 0);
		testMethod(325, 0.0846, 0.7299, 3.4759, 0, 0, 0);
		testMethod(330, 0.0883, 0.7473, 3.4759, 0, 0, 0);
		testMethod(335, 0.0921, 0.7647, 3.4759, 0, 0, 0);
		testMethod(340, 0.096, 0.7821, 3.4759, 0, 0, 0);
		testMethod(345, 0.0999, 0.7995, 3.4759, 0, 0, 0);
		testMethod(350, 0.104, 0.8168, 3.4759, 0, 0, 0);
		testMethod(355, 0.1081, 0.8342, 3.4759, 0, 0, 0);
		testMethod(360, 0.1123, 0.8516, 3.4759, 0, 0, 0);
		testMethod(365, 0.1166, 0.869, 3.4759, 0, 0, 0);
		testMethod(370, 0.121, 0.8864, 3.4759, 0, 0, 0);
		testMethod(375, 0.1255, 0.9037, 3.4759, 0, 0, 0);
		testMethod(380, 0.13, 0.9211, 3.4759, 0, 0, 0);
		testMethod(385, 0.1347, 0.9385, 3.4759, 0, 0, 0);
		testMethod(390, 0.1394, 0.9559, 3.4759, 0, 0, 0);
		testMethod(395, 0.1443, 0.9733, 3.4759, 0, 0, 0);
		testMethod(400, 0.1492, 0.9906, 3.4759, 0, 0, 0);
		testMethod(405, 0.1542, 1.008, 3.4759, 0, 0, 0);
		testMethod(410, 0.1592, 1.0254, 3.4759, 0, 0, 0);
		testMethod(415, 0.1644, 1.0428, 3.4759, 0, 0, 0);
		testMethod(420, 0.1697, 1.0602, 3.4759, 0, 0, 0);
		testMethod(425, 0.175, 1.0775, 3.4759, 0, 0, 0);
		testMethod(430, 0.1804, 1.0949, 3.4759, 0, 0, 0);
		testMethod(435, 0.186, 1.1123, 3.4759, 0, 0, 0);
		testMethod(440, 0.1916, 1.1297, 3.4759, 0, 0, 0);
		testMethod(445, 0.1973, 1.1471, 3.4759, 0, 0, 0);
		testMethod(450, 0.203, 1.1644, 3.4759, 0, 0, 0);
		testMethod(455, 0.2089, 1.1818, 3.4759, 0, 0, 0);
		testMethod(460, 0.2149, 1.1992, 3.4759, 0, 0, 0);
		testMethod(465, 0.2209, 1.2166, 3.4759, 0, 0, 0);
		testMethod(470, 0.227, 1.2339, 3.4759, 0, 0, 0);
		testMethod(475, 0.2332, 1.2513, 3.4759, 0, 0, 0);
		testMethod(480, 0.2395, 1.2687, 3.4759, 0, 0, 0);
		testMethod(485, 0.2459, 1.2861, 3.4759, 0, 0, 0);
		testMethod(490, 0.2524, 1.3035, 3.4759, 0, 0, 0);
		testMethod(495, 0.259, 1.3208, 3.4759, 0, 0, 0);
		testMethod(500, 0.2656, 1.3382, 3.4759, 0, 0, 0);
		testMethod(505, 0.2723, 1.3556, 3.4759, 0, 0, 0);
		testMethod(510, 0.2792, 1.373, 3.4759, 0, 0, 0);
		testMethod(515, 0.2861, 1.3904, 3.4759, 0, 0, 0);
		testMethod(520, 0.2931, 1.4077, 3.4759, 0, 0, 0);
		testMethod(525, 0.3001, 1.4251, 3.4759, 0, 0, 0);
		testMethod(530, 0.3073, 1.4425, 3.4759, 0, 0, 0);
		testMethod(535, 0.3146, 1.4599, 3.4759, 0, 0, 0);
		testMethod(540, 0.3219, 1.4773, 3.4759, 0, 0, 0);
		testMethod(545, 0.3293, 1.4946, 3.4759, 0, 0, 0);
		testMethod(550, 0.3369, 1.512, 3.4759, 0, 0, 0);
		testMethod(555, 0.3445, 1.5294, 3.4759, 0, 0, 0);
		testMethod(560, 0.3522, 1.5464, 3.402, 0, 0, 0);
		testMethod(565, 0.3599, 1.5631, 3.328, 0, 0, 0);
		testMethod(570, 0.3678, 1.5793, 3.254, 0, 0, 0);
		testMethod(575, 0.3757, 1.5952, 3.1801, 0, 0, 0);
		testMethod(580, 0.3837, 1.6108, 3.1061, 0, 0, 0);
		testMethod(585, 0.3918, 1.6259, 3.0322, 0, 0, 0);
		testMethod(590, 0.4, 1.6407, 2.9582, 0, 0, 0);
		testMethod(595, 0.4082, 1.6551, 2.8843, 0, 0, 0);
		testMethod(600, 0.4165, 1.6692, 2.8103, 0, 0, 0);
		testMethod(605, 0.4249, 1.6829, 2.7364, 0, 0, 0);
		testMethod(610, 0.4334, 1.6962, 2.6624, 0, 0, 0);
		testMethod(615, 0.4419, 1.7091, 2.5884, 0, 0, 0);
		testMethod(620, 0.4505, 1.7217, 2.5145, 0, 0, 0);
		testMethod(625, 0.4591, 1.7339, 2.4405, 0, 0, 0);
		testMethod(630, 0.4678, 1.7457, 2.3666, 0, 0, 0);
		testMethod(635, 0.4766, 1.7572, 2.2926, 0, 0, 0);
		testMethod(640, 0.4854, 1.7683, 2.2187, 0, 0, 0);
		testMethod(645, 0.4942, 1.779, 2.1447, 0, 0, 0);
		testMethod(650, 0.5032, 1.7894, 2.0708, 0, 0, 0);
		testMethod(655, 0.5121, 1.7993, 1.9968, -0, -0, -0.0057);
		testMethod(660, 0.5212, 1.809, 1.9228, -0, -0.0007, -0.1278);
		testMethod(665, 0.5302, 1.8182, 1.8489, -0, -0.0022, -0.2996);
		testMethod(670, 0.5393, 1.8271, 1.7749, -0, -0.0045, -0.4764);
		testMethod(675, 0.5485, 1.8356, 1.701, -0.0001, -0.0078, -0.6579);
		testMethod(680, 0.5577, 1.8437, 1.627, -0.0001, -0.0121, -0.8438);
		testMethod(685, 0.5669, 1.8515, 1.5531, -0.0002, -0.0172, -1.0337);
		testMethod(690, 0.5762, 1.8589, 1.4791, -0.0003, -0.0234, -1.2274);
		testMethod(695, 0.5855, 1.8659, 1.4052, -0.0004, -0.0305, -1.4246);
		testMethod(700, 0.5949, 1.8726, 1.3312, -0.0006, -0.0386, -1.6248);
		testMethod(705, 0.6042, 1.8788, 1.2572, -0.0008, -0.0477, -1.8279);
		testMethod(710, 0.6136, 1.8848, 1.1833, -0.0011, -0.0579, -2.0333);
		testMethod(715, 0.6231, 1.8903, 1.1093, -0.0014, -0.0691, -2.2409);
		testMethod(720, 0.6325, 1.8955, 1.0354, -0.0018, -0.0814, -2.4501);
		testMethod(725, 0.642, 1.9003, 0.9614, -0.0022, -0.0947, -2.6606);
		testMethod(730, 0.6516, 1.9047, 0.8875, -0.0027, -0.109, -2.8722);
		testMethod(735, 0.6611, 1.9088, 0.8135, -0.0033, -0.1245, -3.0843);
		testMethod(740, 0.6706, 1.9125, 0.7396, -0.004, -0.1409, -3.2967);
		testMethod(745, 0.6802, 1.9158, 0.6656, -0.0047, -0.1585, -3.5088);
		testMethod(750, 0.6898, 1.9188, 0.5916, -0.0055, -0.1771, -3.7204);
		testMethod(755, 0.6994, 1.9214, 0.5177, -0.0065, -0.1967, -3.9311);
		testMethod(760, 0.709, 1.9236, 0.4437, -0.0075, -0.2174, -4.1404);
		testMethod(765, 0.7186, 1.9254, 0.3698, -0.0086, -0.2392, -4.348);
		testMethod(770, 0.7283, 1.9269, 0.2958, -0.0099, -0.2619, -4.5535);
		testMethod(775, 0.7379, 1.928, 0.2219, -0.0113, -0.2857, -4.7565);
		testMethod(780, 0.7475, 1.9288, 0.1479, -0.0128, -0.3105, -4.9565);
		testMethod(785, 0.7572, 1.9291, 0.074, -0.0144, -0.3363, -5.1532);
		testMethod(790, 0.7668, 1.9291, 0, -0.0161, -0.363, -5.3462);
		testMethod(795, 0.7765, 1.9291, 0, -0.018, -0.3908, -5.5507);
		testMethod(800, 0.7861, 1.9291, 0, -0.02, -0.4195, -5.7551);
		testMethod(805, 0.7958, 1.9291, 0, -0.0222, -0.4493, -5.9596);
		testMethod(810, 0.8054, 1.9291, 0, -0.0245, -0.4802, -6.164);
		testMethod(815, 0.8151, 1.9291, 0, -0.027, -0.512, -6.3684);
		testMethod(820, 0.8247, 1.9291, 0, -0.0297, -0.5449, -6.5729);
		testMethod(825, 0.8343, 1.9291, 0, -0.0325, -0.5788, -6.7773);
		testMethod(830, 0.844, 1.9291, 0, -0.0354, -0.6137, -6.9818);
		testMethod(835, 0.8536, 1.9291, 0, -0.0386, -0.6496, -7.1862);
		testMethod(840, 0.8633, 1.9291, 0, -0.0419, -0.6865, -7.3907);
		testMethod(845, 0.8729, 1.9291, 0, -0.0455, -0.7245, -7.5951);
		testMethod(850, 0.8826, 1.9291, 0, -0.0492, -0.7635, -7.7995);
		testMethod(855, 0.8922, 1.9291, 0, -0.0531, -0.8035, -8.004);
		testMethod(860, 0.9019, 1.9291, 0, -0.0572, -0.8446, -8.2084);
		testMethod(865, 0.9115, 1.9291, 0, -0.0615, -0.8866, -8.4129);
		testMethod(870, 0.9212, 1.9291, 0, -0.0661, -0.9297, -8.6173);
		testMethod(875, 0.9308, 1.9291, 0, -0.0708, -0.9738, -8.8217);
		testMethod(880, 0.9405, 1.9291, 0, -0.0758, -1.019, -9.0262);
		testMethod(885, 0.9501, 1.9291, 0, -0.081, -1.0651, -9.2306);
		testMethod(890, 0.9597, 1.9291, 0, -0.0865, -1.1123, -9.4351);
		testMethod(895, 0.9694, 1.9291, 0, -0.0922, -1.1605, -9.6395);
		testMethod(900, 0.979, 1.9291, 0, -0.0981, -1.2097, -9.8439);
		testMethod(905, 0.9887, 1.9291, 0, -0.1043, -1.26, -10.0484);
		testMethod(910, 0.9983, 1.9291, 0, -0.1107, -1.3112, -10.2528);
		testMethod(915, 1.008, 1.9291, 0, -0.1174, -1.3636, -10.4701);
		testMethod(920, 1.0176, 1.9291, 0, -0.1243, -1.4148, -10.2381);
		testMethod(925, 1.0273, 1.9291, 0, -0.1315, -1.4649, -10.0336);
		testMethod(930, 1.0369, 1.9291, 0, -0.139, -1.5141, -9.8292);
		testMethod(935, 1.0466, 1.9291, 0, -0.1467, -1.5622, -9.6247);
		testMethod(940, 1.0562, 1.9291, 0, -0.1546, -1.6093, -9.4203);
		testMethod(945, 1.0658, 1.9291, 0, -0.1628, -1.6554, -9.2159);
		testMethod(950, 1.0755, 1.9291, 0, -0.1711, -1.7004, -9.0114);
		testMethod(955, 1.0851, 1.9291, 0, -0.1798, -1.7445, -8.807);
		testMethod(960, 1.0948, 1.9291, 0, -0.1886, -1.7875, -8.6025);
		testMethod(965, 1.1044, 1.9291, 0, -0.1976, -1.8295, -8.3981);
		testMethod(970, 1.1141, 1.9291, 0, -0.2069, -1.8704, -8.1936);
		testMethod(975, 1.1237, 1.9291, 0, -0.2163, -1.9104, -7.9892);
		testMethod(980, 1.1334, 1.9291, 0, -0.226, -1.9493, -7.7848);
		testMethod(985, 1.143, 1.9291, 0, -0.2358, -1.9872, -7.5803);
		testMethod(990, 1.1527, 1.9291, 0, -0.2459, -2.0241, -7.3759);
		testMethod(995, 1.1623, 1.9291, 0, -0.2561, -2.06, -7.1714);
		testMethod(1000, 1.1719, 1.9291, 0, -0.2665, -2.0948, -6.967);
		testMethod(1005, 1.1816, 1.9291, 0, -0.277, -2.1286, -6.7626);
		testMethod(1010, 1.1912, 1.9291, 0, -0.2877, -2.1614, -6.5581);
		testMethod(1015, 1.2009, 1.9291, 0, -0.2986, -2.1932, -6.3537);
		testMethod(1020, 1.2105, 1.9291, 0, -0.3097, -2.2239, -6.1492);
		testMethod(1025, 1.2202, 1.9291, 0, -0.3209, -2.2536, -5.9448);
		testMethod(1030, 1.2298, 1.9291, 0, -0.3322, -2.2823, -5.7404);
		testMethod(1035, 1.2395, 1.9291, 0, -0.3437, -2.31, -5.5359);
		testMethod(1040, 1.2491, 1.9291, 0, -0.3553, -2.3367, -5.3315);
		testMethod(1045, 1.2588, 1.9291, 0, -0.367, -2.3623, -5.127);
		testMethod(1050, 1.2684, 1.9291, 0, -0.3789, -2.3869, -4.9226);
		testMethod(1055, 1.2781, 1.9291, 0, -0.3909, -2.4105, -4.7182);
		testMethod(1060, 1.2877, 1.9291, 0, -0.403, -2.4331, -4.5137);
		testMethod(1065, 1.2973, 1.9291, 0, -0.4152, -2.4546, -4.3093);
		testMethod(1070, 1.307, 1.9291, 0, -0.4276, -2.4751, -4.1048);
		testMethod(1075, 1.3166, 1.9291, 0, -0.44, -2.4946, -3.9004);
		testMethod(1080, 1.3263, 1.9291, 0, -0.4525, -2.5131, -3.696);
		testMethod(1085, 1.3359, 1.9291, 0, -0.4651, -2.5306, -3.4915);
		testMethod(1090, 1.3456, 1.9291, 0, -0.4778, -2.547, -3.2871);
		testMethod(1095, 1.3552, 1.9291, 0, -0.4906, -2.5624, -3.0826);
		testMethod(1100, 1.3649, 1.9291, 0, -0.5034, -2.5768, -2.8782);
		testMethod(1105, 1.3745, 1.9291, 0, -0.5164, -2.5902, -2.6737);
		testMethod(1110, 1.3842, 1.9291, 0, -0.5293, -2.6025, -2.4693);
		testMethod(1115, 1.3938, 1.9291, 0, -0.5424, -2.6139, -2.2649);
		testMethod(1120, 1.4034, 1.9291, 0, -0.5555, -2.6242, -2.0604);
		testMethod(1125, 1.4131, 1.9291, 0, -0.5686, -2.6334, -1.856);
		testMethod(1130, 1.4227, 1.9291, 0, -0.5818, -2.6417, -1.6515);
		testMethod(1135, 1.4324, 1.9291, 0, -0.595, -2.6489, -1.4471);
		testMethod(1140, 1.442, 1.9291, 0, -0.6083, -2.6552, -1.2427);
		testMethod(1145, 1.4517, 1.9291, 0, -0.6216, -2.6603, -1.0382);
		testMethod(1150, 1.4613, 1.9291, 0, -0.6349, -2.6645, -0.8338);
		testMethod(1155, 1.471, 1.9291, 0, -0.6482, -2.6677, -0.6293);
		testMethod(1160, 1.4806, 1.9291, 0, -0.6616, -2.6698, -0.4249);
		testMethod(1165, 1.4903, 1.9291, 0, -0.6749, -2.6709, -0.2205);
		testMethod(1170, 1.4999, 1.9291, 0, -0.6883, -2.6711, -0.0342);
		testMethod(1175, 1.5095, 1.9291, 0, -0.7016, -2.6711, 0);
		testMethod(1180, 1.5192, 1.9291, 0, -0.715, -2.6711, 0);
		testMethod(1185, 1.5288, 1.9291, 0, -0.7283, -2.6711, 0);
		testMethod(1190, 1.5385, 1.9291, 0, -0.7417, -2.6711, 0);
		testMethod(1195, 1.5481, 1.9291, 0, -0.7551, -2.6711, 0);
		testMethod(1200, 1.5578, 1.9291, 0, -0.7684, -2.6711, 0);
		testMethod(1205, 1.5674, 1.9291, 0, -0.7818, -2.6711, 0);
		testMethod(1210, 1.5771, 1.9291, 0, -0.7951, -2.6711, 0);
		testMethod(1215, 1.5867, 1.9291, 0, -0.8085, -2.6711, 0);
		testMethod(1220, 1.5964, 1.9291, 0, -0.8218, -2.6711, 0);
		testMethod(1225, 1.606, 1.9291, 0, -0.8352, -2.6711, 0);
		testMethod(1230, 1.6156, 1.9291, 0, -0.8485, -2.6711, 0);
		testMethod(1235, 1.6253, 1.9291, 0, -0.8619, -2.6711, 0);
		testMethod(1240, 1.6349, 1.9291, 0, -0.8753, -2.6711, 0);
		testMethod(1245, 1.6446, 1.9291, 0, -0.8886, -2.6711, 0);
		testMethod(1250, 1.6542, 1.9291, 0, -0.902, -2.6711, 0);
		testMethod(1255, 1.6639, 1.9291, 0, -0.9153, -2.6711, 0);
		testMethod(1260, 1.6735, 1.9291, 0, -0.9287, -2.6711, 0);
		testMethod(1265, 1.6832, 1.9291, 0, -0.942, -2.6711, 0);
		testMethod(1270, 1.6928, 1.9291, 0, -0.9554, -2.6711, 0);
		testMethod(1275, 1.7025, 1.9291, 0, -0.9687, -2.6711, 0);
		testMethod(1280, 1.7121, 1.9291, 0, -0.9821, -2.6711, 0);
		testMethod(1285, 1.7218, 1.9291, 0, -0.9955, -2.6711, 0);
		testMethod(1290, 1.7314, 1.9291, 0, -1.0088, -2.6711, 0);
		testMethod(1295, 1.741, 1.9291, 0, -1.0222, -2.6711, 0);
		testMethod(1300, 1.7507, 1.9291, 0, -1.0355, -2.6711, 0);
		testMethod(1305, 1.7603, 1.9291, 0, -1.0489, -2.6711, 0);
		testMethod(1310, 1.77, 1.9291, 0, -1.0622, -2.6711, 0);
		testMethod(1315, 1.7796, 1.9291, 0, -1.0756, -2.6711, 0);
		testMethod(1320, 1.7893, 1.9291, 0, -1.0889, -2.6711, 0);
		testMethod(1325, 1.7989, 1.9291, 0, -1.1023, -2.6711, 0);
		testMethod(1330, 1.8086, 1.9291, 0, -1.1156, -2.6711, 0);
		testMethod(1335, 1.8182, 1.9291, 0, -1.129, -2.6711, 0);
		testMethod(1340, 1.8279, 1.9291, 0, -1.1424, -2.6711, 0);
		testMethod(1345, 1.8375, 1.9291, 0, -1.1557, -2.6711, 0);
		testMethod(1350, 1.8471, 1.9291, 0, -1.1691, -2.6711, 0);
		testMethod(1355, 1.8568, 1.9291, 0, -1.1824, -2.6711, 0);
		testMethod(1360, 1.8664, 1.9291, 0, -1.1958, -2.6711, 0);
		testMethod(1365, 1.8761, 1.9291, 0, -1.2091, -2.6711, 0);
		testMethod(1370, 1.8857, 1.9291, 0, -1.2225, -2.6711, 0);
		testMethod(1375, 1.8954, 1.9291, 0, -1.2358, -2.6711, 0);
		testMethod(1380, 1.905, 1.9291, 0, -1.2492, -2.6711, 0);
		testMethod(1385, 1.9147, 1.9291, 0, -1.2626, -2.6711, 0);
		testMethod(1390, 1.9243, 1.9291, 0, -1.2759, -2.6711, 0);
		testMethod(1395, 1.934, 1.9291, 0, -1.2893, -2.6711, 0);
		testMethod(1400, 1.9436, 1.9291, 0, -1.3026, -2.6711, 0);
		testMethod(1405, 1.9532, 1.9291, 0, -1.316, -2.6711, 0);
		testMethod(1410, 1.9629, 1.9291, 0, -1.3293, -2.6711, 0);
		testMethod(1415, 1.9725, 1.9291, 0, -1.3427, -2.6711, 0);
		testMethod(1420, 1.9822, 1.9291, 0, -1.356, -2.6711, 0);
		testMethod(1425, 1.9918, 1.9291, 0, -1.3694, -2.6711, 0);
		testMethod(1430, 2.0015, 1.9291, 0, -1.3828, -2.6711, 0);
		testMethod(1435, 2.0111, 1.9291, 0, -1.3961, -2.6711, 0);
		testMethod(1440, 2.0208, 1.9291, 0, -1.4095, -2.6711, 0);
		testMethod(1445, 2.0304, 1.9291, 0, -1.4228, -2.6711, 0);
		testMethod(1450, 2.0401, 1.9291, 0, -1.4362, -2.6711, 0);
		testMethod(1455, 2.0497, 1.9291, 0, -1.4495, -2.6711, 0);
		testMethod(1460, 2.0593, 1.9291, 0, -1.4629, -2.6711, 0);
		testMethod(1465, 2.069, 1.9291, 0, -1.4762, -2.6711, 0);
		testMethod(1470, 2.0786, 1.9291, 0, -1.4896, -2.6711, 0);
		testMethod(1475, 2.0883, 1.9291, 0, -1.503, -2.6711, 0);
		testMethod(1480, 2.0979, 1.9291, 0, -1.5163, -2.6711, 0);
		testMethod(1485, 2.1076, 1.9291, 0, -1.5297, -2.6711, 0);
		testMethod(1490, 2.1172, 1.9291, 0, -1.543, -2.6711, 0);
		testMethod(1495, 2.1269, 1.9291, 0, -1.5564, -2.6711, 0);
		testMethod(1500, 2.1365, 1.9291, 0, -1.5697, -2.6711, 0);
		testMethod(1505, 2.1462, 1.9291, 0, -1.5831, -2.6711, 0);
		testMethod(1510, 2.1558, 1.9291, 0, -1.5964, -2.6711, 0);
		testMethod(1515, 2.1655, 1.9291, 0, -1.6098, -2.6711, 0);
		testMethod(1520, 2.1751, 1.9291, 0, -1.6232, -2.6711, 0);
		testMethod(1525, 2.1847, 1.9291, 0, -1.6365, -2.6711, 0);
		testMethod(1530, 2.1944, 1.9291, 0, -1.6499, -2.6711, 0);
		testMethod(1535, 2.204, 1.9291, 0, -1.6632, -2.6711, 0);
		testMethod(1540, 2.2137, 1.9291, 0, -1.6766, -2.6711, 0);
		testMethod(1545, 2.2233, 1.9291, 0, -1.6899, -2.6711, 0);
		testMethod(1550, 2.233, 1.9291, 0, -1.7033, -2.6711, 0);
		testMethod(1555, 2.2426, 1.9291, 0, -1.7166, -2.6711, 0);
		testMethod(1560, 2.2523, 1.9291, 0, -1.73, -2.6711, 0);
		testMethod(1565, 2.2619, 1.9291, 0, -1.7433, -2.6711, 0);
		testMethod(1570, 2.2716, 1.9291, 0, -1.7567, -2.6711, 0);
		testMethod(1575, 2.2812, 1.9291, 0, -1.7701, -2.6711, 0);
		testMethod(1580, 2.2908, 1.9291, 0, -1.7834, -2.6711, 0);
		testMethod(1585, 2.3005, 1.9291, 0, -1.7968, -2.6711, 0);
		testMethod(1590, 2.3101, 1.9291, 0, -1.8101, -2.6711, 0);
		testMethod(1595, 2.3198, 1.9291, 0, -1.8235, -2.6711, 0);
		testMethod(1600, 2.3294, 1.9291, 0, -1.8368, -2.6711, 0);
		testMethod(1605, 2.3391, 1.9291, 0, -1.8502, -2.6711, 0);
		testMethod(1610, 2.3487, 1.9291, 0, -1.8635, -2.6711, 0);
		testMethod(1615, 2.3584, 1.9291, 0, -1.8769, -2.6711, 0);
		testMethod(1620, 2.368, 1.9291, 0, -1.8903, -2.6711, 0);
		testMethod(1625, 2.3777, 1.9291, 0, -1.9036, -2.6711, 0);
		testMethod(1630, 2.3873, 1.9291, 0, -1.917, -2.6711, 0);
		testMethod(1635, 2.3969, 1.9291, 0, -1.9303, -2.6711, 0);
		testMethod(1640, 2.4066, 1.9291, 0, -1.9437, -2.6711, 0);
		testMethod(1645, 2.4162, 1.9291, 0, -1.957, -2.6711, 0);
		testMethod(1650, 2.4259, 1.9291, 0, -1.9704, -2.6711, 0);
		testMethod(1655, 2.4355, 1.9291, 0, -1.9837, -2.6711, 0);
		testMethod(1660, 2.4452, 1.9291, 0, -1.9971, -2.6711, 0);
		testMethod(1665, 2.4548, 1.9291, 0, -2.0105, -2.6711, 0);
		testMethod(1670, 2.4645, 1.9291, 0, -2.0238, -2.6711, 0);
		testMethod(1675, 2.4741, 1.9291, 0, -2.0372, -2.6711, 0);
		testMethod(1680, 2.4838, 1.9291, 0, -2.0505, -2.6711, 0);
		testMethod(1685, 2.4934, 1.9291, 0, -2.0639, -2.6711, 0);
		testMethod(1690, 2.503, 1.9291, 0, -2.0772, -2.6711, 0);
		testMethod(1695, 2.5127, 1.9291, 0, -2.0906, -2.6711, 0);
		testMethod(1700, 2.5223, 1.9291, 0, -2.1039, -2.6711, 0);
		testMethod(1705, 2.532, 1.9291, 0, -2.1173, -2.6711, 0);
		testMethod(1710, 2.5416, 1.9291, 0, -2.1307, -2.6711, 0);
		testMethod(1715, 2.5513, 1.9291, 0, -2.144, -2.6711, 0);
		testMethod(1720, 2.5609, 1.9291, 0, -2.1574, -2.6711, 0);
		testMethod(1725, 2.5706, 1.9291, 0, -2.1707, -2.6711, 0);
		testMethod(1730, 2.5802, 1.9291, 0, -2.1841, -2.6711, 0);
		testMethod(1735, 2.5899, 1.9291, 0, -2.1974, -2.6711, 0);
		testMethod(1740, 2.5995, 1.9291, 0, -2.2108, -2.6711, 0);
		testMethod(1745, 2.6092, 1.9291, 0, -2.2241, -2.6711, 0);
		testMethod(1750, 2.6188, 1.9291, 0, -2.2375, -2.6711, 0);
		testMethod(1755, 2.6284, 1.9291, 0, -2.2508, -2.6711, 0);
		testMethod(1760, 2.6381, 1.9291, 0, -2.2642, -2.6711, 0);
		testMethod(1765, 2.6477, 1.9291, 0, -2.2776, -2.6711, 0);
		testMethod(1770, 2.6574, 1.9291, 0, -2.2909, -2.6711, 0);
		testMethod(1775, 2.667, 1.9291, 0, -2.3043, -2.6711, 0);
		testMethod(1780, 2.6767, 1.9291, 0, -2.3176, -2.6711, 0);
		testMethod(1785, 2.6863, 1.9291, 0, -2.331, -2.6711, 0);
		testMethod(1790, 2.696, 1.9291, 0, -2.3443, -2.6711, 0);
		testMethod(1795, 2.7056, 1.9291, 0, -2.3577, -2.6711, 0);
		testMethod(1800, 2.7153, 1.9291, 0, -2.371, -2.6711, 0);
		testMethod(1805, 2.7249, 1.9291, 0, -2.3844, -2.6711, 0);
		testMethod(1810, 2.7345, 1.9291, 0, -2.3978, -2.6711, 0);
		testMethod(1815, 2.7442, 1.9291, 0, -2.4111, -2.6711, 0);
		testMethod(1820, 2.7538, 1.9291, 0, -2.4245, -2.6711, 0);
		testMethod(1825, 2.7635, 1.9291, 0, -2.4378, -2.6711, 0);
		testMethod(1830, 2.7731, 1.9291, 0, -2.4512, -2.6711, 0);
		testMethod(1835, 2.7828, 1.9291, 0, -2.4645, -2.6711, 0);
		testMethod(1840, 2.7924, 1.9291, 0, -2.4779, -2.6711, 0);
		testMethod(1845, 2.8021, 1.9291, 0, -2.4912, -2.6711, 0);
		testMethod(1850, 2.8117, 1.9291, 0, -2.5046, -2.6711, 0);
		testMethod(1855, 2.8214, 1.9291, 0, -2.518, -2.6711, 0);
		testMethod(1860, 2.831, 1.9291, 0, -2.5313, -2.6711, 0);
		testMethod(1865, 2.8406, 1.9291, 0, -2.5447, -2.6711, 0);
		testMethod(1870, 2.8503, 1.9291, 0, -2.558, -2.6711, 0);
		testMethod(1875, 2.8599, 1.9291, 0, -2.5714, -2.6711, 0);
		testMethod(1880, 2.8696, 1.9291, 0, -2.5847, -2.6711, 0);
		testMethod(1885, 2.8792, 1.9291, 0, -2.5981, -2.6711, 0);
		testMethod(1890, 2.8889, 1.9291, 0, -2.6114, -2.6711, 0);
		testMethod(1895, 2.8985, 1.9291, 0, -2.6248, -2.6711, 0);
		testMethod(1900, 2.9082, 1.9291, 0, -2.6382, -2.6711, 0);
		testMethod(1905, 2.9178, 1.9291, 0, -2.6515, -2.6711, 0);
		testMethod(1910, 2.9275, 1.9291, 0, -2.6649, -2.6711, 0);
		testMethod(1915, 2.9371, 1.9291, 0, -2.6782, -2.6711, 0);
		testMethod(1920, 2.9467, 1.9291, 0, -2.6916, -2.6711, 0);
		testMethod(1925, 2.9564, 1.9291, 0, -2.7049, -2.6711, 0);
		testMethod(1930, 2.966, 1.9291, 0, -2.7183, -2.6711, 0);
		testMethod(1935, 2.9757, 1.9291, 0, -2.7316, -2.6711, 0);
		testMethod(1940, 2.9853, 1.9291, 0, -2.745, -2.6711, 0);
		testMethod(1945, 2.995, 1.9291, 0, -2.7584, -2.6711, 0);
		testMethod(1950, 3.0046, 1.9291, 0, -2.7717, -2.6711, 0);
		testMethod(1955, 3.0143, 1.9291, 0, -2.7851, -2.6711, 0);
		testMethod(1960, 3.0239, 1.9291, 0, -2.7984, -2.6711, 0);
		testMethod(1965, 3.0336, 1.9291, 0, -2.8118, -2.6711, 0);
		testMethod(1970, 3.0432, 1.9291, 0, -2.8251, -2.6711, 0);
		testMethod(1975, 3.0529, 1.9291, 0, -2.8385, -2.6711, 0);
		testMethod(1980, 3.0625, 1.9291, 0, -2.8518, -2.6711, 0);
		testMethod(1985, 3.0721, 1.9291, 0, -2.8652, -2.6711, 0);
		testMethod(1990, 3.0818, 1.9291, 0, -2.8785, -2.6711, 0);
		testMethod(1995, 3.0914, 1.9291, 0, -2.8919, -2.6711, 0);
		testMethod(2000, 3.1011, 1.9291, 0, -2.9053, -2.6711, 0);
		testMethod(2005, 3.1107, 1.9291, 0, -2.9186, -2.6711, 0);
		testMethod(2010, 3.1204, 1.9291, 0, -2.932, -2.6711, 0);
		testMethod(2015, 3.13, 1.9291, 0, -2.9453, -2.6711, 0);
		testMethod(2020, 3.1397, 1.9291, 0, -2.9587, -2.6711, 0);
		testMethod(2025, 3.1493, 1.9291, 0, -2.972, -2.6711, 0);
		testMethod(2030, 3.159, 1.9291, 0, -2.9854, -2.6711, 0);
		testMethod(2035, 3.1686, 1.9291, 0, -2.9987, -2.6711, 0);
		testMethod(2040, 3.1782, 1.9291, 0, -3.0121, -2.6711, 0);
		testMethod(2045, 3.1879, 1.9291, 0, -3.0255, -2.6711, 0);
		testMethod(2050, 3.1975, 1.9291, 0, -3.0388, -2.6711, 0);
		testMethod(2055, 3.2072, 1.9291, 0, -3.0522, -2.6711, 0);
		testMethod(2060, 3.2168, 1.9291, 0, -3.0655, -2.6711, 0);
		testMethod(2065, 3.2265, 1.9291, 0, -3.0789, -2.6711, 0);
		testMethod(2070, 3.2361, 1.9291, 0, -3.0922, -2.6711, 0);
		testMethod(2075, 3.2458, 1.9291, 0, -3.1056, -2.6711, 0);
		testMethod(2080, 3.2554, 1.9291, 0, -3.1189, -2.6711, 0);
		testMethod(2085, 3.2651, 1.9291, 0, -3.1323, -2.6711, 0);
		testMethod(2090, 3.2747, 1.9291, 0, -3.1457, -2.6711, 0);
		testMethod(2095, 3.2843, 1.9291, 0, -3.159, -2.6711, 0);
		testMethod(2100, 3.294, 1.9291, 0, -3.1724, -2.6711, 0);
		testMethod(2105, 3.3036, 1.9291, 0, -3.1857, -2.6711, 0);
		testMethod(2110, 3.3133, 1.9291, 0, -3.1991, -2.6711, 0);
		testMethod(2115, 3.3229, 1.9291, 0, -3.2124, -2.6711, 0);
		testMethod(2120, 3.3326, 1.9291, 0, -3.2258, -2.6711, 0);
		testMethod(2125, 3.3422, 1.9291, 0, -3.2391, -2.6711, 0);
		testMethod(2130, 3.3519, 1.9291, 0, -3.2525, -2.6711, 0);
		testMethod(2135, 3.3615, 1.9291, 0, -3.2659, -2.6711, 0);
		testMethod(2140, 3.3712, 1.9291, 0, -3.2792, -2.6711, 0);
		testMethod(2145, 3.3808, 1.9291, 0, -3.2926, -2.6711, 0);
		testMethod(2150, 3.3905, 1.9291, 0, -3.3059, -2.6711, 0);
		testMethod(2155, 3.4001, 1.9291, 0, -3.3193, -2.6711, 0);
		testMethod(2160, 3.4097, 1.9291, 0, -3.3326, -2.6711, 0);
		testMethod(2165, 3.4194, 1.9291, 0, -3.346, -2.6711, 0);
		testMethod(2170, 3.429, 1.9291, 0, -3.3593, -2.6711, 0);
		testMethod(2175, 3.4387, 1.9291, 0, -3.3727, -2.6711, 0);
		testMethod(2180, 3.4483, 1.9291, 0, -3.386, -2.6711, 0);
		testMethod(2185, 3.458, 1.9291, 0, -3.3994, -2.6711, 0);
		testMethod(2190, 3.4676, 1.9291, 0, -3.4128, -2.6711, 0);
		testMethod(2195, 3.4773, 1.9291, 0, -3.4261, -2.6711, 0);
		testMethod(2200, 3.4869, 1.9291, 0, -3.4395, -2.6711, 0);
		testMethod(2205, 3.4966, 1.9291, 0, -3.4528, -2.6711, 0);
		testMethod(2210, 3.5062, 1.9291, 0, -3.4662, -2.6711, 0);
		testMethod(2215, 3.5158, 1.9291, 0, -3.4795, -2.6711, 0);
		testMethod(2220, 3.5255, 1.9291, 0, -3.4929, -2.6711, 0);
		testMethod(2225, 3.5351, 1.9291, 0, -3.5062, -2.6711, 0);
		testMethod(2230, 3.5448, 1.9291, 0, -3.5196, -2.6711, 0);
		testMethod(2235, 3.5544, 1.9291, 0, -3.533, -2.6711, 0);
		testMethod(2240, 3.5641, 1.9291, 0, -3.5463, -2.6711, 0);
		testMethod(2245, 3.5737, 1.9291, 0, -3.5597, -2.6711, 0);
		testMethod(2250, 3.5834, 1.9291, 0, -3.573, -2.6711, 0);
		testMethod(2255, 3.593, 1.9291, 0, -3.5864, -2.6711, 0);
		testMethod(2260, 3.6027, 1.9291, 0, -3.5997, -2.6711, 0);
		testMethod(2265, 3.6123, 1.9291, 0, -3.6131, -2.6711, 0);
		testMethod(2270, 3.6219, 1.9291, 0, -3.6264, -2.6711, 0);
		testMethod(2275, 3.6316, 1.9291, 0, -3.6398, -2.6711, 0);
		testMethod(2280, 3.6412, 1.9291, 0, -3.6532, -2.6711, 0);
		testMethod(2285, 3.6509, 1.9291, 0, -3.6665, -2.6711, 0);
		testMethod(2290, 3.6605, 1.9291, 0, -3.6799, -2.6711, 0);
		testMethod(2295, 3.6702, 1.9291, 0, -3.6932, -2.6711, 0);
		testMethod(2300, 3.6798, 1.9291, 0, -3.7066, -2.6711, 0);
		testMethod(2305, 3.6895, 1.9291, 0, -3.7199, -2.6711, 0);
		testMethod(2310, 3.6991, 1.9291, 0, -3.7333, -2.6711, 0);
		testMethod(2315, 3.7088, 1.9291, 0, -3.7466, -2.6711, 0.0005);
		testMethod(2320, 3.7184, 1.9291, 0, -3.76, -2.6705, 0.1168);
		testMethod(2325, 3.728, 1.9291, 0, -3.7733, -2.6689, 0.3213);
		testMethod(2330, 3.7377, 1.9291, 0, -3.7867, -2.6662, 0.5257);
		testMethod(2335, 3.7473, 1.9291, 0, -3.8, -2.6626, 0.7302);
		testMethod(2340, 3.757, 1.9291, 0, -3.8133, -2.6579, 0.9346);
		testMethod(2345, 3.7666, 1.9291, 0, -3.8266, -2.6522, 1.139);
		testMethod(2350, 3.7763, 1.9291, 0, -3.8398, -2.6455, 1.3435);
		testMethod(2355, 3.7859, 1.9291, 0, -3.853, -2.6378, 1.5479);
		testMethod(2360, 3.7956, 1.9291, 0, -3.8662, -2.629, 1.7524);
		testMethod(2365, 3.8052, 1.9291, 0, -3.8793, -2.6192, 1.9568);
		testMethod(2370, 3.8149, 1.9291, 0, -3.8924, -2.6084, 2.1612);
		testMethod(2375, 3.8245, 1.9291, 0, -3.9054, -2.5966, 2.3657);
		testMethod(2380, 3.8342, 1.9291, 0, -3.9184, -2.5837, 2.5701);
		testMethod(2385, 3.8438, 1.9291, 0, -3.9312, -2.5699, 2.7746);
		testMethod(2390, 3.8534, 1.9291, 0, -3.9441, -2.555, 2.979);
		testMethod(2395, 3.8631, 1.9291, 0, -3.9568, -2.539, 3.1835);
		testMethod(2400, 3.8727, 1.9291, 0, -3.9694, -2.5221, 3.3879);
		testMethod(2405, 3.8824, 1.9291, 0, -3.982, -2.5041, 3.5923);
		testMethod(2410, 3.892, 1.9291, 0, -3.9945, -2.4852, 3.7968);
		testMethod(2415, 3.9017, 1.9291, 0, -4.0069, -2.4652, 4.0012);
		testMethod(2420, 3.9113, 1.9291, 0, -4.0191, -2.4441, 4.2057);
		testMethod(2425, 3.921, 1.9291, 0, -4.0313, -2.4221, 4.4101);
		testMethod(2430, 3.9306, 1.9291, 0, -4.0434, -2.399, 4.6145);
		testMethod(2435, 3.9403, 1.9291, 0, -4.0553, -2.3749, 4.819);
		testMethod(2440, 3.9499, 1.9291, 0, -4.0671, -2.3498, 5.0234);
		testMethod(2445, 3.9595, 1.9291, 0, -4.0788, -2.3237, 5.2279);
		testMethod(2450, 3.9692, 1.9291, 0, -4.0903, -2.2965, 5.4323);
		testMethod(2455, 3.9788, 1.9291, 0, -4.1017, -2.2683, 5.6367);
		testMethod(2460, 3.9885, 1.9291, 0, -4.113, -2.2391, 5.8412);
		testMethod(2465, 3.9981, 1.9291, 0, -4.1241, -2.2089, 6.0456);
		testMethod(2470, 4.0078, 1.9291, 0, -4.1351, -2.1776, 6.2501);
		testMethod(2475, 4.0174, 1.9291, 0, -4.1459, -2.1453, 6.4545);
		testMethod(2480, 4.0271, 1.9291, 0, -4.1566, -2.1121, 6.6589);
		testMethod(2485, 4.0367, 1.9291, 0, -4.167, -2.0777, 6.8634);
		testMethod(2490, 4.0464, 1.9291, 0, -4.1773, -2.0424, 7.0678);
		testMethod(2495, 4.056, 1.9291, 0, -4.1875, -2.006, 7.2723);
		testMethod(2500, 4.0656, 1.9291, 0, -4.1974, -1.9687, 7.4767);
		testMethod(2505, 4.0753, 1.9291, 0, -4.2071, -1.9302, 7.6811);
		testMethod(2510, 4.0849, 1.9291, 0, -4.2167, -1.8908, 7.8856);
		testMethod(2515, 4.0946, 1.9291, 0, -4.226, -1.8504, 8.09);
		testMethod(2520, 4.1042, 1.9291, 0, -4.2352, -1.8089, 8.2945);
		testMethod(2525, 4.1139, 1.9291, 0, -4.2441, -1.7664, 8.4989);
		testMethod(2530, 4.1235, 1.9291, 0, -4.2529, -1.7229, 8.7033);
		testMethod(2535, 4.1332, 1.9291, 0, -4.2614, -1.6783, 8.9078);
		testMethod(2540, 4.1428, 1.9291, 0, -4.2696, -1.6328, 9.1122);
		testMethod(2545, 4.1525, 1.9291, 0, -4.2777, -1.5862, 9.3167);
		testMethod(2550, 4.1621, 1.9291, 0, -4.2855, -1.5386, 9.5211);
		testMethod(2555, 4.1717, 1.9291, 0, -4.2931, -1.49, 9.7256);
		testMethod(2560, 4.1814, 1.9291, 0, -4.3004, -1.4403, 9.93);
		testMethod(2565, 4.191, 1.9291, 0, -4.3075, -1.3896, 10.1344);
		testMethod(2570, 4.2007, 1.9291, 0, -4.3143, -1.338, 10.3389);
		testMethod(2575, 4.2103, 1.9291, 0, -4.3208, -1.2858, 10.4277);
		testMethod(2580, 4.22, 1.9291, 0, -4.3271, -1.2351, 10.152);
		testMethod(2585, 4.2296, 1.9291, 0, -4.3332, -1.1853, 9.9476);
		testMethod(2590, 4.2393, 1.9291, 0, -4.339, -1.1366, 9.7431);
		testMethod(2595, 4.2489, 1.9291, 0, -4.3446, -1.0889, 9.5387);
		testMethod(2600, 4.2586, 1.9291, 0, -4.3499, -1.0422, 9.3342);
		testMethod(2605, 4.2682, 1.9291, 0, -4.355, -0.9966, 9.1298);
		testMethod(2610, 4.2779, 1.9291, 0, -4.3599, -0.952, 8.9254);
		testMethod(2615, 4.2875, 1.9291, 0, -4.3645, -0.9084, 8.7209);
		testMethod(2620, 4.2971, 1.9291, 0, -4.3689, -0.8658, 8.5165);
		testMethod(2625, 4.3068, 1.9291, 0, -4.3732, -0.8242, 8.312);
		testMethod(2630, 4.3164, 1.9291, 0, -4.3772, -0.7837, 8.1076);
		testMethod(2635, 4.3261, 1.9291, 0, -4.381, -0.7442, 7.9032);
		testMethod(2640, 4.3357, 1.9291, 0, -4.3846, -0.7057, 7.6987);
		testMethod(2645, 4.3454, 1.9291, 0, -4.3881, -0.6682, 7.4943);
		testMethod(2650, 4.355, 1.9291, 0, -4.3913, -0.6317, 7.2898);
		testMethod(2655, 4.3647, 1.9291, 0, -4.3944, -0.5963, 7.0854);
		testMethod(2660, 4.3743, 1.9291, 0, -4.3973, -0.5619, 6.881);
		testMethod(2665, 4.384, 1.9291, 0, -4.4, -0.5285, 6.6765);
		testMethod(2670, 4.3936, 1.9291, 0, -4.4026, -0.4962, 6.4721);
		testMethod(2675, 4.4032, 1.9291, 0, -4.405, -0.4648, 6.2676);
		testMethod(2680, 4.4129, 1.9291, 0, -4.4072, -0.4345, 6.0632);
		testMethod(2685, 4.4225, 1.9291, 0, -4.4093, -0.4052, 5.8587);
		testMethod(2690, 4.4322, 1.9291, 0, -4.4113, -0.377, 5.6543);
		testMethod(2695, 4.4418, 1.9291, 0, -4.4131, -0.3497, 5.4499);
		testMethod(2700, 4.4515, 1.9291, 0, -4.4148, -0.3235, 5.2454);
		testMethod(2705, 4.4611, 1.9291, 0, -4.4163, -0.2983, 5.041);
		testMethod(2710, 4.4708, 1.9291, 0, -4.4178, -0.2741, 4.8365);
		testMethod(2715, 4.4804, 1.9291, 0, -4.4191, -0.2509, 4.6321);
		testMethod(2720, 4.4901, 1.9291, 0, -4.4203, -0.2288, 4.4277);
		testMethod(2725, 4.4997, 1.9291, 0, -4.4214, -0.2077, 4.2232);
		testMethod(2730, 4.5093, 1.9291, 0, -4.4223, -0.1876, 4.0188);
		testMethod(2735, 4.519, 1.9291, 0, -4.4232, -0.1685, 3.8143);
		testMethod(2740, 4.5286, 1.9291, 0, -4.424, -0.1505, 3.6099);
		testMethod(2745, 4.5383, 1.9291, 0, -4.4247, -0.1334, 3.4055);
		testMethod(2750, 4.5479, 1.9291, 0, -4.4254, -0.1174, 3.201);
		testMethod(2755, 4.5576, 1.9291, 0, -4.4259, -0.1024, 2.9966);
		testMethod(2760, 4.5672, 1.9291, 0, -4.4264, -0.0885, 2.7921);
		testMethod(2765, 4.5769, 1.9291, 0, -4.4268, -0.0755, 2.5877);
		testMethod(2770, 4.5865, 1.9291, 0, -4.4272, -0.0636, 2.3833);
		testMethod(2775, 4.5962, 1.9291, 0, -4.4274, -0.0527, 2.1788);
		testMethod(2780, 4.6058, 1.9291, 0, -4.4277, -0.0429, 1.9744);
		testMethod(2785, 4.6154, 1.9291, 0, -4.4279, -0.034, 1.7699);
		testMethod(2790, 4.6251, 1.9291, 0, -4.428, -0.0262, 1.5655);
		testMethod(2795, 4.6347, 1.9291, 0, -4.4281, -0.0194, 1.3611);
		testMethod(2800, 4.6444, 1.9291, 0, -4.4282, -0.0136, 1.1566);
		testMethod(2805, 4.654, 1.9291, 0, -4.4283, -0.0088, 0.9522);
		testMethod(2810, 4.6637, 1.9291, 0, -4.4283, -0.0051, 0.7477);
		testMethod(2815, 4.6733, 1.9291, 0, -4.4283, -0.0024, 0.5433);
		testMethod(2820, 4.683, 1.9291, 0, -4.4283, -0.0007, 0.3388);
		testMethod(2825, 4.6926, 1.9291, 0, -4.4283, -0, 0.1344);
		testMethod(2830, 4.7023, 1.9291, 0, -4.4283, 0, 0.0025);
		testMethod(2835, 4.7119, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2840, 4.7216, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2845, 4.7312, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2850, 4.7408, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2855, 4.7505, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2860, 4.7601, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2865, 4.7698, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2870, 4.7794, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2875, 4.7891, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2880, 4.7987, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2885, 4.8084, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2890, 4.818, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2895, 4.8277, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2900, 4.8373, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2905, 4.8469, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2910, 4.8566, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2915, 4.8662, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2920, 4.8759, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2925, 4.8855, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2930, 4.8952, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2935, 4.9048, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2940, 4.9145, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2945, 4.9241, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2950, 4.9338, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2955, 4.9434, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2960, 4.953, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2965, 4.9627, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2970, 4.9723, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2975, 4.982, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2980, 4.9916, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2985, 5.0013, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2990, 5.0109, 1.9291, 0, -4.4283, 0, 0);
		testMethod(2995, 5.0206, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3000, 5.0302, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3005, 5.0399, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3010, 5.0495, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3015, 5.0592, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3020, 5.0688, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3025, 5.0784, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3030, 5.0881, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3035, 5.0977, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3040, 5.1074, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3045, 5.117, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3050, 5.1267, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3055, 5.1363, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3060, 5.146, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3065, 5.1556, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3070, 5.1653, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3075, 5.1749, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3080, 5.1845, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3085, 5.1942, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3090, 5.2038, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3095, 5.2135, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3100, 5.2231, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3105, 5.2328, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3110, 5.2424, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3115, 5.2521, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3120, 5.2617, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3125, 5.2714, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3130, 5.281, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3135, 5.2906, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3140, 5.3003, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3145, 5.3099, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3150, 5.3196, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3155, 5.3292, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3160, 5.3389, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3165, 5.3485, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3170, 5.3582, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3175, 5.3678, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3180, 5.3775, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3185, 5.3871, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3190, 5.3967, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3195, 5.4064, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3200, 5.416, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3205, 5.4257, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3210, 5.4353, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3215, 5.445, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3220, 5.4546, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3225, 5.4643, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3230, 5.4739, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3235, 5.4836, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3240, 5.4932, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3245, 5.5029, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3250, 5.5125, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3255, 5.5221, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3260, 5.5318, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3265, 5.5414, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3270, 5.5511, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3275, 5.5607, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3280, 5.5704, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3285, 5.58, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3290, 5.5897, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3295, 5.5993, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3300, 5.609, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3305, 5.6186, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3310, 5.6282, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3315, 5.6379, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3320, 5.6475, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3325, 5.6572, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3330, 5.6668, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3335, 5.6765, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3340, 5.6861, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3345, 5.6958, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3350, 5.7054, 1.9291, 0, -4.4283, 0, 0);
		testMethod(3355, 5.7151, 1.9291, 0, -4.4283, 0, 0.0023);
		testMethod(3360, 5.7247, 1.9291, 0, -4.4283, 0.0007, 0.133);
		testMethod(3365, 5.7343, 1.9291, 0, -4.4283, 0.0024, 0.3374);
		testMethod(3370, 5.744, 1.9291, 0, -4.4283, 0.0051, 0.5419);
		testMethod(3375, 5.7536, 1.9291, 0, -4.4283, 0.0088, 0.7463);
		testMethod(3380, 5.7633, 1.9291, 0, -4.4282, 0.0136, 0.9508);
		testMethod(3385, 5.7729, 1.9291, 0, -4.4281, 0.0193, 1.1552);
		testMethod(3390, 5.7826, 1.9291, 0, -4.428, 0.0261, 1.3597);
		testMethod(3395, 5.7922, 1.9291, 0, -4.4279, 0.034, 1.5641);
		testMethod(3400, 5.8019, 1.9291, 0, -4.4277, 0.0428, 1.7685);
		testMethod(3405, 5.8115, 1.9291, 0, -4.4274, 0.0527, 1.973);
		testMethod(3410, 5.8212, 1.9291, 0, -4.4272, 0.0635, 2.1774);
		testMethod(3415, 5.8308, 1.9291, 0, -4.4268, 0.0755, 2.3819);
		testMethod(3420, 5.8404, 1.9291, 0, -4.4264, 0.0884, 2.5863);
		testMethod(3425, 5.8501, 1.9291, 0, -4.4259, 0.1023, 2.7907);
		testMethod(3430, 5.8597, 1.9291, 0, -4.4254, 0.1173, 2.9952);
		testMethod(3435, 5.8694, 1.9291, 0, -4.4247, 0.1333, 3.1996);
		testMethod(3440, 5.879, 1.9291, 0, -4.424, 0.1503, 3.4041);
		testMethod(3445, 5.8887, 1.9291, 0, -4.4232, 0.1684, 3.6085);
		testMethod(3450, 5.8983, 1.9291, 0, -4.4224, 0.1874, 3.8129);
		testMethod(3455, 5.908, 1.9291, 0, -4.4214, 0.2075, 4.0174);
		testMethod(3460, 5.9176, 1.9291, 0, -4.4203, 0.2286, 4.2218);
		testMethod(3465, 5.9273, 1.9291, 0, -4.4191, 0.2508, 4.4263);
		testMethod(3470, 5.9369, 1.9291, 0, -4.4178, 0.2739, 4.6307);
		testMethod(3475, 5.9466, 1.9291, 0, -4.4163, 0.2981, 4.8351);
		testMethod(3480, 5.9562, 1.9291, 0, -4.4148, 0.3233, 5.0396);
		testMethod(3485, 5.9658, 1.9291, 0, -4.4131, 0.3495, 5.244);
		testMethod(3490, 5.9755, 1.9291, 0, -4.4113, 0.3768, 5.4485);
		testMethod(3495, 5.9851, 1.9291, 0, -4.4093, 0.405, 5.6529);
		testMethod(3500, 5.9948, 1.9291, 0, -4.4072, 0.4343, 5.8573);
		testMethod(3505, 6.0044, 1.9291, 0, -4.405, 0.4646, 6.0618);
		testMethod(3510, 6.0141, 1.9291, 0, -4.4026, 0.496, 6.2662);
		testMethod(3515, 6.0237, 1.9291, 0, -4.4, 0.5283, 6.4707);
		testMethod(3520, 6.0334, 1.9291, 0, -4.3973, 0.5617, 6.6751);
		testMethod(3525, 6.043, 1.9291, 0, -4.3944, 0.5961, 6.8796);
		testMethod(3530, 6.0527, 1.9291, 0, -4.3913, 0.6315, 7.084);
		testMethod(3535, 6.0623, 1.9291, 0, -4.3881, 0.6679, 7.2884);
		testMethod(3540, 6.0719, 1.9291, 0, -4.3847, 0.7054, 7.4929);
		testMethod(3545, 6.0816, 1.9291, 0, -4.381, 0.7439, 7.6973);
		testMethod(3550, 6.0912, 1.9291, 0, -4.3772, 0.7834, 7.9018);
		testMethod(3555, 6.1009, 1.9291, 0, -4.3732, 0.8239, 8.1062);
		testMethod(3560, 6.1105, 1.9291, 0, -4.369, 0.8655, 8.3106);
		testMethod(3565, 6.1202, 1.9291, 0, -4.3645, 0.9081, 8.5151);
		testMethod(3570, 6.1298, 1.9291, 0, -4.3599, 0.9517, 8.7195);
		testMethod(3575, 6.1395, 1.9291, 0, -4.355, 0.9963, 8.924);
		testMethod(3580, 6.1491, 1.9291, 0, -4.3499, 1.0419, 9.1284);
		testMethod(3585, 6.1588, 1.9291, 0, -4.3446, 1.0886, 9.3328);
		testMethod(3590, 6.1684, 1.9291, 0, -4.339, 1.1363, 9.5373);
		testMethod(3595, 6.178, 1.9291, 0, -4.3332, 1.185, 9.7417);
		testMethod(3600, 6.1877, 1.9291, 0, -4.3272, 1.2347, 9.9462);
		testMethod(3605, 6.1973, 1.9291, 0, -4.3209, 1.2855, 10.1506);
		testMethod(3610, 6.207, 1.9291, 0, -4.3143, 1.3376, 10.4264);
		testMethod(3615, 6.2166, 1.9291, 0, -4.3075, 1.3893, 10.3403);
		testMethod(3620, 6.2263, 1.9291, 0, -4.3004, 1.44, 10.1358);
		testMethod(3625, 6.2359, 1.9291, 0, -4.2931, 1.4896, 9.9314);
		testMethod(3630, 6.2456, 1.9291, 0, -4.2855, 1.5383, 9.727);
		testMethod(3635, 6.2552, 1.9291, 0, -4.2777, 1.5859, 9.5225);
		testMethod(3640, 6.2649, 1.9291, 0, -4.2697, 1.6325, 9.3181);
		testMethod(3645, 6.2745, 1.9291, 0, -4.2614, 1.678, 9.1136);
		testMethod(3650, 6.2841, 1.9291, 0, -4.2529, 1.7226, 8.9092);
		testMethod(3655, 6.2938, 1.9291, 0, -4.2442, 1.7661, 8.7047);
		testMethod(3660, 6.3034, 1.9291, 0, -4.2353, 1.8086, 8.5003);
		testMethod(3665, 6.3131, 1.9291, 0, -4.2261, 1.8501, 8.2959);
		testMethod(3670, 6.3227, 1.9291, 0, -4.2168, 1.8905, 8.0914);
		testMethod(3675, 6.3324, 1.9291, 0, -4.2072, 1.93, 7.887);
		testMethod(3680, 6.342, 1.9291, 0, -4.1975, 1.9684, 7.6825);
		testMethod(3685, 6.3517, 1.9291, 0, -4.1875, 2.0058, 7.4781);
		testMethod(3690, 6.3613, 1.9291, 0, -4.1774, 2.0422, 7.2737);
		testMethod(3695, 6.371, 1.9291, 0, -4.1671, 2.0775, 7.0692);
		testMethod(3700, 6.3806, 1.9291, 0, -4.1566, 2.1118, 6.8648);
		testMethod(3705, 6.3903, 1.9291, 0, -4.146, 2.1451, 6.6603);
		testMethod(3710, 6.3999, 1.9291, 0, -4.1352, 2.1774, 6.4559);
		testMethod(3715, 6.4095, 1.9291, 0, -4.1242, 2.2087, 6.2515);
		testMethod(3720, 6.4192, 1.9291, 0, -4.1131, 2.2389, 6.047);
		testMethod(3725, 6.4288, 1.9291, 0, -4.1018, 2.2681, 5.8426);
		testMethod(3730, 6.4385, 1.9291, 0, -4.0904, 2.2963, 5.6381);
		testMethod(3735, 6.4481, 1.9291, 0, -4.0789, 2.3235, 5.4337);
		testMethod(3740, 6.4578, 1.9291, 0, -4.0672, 2.3496, 5.2293);
		testMethod(3745, 6.4674, 1.9291, 0, -4.0554, 2.3747, 5.0248);
		testMethod(3750, 6.4771, 1.9291, 0, -4.0434, 2.3988, 4.8204);
		testMethod(3755, 6.4867, 1.9291, 0, -4.0314, 2.4219, 4.6159);
		testMethod(3760, 6.4964, 1.9291, 0, -4.0192, 2.444, 4.4115);
		testMethod(3765, 6.506, 1.9291, 0, -4.0069, 2.465, 4.2071);
		testMethod(3770, 6.5156, 1.9291, 0, -3.9946, 2.485, 4.0026);
		testMethod(3775, 6.5253, 1.9291, 0, -3.9821, 2.504, 3.7982);
		testMethod(3780, 6.5349, 1.9291, 0, -3.9695, 2.522, 3.5937);
		testMethod(3785, 6.5446, 1.9291, 0, -3.9569, 2.5389, 3.3893);
		testMethod(3790, 6.5542, 1.9291, 0, -3.9441, 2.5549, 3.1849);
		testMethod(3795, 6.5639, 1.9291, 0, -3.9313, 2.5698, 2.9804);
		testMethod(3800, 6.5735, 1.9291, 0, -3.9184, 2.5836, 2.776);
		testMethod(3805, 6.5832, 1.9291, 0, -3.9055, 2.5965, 2.5715);
		testMethod(3810, 6.5928, 1.9291, 0, -3.8925, 2.6083, 2.3671);
		testMethod(3815, 6.6025, 1.9291, 0, -3.8794, 2.6191, 2.1626);
		testMethod(3820, 6.6121, 1.9291, 0, -3.8663, 2.6289, 1.9582);
		testMethod(3825, 6.6217, 1.9291, 0, -3.8531, 2.6377, 1.7538);
		testMethod(3830, 6.6314, 1.9291, 0, -3.8399, 2.6455, 1.5493);
		testMethod(3835, 6.641, 1.9291, 0, -3.8267, 2.6522, 1.3449);
		testMethod(3840, 6.6507, 1.9291, 0, -3.8134, 2.6579, 1.1404);
		testMethod(3845, 6.6603, 1.9291, 0, -3.8001, 2.6626, 0.936);
		testMethod(3850, 6.67, 1.9291, 0, -3.7868, 2.6662, 0.7316);
		testMethod(3855, 6.6796, 1.9291, 0, -3.7734, 2.6689, 0.5271);
		testMethod(3860, 6.6893, 1.9291, 0, -3.7601, 2.6705, 0.3227);
		testMethod(3865, 6.6989, 1.9291, 0, -3.7467, 2.6711, 0.1182);
		testMethod(3870, 6.7086, 1.9291, 0, -3.7334, 2.6711, 0.0006);
		testMethod(3875, 6.7182, 1.9291, 0, -3.72, 2.6711, 0);
		testMethod(3880, 6.7278, 1.9291, 0, -3.7067, 2.6711, 0);
		testMethod(3885, 6.7375, 1.9291, 0, -3.6933, 2.6711, 0);
		testMethod(3890, 6.7471, 1.9291, 0, -3.68, 2.6711, 0);
		testMethod(3895, 6.7568, 1.9291, 0, -3.6666, 2.6711, 0);
		testMethod(3900, 6.7664, 1.9291, 0, -3.6532, 2.6711, 0);
		testMethod(3905, 6.7761, 1.9291, 0, -3.6399, 2.6711, 0);
		testMethod(3910, 6.7857, 1.9291, 0, -3.6265, 2.6711, 0);
		testMethod(3915, 6.7954, 1.9291, 0, -3.6132, 2.6711, 0);
		testMethod(3920, 6.805, 1.9291, 0, -3.5998, 2.6711, 0);
		testMethod(3925, 6.8147, 1.9291, 0, -3.5865, 2.6711, 0);
		testMethod(3930, 6.8243, 1.9291, 0, -3.5731, 2.6711, 0);
		testMethod(3935, 6.834, 1.9291, 0, -3.5598, 2.6711, 0);
		testMethod(3940, 6.8436, 1.9291, 0, -3.5464, 2.6711, 0);
		testMethod(3945, 6.8532, 1.9291, 0, -3.533, 2.6711, 0);
		testMethod(3950, 6.8629, 1.9291, 0, -3.5197, 2.6711, 0);
		testMethod(3955, 6.8725, 1.9291, 0, -3.5063, 2.6711, 0);
		testMethod(3960, 6.8822, 1.9291, 0, -3.493, 2.6711, 0);
		testMethod(3965, 6.8918, 1.9291, 0, -3.4796, 2.6711, 0);
		testMethod(3970, 6.9015, 1.9291, 0, -3.4663, 2.6711, 0);
		testMethod(3975, 6.9111, 1.9291, 0, -3.4529, 2.6711, 0);
		testMethod(3980, 6.9208, 1.9291, 0, -3.4396, 2.6711, 0);
		testMethod(3985, 6.9304, 1.9291, 0, -3.4262, 2.6711, 0);
		testMethod(3990, 6.9401, 1.9291, 0, -3.4129, 2.6711, 0);
		testMethod(3995, 6.9497, 1.9291, 0, -3.3995, 2.6711, 0);
		testMethod(4000, 6.9593, 1.9291, 0, -3.3861, 2.6711, 0);
		testMethod(4005, 6.969, 1.9291, 0, -3.3728, 2.6711, 0);
		testMethod(4010, 6.9786, 1.9291, 0, -3.3594, 2.6711, 0);
		testMethod(4015, 6.9883, 1.9291, 0, -3.3461, 2.6711, 0);
		testMethod(4020, 6.9979, 1.9291, 0, -3.3327, 2.6711, 0);
		testMethod(4025, 7.0076, 1.9291, 0, -3.3194, 2.6711, 0);
		testMethod(4030, 7.0172, 1.9291, 0, -3.306, 2.6711, 0);
		testMethod(4035, 7.0269, 1.9291, 0, -3.2927, 2.6711, 0);
		testMethod(4040, 7.0365, 1.9291, 0, -3.2793, 2.6711, 0);
		testMethod(4045, 7.0462, 1.9291, 0, -3.2659, 2.6711, 0);
		testMethod(4050, 7.0558, 1.9291, 0, -3.2526, 2.6711, 0);
		testMethod(4055, 7.0654, 1.9291, 0, -3.2392, 2.6711, 0);
		testMethod(4060, 7.0751, 1.9291, 0, -3.2259, 2.6711, 0);
		testMethod(4065, 7.0847, 1.9291, 0, -3.2125, 2.6711, 0);
		testMethod(4070, 7.0944, 1.9291, 0, -3.1992, 2.6711, 0);
		testMethod(4075, 7.104, 1.9291, 0, -3.1858, 2.6711, 0);
		testMethod(4080, 7.1137, 1.9291, 0, -3.1725, 2.6711, 0);
		testMethod(4085, 7.1233, 1.9291, 0, -3.1591, 2.6711, 0);
		testMethod(4090, 7.133, 1.9291, 0, -3.1457, 2.6711, 0);
		testMethod(4095, 7.1426, 1.9291, 0, -3.1324, 2.6711, 0);
		testMethod(4100, 7.1523, 1.9291, 0, -3.119, 2.6711, 0);
		testMethod(4105, 7.1619, 1.9291, 0, -3.1057, 2.6711, 0);
		testMethod(4110, 7.1716, 1.9291, 0, -3.0923, 2.6711, 0);
		testMethod(4115, 7.1812, 1.9291, 0, -3.079, 2.6711, 0);
		testMethod(4120, 7.1908, 1.9291, 0, -3.0656, 2.6711, 0);
		testMethod(4125, 7.2005, 1.9291, 0, -3.0523, 2.6711, 0);
		testMethod(4130, 7.2101, 1.9291, 0, -3.0389, 2.6711, 0);
		testMethod(4135, 7.2198, 1.9291, 0, -3.0255, 2.6711, 0);
		testMethod(4140, 7.2294, 1.9291, 0, -3.0122, 2.6711, 0);
		testMethod(4145, 7.2391, 1.9291, 0, -2.9988, 2.6711, 0);
		testMethod(4150, 7.2487, 1.9291, 0, -2.9855, 2.6711, 0);
		testMethod(4155, 7.2584, 1.9291, 0, -2.9721, 2.6711, 0);
		testMethod(4160, 7.268, 1.9291, 0, -2.9588, 2.6711, 0);
		testMethod(4165, 7.2777, 1.9291, 0, -2.9454, 2.6711, 0);
		testMethod(4170, 7.2873, 1.9291, 0, -2.9321, 2.6711, 0);
		testMethod(4175, 7.2969, 1.9291, 0, -2.9187, 2.6711, 0);
		testMethod(4180, 7.3066, 1.9291, 0, -2.9054, 2.6711, 0);
		testMethod(4185, 7.3162, 1.9291, 0, -2.892, 2.6711, 0);
		testMethod(4190, 7.3259, 1.9291, 0, -2.8786, 2.6711, 0);
		testMethod(4195, 7.3355, 1.9291, 0, -2.8653, 2.6711, 0);
		testMethod(4200, 7.3452, 1.9291, 0, -2.8519, 2.6711, 0);
		testMethod(4205, 7.3548, 1.9291, 0, -2.8386, 2.6711, 0);
		testMethod(4210, 7.3645, 1.9291, 0, -2.8252, 2.6711, 0);
		testMethod(4215, 7.3741, 1.9291, 0, -2.8119, 2.6711, 0);
		testMethod(4220, 7.3838, 1.9291, 0, -2.7985, 2.6711, 0);
		testMethod(4225, 7.3934, 1.9291, 0, -2.7852, 2.6711, 0);
		testMethod(4230, 7.403, 1.9291, 0, -2.7718, 2.6711, 0);
		testMethod(4235, 7.4127, 1.9291, 0, -2.7584, 2.6711, 0);
		testMethod(4240, 7.4223, 1.9291, 0, -2.7451, 2.6711, 0);
		testMethod(4245, 7.432, 1.9291, 0, -2.7317, 2.6711, 0);
		testMethod(4250, 7.4416, 1.9291, 0, -2.7184, 2.6711, 0);
		testMethod(4255, 7.4513, 1.9291, 0, -2.705, 2.6711, 0);
		testMethod(4260, 7.4609, 1.9291, 0, -2.6917, 2.6711, 0);
		testMethod(4265, 7.4706, 1.9291, 0, -2.6783, 2.6711, 0);
		testMethod(4270, 7.4802, 1.9291, 0, -2.665, 2.6711, 0);
		testMethod(4275, 7.4899, 1.9291, 0, -2.6516, 2.6711, 0);
		testMethod(4280, 7.4995, 1.9291, 0, -2.6382, 2.6711, 0);
		testMethod(4285, 7.5091, 1.9291, 0, -2.6249, 2.6711, 0);
		testMethod(4290, 7.5188, 1.9291, 0, -2.6115, 2.6711, 0);
		testMethod(4295, 7.5284, 1.9291, 0, -2.5982, 2.6711, 0);
		testMethod(4300, 7.5381, 1.9291, 0, -2.5848, 2.6711, 0);
		testMethod(4305, 7.5477, 1.9291, 0, -2.5715, 2.6711, 0);
		testMethod(4310, 7.5574, 1.9291, 0, -2.5581, 2.6711, 0);
		testMethod(4315, 7.567, 1.9291, 0, -2.5448, 2.6711, 0);
		testMethod(4320, 7.5767, 1.9291, 0, -2.5314, 2.6711, 0);
		testMethod(4325, 7.5863, 1.9291, 0, -2.518, 2.6711, 0);
		testMethod(4330, 7.596, 1.9291, 0, -2.5047, 2.6711, 0);
		testMethod(4335, 7.6056, 1.9291, 0, -2.4913, 2.6711, 0);
		testMethod(4340, 7.6153, 1.9291, 0, -2.478, 2.6711, 0);
		testMethod(4345, 7.6249, 1.9291, 0, -2.4646, 2.6711, 0);
		testMethod(4350, 7.6345, 1.9291, 0, -2.4513, 2.6711, 0);
		testMethod(4355, 7.6442, 1.9291, 0, -2.4379, 2.6711, 0);
		testMethod(4360, 7.6538, 1.9291, 0, -2.4246, 2.6711, 0);
		testMethod(4365, 7.6635, 1.9291, 0, -2.4112, 2.6711, 0);
		testMethod(4370, 7.6731, 1.9291, 0, -2.3978, 2.6711, 0);
		testMethod(4375, 7.6828, 1.9291, 0, -2.3845, 2.6711, 0);
		testMethod(4380, 7.6924, 1.9291, 0, -2.3711, 2.6711, 0);
		testMethod(4385, 7.7021, 1.9291, 0, -2.3578, 2.6711, 0);
		testMethod(4390, 7.7117, 1.9291, 0, -2.3444, 2.6711, 0);
		testMethod(4395, 7.7214, 1.9291, 0, -2.3311, 2.6711, 0);
		testMethod(4400, 7.731, 1.9291, 0, -2.3177, 2.6711, 0);
		testMethod(4405, 7.7406, 1.9291, 0, -2.3044, 2.6711, 0);
		testMethod(4410, 7.7503, 1.9291, 0, -2.291, 2.6711, 0);
		testMethod(4415, 7.7599, 1.9291, 0, -2.2777, 2.6711, 0);
		testMethod(4420, 7.7696, 1.9291, 0, -2.2643, 2.6711, 0);
		testMethod(4425, 7.7792, 1.9291, 0, -2.2509, 2.6711, 0);
		testMethod(4430, 7.7889, 1.9291, 0, -2.2376, 2.6711, 0);
		testMethod(4435, 7.7985, 1.9291, 0, -2.2242, 2.6711, 0);
		testMethod(4440, 7.8082, 1.9291, 0, -2.2109, 2.6711, 0);
		testMethod(4445, 7.8178, 1.9291, 0, -2.1975, 2.6711, 0);
		testMethod(4450, 7.8275, 1.9291, 0, -2.1842, 2.6711, 0);
		testMethod(4455, 7.8371, 1.9291, 0, -2.1708, 2.6711, 0);
		testMethod(4460, 7.8467, 1.9291, 0, -2.1575, 2.6711, 0);
		testMethod(4465, 7.8564, 1.9291, 0, -2.1441, 2.6711, 0);
		testMethod(4470, 7.866, 1.9291, 0, -2.1307, 2.6711, 0);
		testMethod(4475, 7.8757, 1.9291, 0, -2.1174, 2.6711, 0);
		testMethod(4480, 7.8853, 1.9291, 0, -2.104, 2.6711, 0);
		testMethod(4485, 7.895, 1.9291, 0, -2.0907, 2.6711, 0);
		testMethod(4490, 7.9046, 1.9291, 0, -2.0773, 2.6711, 0);
		testMethod(4495, 7.9143, 1.9291, 0, -2.064, 2.6711, 0);
		testMethod(4500, 7.9239, 1.9291, 0, -2.0506, 2.6711, 0);
		testMethod(4505, 7.9336, 1.9291, 0, -2.0373, 2.6711, 0);
		testMethod(4510, 7.9432, 1.9291, 0, -2.0239, 2.6711, 0);
		testMethod(4515, 7.9528, 1.9291, 0, -2.0105, 2.6711, 0);
		testMethod(4520, 7.9625, 1.9291, 0, -1.9972, 2.6711, 0);
		testMethod(4525, 7.9721, 1.9291, 0, -1.9838, 2.6711, 0);
		testMethod(4530, 7.9818, 1.9291, 0, -1.9705, 2.6711, 0);
		testMethod(4535, 7.9914, 1.9291, 0, -1.9571, 2.6711, 0);
		testMethod(4540, 8.0011, 1.9291, 0, -1.9438, 2.6711, 0);
		testMethod(4545, 8.0107, 1.9291, 0, -1.9304, 2.6711, 0);
		testMethod(4550, 8.0204, 1.9291, 0, -1.9171, 2.6711, 0);
		testMethod(4555, 8.03, 1.9291, 0, -1.9037, 2.6711, 0);
		testMethod(4560, 8.0397, 1.9291, 0, -1.8903, 2.6711, 0);
		testMethod(4565, 8.0493, 1.9291, 0, -1.877, 2.6711, 0);
		testMethod(4570, 8.059, 1.9291, 0, -1.8636, 2.6711, 0);
		testMethod(4575, 8.0686, 1.9291, 0, -1.8503, 2.6711, 0);
		testMethod(4580, 8.0782, 1.9291, 0, -1.8369, 2.6711, 0);
		testMethod(4585, 8.0879, 1.9291, 0, -1.8236, 2.6711, 0);
		testMethod(4590, 8.0975, 1.9291, 0, -1.8102, 2.6711, 0);
		testMethod(4595, 8.1072, 1.9291, 0, -1.7969, 2.6711, 0);
		testMethod(4600, 8.1168, 1.9291, 0, -1.7835, 2.6711, 0);
		testMethod(4605, 8.1265, 1.9291, 0, -1.7702, 2.6711, 0);
		testMethod(4610, 8.1361, 1.9291, 0, -1.7568, 2.6711, 0);
		testMethod(4615, 8.1458, 1.9291, 0, -1.7434, 2.6711, 0);
		testMethod(4620, 8.1554, 1.9291, 0, -1.7301, 2.6711, 0);
		testMethod(4625, 8.1651, 1.9291, 0, -1.7167, 2.6711, 0);
		testMethod(4630, 8.1747, 1.9291, 0, -1.7034, 2.6711, 0);
		testMethod(4635, 8.1843, 1.9291, 0, -1.69, 2.6711, 0);
		testMethod(4640, 8.194, 1.9291, 0, -1.6767, 2.6711, 0);
		testMethod(4645, 8.2036, 1.9291, 0, -1.6633, 2.6711, 0);
		testMethod(4650, 8.2133, 1.9291, 0, -1.65, 2.6711, 0);
		testMethod(4655, 8.2229, 1.9291, 0, -1.6366, 2.6711, 0);
		testMethod(4660, 8.2326, 1.9291, 0, -1.6232, 2.6711, 0);
		testMethod(4665, 8.2422, 1.9291, 0, -1.6099, 2.6711, 0);
		testMethod(4670, 8.2519, 1.9291, 0, -1.5965, 2.6711, 0);
		testMethod(4675, 8.2615, 1.9291, 0, -1.5832, 2.6711, 0);
		testMethod(4680, 8.2712, 1.9291, 0, -1.5698, 2.6711, 0);
		testMethod(4685, 8.2808, 1.9291, 0, -1.5565, 2.6711, 0);
		testMethod(4690, 8.2904, 1.9291, 0, -1.5431, 2.6711, 0);
		testMethod(4695, 8.3001, 1.9291, 0, -1.5298, 2.6711, 0);
		testMethod(4700, 8.3097, 1.9291, 0, -1.5164, 2.6711, 0);
		testMethod(4705, 8.3194, 1.9291, 0, -1.503, 2.6711, 0);
		testMethod(4710, 8.329, 1.9291, 0, -1.4897, 2.6711, 0);
		testMethod(4715, 8.3387, 1.9291, 0, -1.4763, 2.6711, 0);
		testMethod(4720, 8.3483, 1.9291, 0, -1.463, 2.6711, 0);
		testMethod(4725, 8.358, 1.9291, 0, -1.4496, 2.6711, 0);
		testMethod(4730, 8.3676, 1.9291, 0, -1.4363, 2.6711, 0);
		testMethod(4735, 8.3773, 1.9291, 0, -1.4229, 2.6711, 0);
		testMethod(4740, 8.3869, 1.9291, 0, -1.4096, 2.6711, 0);
		testMethod(4745, 8.3965, 1.9291, 0, -1.3962, 2.6711, 0);
		testMethod(4750, 8.4062, 1.9291, 0, -1.3828, 2.6711, 0);
		testMethod(4755, 8.4158, 1.9291, 0, -1.3695, 2.6711, 0);
		testMethod(4760, 8.4255, 1.9291, 0, -1.3561, 2.6711, 0);
		testMethod(4765, 8.4351, 1.9291, 0, -1.3428, 2.6711, 0);
		testMethod(4770, 8.4448, 1.9291, 0, -1.3294, 2.6711, 0);
		testMethod(4775, 8.4544, 1.9291, 0, -1.3161, 2.6711, 0);
		testMethod(4780, 8.4641, 1.9291, 0, -1.3027, 2.6711, 0);
		testMethod(4785, 8.4737, 1.9291, 0, -1.2894, 2.6711, 0);
		testMethod(4790, 8.4834, 1.9291, 0, -1.276, 2.6711, 0);
		testMethod(4795, 8.493, 1.9291, 0, -1.2626, 2.6711, 0);
		testMethod(4800, 8.5027, 1.9291, 0, -1.2493, 2.6711, 0);
		testMethod(4805, 8.5123, 1.9291, 0, -1.2359, 2.6711, 0);
		testMethod(4810, 8.5219, 1.9291, 0, -1.2226, 2.6711, 0);
		testMethod(4815, 8.5316, 1.9291, 0, -1.2092, 2.6711, 0);
		testMethod(4820, 8.5412, 1.9291, 0, -1.1959, 2.6711, 0);
		testMethod(4825, 8.5509, 1.9291, 0, -1.1825, 2.6711, 0);
		testMethod(4830, 8.5605, 1.9291, 0, -1.1692, 2.6711, 0);
		testMethod(4835, 8.5702, 1.9291, 0, -1.1558, 2.6711, 0);
		testMethod(4840, 8.5798, 1.9291, 0, -1.1425, 2.6711, 0);
		testMethod(4845, 8.5895, 1.9291, 0, -1.1291, 2.6711, 0);
		testMethod(4850, 8.5991, 1.9291, 0, -1.1157, 2.6711, 0);
		testMethod(4855, 8.6088, 1.9291, 0, -1.1024, 2.6711, 0);
		testMethod(4860, 8.6184, 1.9291, 0, -1.089, 2.6711, 0);
		testMethod(4865, 8.628, 1.9291, 0, -1.0757, 2.6711, 0);
		testMethod(4870, 8.6377, 1.9291, 0, -1.0623, 2.6711, 0);
		testMethod(4875, 8.6473, 1.9291, 0, -1.049, 2.6711, 0);
		testMethod(4880, 8.657, 1.9291, 0, -1.0356, 2.6711, 0);
		testMethod(4885, 8.6666, 1.9291, 0, -1.0223, 2.6711, 0);
		testMethod(4890, 8.6763, 1.9291, 0, -1.0089, 2.6711, 0);
		testMethod(4895, 8.6859, 1.9291, 0, -0.9955, 2.6711, 0);
		testMethod(4900, 8.6956, 1.9291, 0, -0.9822, 2.6711, 0);
		testMethod(4905, 8.7052, 1.9291, 0, -0.9688, 2.6711, 0);
		testMethod(4910, 8.7149, 1.9291, 0, -0.9555, 2.6711, 0);
		testMethod(4915, 8.7245, 1.9291, 0, -0.9421, 2.6711, 0);
		testMethod(4920, 8.7341, 1.9291, 0, -0.9288, 2.6711, 0);
		testMethod(4925, 8.7438, 1.9291, 0, -0.9154, 2.6711, 0);
		testMethod(4930, 8.7534, 1.9291, 0, -0.9021, 2.6711, 0);
		testMethod(4935, 8.7631, 1.9291, 0, -0.8887, 2.6711, 0);
		testMethod(4940, 8.7727, 1.9291, 0, -0.8753, 2.6711, 0);
		testMethod(4945, 8.7824, 1.9291, 0, -0.862, 2.6711, 0);
		testMethod(4950, 8.792, 1.9291, 0, -0.8486, 2.6711, 0);
		testMethod(4955, 8.8017, 1.9291, 0, -0.8353, 2.6711, 0);
		testMethod(4960, 8.8113, 1.9291, 0, -0.8219, 2.6711, 0);
		testMethod(4965, 8.821, 1.9291, 0, -0.8086, 2.6711, 0);
		testMethod(4970, 8.8306, 1.9291, 0, -0.7952, 2.6711, 0);
		testMethod(4975, 8.8402, 1.9291, 0, -0.7819, 2.6711, 0);
		testMethod(4980, 8.8499, 1.9291, 0, -0.7685, 2.6711, 0);
		testMethod(4985, 8.8595, 1.9291, 0, -0.7551, 2.6711, 0);
		testMethod(4990, 8.8692, 1.9291, 0, -0.7418, 2.6711, 0);
		testMethod(4995, 8.8788, 1.9291, 0, -0.7284, 2.6711, 0);
		testMethod(5000, 8.8885, 1.9291, 0, -0.7151, 2.6711, 0);
		testMethod(5005, 8.8981, 1.9291, 0, -0.7017, 2.6711, 0);
		testMethod(5010, 8.9078, 1.9291, 0, -0.6884, 2.6711, 0);
		testMethod(5015, 8.9174, 1.9291, 0, -0.675, 2.6709, -0.0334);
		testMethod(5020, 8.9271, 1.9291, 0, -0.6617, 2.6698, -0.2191);
		testMethod(5025, 8.9367, 1.9291, 0, -0.6483, 2.6677, -0.4235);
		testMethod(5030, 8.9464, 1.9291, 0, -0.635, 2.6645, -0.6279);
		testMethod(5035, 8.956, 1.9291, 0, -0.6217, 2.6604, -0.8324);
		testMethod(5040, 8.9656, 1.9291, 0, -0.6084, 2.6552, -1.0368);
		testMethod(5045, 8.9753, 1.9291, 0, -0.5951, 2.649, -1.2413);
		testMethod(5050, 8.9849, 1.9291, 0, -0.5819, 2.6418, -1.4457);
		testMethod(5055, 8.9946, 1.9291, 0, -0.5687, 2.6335, -1.6501);
		testMethod(5060, 9.0042, 1.9291, 0, -0.5556, 2.6242, -1.8546);
		testMethod(5065, 9.0139, 1.9291, 0, -0.5425, 2.6139, -2.059);
		testMethod(5070, 9.0235, 1.9291, 0, -0.5294, 2.6026, -2.2635);
		testMethod(5075, 9.0332, 1.9291, 0, -0.5164, 2.5903, -2.4679);
		testMethod(5080, 9.0428, 1.9291, 0, -0.5035, 2.5769, -2.6723);
		testMethod(5085, 9.0525, 1.9291, 0, -0.4907, 2.5625, -2.8768);
		testMethod(5090, 9.0621, 1.9291, 0, -0.4779, 2.5471, -3.0812);
		testMethod(5095, 9.0717, 1.9291, 0, -0.4652, 2.5307, -3.2857);
		testMethod(5100, 9.0814, 1.9291, 0, -0.4526, 2.5133, -3.4901);
		testMethod(5105, 9.091, 1.9291, 0, -0.4401, 2.4948, -3.6946);
		testMethod(5110, 9.1007, 1.9291, 0, -0.4277, 2.4753, -3.899);
		testMethod(5115, 9.1103, 1.9291, 0, -0.4153, 2.4548, -4.1034);
		testMethod(5120, 9.12, 1.9291, 0, -0.4031, 2.4332, -4.3079);
		testMethod(5125, 9.1296, 1.9291, 0, -0.391, 2.4107, -4.5123);
		testMethod(5130, 9.1393, 1.9291, 0, -0.379, 2.3871, -4.7168);
		testMethod(5135, 9.1489, 1.9291, 0, -0.3671, 2.3625, -4.9212);
		testMethod(5140, 9.1586, 1.9291, 0, -0.3554, 2.3368, -5.1256);
		testMethod(5145, 9.1682, 1.9291, 0, -0.3438, 2.3102, -5.3301);
		testMethod(5150, 9.1778, 1.9291, 0, -0.3323, 2.2825, -5.5345);
		testMethod(5155, 9.1875, 1.9291, 0, -0.3209, 2.2538, -5.739);
		testMethod(5160, 9.1971, 1.9291, 0, -0.3097, 2.2241, -5.9434);
		testMethod(5165, 9.2068, 1.9291, 0, -0.2987, 2.1934, -6.1478);
		testMethod(5170, 9.2164, 1.9291, 0, -0.2878, 2.1616, -6.3523);
		testMethod(5175, 9.2261, 1.9291, 0, -0.2771, 2.1288, -6.5567);
		testMethod(5180, 9.2357, 1.9291, 0, -0.2665, 2.095, -6.7612);
		testMethod(5185, 9.2454, 1.9291, 0, -0.2561, 2.0602, -6.9656);
		testMethod(5190, 9.255, 1.9291, 0, -0.2459, 2.0243, -7.17);
		testMethod(5195, 9.2647, 1.9291, 0, -0.2359, 1.9875, -7.3745);
		testMethod(5200, 9.2743, 1.9291, 0, -0.226, 1.9496, -7.5789);
		testMethod(5205, 9.284, 1.9291, 0, -0.2164, 1.9107, -7.7834);
		testMethod(5210, 9.2936, 1.9291, 0, -0.2069, 1.8707, -7.9878);
		testMethod(5215, 9.3032, 1.9291, 0, -0.1977, 1.8298, -8.1922);
		testMethod(5220, 9.3129, 1.9291, 0, -0.1886, 1.7878, -8.3967);
		testMethod(5225, 9.3225, 1.9291, 0, -0.1798, 1.7448, -8.6011);
		testMethod(5230, 9.3322, 1.9291, 0, -0.1712, 1.7007, -8.8056);
		testMethod(5235, 9.3418, 1.9291, 0, -0.1628, 1.6557, -9.01);
		testMethod(5240, 9.3515, 1.9291, 0, -0.1546, 1.6096, -9.2145);
		testMethod(5245, 9.3611, 1.9291, 0, -0.1467, 1.5625, -9.4189);
		testMethod(5250, 9.3708, 1.9291, 0, -0.139, 1.5144, -9.6233);
		testMethod(5255, 9.3804, 1.9291, 0, -0.1316, 1.4653, -9.8278);
		testMethod(5260, 9.3901, 1.9291, 0, -0.1244, 1.4151, -10.0322);
		testMethod(5265, 9.3997, 1.9291, 0, -0.1174, 1.3639, -10.2367);
		testMethod(5270, 9.4093, 1.9291, 0, -0.1107, 1.3116, -10.47);
		testMethod(5275, 9.419, 1.9291, 0, -0.1043, 1.2603, -10.2542);
		testMethod(5280, 9.4286, 1.9291, 0, -0.0981, 1.2101, -10.0498);
		testMethod(5285, 9.4383, 1.9291, 0, -0.0922, 1.1608, -9.8453);
		testMethod(5290, 9.4479, 1.9291, 0, -0.0865, 1.1126, -9.6409);
		testMethod(5295, 9.4576, 1.9291, 0, -0.0811, 1.0654, -9.4365);
		testMethod(5300, 9.4672, 1.9291, 0, -0.0759, 1.0193, -9.232);
		testMethod(5305, 9.4769, 1.9291, 0, -0.0709, 0.9741, -9.0276);
		testMethod(5310, 9.4865, 1.9291, 0, -0.0661, 0.93, -8.8231);
		testMethod(5315, 9.4962, 1.9291, 0, -0.0616, 0.8869, -8.6187);
		testMethod(5320, 9.5058, 1.9291, 0, -0.0573, 0.8449, -8.4143);
		testMethod(5325, 9.5154, 1.9291, 0, -0.0531, 0.8038, -8.2098);
		testMethod(5330, 9.5251, 1.9291, 0, -0.0492, 0.7638, -8.0054);
		testMethod(5335, 9.5347, 1.9291, 0, -0.0455, 0.7248, -7.8009);
		testMethod(5340, 9.5444, 1.9291, 0, -0.042, 0.6868, -7.5965);
		testMethod(5345, 9.554, 1.9291, 0, -0.0386, 0.6498, -7.3921);
		testMethod(5350, 9.5637, 1.9291, 0, -0.0355, 0.6139, -7.1876);
		testMethod(5355, 9.5733, 1.9291, 0, -0.0325, 0.579, -6.9832);
		testMethod(5360, 9.583, 1.9291, 0, -0.0297, 0.5451, -6.7787);
		testMethod(5365, 9.5926, 1.9291, 0, -0.027, 0.5122, -6.5743);
		testMethod(5370, 9.6023, 1.9291, 0, -0.0245, 0.4804, -6.3698);
		testMethod(5375, 9.6119, 1.9291, 0, -0.0222, 0.4495, -6.1654);
		testMethod(5380, 9.6215, 1.9291, 0, -0.02, 0.4197, -5.961);
		testMethod(5385, 9.6312, 1.9291, 0, -0.018, 0.391, -5.7565);
		testMethod(5390, 9.6408, 1.9291, 0, -0.0161, 0.3632, -5.5521);
		testMethod(5395, 9.6505, 1.9291, 0, -0.0144, 0.3365, -5.3476);
		testMethod(5400, 9.6601, 1.9288, -0.074, -0.0128, 0.3107, -5.1546);
		testMethod(5405, 9.6698, 1.928, -0.1479, -0.0113, 0.2859, -4.9579);
		testMethod(5410, 9.6794, 1.9269, -0.2219, -0.0099, 0.2621, -4.7579);
		testMethod(5415, 9.689, 1.9254, -0.2958, -0.0087, 0.2393, -4.5549);
		testMethod(5420, 9.6987, 1.9236, -0.3698, -0.0075, 0.2176, -4.3495);
		testMethod(5425, 9.7083, 1.9214, -0.4437, -0.0065, 0.1969, -4.1419);
		testMethod(5430, 9.7179, 1.9188, -0.5177, -0.0055, 0.1772, -3.9325);
		testMethod(5435, 9.7275, 1.9158, -0.5916, -0.0047, 0.1586, -3.7219);
		testMethod(5440, 9.737, 1.9125, -0.6656, -0.004, 0.1411, -3.5102);
		testMethod(5445, 9.7466, 1.9088, -0.7396, -0.0033, 0.1246, -3.2981);
		testMethod(5450, 9.7561, 1.9047, -0.8135, -0.0027, 0.1091, -3.0857);
		testMethod(5455, 9.7656, 1.9003, -0.8875, -0.0022, 0.0948, -2.8736);
		testMethod(5460, 9.7751, 1.8955, -0.9614, -0.0018, 0.0815, -2.662);
		testMethod(5465, 9.7846, 1.8903, -1.0354, -0.0014, 0.0692, -2.4515);
		testMethod(5470, 9.794, 1.8848, -1.1093, -0.0011, 0.058, -2.2422);
		testMethod(5475, 9.8034, 1.8788, -1.1833, -0.0008, 0.0478, -2.0347);
		testMethod(5480, 9.8128, 1.8726, -1.2572, -0.0006, 0.0387, -1.8292);
		testMethod(5485, 9.8222, 1.8659, -1.3312, -0.0004, 0.0305, -1.6262);
		testMethod(5490, 9.8315, 1.8589, -1.4052, -0.0003, 0.0234, -1.4259);
		testMethod(5495, 9.8407, 1.8515, -1.4791, -0.0002, 0.0173, -1.2288);
		testMethod(5500, 9.85, 1.8437, -1.5531, -0.0001, 0.0121, -1.035);
		testMethod(5505, 9.8592, 1.8356, -1.627, -0.0001, 0.0079, -0.8451);
		testMethod(5510, 9.8683, 1.8271, -1.701, -0, 0.0046, -0.6592);
		testMethod(5515, 9.8775, 1.8182, -1.7749, -0, 0.0022, -0.4777);
		testMethod(5520, 9.8865, 1.809, -1.8489, -0, 0.0007, -0.3008);
		testMethod(5525, 9.8955, 1.7993, -1.9228, -0, 0, -0.129);
		testMethod(5530, 9.9045, 1.7894, -1.9968, -0, 0, -0.006);
		testMethod(5535, 9.9134, 1.779, -2.0708, -0, 0, 0);
		testMethod(5540, 9.9223, 1.7683, -2.1447, -0, 0, 0);
		testMethod(5545, 9.9311, 1.7572, -2.2187, -0, 0, 0);
		testMethod(5550, 9.9399, 1.7457, -2.2926, -0, 0, 0);
		testMethod(5555, 9.9486, 1.7339, -2.3666, -0, 0, 0);
		testMethod(5560, 9.9572, 1.7217, -2.4405, -0, 0, 0);
		testMethod(5565, 9.9658, 1.7091, -2.5145, -0, 0, 0);
		testMethod(5570, 9.9743, 1.6962, -2.5884, -0, 0, 0);
		testMethod(5575, 9.9827, 1.6829, -2.6624, -0, 0, 0);
		testMethod(5580, 9.9911, 1.6692, -2.7364, -0, 0, 0);
		testMethod(5585, 9.9994, 1.6551, -2.8103, -0, 0, 0);
		testMethod(5590, 10.0077, 1.6407, -2.8843, -0, 0, 0);
		testMethod(5595, 10.0158, 1.6259, -2.9582, -0, 0, 0);
		testMethod(5600, 10.0239, 1.6108, -3.0322, -0, 0, 0);
		testMethod(5605, 10.032, 1.5952, -3.1061, -0, 0, 0);
		testMethod(5610, 10.0399, 1.5793, -3.1801, -0, 0, 0);
		testMethod(5615, 10.0477, 1.5631, -3.254, -0, 0, 0);
		testMethod(5620, 10.0555, 1.5464, -3.328, -0, 0, 0);
		testMethod(5625, 10.0632, 1.5294, -3.402, -0, 0, 0);
		testMethod(5630, 10.0708, 1.512, -3.4759, -0, 0, 0);
		testMethod(5635, 10.0783, 1.4946, -3.4759, -0, 0, 0);
		testMethod(5640, 10.0858, 1.4773, -3.4759, -0, 0, 0);
		testMethod(5645, 10.0931, 1.4599, -3.4759, -0, 0, 0);
		testMethod(5650, 10.1004, 1.4425, -3.4759, -0, 0, 0);
		testMethod(5655, 10.1075, 1.4251, -3.4759, -0, 0, 0);
		testMethod(5660, 10.1146, 1.4077, -3.4759, -0, 0, 0);
		testMethod(5665, 10.1216, 1.3904, -3.4759, -0, 0, 0);
		testMethod(5670, 10.1285, 1.373, -3.4759, -0, 0, 0);
		testMethod(5675, 10.1353, 1.3556, -3.4759, -0, 0, 0);
		testMethod(5680, 10.1421, 1.3382, -3.4759, -0, 0, 0);
		testMethod(5685, 10.1487, 1.3208, -3.4759, -0, 0, 0);
		testMethod(5690, 10.1553, 1.3035, -3.4759, -0, 0, 0);
		testMethod(5695, 10.1617, 1.2861, -3.4759, -0, 0, 0);
		testMethod(5700, 10.1681, 1.2687, -3.4759, -0, 0, 0);
		testMethod(5705, 10.1744, 1.2513, -3.4759, -0, 0, 0);
		testMethod(5710, 10.1806, 1.2339, -3.4759, -0, 0, 0);
		testMethod(5715, 10.1868, 1.2166, -3.4759, -0, 0, 0);
		testMethod(5720, 10.1928, 1.1992, -3.4759, -0, 0, 0);
		testMethod(5725, 10.1988, 1.1818, -3.4759, -0, 0, 0);
		testMethod(5730, 10.2046, 1.1644, -3.4759, -0, 0, 0);
		testMethod(5735, 10.2104, 1.1471, -3.4759, -0, 0, 0);
		testMethod(5740, 10.2161, 1.1297, -3.4759, -0, 0, 0);
		testMethod(5745, 10.2217, 1.1123, -3.4759, -0, 0, 0);
		testMethod(5750, 10.2272, 1.0949, -3.4759, -0, 0, 0);
		testMethod(5755, 10.2327, 1.0775, -3.4759, -0, 0, 0);
		testMethod(5760, 10.238, 1.0602, -3.4759, -0, 0, 0);
		testMethod(5765, 10.2433, 1.0428, -3.4759, -0, 0, 0);
		testMethod(5770, 10.2484, 1.0254, -3.4759, -0, 0, 0);
		testMethod(5775, 10.2535, 1.008, -3.4759, -0, 0, 0);
		testMethod(5780, 10.2585, 0.9906, -3.4759, -0, 0, 0);
		testMethod(5785, 10.2634, 0.9733, -3.4759, -0, 0, 0);
		testMethod(5790, 10.2682, 0.9559, -3.4759, -0, 0, 0);
		testMethod(5795, 10.273, 0.9385, -3.4759, -0, 0, 0);
		testMethod(5800, 10.2776, 0.9211, -3.4759, -0, 0, 0);
		testMethod(5805, 10.2822, 0.9037, -3.4759, -0, 0, 0);
		testMethod(5810, 10.2867, 0.8864, -3.4759, -0, 0, 0);
		testMethod(5815, 10.2911, 0.869, -3.4759, -0, 0, 0);
		testMethod(5820, 10.2954, 0.8516, -3.4759, -0, 0, 0);
		testMethod(5825, 10.2996, 0.8342, -3.4759, -0, 0, 0);
		testMethod(5830, 10.3037, 0.8168, -3.4759, -0, 0, 0);
		testMethod(5835, 10.3077, 0.7995, -3.4759, -0, 0, 0);
		testMethod(5840, 10.3117, 0.7821, -3.4759, -0, 0, 0);
		testMethod(5845, 10.3156, 0.7647, -3.4759, -0, 0, 0);
		testMethod(5850, 10.3193, 0.7473, -3.4759, -0, 0, 0);
		testMethod(5855, 10.323, 0.7299, -3.4759, -0, 0, 0);
		testMethod(5860, 10.3266, 0.7126, -3.4759, -0, 0, 0);
		testMethod(5865, 10.3302, 0.6952, -3.4759, -0, 0, 0);
		testMethod(5870, 10.3336, 0.6778, -3.4759, -0, 0, 0);
		testMethod(5875, 10.3369, 0.6604, -3.4759, -0, 0, 0);
		testMethod(5880, 10.3402, 0.643, -3.4759, -0, 0, 0);
		testMethod(5885, 10.3434, 0.6257, -3.4759, -0, 0, 0);
		testMethod(5890, 10.3465, 0.6083, -3.4759, -0, 0, 0);
		testMethod(5895, 10.3494, 0.5909, -3.4759, -0, 0, 0);
		testMethod(5900, 10.3524, 0.5735, -3.4759, -0, 0, 0);
		testMethod(5905, 10.3552, 0.5561, -3.4759, -0, 0, 0);
		testMethod(5910, 10.3579, 0.5388, -3.4759, -0, 0, 0);
		testMethod(5915, 10.3606, 0.5214, -3.4759, -0, 0, 0);
		testMethod(5920, 10.3631, 0.504, -3.4759, -0, 0, 0);
		testMethod(5925, 10.3656, 0.4866, -3.4759, -0, 0, 0);
		testMethod(5930, 10.368, 0.4692, -3.4759, -0, 0, 0);
		testMethod(5935, 10.3703, 0.4519, -3.4759, -0, 0, 0);
		testMethod(5940, 10.3725, 0.4345, -3.4759, -0, 0, 0);
		testMethod(5945, 10.3746, 0.4171, -3.4759, -0, 0, 0);
		testMethod(5950, 10.3767, 0.3997, -3.4759, -0, 0, 0);
		testMethod(5955, 10.3786, 0.3827, -3.402, -0, 0, 0);
		testMethod(5960, 10.3805, 0.3661, -3.328, -0, 0, 0);
		testMethod(5965, 10.3823, 0.3498, -3.254, -0, 0, 0);
		testMethod(5970, 10.384, 0.3339, -3.1801, -0, 0, 0);
		testMethod(5975, 10.3856, 0.3184, -3.1061, -0, 0, 0);
		testMethod(5980, 10.3872, 0.3032, -3.0322, -0, 0, 0);
		testMethod(5985, 10.3887, 0.2884, -2.9582, -0, 0, 0);
		testMethod(5990, 10.3901, 0.274, -2.8843, -0, 0, 0);
		testMethod(5995, 10.3914, 0.26, -2.8103, -0, 0, 0);
		testMethod(6000, 10.3927, 0.2463, -2.7364, -0, 0, 0);
		testMethod(6005, 10.3939, 0.233, -2.6624, -0, 0, 0);
		testMethod(6010, 10.395, 0.22, -2.5884, -0, 0, 0);
		testMethod(6015, 10.3961, 0.2074, -2.5145, -0, 0, 0);
		testMethod(6020, 10.3971, 0.1952, -2.4405, -0, 0, 0);
		testMethod(6025, 10.398, 0.1834, -2.3666, -0, 0, 0);
		testMethod(6030, 10.3989, 0.1719, -2.2926, -0, 0, 0);
		testMethod(6035, 10.3998, 0.1609, -2.2187, -0, 0, 0);
		testMethod(6040, 10.4005, 0.1501, -2.1447, -0, 0, 0);
		testMethod(6045, 10.4013, 0.1398, -2.0708, -0, 0, 0);
		testMethod(6050, 10.4019, 0.1298, -1.9968, -0, 0, 0);
		testMethod(6055, 10.4026, 0.1202, -1.9228, -0, 0, 0);
		testMethod(6060, 10.4031, 0.1109, -1.8489, -0, 0, 0);
		testMethod(6065, 10.4037, 0.1021, -1.7749, -0, 0, 0);
		testMethod(6070, 10.4042, 0.0936, -1.701, -0, 0, 0);
		testMethod(6075, 10.4046, 0.0854, -1.627, -0, 0, 0);
		testMethod(6080, 10.405, 0.0777, -1.5531, -0, 0, 0);
		testMethod(6085, 10.4054, 0.0703, -1.4791, -0, 0, 0);
		testMethod(6090, 10.4057, 0.0632, -1.4052, -0, 0, 0);
		testMethod(6095, 10.406, 0.0566, -1.3312, -0, 0, 0);
		testMethod(6100, 10.4063, 0.0503, -1.2572, -0, 0, 0);
		testMethod(6105, 10.4065, 0.0444, -1.1833, -0, 0, 0);
		testMethod(6110, 10.4067, 0.0388, -1.1093, -0, 0, 0);
		testMethod(6115, 10.4069, 0.0336, -1.0354, -0, 0, 0);
		testMethod(6120, 10.4071, 0.0288, -0.9614, -0, 0, 0);
		testMethod(6125, 10.4072, 0.0244, -0.8875, -0, 0, 0);
		testMethod(6130, 10.4073, 0.0203, -0.8135, -0, 0, 0);
		testMethod(6135, 10.4074, 0.0166, -0.7396, -0, 0, 0);
		testMethod(6140, 10.4075, 0.0133, -0.6656, -0, 0, 0);
		testMethod(6145, 10.4075, 0.0104, -0.5916, -0, 0, 0);
		testMethod(6150, 10.4076, 0.0078, -0.5177, -0, 0, 0);
		testMethod(6155, 10.4076, 0.0055, -0.4437, -0, 0, 0);
		testMethod(6160, 10.4076, 0.0037, -0.3698, -0, 0, 0);
		testMethod(6165, 10.4077, 0.0022, -0.2958, -0, 0, 0);
		testMethod(6170, 10.4077, 0.0011, -0.2219, -0, 0, 0);
		testMethod(6175, 10.4077, 0.0004, -0.1479, -0, 0, 0);
		testMethod(6180, 10.4077, 0, -0.074, -0, 0, 0);
		testMethod(6185, 10.4077, 0, 0, -0, 0, 0);
		testMethod(6185, 10.4077, 0, 0, -0, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}