package org.usfirst.frc.team1197.robot;

public class BoilerPos1 extends TorTrajectory {

	public BoilerPos1() {
		super(-2.3329, -1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0623, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1247, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.187, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2494, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3117, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.374, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.4364, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4987, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5611, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6234, 0, 0, 0);
		testMethod(55, -0.0004, -0.0206, -0.6858, 0, 0, 0);
		testMethod(60, -0.0005, -0.0243, -0.7481, 0, 0, 0);
		testMethod(65, -0.0006, -0.0284, -0.8104, 0, 0, 0);
		testMethod(70, -0.0008, -0.0327, -0.8728, 0, 0, 0);
		testMethod(75, -0.001, -0.0374, -0.9351, 0, 0, 0);
		testMethod(80, -0.0012, -0.0424, -0.9975, 0, 0, 0);
		testMethod(85, -0.0014, -0.0477, -1.0598, 0, 0, 0);
		testMethod(90, -0.0016, -0.0533, -1.1221, 0, 0, 0);
		testMethod(95, -0.0019, -0.0592, -1.1845, 0, 0, 0);
		testMethod(100, -0.0022, -0.0655, -1.2468, 0, 0, 0);
		testMethod(105, -0.0026, -0.072, -1.3092, 0, 0, 0);
		testMethod(110, -0.003, -0.0789, -1.3715, 0, 0, 0);
		testMethod(115, -0.0034, -0.086, -1.4339, 0, 0, 0);
		testMethod(120, -0.0038, -0.0935, -1.4962, 0, 0, 0);
		testMethod(125, -0.0043, -0.1013, -1.5585, 0, 0, 0);
		testMethod(130, -0.0048, -0.1094, -1.6209, 0, 0, 0);
		testMethod(135, -0.0054, -0.1178, -1.6832, 0, 0, 0);
		testMethod(140, -0.006, -0.1266, -1.7456, 0, 0, 0);
		testMethod(145, -0.0067, -0.1356, -1.8079, 0, 0, 0);
		testMethod(150, -0.0074, -0.1449, -1.8702, 0, 0, 0);
		testMethod(155, -0.0081, -0.1546, -1.9326, 0, 0, 0);
		testMethod(160, -0.0089, -0.1646, -1.9949, 0, 0, 0);
		testMethod(165, -0.0098, -0.1749, -2.0573, 0, 0, 0);
		testMethod(170, -0.0107, -0.1855, -2.1196, 0, 0, 0);
		testMethod(175, -0.0116, -0.1964, -2.182, 0, 0, 0);
		testMethod(180, -0.0126, -0.2076, -2.2443, 0, 0, 0);
		testMethod(185, -0.0137, -0.2191, -2.3066, 0, 0, 0);
		testMethod(190, -0.0148, -0.231, -2.369, 0, 0, 0);
		testMethod(195, -0.016, -0.2431, -2.4313, 0, 0, 0);
		testMethod(200, -0.0173, -0.2556, -2.4937, 0, 0, 0);
		testMethod(205, -0.0186, -0.2681, -2.4937, 0, 0, 0);
		testMethod(210, -0.0199, -0.2805, -2.4937, 0, 0, 0);
		testMethod(215, -0.0214, -0.293, -2.4937, 0, 0, 0);
		testMethod(220, -0.0229, -0.3055, -2.4937, 0, 0, 0);
		testMethod(225, -0.0244, -0.3179, -2.4937, 0, 0, 0);
		testMethod(230, -0.026, -0.3304, -2.4937, 0, 0, 0);
		testMethod(235, -0.0277, -0.3429, -2.4937, 0, 0, 0);
		testMethod(240, -0.0295, -0.3553, -2.4937, 0, 0, 0);
		testMethod(245, -0.0313, -0.3678, -2.4937, 0, 0, 0);
		testMethod(250, -0.0332, -0.3803, -2.4937, 0, 0, 0);
		testMethod(255, -0.0351, -0.3928, -2.4937, 0, 0, 0);
		testMethod(260, -0.0371, -0.4052, -2.4937, 0, 0, 0);
		testMethod(265, -0.0391, -0.4177, -2.4937, 0, 0, 0);
		testMethod(270, -0.0413, -0.4302, -2.4937, 0, 0, 0);
		testMethod(275, -0.0434, -0.4426, -2.4937, 0, 0, 0);
		testMethod(280, -0.0457, -0.4551, -2.4937, 0, 0, 0);
		testMethod(285, -0.048, -0.4676, -2.4937, 0, 0, 0);
		testMethod(290, -0.0504, -0.48, -2.4937, 0, 0, 0);
		testMethod(295, -0.0528, -0.4925, -2.4937, 0, 0, 0);
		testMethod(300, -0.0553, -0.505, -2.4937, 0, 0, 0);
		testMethod(305, -0.0578, -0.5174, -2.4937, 0, 0, 0);
		testMethod(310, -0.0605, -0.5299, -2.4937, 0, 0, 0);
		testMethod(315, -0.0631, -0.5424, -2.4937, 0, 0, 0);
		testMethod(320, -0.0659, -0.5548, -2.4937, 0, 0, 0);
		testMethod(325, -0.0687, -0.5673, -2.4937, 0, 0, 0);
		testMethod(330, -0.0716, -0.5798, -2.4937, 0, 0, 0);
		testMethod(335, -0.0745, -0.5922, -2.4937, 0, 0, 0);
		testMethod(340, -0.0775, -0.6047, -2.4937, 0, 0, 0);
		testMethod(345, -0.0805, -0.6172, -2.4937, 0, 0, 0);
		testMethod(350, -0.0836, -0.6296, -2.4937, 0, 0, 0);
		testMethod(355, -0.0868, -0.6421, -2.4937, 0, 0, 0);
		testMethod(360, -0.0901, -0.6546, -2.4937, 0, 0, 0);
		testMethod(365, -0.0934, -0.6671, -2.4937, 0, 0, 0);
		testMethod(370, -0.0967, -0.6795, -2.4937, 0, 0, 0);
		testMethod(375, -0.1002, -0.692, -2.4937, 0, 0, 0);
		testMethod(380, -0.1037, -0.7045, -2.4937, 0, 0, 0);
		testMethod(385, -0.1072, -0.7169, -2.4937, 0, 0, 0);
		testMethod(390, -0.1108, -0.7294, -2.4937, 0, 0, 0);
		testMethod(395, -0.1145, -0.7419, -2.4937, 0, 0, 0);
		testMethod(400, -0.1182, -0.7543, -2.4937, 0, 0, 0);
		testMethod(405, -0.122, -0.7668, -2.4937, 0, 0, 0);
		testMethod(410, -0.1259, -0.7793, -2.4937, 0, 0, 0);
		testMethod(415, -0.1298, -0.7917, -2.4937, 0, 0, 0);
		testMethod(420, -0.1338, -0.8042, -2.4937, 0, 0, 0);
		testMethod(425, -0.1379, -0.8167, -2.4937, 0, 0, 0);
		testMethod(430, -0.142, -0.8291, -2.4937, 0, 0, 0);
		testMethod(435, -0.1462, -0.8416, -2.4937, 0, 0, 0);
		testMethod(440, -0.1504, -0.8541, -2.4937, 0, 0, 0);
		testMethod(445, -0.1547, -0.8665, -2.4937, 0, 0, 0);
		testMethod(450, -0.1591, -0.879, -2.4937, 0, 0, 0);
		testMethod(455, -0.1635, -0.8915, -2.4937, 0, 0, 0);
		testMethod(460, -0.168, -0.904, -2.4937, 0, 0, 0);
		testMethod(465, -0.1725, -0.9164, -2.4937, 0, 0, 0);
		testMethod(470, -0.1772, -0.9289, -2.4937, 0, 0, 0);
		testMethod(475, -0.1818, -0.9414, -2.4937, 0, 0, 0);
		testMethod(480, -0.1866, -0.9538, -2.4937, 0, 0, 0);
		testMethod(485, -0.1914, -0.9663, -2.4937, 0, 0, 0);
		testMethod(490, -0.1962, -0.9788, -2.4937, 0, 0, 0);
		testMethod(495, -0.2012, -0.9912, -2.4937, 0, 0, 0);
		testMethod(500, -0.2061, -1.0037, -2.4937, 0, 0, 0);
		testMethod(505, -0.2112, -1.0162, -2.4937, 0, 0, 0);
		testMethod(510, -0.2163, -1.0286, -2.4937, 0, 0, 0);
		testMethod(515, -0.2215, -1.0411, -2.4937, 0, 0, 0);
		testMethod(520, -0.2267, -1.0536, -2.4937, 0, 0, 0);
		testMethod(525, -0.232, -1.066, -2.4937, 0, 0, 0);
		testMethod(530, -0.2374, -1.0785, -2.4937, 0, 0, 0);
		testMethod(535, -0.2428, -1.091, -2.4937, 0, 0, 0);
		testMethod(540, -0.2483, -1.1034, -2.4937, 0, 0, 0);
		testMethod(545, -0.2538, -1.1159, -2.4937, 0, 0, 0);
		testMethod(550, -0.2594, -1.1284, -2.4937, 0, 0, 0);
		testMethod(555, -0.2651, -1.1408, -2.4937, 0, 0, 0);
		testMethod(560, -0.2709, -1.1533, -2.4937, 0, 0, 0);
		testMethod(565, -0.2767, -1.1658, -2.4937, -0, -0, -0.0058);
		testMethod(570, -0.2825, -1.1783, -2.4937, -0, -0.0003, -0.0455);
		testMethod(575, -0.2884, -1.1907, -2.4937, -0, -0.0007, -0.0931);
		testMethod(580, -0.2944, -1.2032, -2.4937, -0, -0.0014, -0.1438);
		testMethod(585, -0.3005, -1.2157, -2.4937, -0, -0.0024, -0.1974);
		testMethod(590, -0.3066, -1.2281, -2.4937, -0, -0.0037, -0.2541);
		testMethod(595, -0.3128, -1.2406, -2.4937, -0.0001, -0.0053, -0.3141);
		testMethod(600, -0.319, -1.2531, -2.4937, -0.0001, -0.0072, -0.3773);
		testMethod(605, -0.3253, -1.2655, -2.4937, -0.0001, -0.0094, -0.4438);
		testMethod(610, -0.3316, -1.278, -2.4937, -0.0002, -0.0119, -0.5138);
		testMethod(615, -0.3381, -1.2905, -2.4937, -0.0002, -0.0149, -0.5872);
		testMethod(620, -0.3445, -1.3029, -2.4937, -0.0003, -0.0182, -0.6643);
		testMethod(625, -0.3511, -1.3154, -2.4937, -0.0004, -0.0219, -0.745);
		testMethod(630, -0.3577, -1.3279, -2.4937, -0.0005, -0.0261, -0.8295);
		testMethod(635, -0.3644, -1.3403, -2.4937, -0.0007, -0.0307, -0.9178);
		testMethod(640, -0.3711, -1.3528, -2.4937, -0.0009, -0.0357, -1.0101);
		testMethod(645, -0.3779, -1.3653, -2.4937, -0.001, -0.0412, -1.1064);
		testMethod(650, -0.3848, -1.3777, -2.4937, -0.0013, -0.0473, -1.2067);
		testMethod(655, -0.3917, -1.3902, -2.4937, -0.0015, -0.0538, -1.3113);
		testMethod(660, -0.3987, -1.4027, -2.4937, -0.0018, -0.0609, -1.4202);
		testMethod(665, -0.4057, -1.4152, -2.4937, -0.0021, -0.0686, -1.5334);
		testMethod(670, -0.4128, -1.4276, -2.4937, -0.0025, -0.0769, -1.6511);
		testMethod(675, -0.42, -1.4401, -2.4937, -0.0029, -0.0857, -1.7733);
		testMethod(680, -0.4272, -1.4526, -2.4937, -0.0034, -0.0952, -1.9002);
		testMethod(685, -0.4345, -1.465, -2.4937, -0.0039, -0.1054, -2.0318);
		testMethod(690, -0.4419, -1.4775, -2.4937, -0.0044, -0.1162, -2.1683);
		testMethod(695, -0.4493, -1.49, -2.4937, -0.005, -0.1278, -2.3097);
		testMethod(700, -0.4568, -1.5024, -2.4937, -0.0057, -0.1401, -2.4561);
		testMethod(705, -0.4643, -1.5149, -2.4937, -0.0064, -0.1531, -2.6077);
		testMethod(710, -0.4719, -1.5274, -2.4937, -0.0072, -0.1669, -2.7644);
		testMethod(715, -0.4796, -1.5398, -2.4937, -0.0081, -0.1815, -2.9265);
		testMethod(720, -0.4873, -1.5523, -2.4937, -0.009, -0.197, -3.094);
		testMethod(725, -0.4951, -1.5648, -2.4937, -0.0101, -0.2134, -3.267);
		testMethod(730, -0.503, -1.5772, -2.4937, -0.0112, -0.2306, -3.4457);
		testMethod(735, -0.5109, -1.5897, -2.4937, -0.0124, -0.2487, -3.63);
		testMethod(740, -0.5189, -1.6022, -2.4937, -0.0137, -0.2678, -3.8202);
		testMethod(745, -0.5269, -1.6146, -2.4937, -0.0151, -0.2879, -4.0163);
		testMethod(750, -0.535, -1.6271, -2.4937, -0.0165, -0.309, -4.2184);
		testMethod(755, -0.5432, -1.6396, -2.4937, -0.0181, -0.3311, -4.4267);
		testMethod(760, -0.5514, -1.652, -2.4937, -0.0199, -0.3543, -4.6412);
		testMethod(765, -0.5597, -1.6645, -2.4937, -0.0217, -0.3787, -4.862);
		testMethod(770, -0.568, -1.677, -2.4937, -0.0236, -0.4041, -5.0893);
		testMethod(775, -0.5765, -1.6891, -2.4313, -0.0257, -0.4306, -5.3069);
		testMethod(780, -0.5849, -1.701, -2.369, -0.028, -0.4583, -5.5274);
		testMethod(785, -0.5935, -1.7125, -2.3066, -0.0303, -0.487, -5.7507);
		testMethod(790, -0.6021, -1.7237, -2.2443, -0.0328, -0.5169, -5.9766);
		testMethod(795, -0.6107, -1.7347, -2.182, -0.0355, -0.5479, -6.2048);
		testMethod(800, -0.6194, -1.7453, -2.1196, -0.0383, -0.5801, -6.4351);
		testMethod(805, -0.6282, -1.7555, -2.0573, -0.0413, -0.6134, -6.6673);
		testMethod(810, -0.637, -1.7655, -1.9949, -0.0444, -0.648, -6.9012);
		testMethod(815, -0.6458, -1.7752, -1.9326, -0.0478, -0.6836, -7.1364);
		testMethod(820, -0.6547, -1.7845, -1.8702, -0.0513, -0.7205, -7.3727);
		testMethod(825, -0.6637, -1.7936, -1.8079, -0.055, -0.7585, -7.6098);
		testMethod(830, -0.6726, -1.8023, -1.7456, -0.0589, -0.7978, -7.8476);
		testMethod(835, -0.6817, -1.8107, -1.6832, -0.063, -0.8382, -8.0856);
		testMethod(840, -0.6907, -1.8188, -1.6209, -0.0673, -0.8798, -8.3236);
		testMethod(845, -0.6999, -1.8266, -1.5585, -0.0718, -0.9226, -8.5613);
		testMethod(850, -0.709, -1.8341, -1.4962, -0.0765, -0.9661, -8.6925);
		testMethod(855, -0.7182, -1.8413, -1.4339, -0.0814, -1.0089, -8.5593);
		testMethod(860, -0.7274, -1.8481, -1.3715, -0.0866, -1.0511, -8.44);
		testMethod(865, -0.7367, -1.8547, -1.3092, -0.0919, -1.0927, -8.3118);
		testMethod(870, -0.746, -1.8609, -1.2468, -0.0975, -1.1335, -8.1752);
		testMethod(875, -0.7553, -1.8668, -1.1845, -0.1033, -1.1737, -8.0302);
		testMethod(880, -0.7646, -1.8724, -1.1221, -0.1092, -1.2131, -7.8771);
		testMethod(885, -0.774, -1.8777, -1.0598, -0.1154, -1.2516, -7.7161);
		testMethod(890, -0.7834, -1.8827, -0.9975, -0.1217, -1.2894, -7.5476);
		testMethod(895, -0.7928, -1.8874, -0.9351, -0.1283, -1.3262, -7.3717);
		testMethod(900, -0.8023, -1.8918, -0.8728, -0.135, -1.3622, -7.1887);
		testMethod(905, -0.8118, -1.8958, -0.8104, -0.1419, -1.3972, -6.9989);
		testMethod(910, -0.8212, -1.8995, -0.7481, -0.149, -1.4312, -6.8025);
		testMethod(915, -0.8308, -1.903, -0.6858, -0.1562, -1.4642, -6.5998);
		testMethod(920, -0.8403, -1.9061, -0.6234, -0.1636, -1.4962, -6.3912);
		testMethod(925, -0.8498, -1.9089, -0.5611, -0.1712, -1.527, -6.1768);
		testMethod(930, -0.8594, -1.9114, -0.4987, -0.1789, -1.5568, -5.957);
		testMethod(935, -0.8689, -1.9136, -0.4364, -0.1867, -1.5855, -5.7321);
		testMethod(940, -0.8785, -1.9154, -0.374, -0.1947, -1.613, -5.5024);
		testMethod(945, -0.8881, -1.917, -0.3117, -0.2029, -1.6393, -5.2682);
		testMethod(950, -0.8977, -1.9182, -0.2494, -0.2111, -1.6645, -5.0298);
		testMethod(955, -0.9073, -1.9192, -0.187, -0.2195, -1.6884, -4.7875);
		testMethod(960, -0.9169, -1.9198, -0.1247, -0.228, -1.7111, -4.5417);
		testMethod(965, -0.9265, -1.9201, -0.0623, -0.2366, -1.7326, -4.2925);
		testMethod(970, -0.9361, -1.9201, -0, -0.2453, -1.7528, -4.0404);
		testMethod(975, -0.9457, -1.9201, -0, -0.2541, -1.772, -3.8436);
		testMethod(980, -0.9553, -1.9201, -0, -0.2631, -1.7902, -3.6467);
		testMethod(985, -0.9649, -1.9201, -0, -0.272, -1.8075, -3.4499);
		testMethod(990, -0.9745, -1.9201, -0, -0.2811, -1.8238, -3.253);
		testMethod(995, -0.9841, -1.9201, -0, -0.2903, -1.839, -3.0561);
		testMethod(1000, -0.9937, -1.9201, -0, -0.2995, -1.8533, -2.8593);
		testMethod(1005, -1.0033, -1.9201, -0, -0.3088, -1.8666, -2.6624);
		testMethod(1010, -1.0129, -1.9201, -0, -0.3182, -1.879, -2.4655);
		testMethod(1015, -1.0225, -1.9201, -0, -0.3276, -1.8903, -2.2687);
		testMethod(1020, -1.0321, -1.9201, -0, -0.3371, -1.9007, -2.0718);
		testMethod(1025, -1.0417, -1.9201, -0, -0.3466, -1.9101, -1.8749);
		testMethod(1030, -1.0513, -1.9201, -0, -0.3562, -1.9184, -1.6781);
		testMethod(1035, -1.0609, -1.9201, -0, -0.3658, -1.9259, -1.4812);
		testMethod(1040, -1.0705, -1.9201, -0, -0.3754, -1.9323, -1.2844);
		testMethod(1045, -1.0801, -1.9201, -0, -0.3851, -1.9377, -1.0875);
		testMethod(1050, -1.0897, -1.9201, -0, -0.3948, -1.9422, -0.8906);
		testMethod(1055, -1.0993, -1.9201, -0, -0.4045, -1.9456, -0.6938);
		testMethod(1060, -1.1089, -1.9201, -0, -0.4143, -1.9481, -0.4969);
		testMethod(1065, -1.1185, -1.9201, -0, -0.424, -1.9496, -0.3);
		testMethod(1070, -1.1281, -1.9201, -0, -0.4338, -1.9501, -0.1032);
		testMethod(1075, -1.1377, -1.9201, -0, -0.4435, -1.9501, -0.0001);
		testMethod(1080, -1.1473, -1.9201, -0, -0.4533, -1.9501, 0);
		testMethod(1085, -1.1569, -1.9201, -0, -0.463, -1.9501, 0);
		testMethod(1090, -1.1665, -1.9201, -0, -0.4728, -1.9501, 0);
		testMethod(1095, -1.1761, -1.9201, -0, -0.4825, -1.9501, 0);
		testMethod(1100, -1.1857, -1.9201, -0, -0.4923, -1.9501, 0);
		testMethod(1105, -1.1953, -1.9201, -0, -0.502, -1.9501, 0);
		testMethod(1110, -1.2049, -1.9201, -0, -0.5118, -1.9501, 0);
		testMethod(1115, -1.2145, -1.9201, -0, -0.5215, -1.9501, 0);
		testMethod(1120, -1.2241, -1.9201, -0, -0.5313, -1.9501, 0);
		testMethod(1125, -1.2337, -1.9201, -0, -0.541, -1.9501, 0);
		testMethod(1130, -1.2433, -1.9201, -0, -0.5508, -1.9501, 0);
		testMethod(1135, -1.2529, -1.9201, -0, -0.5605, -1.9501, 0);
		testMethod(1140, -1.2625, -1.9201, -0, -0.5703, -1.9501, 0);
		testMethod(1145, -1.2721, -1.9201, -0, -0.58, -1.9501, 0);
		testMethod(1150, -1.2817, -1.9201, -0, -0.5898, -1.9501, 0);
		testMethod(1155, -1.2913, -1.9201, -0, -0.5995, -1.9501, 0);
		testMethod(1160, -1.3009, -1.9201, -0, -0.6093, -1.9501, 0);
		testMethod(1165, -1.3105, -1.9201, -0, -0.619, -1.95, 0.036);
		testMethod(1170, -1.3201, -1.9201, -0, -0.6288, -1.9489, 0.2175);
		testMethod(1175, -1.3297, -1.9201, -0, -0.6385, -1.9468, 0.4144);
		testMethod(1180, -1.3393, -1.9201, -0, -0.6482, -1.9437, 0.6113);
		testMethod(1185, -1.3489, -1.9201, -0, -0.6579, -1.9397, 0.8081);
		testMethod(1190, -1.3585, -1.9201, -0, -0.6676, -1.9347, 1.005);
		testMethod(1195, -1.3681, -1.9201, -0, -0.6773, -1.9287, 1.2019);
		testMethod(1200, -1.3777, -1.9201, -0, -0.6869, -1.9217, 1.3987);
		testMethod(1205, -1.3873, -1.9201, -0, -0.6965, -1.9137, 1.5956);
		testMethod(1210, -1.3969, -1.9201, -0, -0.7061, -1.9047, 1.7925);
		testMethod(1215, -1.4065, -1.9201, -0, -0.7155, -1.8948, 1.9893);
		testMethod(1220, -1.4161, -1.9198, 0.0623, -0.725, -1.8835, 2.2472);
		testMethod(1225, -1.4257, -1.9192, 0.1247, -0.7344, -1.871, 2.5034);
		testMethod(1230, -1.4353, -1.9182, 0.187, -0.7437, -1.8572, 2.7577);
		testMethod(1235, -1.4449, -1.917, 0.2494, -0.753, -1.8422, 3.0097);
		testMethod(1240, -1.4544, -1.9154, 0.3117, -0.7621, -1.8259, 3.2592);
		testMethod(1245, -1.464, -1.9136, 0.374, -0.7712, -1.8084, 3.5059);
		testMethod(1250, -1.4736, -1.9114, 0.4364, -0.7802, -1.7896, 3.7493);
		testMethod(1255, -1.4831, -1.9089, 0.4987, -0.7891, -1.7697, 3.9892);
		testMethod(1260, -1.4927, -1.9061, 0.5611, -0.7979, -1.7485, 4.2254);
		testMethod(1265, -1.5022, -1.903, 0.6234, -0.8066, -1.7263, 4.4574);
		testMethod(1270, -1.5117, -1.8995, 0.6858, -0.8152, -1.7028, 4.685);
		testMethod(1275, -1.5212, -1.8958, 0.7481, -0.8236, -1.6783, 4.908);
		testMethod(1280, -1.5307, -1.8918, 0.8104, -0.8319, -1.6527, 5.1259);
		testMethod(1285, -1.5401, -1.8874, 0.8728, -0.8401, -1.626, 5.3386);
		testMethod(1290, -1.5495, -1.8827, 0.9351, -0.8482, -1.5982, 5.5457);
		testMethod(1295, -1.5589, -1.8777, 0.9975, -0.8561, -1.5695, 5.7471);
		testMethod(1300, -1.5683, -1.8724, 1.0598, -0.8639, -1.5398, 5.9423);
		testMethod(1305, -1.5777, -1.8668, 1.1221, -0.8715, -1.5091, 6.1311);
		testMethod(1310, -1.587, -1.8609, 1.1845, -0.879, -1.4776, 6.3134);
		testMethod(1315, -1.5963, -1.8547, 1.2468, -0.8863, -1.4451, 6.4888);
		testMethod(1320, -1.6055, -1.8481, 1.3092, -0.8934, -1.4118, 6.6571);
		testMethod(1325, -1.6147, -1.8413, 1.3715, -0.9004, -1.3778, 6.8181);
		testMethod(1330, -1.6239, -1.8341, 1.4339, -0.9072, -1.3429, 6.9715);
		testMethod(1335, -1.6331, -1.8266, 1.4962, -0.9138, -1.3073, 7.1171);
		testMethod(1340, -1.6422, -1.8188, 1.5585, -0.9203, -1.271, 7.2547);
		testMethod(1345, -1.6513, -1.8107, 1.6209, -0.9265, -1.2341, 7.3842);
		testMethod(1350, -1.6603, -1.8023, 1.6832, -0.9326, -1.1966, 7.5053);
		testMethod(1355, -1.6693, -1.7936, 1.7456, -0.9385, -1.1585, 7.6178);
		testMethod(1360, -1.6782, -1.7845, 1.8079, -0.9442, -1.1199, 7.7215);
		testMethod(1365, -1.6871, -1.7752, 1.8702, -0.9497, -1.0808, 7.8164);
		testMethod(1370, -1.696, -1.7655, 1.9326, -0.955, -1.0413, 7.9022);
		testMethod(1375, -1.7048, -1.7555, 1.9949, -0.9601, -1.0014, 7.9788);
		testMethod(1380, -1.7135, -1.7453, 2.0573, -0.965, -0.9612, 8.0461);
		testMethod(1385, -1.7222, -1.7347, 2.1196, -0.9697, -0.9207, 8.1039);
		testMethod(1390, -1.7309, -1.7237, 2.182, -0.9742, -0.8799, 8.1521);
		testMethod(1395, -1.7395, -1.7125, 2.2443, -0.9785, -0.8394, 8.1075);
		testMethod(1400, -1.748, -1.701, 2.3066, -0.9826, -0.8002, 7.8404);
		testMethod(1405, -1.7565, -1.6891, 2.369, -0.9865, -0.7622, 7.5964);
		testMethod(1410, -1.7649, -1.677, 2.4313, -0.9902, -0.7254, 7.3543);
		testMethod(1415, -1.7733, -1.6645, 2.4937, -0.9938, -0.6898, 7.1143);
		testMethod(1420, -1.7815, -1.652, 2.4937, -0.9971, -0.6556, 6.8523);
		testMethod(1425, -1.7898, -1.6396, 2.4937, -1.0003, -0.6226, 6.5971);
		testMethod(1430, -1.7979, -1.6271, 2.4937, -1.0034, -0.5908, 6.3485);
		testMethod(1435, -1.806, -1.6146, 2.4937, -1.0063, -0.5603, 6.1064);
		testMethod(1440, -1.8141, -1.6022, 2.4937, -1.009, -0.531, 5.8707);
		testMethod(1445, -1.8221, -1.5897, 2.4937, -1.0116, -0.5027, 5.6412);
		testMethod(1450, -1.83, -1.5772, 2.4937, -1.014, -0.4757, 5.418);
		testMethod(1455, -1.8378, -1.5648, 2.4937, -1.0163, -0.4497, 5.2008);
		testMethod(1460, -1.8456, -1.5523, 2.4937, -1.0185, -0.4247, 4.9896);
		testMethod(1465, -1.8534, -1.5398, 2.4937, -1.0206, -0.4008, 4.7843);
		testMethod(1470, -1.861, -1.5274, 2.4937, -1.0225, -0.3779, 4.5847);
		testMethod(1475, -1.8686, -1.5149, 2.4937, -1.0244, -0.3559, 4.3909);
		testMethod(1480, -1.8762, -1.5024, 2.4937, -1.0261, -0.3349, 4.2026);
		testMethod(1485, -1.8837, -1.49, 2.4937, -1.0277, -0.3148, 4.0198);
		testMethod(1490, -1.8911, -1.4775, 2.4937, -1.0292, -0.2956, 3.8423);
		testMethod(1495, -1.8984, -1.465, 2.4937, -1.0307, -0.2772, 3.6702);
		testMethod(1500, -1.9057, -1.4526, 2.4937, -1.032, -0.2597, 3.5032);
		testMethod(1505, -1.913, -1.4401, 2.4937, -1.0333, -0.243, 3.3414);
		testMethod(1510, -1.9201, -1.4276, 2.4937, -1.0344, -0.2271, 3.1845);
		testMethod(1515, -1.9272, -1.4152, 2.4937, -1.0355, -0.2119, 3.0326);
		testMethod(1520, -1.9343, -1.4027, 2.4937, -1.0366, -0.1975, 2.8854);
		testMethod(1525, -1.9413, -1.3902, 2.4937, -1.0375, -0.1838, 2.743);
		testMethod(1530, -1.9482, -1.3777, 2.4937, -1.0384, -0.1708, 2.6052);
		testMethod(1535, -1.955, -1.3653, 2.4937, -1.0392, -0.1584, 2.472);
		testMethod(1540, -1.9618, -1.3528, 2.4937, -1.04, -0.1467, 2.3432);
		testMethod(1545, -1.9686, -1.3403, 2.4937, -1.0407, -0.1356, 2.2187);
		testMethod(1550, -1.9752, -1.3279, 2.4937, -1.0413, -0.1251, 2.0986);
		testMethod(1555, -1.9819, -1.3154, 2.4937, -1.0419, -0.1152, 1.9826);
		testMethod(1560, -1.9884, -1.3029, 2.4937, -1.0425, -0.1058, 1.8708);
		testMethod(1565, -1.9949, -1.2905, 2.4937, -1.043, -0.097, 1.7629);
		testMethod(1570, -2.0013, -1.278, 2.4937, -1.0435, -0.0887, 1.659);
		testMethod(1575, -2.0077, -1.2655, 2.4937, -1.0439, -0.0809, 1.559);
		testMethod(1580, -2.014, -1.2531, 2.4937, -1.0443, -0.0736, 1.4627);
		testMethod(1585, -2.0202, -1.2406, 2.4937, -1.0446, -0.0668, 1.3701);
		testMethod(1590, -2.0264, -1.2281, 2.4937, -1.0449, -0.0604, 1.2811);
		testMethod(1595, -2.0325, -1.2157, 2.4937, -1.0452, -0.0544, 1.1956);
		testMethod(1600, -2.0385, -1.2032, 2.4937, -1.0455, -0.0488, 1.1135);
		testMethod(1605, -2.0445, -1.1907, 2.4937, -1.0457, -0.0436, 1.0348);
		testMethod(1610, -2.0504, -1.1783, 2.4937, -1.0459, -0.0388, 0.9595);
		testMethod(1615, -2.0563, -1.1658, 2.4937, -1.0461, -0.0344, 0.8873);
		testMethod(1620, -2.0621, -1.1533, 2.4937, -1.0463, -0.0303, 0.8182);
		testMethod(1625, -2.0678, -1.1408, 2.4937, -1.0464, -0.0265, 0.7522);
		testMethod(1630, -2.0735, -1.1284, 2.4937, -1.0465, -0.0231, 0.6892);
		testMethod(1635, -2.0791, -1.1159, 2.4937, -1.0466, -0.02, 0.6291);
		testMethod(1640, -2.0847, -1.1034, 2.4937, -1.0467, -0.0171, 0.5719);
		testMethod(1645, -2.0901, -1.091, 2.4937, -1.0468, -0.0145, 0.5174);
		testMethod(1650, -2.0956, -1.0785, 2.4937, -1.0469, -0.0122, 0.4655);
		testMethod(1655, -2.1009, -1.066, 2.4937, -1.0469, -0.0101, 0.4163);
		testMethod(1660, -2.1062, -1.0536, 2.4937, -1.047, -0.0083, 0.3697);
		testMethod(1665, -2.1115, -1.0411, 2.4937, -1.047, -0.0066, 0.3255);
		testMethod(1670, -2.1166, -1.0286, 2.4937, -1.047, -0.0052, 0.2838);
		testMethod(1675, -2.1217, -1.0162, 2.4937, -1.0471, -0.004, 0.2444);
		testMethod(1680, -2.1268, -1.0037, 2.4937, -1.0471, -0.0029, 0.2073);
		testMethod(1685, -2.1318, -0.9912, 2.4937, -1.0471, -0.0021, 0.1724);
		testMethod(1690, -2.1367, -0.9788, 2.4937, -1.0471, -0.0014, 0.1396);
		testMethod(1695, -2.1416, -0.9663, 2.4937, -1.0471, -0.0008, 0.1089);
		testMethod(1700, -2.1464, -0.9538, 2.4937, -1.0471, -0.0004, 0.0803);
		testMethod(1705, -2.1511, -0.9414, 2.4937, -1.0471, -0.0002, 0.0536);
		testMethod(1710, -2.1558, -0.9289, 2.4937, -1.0471, -0, 0.0287);
		testMethod(1715, -2.1604, -0.9164, 2.4937, -1.0471, 0, 0.0064);
		testMethod(1720, -2.1649, -0.904, 2.4937, -1.0471, 0, 0);
		testMethod(1725, -2.1694, -0.8915, 2.4937, -1.0471, 0, 0);
		testMethod(1730, -2.1739, -0.879, 2.4937, -1.0471, 0, 0);
		testMethod(1735, -2.1782, -0.8665, 2.4937, -1.0471, 0, 0);
		testMethod(1740, -2.1825, -0.8541, 2.4937, -1.0471, 0, 0);
		testMethod(1745, -2.1868, -0.8416, 2.4937, -1.0471, 0, 0);
		testMethod(1750, -2.1909, -0.8291, 2.4937, -1.0471, 0, 0);
		testMethod(1755, -2.1951, -0.8167, 2.4937, -1.0471, 0, 0);
		testMethod(1760, -2.1991, -0.8042, 2.4937, -1.0471, 0, 0);
		testMethod(1765, -2.2031, -0.7917, 2.4937, -1.0471, 0, 0);
		testMethod(1770, -2.207, -0.7793, 2.4937, -1.0471, 0, 0);
		testMethod(1775, -2.2109, -0.7668, 2.4937, -1.0471, 0, 0);
		testMethod(1780, -2.2147, -0.7543, 2.4937, -1.0471, 0, 0);
		testMethod(1785, -2.2184, -0.7419, 2.4937, -1.0471, 0, 0);
		testMethod(1790, -2.2221, -0.7294, 2.4937, -1.0471, 0, 0);
		testMethod(1795, -2.2257, -0.7169, 2.4937, -1.0471, 0, 0);
		testMethod(1800, -2.2293, -0.7045, 2.4937, -1.0471, 0, 0);
		testMethod(1805, -2.2328, -0.692, 2.4937, -1.0471, 0, 0);
		testMethod(1810, -2.2362, -0.6795, 2.4937, -1.0471, 0, 0);
		testMethod(1815, -2.2396, -0.6671, 2.4937, -1.0471, 0, 0);
		testMethod(1820, -2.2429, -0.6546, 2.4937, -1.0471, 0, 0);
		testMethod(1825, -2.2461, -0.6421, 2.4937, -1.0471, 0, 0);
		testMethod(1830, -2.2493, -0.6296, 2.4937, -1.0471, 0, 0);
		testMethod(1835, -2.2524, -0.6172, 2.4937, -1.0471, 0, 0);
		testMethod(1840, -2.2555, -0.6047, 2.4937, -1.0471, 0, 0);
		testMethod(1845, -2.2585, -0.5922, 2.4937, -1.0471, 0, 0);
		testMethod(1850, -2.2614, -0.5798, 2.4937, -1.0471, 0, 0);
		testMethod(1855, -2.2643, -0.5673, 2.4937, -1.0471, 0, 0);
		testMethod(1860, -2.2671, -0.5548, 2.4937, -1.0471, 0, 0);
		testMethod(1865, -2.2698, -0.5424, 2.4937, -1.0471, 0, 0);
		testMethod(1870, -2.2725, -0.5299, 2.4937, -1.0471, 0, 0);
		testMethod(1875, -2.2751, -0.5174, 2.4937, -1.0471, 0, 0);
		testMethod(1880, -2.2777, -0.505, 2.4937, -1.0471, 0, 0);
		testMethod(1885, -2.2802, -0.4925, 2.4937, -1.0471, 0, 0);
		testMethod(1890, -2.2826, -0.48, 2.4937, -1.0471, 0, 0);
		testMethod(1895, -2.285, -0.4676, 2.4937, -1.0471, 0, 0);
		testMethod(1900, -2.2873, -0.4551, 2.4937, -1.0471, 0, 0);
		testMethod(1905, -2.2895, -0.4426, 2.4937, -1.0471, 0, 0);
		testMethod(1910, -2.2917, -0.4302, 2.4937, -1.0471, 0, 0);
		testMethod(1915, -2.2938, -0.4177, 2.4937, -1.0471, 0, 0);
		testMethod(1920, -2.2959, -0.4052, 2.4937, -1.0471, 0, 0);
		testMethod(1925, -2.2979, -0.3928, 2.4937, -1.0471, 0, 0);
		testMethod(1930, -2.2998, -0.3803, 2.4937, -1.0471, 0, 0);
		testMethod(1935, -2.3017, -0.3678, 2.4937, -1.0471, 0, 0);
		testMethod(1940, -2.3035, -0.3553, 2.4937, -1.0471, 0, 0);
		testMethod(1945, -2.3052, -0.3429, 2.4937, -1.0471, 0, 0);
		testMethod(1950, -2.3069, -0.3304, 2.4937, -1.0471, 0, 0);
		testMethod(1955, -2.3085, -0.3179, 2.4937, -1.0471, 0, 0);
		testMethod(1960, -2.3101, -0.3055, 2.4937, -1.0471, 0, 0);
		testMethod(1965, -2.3116, -0.293, 2.4937, -1.0471, 0, 0);
		testMethod(1970, -2.313, -0.2805, 2.4937, -1.0471, 0, 0);
		testMethod(1975, -2.3144, -0.2681, 2.4937, -1.0471, 0, 0);
		testMethod(1980, -2.3157, -0.2556, 2.4937, -1.0471, 0, 0);
		testMethod(1985, -2.3169, -0.2431, 2.4937, -1.0471, 0, 0);
		testMethod(1990, -2.3181, -0.231, 2.4313, -1.0471, 0, 0);
		testMethod(1995, -2.3192, -0.2191, 2.369, -1.0471, 0, 0);
		testMethod(2000, -2.3203, -0.2076, 2.3066, -1.0471, 0, 0);
		testMethod(2005, -2.3213, -0.1964, 2.2443, -1.0471, 0, 0);
		testMethod(2010, -2.3223, -0.1855, 2.182, -1.0471, 0, 0);
		testMethod(2015, -2.3232, -0.1749, 2.1196, -1.0471, 0, 0);
		testMethod(2020, -2.324, -0.1646, 2.0573, -1.0471, 0, 0);
		testMethod(2025, -2.3248, -0.1546, 1.9949, -1.0471, 0, 0);
		testMethod(2030, -2.3256, -0.1449, 1.9326, -1.0471, 0, 0);
		testMethod(2035, -2.3263, -0.1356, 1.8702, -1.0471, 0, 0);
		testMethod(2040, -2.3269, -0.1266, 1.8079, -1.0471, 0, 0);
		testMethod(2045, -2.3275, -0.1178, 1.7456, -1.0471, 0, 0);
		testMethod(2050, -2.3281, -0.1094, 1.6832, -1.0471, 0, 0);
		testMethod(2055, -2.3286, -0.1013, 1.6209, -1.0471, 0, 0);
		testMethod(2060, -2.3291, -0.0935, 1.5585, -1.0471, 0, 0);
		testMethod(2065, -2.3296, -0.086, 1.4962, -1.0471, 0, 0);
		testMethod(2070, -2.33, -0.0789, 1.4339, -1.0471, 0, 0);
		testMethod(2075, -2.3304, -0.072, 1.3715, -1.0471, 0, 0);
		testMethod(2080, -2.3307, -0.0655, 1.3092, -1.0471, 0, 0);
		testMethod(2085, -2.331, -0.0592, 1.2468, -1.0471, 0, 0);
		testMethod(2090, -2.3313, -0.0533, 1.1845, -1.0471, 0, 0);
		testMethod(2095, -2.3316, -0.0477, 1.1221, -1.0471, 0, 0);
		testMethod(2100, -2.3318, -0.0424, 1.0598, -1.0471, 0, 0);
		testMethod(2105, -2.332, -0.0374, 0.9975, -1.0471, 0, 0);
		testMethod(2110, -2.3322, -0.0327, 0.9351, -1.0471, 0, 0);
		testMethod(2115, -2.3323, -0.0284, 0.8728, -1.0471, 0, 0);
		testMethod(2120, -2.3324, -0.0243, 0.8104, -1.0471, 0, 0);
		testMethod(2125, -2.3325, -0.0206, 0.7481, -1.0471, 0, 0);
		testMethod(2130, -2.3326, -0.0171, 0.6858, -1.0471, 0, 0);
		testMethod(2135, -2.3327, -0.014, 0.6234, -1.0471, 0, 0);
		testMethod(2140, -2.3328, -0.0112, 0.5611, -1.0471, 0, 0);
		testMethod(2145, -2.3328, -0.0087, 0.4987, -1.0471, 0, 0);
		testMethod(2150, -2.3329, -0.0065, 0.4364, -1.0471, 0, 0);
		testMethod(2155, -2.3329, -0.0047, 0.374, -1.0471, 0, 0);
		testMethod(2160, -2.3329, -0.0031, 0.3117, -1.0471, 0, 0);
		testMethod(2165, -2.3329, -0.0019, 0.2494, -1.0471, 0, 0);
		testMethod(2170, -2.3329, -0.0009, 0.187, -1.0471, 0, 0);
		testMethod(2175, -2.3329, -0.0003, 0.1247, -1.0471, 0, 0);
		testMethod(2180, -2.3329, -0, 0.0623, -1.0471, 0, 0);
		testMethod(2185, -2.3329, -0, -0, -1.0471, 0, 0);
		testMethod(2185, -2.3329, -0, -0, -1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}