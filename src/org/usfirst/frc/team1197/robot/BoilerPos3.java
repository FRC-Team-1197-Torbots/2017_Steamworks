package org.usfirst.frc.team1197.robot;

public class BoilerPos3 extends TorTrajectory {

	public BoilerPos3() {
		super(2.8921, -0.7854);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0624, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1248, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1872, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2496, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.312, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.3743, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4367, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4991, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.5615, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.6239, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6863, 0, 0, 0);
		testMethod(60, 0.0005, 0.0243, 0.7487, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8111, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.8735, 0, 0, 0);
		testMethod(75, 0.001, 0.0374, 0.9359, 0, 0, 0);
		testMethod(80, 0.0012, 0.0424, 0.9983, 0, 0, 0);
		testMethod(85, 0.0014, 0.0477, 1.0606, 0, 0, 0);
		testMethod(90, 0.0016, 0.0533, 1.123, 0, 0, 0);
		testMethod(95, 0.0019, 0.0593, 1.1854, 0, 0, 0);
		testMethod(100, 0.0022, 0.0655, 1.2478, 0, 0, 0);
		testMethod(105, 0.0026, 0.0721, 1.3102, 0, 0, 0);
		testMethod(110, 0.003, 0.0789, 1.3726, 0, 0, 0);
		testMethod(115, 0.0034, 0.0861, 1.435, 0, 0, 0);
		testMethod(120, 0.0038, 0.0936, 1.4974, 0, 0, 0);
		testMethod(125, 0.0043, 0.1014, 1.5598, 0, 0, 0);
		testMethod(130, 0.0048, 0.1095, 1.6222, 0, 0, 0);
		testMethod(135, 0.0054, 0.1179, 1.6845, 0, 0, 0);
		testMethod(140, 0.006, 0.1267, 1.7469, 0, 0, 0);
		testMethod(145, 0.0067, 0.1357, 1.8093, 0, 0, 0);
		testMethod(150, 0.0074, 0.1451, 1.8717, 0, 0, 0);
		testMethod(155, 0.0081, 0.1547, 1.9341, 0, 0, 0);
		testMethod(160, 0.0089, 0.1647, 1.9965, 0, 0, 0);
		testMethod(165, 0.0098, 0.175, 2.0589, 0, 0, 0);
		testMethod(170, 0.0107, 0.1856, 2.1213, 0, 0, 0);
		testMethod(175, 0.0116, 0.1965, 2.1837, 0, 0, 0);
		testMethod(180, 0.0126, 0.2078, 2.2461, 0, 0, 0);
		testMethod(185, 0.0137, 0.2193, 2.3085, 0, 0, 0);
		testMethod(190, 0.0148, 0.2312, 2.3708, 0, 0, 0);
		testMethod(195, 0.016, 0.2433, 2.4332, 0, 0, 0);
		testMethod(200, 0.0173, 0.2558, 2.4956, 0, 0, 0);
		testMethod(205, 0.0186, 0.2683, 2.4956, 0, 0, 0);
		testMethod(210, 0.0199, 0.2808, 2.4956, 0, 0, 0);
		testMethod(215, 0.0214, 0.2932, 2.4956, 0, 0, 0);
		testMethod(220, 0.0229, 0.3057, 2.4956, 0, 0, 0);
		testMethod(225, 0.0244, 0.3182, 2.4956, 0, 0, 0);
		testMethod(230, 0.0261, 0.3307, 2.4956, 0, 0, 0);
		testMethod(235, 0.0277, 0.3431, 2.4956, 0, 0, 0);
		testMethod(240, 0.0295, 0.3556, 2.4956, 0, 0, 0);
		testMethod(245, 0.0313, 0.3681, 2.4956, 0, 0, 0);
		testMethod(250, 0.0332, 0.3806, 2.4956, 0, 0, 0);
		testMethod(255, 0.0351, 0.3931, 2.4956, 0, 0, 0);
		testMethod(260, 0.0371, 0.4055, 2.4956, 0, 0, 0);
		testMethod(265, 0.0392, 0.418, 2.4956, 0, 0, 0);
		testMethod(270, 0.0413, 0.4305, 2.4956, 0, 0, 0);
		testMethod(275, 0.0435, 0.443, 2.4956, 0, 0, 0);
		testMethod(280, 0.0457, 0.4555, 2.4956, 0, 0, 0);
		testMethod(285, 0.048, 0.4679, 2.4956, 0, 0, 0);
		testMethod(290, 0.0504, 0.4804, 2.4956, 0, 0, 0);
		testMethod(295, 0.0528, 0.4929, 2.4956, 0, 0, 0);
		testMethod(300, 0.0553, 0.5054, 2.4956, 0, 0, 0);
		testMethod(305, 0.0579, 0.5178, 2.4956, 0, 0, 0);
		testMethod(310, 0.0605, 0.5303, 2.4956, 0, 0, 0);
		testMethod(315, 0.0632, 0.5428, 2.4956, 0, 0, 0);
		testMethod(320, 0.0659, 0.5553, 2.4956, 0, 0, 0);
		testMethod(325, 0.0687, 0.5678, 2.4956, 0, 0, 0);
		testMethod(330, 0.0716, 0.5802, 2.4956, 0, 0, 0);
		testMethod(335, 0.0745, 0.5927, 2.4956, 0, 0, 0);
		testMethod(340, 0.0775, 0.6052, 2.4956, 0, 0, 0);
		testMethod(345, 0.0806, 0.6177, 2.4956, 0, 0, 0);
		testMethod(350, 0.0837, 0.6301, 2.4956, 0, 0, 0);
		testMethod(355, 0.0869, 0.6426, 2.4956, 0, 0, 0);
		testMethod(360, 0.0901, 0.6551, 2.4956, 0, 0, 0);
		testMethod(365, 0.0934, 0.6676, 2.4956, 0, 0, 0);
		testMethod(370, 0.0968, 0.6801, 2.4956, 0, 0, 0);
		testMethod(375, 0.1002, 0.6925, 2.4956, 0, 0, 0);
		testMethod(380, 0.1037, 0.705, 2.4956, 0, 0, 0);
		testMethod(385, 0.1073, 0.7175, 2.4956, 0, 0, 0);
		testMethod(390, 0.1109, 0.73, 2.4956, 0, 0, 0);
		testMethod(395, 0.1146, 0.7424, 2.4956, 0, 0, 0);
		testMethod(400, 0.1183, 0.7549, 2.4956, 0, 0, 0);
		testMethod(405, 0.1221, 0.7674, 2.4956, 0, 0, 0);
		testMethod(410, 0.126, 0.7799, 2.4956, 0, 0, 0);
		testMethod(415, 0.1299, 0.7924, 2.4956, 0, 0, 0);
		testMethod(420, 0.1339, 0.8048, 2.4956, 0, 0, 0);
		testMethod(425, 0.138, 0.8173, 2.4956, 0, 0, 0);
		testMethod(430, 0.1421, 0.8298, 2.4956, 0, 0, 0);
		testMethod(435, 0.1463, 0.8423, 2.4956, 0, 0, 0);
		testMethod(440, 0.1505, 0.8548, 2.4956, 0, 0, 0);
		testMethod(445, 0.1548, 0.8672, 2.4956, 0, 0, 0);
		testMethod(450, 0.1592, 0.8797, 2.4956, 0, 0, 0);
		testMethod(455, 0.1636, 0.8922, 2.4956, 0, 0, 0);
		testMethod(460, 0.1681, 0.9047, 2.4956, 0, 0, 0);
		testMethod(465, 0.1727, 0.9171, 2.4956, 0, 0, 0);
		testMethod(470, 0.1773, 0.9296, 2.4956, 0, 0, 0);
		testMethod(475, 0.182, 0.9421, 2.4956, 0, 0, 0);
		testMethod(480, 0.1867, 0.9546, 2.4956, 0, 0, 0);
		testMethod(485, 0.1915, 0.9671, 2.4956, 0, 0, 0);
		testMethod(490, 0.1964, 0.9795, 2.4956, 0, 0, 0);
		testMethod(495, 0.2013, 0.992, 2.4956, 0, 0, 0);
		testMethod(500, 0.2063, 1.0045, 2.4956, 0, 0, 0);
		testMethod(505, 0.2114, 1.017, 2.4956, 0, 0, 0);
		testMethod(510, 0.2165, 1.0294, 2.4956, 0, 0, 0);
		testMethod(515, 0.2217, 1.0419, 2.4956, 0, 0, 0);
		testMethod(520, 0.2269, 1.0544, 2.4956, 0, 0, 0);
		testMethod(525, 0.2322, 1.0669, 2.4956, 0, 0, 0);
		testMethod(530, 0.2376, 1.0794, 2.4956, 0, 0, 0);
		testMethod(535, 0.243, 1.0918, 2.4956, 0, 0, 0);
		testMethod(540, 0.2485, 1.1043, 2.4956, 0, 0, 0);
		testMethod(545, 0.254, 1.1168, 2.4956, 0, 0, 0);
		testMethod(550, 0.2597, 1.1293, 2.4956, 0, 0, 0);
		testMethod(555, 0.2653, 1.1417, 2.4956, 0, 0, 0);
		testMethod(560, 0.2711, 1.1542, 2.4956, 0, 0, 0);
		testMethod(565, 0.2769, 1.1667, 2.4956, 0, 0, 0);
		testMethod(570, 0.2827, 1.1792, 2.4956, 0, 0, 0);
		testMethod(575, 0.2887, 1.1917, 2.4956, 0, 0, 0);
		testMethod(580, 0.2947, 1.2041, 2.4956, 0, 0, 0);
		testMethod(585, 0.3007, 1.2166, 2.4956, 0, 0, 0);
		testMethod(590, 0.3068, 1.2291, 2.4956, 0, 0, 0);
		testMethod(595, 0.313, 1.2416, 2.4956, 0, 0, 0);
		testMethod(600, 0.3192, 1.2541, 2.4956, 0, 0, 0);
		testMethod(605, 0.3255, 1.2665, 2.4956, 0, 0, 0);
		testMethod(610, 0.3319, 1.279, 2.4956, 0, 0, 0);
		testMethod(615, 0.3383, 1.2915, 2.4956, 0, 0, 0);
		testMethod(620, 0.3448, 1.304, 2.4956, 0, 0, 0);
		testMethod(625, 0.3514, 1.3164, 2.4956, 0, 0, 0);
		testMethod(630, 0.358, 1.3289, 2.4956, 0, 0, 0);
		testMethod(635, 0.3647, 1.3414, 2.4956, 0, 0, 0);
		testMethod(640, 0.3714, 1.3539, 2.4956, 0, 0, 0);
		testMethod(645, 0.3782, 1.3664, 2.4956, 0, 0, 0);
		testMethod(650, 0.3851, 1.3788, 2.4956, 0, 0, 0);
		testMethod(655, 0.392, 1.3913, 2.4956, 0, 0, 0);
		testMethod(660, 0.399, 1.4038, 2.4956, 0, 0, 0);
		testMethod(665, 0.406, 1.4163, 2.4956, 0, 0, 0);
		testMethod(670, 0.4131, 1.4287, 2.4956, 0, 0, 0);
		testMethod(675, 0.4203, 1.4412, 2.4956, 0, 0, 0);
		testMethod(680, 0.4275, 1.4537, 2.4956, 0, 0, 0);
		testMethod(685, 0.4348, 1.4662, 2.4956, 0, 0, 0);
		testMethod(690, 0.4422, 1.4787, 2.4956, 0, 0, 0);
		testMethod(695, 0.4496, 1.4911, 2.4956, 0, 0, 0);
		testMethod(700, 0.4571, 1.5036, 2.4956, 0, 0, 0);
		testMethod(705, 0.4647, 1.5161, 2.4956, 0, 0, 0);
		testMethod(710, 0.4723, 1.5286, 2.4956, 0, 0, 0);
		testMethod(715, 0.48, 1.5411, 2.4956, 0, 0, 0);
		testMethod(720, 0.4877, 1.5535, 2.4956, 0, 0, 0);
		testMethod(725, 0.4955, 1.566, 2.4956, 0, 0, 0);
		testMethod(730, 0.5034, 1.5785, 2.4956, 0, 0, 0);
		testMethod(735, 0.5113, 1.591, 2.4956, 0, 0, 0);
		testMethod(740, 0.5193, 1.6034, 2.4956, 0, 0, 0);
		testMethod(745, 0.5273, 1.6159, 2.4956, 0, 0, 0);
		testMethod(750, 0.5354, 1.6284, 2.4956, 0, 0, 0);
		testMethod(755, 0.5436, 1.6409, 2.4956, 0, 0, 0);
		testMethod(760, 0.5518, 1.6534, 2.4956, 0, 0, 0);
		testMethod(765, 0.5601, 1.6658, 2.4956, 0, 0, 0);
		testMethod(770, 0.5685, 1.6783, 2.4956, 0, 0, 0);
		testMethod(775, 0.5769, 1.6905, 2.4332, 0, 0, 0);
		testMethod(780, 0.5854, 1.7023, 2.3708, 0, 0, 0);
		testMethod(785, 0.5939, 1.7139, 2.3085, -0, -0, -0.001);
		testMethod(790, 0.6025, 1.7251, 2.2461, -0, -0.0004, -0.0875);
		testMethod(795, 0.6112, 1.736, 2.1837, -0, -0.0016, -0.2333);
		testMethod(800, 0.6199, 1.7466, 2.1213, -0, -0.0035, -0.3844);
		testMethod(805, 0.6286, 1.7569, 2.0589, -0, -0.0062, -0.5406);
		testMethod(810, 0.6375, 1.7669, 1.9965, -0.0001, -0.0097, -0.7018);
		testMethod(815, 0.6463, 1.7766, 1.9341, -0.0001, -0.0141, -0.8677);
		testMethod(820, 0.6552, 1.7859, 1.8717, -0.0002, -0.0193, -1.0382);
		testMethod(825, 0.6642, 1.795, 1.8093, -0.0003, -0.0253, -1.213);
		testMethod(830, 0.6732, 1.8037, 1.7469, -0.0005, -0.0323, -1.3919);
		testMethod(835, 0.6822, 1.8121, 1.6845, -0.0007, -0.0402, -1.5747);
		testMethod(840, 0.6913, 1.8202, 1.6222, -0.0009, -0.049, -1.7611);
		testMethod(845, 0.7004, 1.828, 1.5598, -0.0012, -0.0587, -1.9508);
		testMethod(850, 0.7096, 1.8355, 1.4974, -0.0015, -0.0694, -2.1437);
		testMethod(855, 0.7188, 1.8427, 1.435, -0.0018, -0.0811, -2.3395);
		testMethod(860, 0.728, 1.8496, 1.3726, -0.0023, -0.0938, -2.5379);
		testMethod(865, 0.7373, 1.8561, 1.3102, -0.0028, -0.1075, -2.7386);
		testMethod(870, 0.7466, 1.8624, 1.2478, -0.0034, -0.1222, -2.9414);
		testMethod(875, 0.7559, 1.8683, 1.1854, -0.004, -0.138, -3.1459);
		testMethod(880, 0.7652, 1.8739, 1.123, -0.0047, -0.1547, -3.352);
		testMethod(885, 0.7746, 1.8792, 1.0606, -0.0056, -0.1725, -3.5592);
		testMethod(890, 0.784, 1.8842, 0.9983, -0.0065, -0.1914, -3.7673);
		testMethod(895, 0.7935, 1.8889, 0.9359, -0.0075, -0.2112, -3.976);
		testMethod(900, 0.8029, 1.8932, 0.8735, -0.0086, -0.2322, -4.185);
		testMethod(905, 0.8124, 1.8973, 0.8111, -0.0098, -0.2541, -4.3939);
		testMethod(910, 0.8219, 1.901, 0.7487, -0.0111, -0.2771, -4.6026);
		testMethod(915, 0.8314, 1.9045, 0.6863, -0.0126, -0.3012, -4.8106);
		testMethod(920, 0.8409, 1.9076, 0.6239, -0.0141, -0.3263, -5.0176);
		testMethod(925, 0.8505, 1.9104, 0.5615, -0.0158, -0.3524, -5.2233);
		testMethod(930, 0.86, 1.9129, 0.4991, -0.0177, -0.3795, -5.4274);
		testMethod(935, 0.8696, 1.9151, 0.4367, -0.0196, -0.4077, -5.6296);
		testMethod(940, 0.8792, 1.917, 0.3743, -0.0217, -0.4368, -5.8295);
		testMethod(945, 0.8888, 1.9185, 0.312, -0.024, -0.467, -6.0269);
		testMethod(950, 0.8984, 1.9198, 0.2496, -0.0264, -0.4981, -6.2213);
		testMethod(955, 0.908, 1.9207, 0.1872, -0.029, -0.5301, -6.4125);
		testMethod(960, 0.9176, 1.9213, 0.1248, -0.0317, -0.5631, -6.6002);
		testMethod(965, 0.9272, 1.9216, 0.0624, -0.0346, -0.5971, -6.784);
		testMethod(970, 0.9368, 1.9216, 0, -0.0377, -0.6319, -6.9636);
		testMethod(975, 0.9464, 1.9216, 0, -0.0409, -0.6677, -7.1609);
		testMethod(980, 0.956, 1.9216, 0, -0.0444, -0.7045, -7.3582);
		testMethod(985, 0.9656, 1.9216, 0, -0.048, -0.7423, -7.5556);
		testMethod(990, 0.9752, 1.9216, 0, -0.0518, -0.781, -7.7529);
		testMethod(995, 0.9848, 1.9216, 0, -0.0558, -0.8208, -7.9502);
		testMethod(1000, 0.9944, 1.9216, 0, -0.06, -0.8615, -8.1476);
		testMethod(1005, 1.0041, 1.9216, 0, -0.0644, -0.9032, -8.3449);
		testMethod(1010, 1.0137, 1.9216, 0, -0.069, -0.9454, -8.4391);
		testMethod(1015, 1.0233, 1.9216, 0, -0.0739, -0.9866, -8.2373);
		testMethod(1020, 1.0329, 1.9216, 0, -0.0789, -1.0268, -8.0399);
		testMethod(1025, 1.0425, 1.9216, 0, -0.0841, -1.066, -7.8426);
		testMethod(1030, 1.0521, 1.9216, 0, -0.0896, -1.1043, -7.6453);
		testMethod(1035, 1.0617, 1.9216, 0, -0.0952, -1.1415, -7.4479);
		testMethod(1040, 1.0713, 1.9216, 0, -0.101, -1.1777, -7.2506);
		testMethod(1045, 1.0809, 1.9216, 0, -0.1069, -1.213, -7.0533);
		testMethod(1050, 1.0905, 1.9216, 0, -0.1131, -1.2473, -6.856);
		testMethod(1055, 1.1001, 1.9216, 0, -0.1194, -1.2806, -6.6586);
		testMethod(1060, 1.1097, 1.9216, 0, -0.1259, -1.3129, -6.4613);
		testMethod(1065, 1.1194, 1.9216, 0, -0.1325, -1.3442, -6.264);
		testMethod(1070, 1.129, 1.9216, 0, -0.1393, -1.3745, -6.0666);
		testMethod(1075, 1.1386, 1.9216, 0, -0.1463, -1.4039, -5.8693);
		testMethod(1080, 1.1482, 1.9216, 0, -0.1534, -1.4322, -5.672);
		testMethod(1085, 1.1578, 1.9216, 0, -0.1606, -1.4596, -5.4747);
		testMethod(1090, 1.1674, 1.9216, 0, -0.168, -1.486, -5.2773);
		testMethod(1095, 1.177, 1.9216, 0, -0.1755, -1.5114, -5.08);
		testMethod(1100, 1.1866, 1.9216, 0, -0.1831, -1.5358, -4.8827);
		testMethod(1105, 1.1962, 1.9216, 0, -0.1908, -1.5592, -4.6853);
		testMethod(1110, 1.2058, 1.9216, 0, -0.1987, -1.5817, -4.488);
		testMethod(1115, 1.2154, 1.9216, 0, -0.2066, -1.6031, -4.2907);
		testMethod(1120, 1.225, 1.9216, 0, -0.2147, -1.6236, -4.0933);
		testMethod(1125, 1.2346, 1.9216, 0, -0.2229, -1.6431, -3.896);
		testMethod(1130, 1.2443, 1.9216, 0, -0.2311, -1.6616, -3.6987);
		testMethod(1135, 1.2539, 1.9216, 0, -0.2395, -1.6791, -3.5014);
		testMethod(1140, 1.2635, 1.9216, 0, -0.2479, -1.6956, -3.304);
		testMethod(1145, 1.2731, 1.9216, 0, -0.2564, -1.7111, -3.1067);
		testMethod(1150, 1.2827, 1.9216, 0, -0.265, -1.7257, -2.9094);
		testMethod(1155, 1.2923, 1.9216, 0, -0.2737, -1.7392, -2.712);
		testMethod(1160, 1.3019, 1.9216, 0, -0.2824, -1.7518, -2.5147);
		testMethod(1165, 1.3115, 1.9216, 0, -0.2912, -1.7634, -2.3174);
		testMethod(1170, 1.3211, 1.9216, 0, -0.3001, -1.774, -2.12);
		testMethod(1175, 1.3307, 1.9216, 0, -0.309, -1.7836, -1.9227);
		testMethod(1180, 1.3403, 1.9216, 0, -0.3179, -1.7923, -1.7254);
		testMethod(1185, 1.3499, 1.9216, 0, -0.3269, -1.7999, -1.5281);
		testMethod(1190, 1.3596, 1.9216, 0, -0.3359, -1.8065, -1.3307);
		testMethod(1195, 1.3692, 1.9216, 0, -0.3449, -1.8122, -1.1334);
		testMethod(1200, 1.3788, 1.9216, 0, -0.354, -1.8169, -0.9361);
		testMethod(1205, 1.3884, 1.9216, 0, -0.3631, -1.8206, -0.7387);
		testMethod(1210, 1.398, 1.9216, 0, -0.3722, -1.8233, -0.5414);
		testMethod(1215, 1.4076, 1.9216, 0, -0.3813, -1.825, -0.3441);
		testMethod(1220, 1.4172, 1.9216, 0, -0.3905, -1.8257, -0.1467);
		testMethod(1225, 1.4268, 1.9216, 0, -0.3996, -1.8255, 0.0508);
		testMethod(1230, 1.4364, 1.9216, 0, -0.4087, -1.8243, 0.2483);
		testMethod(1235, 1.446, 1.9216, 0, -0.4178, -1.822, 0.4456);
		testMethod(1240, 1.4556, 1.9216, 0, -0.4269, -1.8188, 0.6429);
		testMethod(1245, 1.4652, 1.9216, 0, -0.436, -1.8146, 0.8402);
		testMethod(1250, 1.4749, 1.9216, 0, -0.4451, -1.8094, 1.0376);
		testMethod(1255, 1.4845, 1.9216, 0, -0.4541, -1.8032, 1.2349);
		testMethod(1260, 1.4941, 1.9216, 0, -0.4631, -1.7961, 1.4322);
		testMethod(1265, 1.5037, 1.9216, 0, -0.4721, -1.7879, 1.6296);
		testMethod(1270, 1.5133, 1.9216, 0, -0.481, -1.7788, 1.8269);
		testMethod(1275, 1.5229, 1.9216, 0, -0.4899, -1.7687, 2.0242);
		testMethod(1280, 1.5325, 1.9216, 0, -0.4987, -1.7576, 2.2216);
		testMethod(1285, 1.5421, 1.9216, 0, -0.5074, -1.7455, 2.4189);
		testMethod(1290, 1.5517, 1.9216, 0, -0.5161, -1.7324, 2.6162);
		testMethod(1295, 1.5613, 1.9216, 0, -0.5248, -1.7183, 2.8135);
		testMethod(1300, 1.5709, 1.9216, 0, -0.5333, -1.7033, 3.0109);
		testMethod(1305, 1.5805, 1.9216, 0, -0.5418, -1.6872, 3.2082);
		testMethod(1310, 1.5902, 1.9216, 0, -0.5502, -1.6702, 3.4055);
		testMethod(1315, 1.5998, 1.9216, 0, -0.5585, -1.6522, 3.6029);
		testMethod(1320, 1.6094, 1.9216, 0, -0.5667, -1.6332, 3.8002);
		testMethod(1325, 1.619, 1.9216, 0, -0.5748, -1.6132, 3.9975);
		testMethod(1330, 1.6286, 1.9216, 0, -0.5828, -1.5922, 4.1949);
		testMethod(1335, 1.6382, 1.9216, 0, -0.5907, -1.5703, 4.3922);
		testMethod(1340, 1.6478, 1.9216, 0, -0.5985, -1.5473, 4.5895);
		testMethod(1345, 1.6574, 1.9216, 0, -0.6062, -1.5234, 4.7868);
		testMethod(1350, 1.667, 1.9216, 0, -0.6138, -1.4985, 4.9842);
		testMethod(1355, 1.6766, 1.9216, 0, -0.6212, -1.4726, 5.1815);
		testMethod(1360, 1.6862, 1.9216, 0, -0.6285, -1.4457, 5.3788);
		testMethod(1365, 1.6958, 1.9216, 0, -0.6356, -1.4178, 5.5762);
		testMethod(1370, 1.7054, 1.9216, 0, -0.6427, -1.3889, 5.7735);
		testMethod(1375, 1.7151, 1.9216, 0, -0.6495, -1.3591, 5.9708);
		testMethod(1380, 1.7247, 1.9216, 0, -0.6563, -1.3282, 6.1681);
		testMethod(1385, 1.7343, 1.9216, 0, -0.6628, -1.2964, 6.3655);
		testMethod(1390, 1.7439, 1.9216, 0, -0.6692, -1.2636, 6.5628);
		testMethod(1395, 1.7535, 1.9216, 0, -0.6755, -1.2298, 6.7601);
		testMethod(1400, 1.7631, 1.9216, 0, -0.6815, -1.195, 6.9575);
		testMethod(1405, 1.7727, 1.9216, 0, -0.6874, -1.1592, 7.1548);
		testMethod(1410, 1.7823, 1.9216, 0, -0.6931, -1.1225, 7.3521);
		testMethod(1415, 1.7919, 1.9216, 0, -0.6986, -1.0847, 7.5495);
		testMethod(1420, 1.8015, 1.9216, 0, -0.7039, -1.046, 7.7468);
		testMethod(1425, 1.8111, 1.9216, 0, -0.7091, -1.0063, 7.9441);
		testMethod(1430, 1.8207, 1.9216, 0, -0.714, -0.9655, 8.1414);
		testMethod(1435, 1.8304, 1.9216, 0, -0.7187, -0.9239, 8.3388);
		testMethod(1440, 1.84, 1.9216, 0, -0.7232, -0.8816, 8.4423);
		testMethod(1445, 1.8496, 1.9216, 0, -0.7276, -0.8404, 8.2434);
		testMethod(1450, 1.8592, 1.9216, 0, -0.7317, -0.8002, 8.0461);
		testMethod(1455, 1.8688, 1.9216, 0, -0.7356, -0.761, 7.8487);
		testMethod(1460, 1.8784, 1.9216, 0, -0.7393, -0.7227, 7.6514);
		testMethod(1465, 1.888, 1.9216, 0, -0.7428, -0.6854, 7.4541);
		testMethod(1470, 1.8976, 1.9216, 0, -0.7461, -0.6491, 7.2567);
		testMethod(1475, 1.9072, 1.9216, 0, -0.7493, -0.6138, 7.0594);
		testMethod(1480, 1.9168, 1.9216, 0, -0.7523, -0.5795, 6.8621);
		testMethod(1485, 1.9264, 1.9216, 0, -0.7551, -0.5462, 6.6647);
		testMethod(1490, 1.936, 1.9216, 0, -0.7577, -0.5139, 6.4674);
		testMethod(1495, 1.9457, 1.9216, 0, -0.7602, -0.4825, 6.2701);
		testMethod(1500, 1.9553, 1.9216, 0, -0.7626, -0.4522, 6.0728);
		testMethod(1505, 1.9649, 1.9216, 0, -0.7647, -0.4228, 5.8754);
		testMethod(1510, 1.9745, 1.9213, -0.0624, -0.7668, -0.3943, 5.6904);
		testMethod(1515, 1.9841, 1.9207, -0.1248, -0.7687, -0.3668, 5.502);
		testMethod(1520, 1.9937, 1.9198, -0.1872, -0.7705, -0.3403, 5.3103);
		testMethod(1525, 2.0033, 1.9185, -0.2496, -0.7721, -0.3147, 5.1158);
		testMethod(1530, 2.0129, 1.917, -0.312, -0.7736, -0.2901, 4.9188);
		testMethod(1535, 2.0224, 1.9151, -0.3743, -0.775, -0.2665, 4.7196);
		testMethod(1540, 2.032, 1.9129, -0.4367, -0.7763, -0.2439, 4.5185);
		testMethod(1545, 2.0416, 1.9104, -0.4991, -0.7774, -0.2223, 4.3159);
		testMethod(1550, 2.0511, 1.9076, -0.5615, -0.7785, -0.2018, 4.112);
		testMethod(1555, 2.0607, 1.9045, -0.6239, -0.7795, -0.1822, 3.9072);
		testMethod(1560, 2.0702, 1.901, -0.6863, -0.7803, -0.1637, 3.7018);
		testMethod(1565, 2.0797, 1.8973, -0.7487, -0.7811, -0.1462, 3.4961);
		testMethod(1570, 2.0891, 1.8932, -0.8111, -0.7818, -0.1298, 3.2904);
		testMethod(1575, 2.0986, 1.8889, -0.8735, -0.7824, -0.1144, 3.0852);
		testMethod(1580, 2.108, 1.8842, -0.9359, -0.7829, -0.1, 2.8805);
		testMethod(1585, 2.1174, 1.8792, -0.9983, -0.7834, -0.0866, 2.6768);
		testMethod(1590, 2.1268, 1.8739, -1.0606, -0.7838, -0.0742, 2.4744);
		testMethod(1595, 2.1362, 1.8683, -1.123, -0.7841, -0.0628, 2.2736);
		testMethod(1600, 2.1455, 1.8624, -1.1854, -0.7844, -0.0525, 2.0746);
		testMethod(1605, 2.1548, 1.8561, -1.2478, -0.7847, -0.0431, 1.8777);
		testMethod(1610, 2.1641, 1.8496, -1.3102, -0.7849, -0.0347, 1.6833);
		testMethod(1615, 2.1733, 1.8427, -1.3726, -0.785, -0.0272, 1.4915);
		testMethod(1620, 2.1825, 1.8355, -1.435, -0.7851, -0.0207, 1.3027);
		testMethod(1625, 2.1916, 1.828, -1.4974, -0.7852, -0.0151, 1.1172);
		testMethod(1630, 2.2008, 1.8202, -1.5598, -0.7853, -0.0104, 0.9352);
		testMethod(1635, 2.2098, 1.8121, -1.6222, -0.7853, -0.0066, 0.7569);
		testMethod(1640, 2.2189, 1.8037, -1.6845, -0.7853, -0.0037, 0.5826);
		testMethod(1645, 2.2279, 1.795, -1.7469, -0.7854, -0.0017, 0.4125);
		testMethod(1650, 2.2368, 1.7859, -1.8093, -0.7854, -0.0004, 0.2469);
		testMethod(1655, 2.2457, 1.7766, -1.8717, -0.7854, -0, 0.0859);
		testMethod(1660, 2.2546, 1.7669, -1.9341, -0.7854, 0, 0.0002);
		testMethod(1665, 2.2634, 1.7569, -1.9965, -0.7854, 0, 0);
		testMethod(1670, 2.2722, 1.7466, -2.0589, -0.7854, 0, 0);
		testMethod(1675, 2.2809, 1.736, -2.1213, -0.7854, 0, 0);
		testMethod(1680, 2.2895, 1.7251, -2.1837, -0.7854, 0, 0);
		testMethod(1685, 2.2981, 1.7139, -2.2461, -0.7854, 0, 0);
		testMethod(1690, 2.3067, 1.7023, -2.3085, -0.7854, 0, 0);
		testMethod(1695, 2.3151, 1.6905, -2.3708, -0.7854, 0, 0);
		testMethod(1700, 2.3236, 1.6783, -2.4332, -0.7854, 0, 0);
		testMethod(1705, 2.3319, 1.6658, -2.4956, -0.7854, 0, 0);
		testMethod(1710, 2.3402, 1.6534, -2.4956, -0.7854, 0, 0);
		testMethod(1715, 2.3485, 1.6409, -2.4956, -0.7854, 0, 0);
		testMethod(1720, 2.3566, 1.6284, -2.4956, -0.7854, 0, 0);
		testMethod(1725, 2.3647, 1.6159, -2.4956, -0.7854, 0, 0);
		testMethod(1730, 2.3728, 1.6034, -2.4956, -0.7854, 0, 0);
		testMethod(1735, 2.3808, 1.591, -2.4956, -0.7854, 0, 0);
		testMethod(1740, 2.3887, 1.5785, -2.4956, -0.7854, 0, 0);
		testMethod(1745, 2.3966, 1.566, -2.4956, -0.7854, 0, 0);
		testMethod(1750, 2.4044, 1.5535, -2.4956, -0.7854, 0, 0);
		testMethod(1755, 2.4121, 1.5411, -2.4956, -0.7854, 0, 0);
		testMethod(1760, 2.4198, 1.5286, -2.4956, -0.7854, 0, 0);
		testMethod(1765, 2.4274, 1.5161, -2.4956, -0.7854, 0, 0);
		testMethod(1770, 2.4349, 1.5036, -2.4956, -0.7854, 0, 0);
		testMethod(1775, 2.4424, 1.4911, -2.4956, -0.7854, 0, 0);
		testMethod(1780, 2.4498, 1.4787, -2.4956, -0.7854, 0, 0);
		testMethod(1785, 2.4572, 1.4662, -2.4956, -0.7854, 0, 0);
		testMethod(1790, 2.4645, 1.4537, -2.4956, -0.7854, 0, 0);
		testMethod(1795, 2.4717, 1.4412, -2.4956, -0.7854, 0, 0);
		testMethod(1800, 2.4789, 1.4287, -2.4956, -0.7854, 0, 0);
		testMethod(1805, 2.486, 1.4163, -2.4956, -0.7854, 0, 0);
		testMethod(1810, 2.4931, 1.4038, -2.4956, -0.7854, 0, 0);
		testMethod(1815, 2.5001, 1.3913, -2.4956, -0.7854, 0, 0);
		testMethod(1820, 2.507, 1.3788, -2.4956, -0.7854, 0, 0);
		testMethod(1825, 2.5139, 1.3664, -2.4956, -0.7854, 0, 0);
		testMethod(1830, 2.5207, 1.3539, -2.4956, -0.7854, 0, 0);
		testMethod(1835, 2.5274, 1.3414, -2.4956, -0.7854, 0, 0);
		testMethod(1840, 2.5341, 1.3289, -2.4956, -0.7854, 0, 0);
		testMethod(1845, 2.5407, 1.3164, -2.4956, -0.7854, 0, 0);
		testMethod(1850, 2.5472, 1.304, -2.4956, -0.7854, 0, 0);
		testMethod(1855, 2.5537, 1.2915, -2.4956, -0.7854, 0, 0);
		testMethod(1860, 2.5602, 1.279, -2.4956, -0.7854, 0, 0);
		testMethod(1865, 2.5665, 1.2665, -2.4956, -0.7854, 0, 0);
		testMethod(1870, 2.5728, 1.2541, -2.4956, -0.7854, 0, 0);
		testMethod(1875, 2.5791, 1.2416, -2.4956, -0.7854, 0, 0);
		testMethod(1880, 2.5852, 1.2291, -2.4956, -0.7854, 0, 0);
		testMethod(1885, 2.5914, 1.2166, -2.4956, -0.7854, 0, 0);
		testMethod(1890, 2.5974, 1.2041, -2.4956, -0.7854, 0, 0);
		testMethod(1895, 2.6034, 1.1917, -2.4956, -0.7854, 0, 0);
		testMethod(1900, 2.6093, 1.1792, -2.4956, -0.7854, 0, 0);
		testMethod(1905, 2.6152, 1.1667, -2.4956, -0.7854, 0, 0);
		testMethod(1910, 2.621, 1.1542, -2.4956, -0.7854, 0, 0);
		testMethod(1915, 2.6267, 1.1417, -2.4956, -0.7854, 0, 0);
		testMethod(1920, 2.6324, 1.1293, -2.4956, -0.7854, 0, 0);
		testMethod(1925, 2.638, 1.1168, -2.4956, -0.7854, 0, 0);
		testMethod(1930, 2.6436, 1.1043, -2.4956, -0.7854, 0, 0);
		testMethod(1935, 2.6491, 1.0918, -2.4956, -0.7854, 0, 0);
		testMethod(1940, 2.6545, 1.0794, -2.4956, -0.7854, 0, 0);
		testMethod(1945, 2.6599, 1.0669, -2.4956, -0.7854, 0, 0);
		testMethod(1950, 2.6652, 1.0544, -2.4956, -0.7854, 0, 0);
		testMethod(1955, 2.6704, 1.0419, -2.4956, -0.7854, 0, 0);
		testMethod(1960, 2.6756, 1.0294, -2.4956, -0.7854, 0, 0);
		testMethod(1965, 2.6807, 1.017, -2.4956, -0.7854, 0, 0);
		testMethod(1970, 2.6857, 1.0045, -2.4956, -0.7854, 0, 0);
		testMethod(1975, 2.6907, 0.992, -2.4956, -0.7854, 0, 0);
		testMethod(1980, 2.6957, 0.9795, -2.4956, -0.7854, 0, 0);
		testMethod(1985, 2.7005, 0.9671, -2.4956, -0.7854, 0, 0);
		testMethod(1990, 2.7053, 0.9546, -2.4956, -0.7854, 0, 0);
		testMethod(1995, 2.7101, 0.9421, -2.4956, -0.7854, 0, 0);
		testMethod(2000, 2.7148, 0.9296, -2.4956, -0.7854, 0, 0);
		testMethod(2005, 2.7194, 0.9171, -2.4956, -0.7854, 0, 0);
		testMethod(2010, 2.7239, 0.9047, -2.4956, -0.7854, 0, 0);
		testMethod(2015, 2.7284, 0.8922, -2.4956, -0.7854, 0, 0);
		testMethod(2020, 2.7329, 0.8797, -2.4956, -0.7854, 0, 0);
		testMethod(2025, 2.7372, 0.8672, -2.4956, -0.7854, 0, 0);
		testMethod(2030, 2.7415, 0.8548, -2.4956, -0.7854, 0, 0);
		testMethod(2035, 2.7458, 0.8423, -2.4956, -0.7854, 0, 0);
		testMethod(2040, 2.7499, 0.8298, -2.4956, -0.7854, 0, 0);
		testMethod(2045, 2.7541, 0.8173, -2.4956, -0.7854, 0, 0);
		testMethod(2050, 2.7581, 0.8048, -2.4956, -0.7854, 0, 0);
		testMethod(2055, 2.7621, 0.7924, -2.4956, -0.7854, 0, 0);
		testMethod(2060, 2.766, 0.7799, -2.4956, -0.7854, 0, 0);
		testMethod(2065, 2.7699, 0.7674, -2.4956, -0.7854, 0, 0);
		testMethod(2070, 2.7737, 0.7549, -2.4956, -0.7854, 0, 0);
		testMethod(2075, 2.7775, 0.7424, -2.4956, -0.7854, 0, 0);
		testMethod(2080, 2.7811, 0.73, -2.4956, -0.7854, 0, 0);
		testMethod(2085, 2.7848, 0.7175, -2.4956, -0.7854, 0, 0);
		testMethod(2090, 2.7883, 0.705, -2.4956, -0.7854, 0, 0);
		testMethod(2095, 2.7918, 0.6925, -2.4956, -0.7854, 0, 0);
		testMethod(2100, 2.7952, 0.6801, -2.4956, -0.7854, 0, 0);
		testMethod(2105, 2.7986, 0.6676, -2.4956, -0.7854, 0, 0);
		testMethod(2110, 2.8019, 0.6551, -2.4956, -0.7854, 0, 0);
		testMethod(2115, 2.8052, 0.6426, -2.4956, -0.7854, 0, 0);
		testMethod(2120, 2.8083, 0.6301, -2.4956, -0.7854, 0, 0);
		testMethod(2125, 2.8115, 0.6177, -2.4956, -0.7854, 0, 0);
		testMethod(2130, 2.8145, 0.6052, -2.4956, -0.7854, 0, 0);
		testMethod(2135, 2.8175, 0.5927, -2.4956, -0.7854, 0, 0);
		testMethod(2140, 2.8204, 0.5802, -2.4956, -0.7854, 0, 0);
		testMethod(2145, 2.8233, 0.5678, -2.4956, -0.7854, 0, 0);
		testMethod(2150, 2.8261, 0.5553, -2.4956, -0.7854, 0, 0);
		testMethod(2155, 2.8289, 0.5428, -2.4956, -0.7854, 0, 0);
		testMethod(2160, 2.8316, 0.5303, -2.4956, -0.7854, 0, 0);
		testMethod(2165, 2.8342, 0.5178, -2.4956, -0.7854, 0, 0);
		testMethod(2170, 2.8367, 0.5054, -2.4956, -0.7854, 0, 0);
		testMethod(2175, 2.8392, 0.4929, -2.4956, -0.7854, 0, 0);
		testMethod(2180, 2.8417, 0.4804, -2.4956, -0.7854, 0, 0);
		testMethod(2185, 2.844, 0.4679, -2.4956, -0.7854, 0, 0);
		testMethod(2190, 2.8463, 0.4555, -2.4956, -0.7854, 0, 0);
		testMethod(2195, 2.8486, 0.443, -2.4956, -0.7854, 0, 0);
		testMethod(2200, 2.8508, 0.4305, -2.4956, -0.7854, 0, 0);
		testMethod(2205, 2.8529, 0.418, -2.4956, -0.7854, 0, 0);
		testMethod(2210, 2.855, 0.4055, -2.4956, -0.7854, 0, 0);
		testMethod(2215, 2.8569, 0.3931, -2.4956, -0.7854, 0, 0);
		testMethod(2220, 2.8589, 0.3806, -2.4956, -0.7854, 0, 0);
		testMethod(2225, 2.8608, 0.3681, -2.4956, -0.7854, 0, 0);
		testMethod(2230, 2.8626, 0.3556, -2.4956, -0.7854, 0, 0);
		testMethod(2235, 2.8643, 0.3431, -2.4956, -0.7854, 0, 0);
		testMethod(2240, 2.866, 0.3307, -2.4956, -0.7854, 0, 0);
		testMethod(2245, 2.8676, 0.3182, -2.4956, -0.7854, 0, 0);
		testMethod(2250, 2.8692, 0.3057, -2.4956, -0.7854, 0, 0);
		testMethod(2255, 2.8707, 0.2932, -2.4956, -0.7854, 0, 0);
		testMethod(2260, 2.8721, 0.2808, -2.4956, -0.7854, 0, 0);
		testMethod(2265, 2.8735, 0.2683, -2.4956, -0.7854, 0, 0);
		testMethod(2270, 2.8748, 0.2558, -2.4956, -0.7854, 0, 0);
		testMethod(2275, 2.876, 0.2433, -2.4956, -0.7854, 0, 0);
		testMethod(2280, 2.8772, 0.2312, -2.4332, -0.7854, 0, 0);
		testMethod(2285, 2.8784, 0.2193, -2.3708, -0.7854, 0, 0);
		testMethod(2290, 2.8794, 0.2078, -2.3085, -0.7854, 0, 0);
		testMethod(2295, 2.8804, 0.1965, -2.2461, -0.7854, 0, 0);
		testMethod(2300, 2.8814, 0.1856, -2.1837, -0.7854, 0, 0);
		testMethod(2305, 2.8823, 0.175, -2.1213, -0.7854, 0, 0);
		testMethod(2310, 2.8831, 0.1647, -2.0589, -0.7854, 0, 0);
		testMethod(2315, 2.8839, 0.1547, -1.9965, -0.7854, 0, 0);
		testMethod(2320, 2.8847, 0.1451, -1.9341, -0.7854, 0, 0);
		testMethod(2325, 2.8854, 0.1357, -1.8717, -0.7854, 0, 0);
		testMethod(2330, 2.886, 0.1267, -1.8093, -0.7854, 0, 0);
		testMethod(2335, 2.8867, 0.1179, -1.7469, -0.7854, 0, 0);
		testMethod(2340, 2.8872, 0.1095, -1.6845, -0.7854, 0, 0);
		testMethod(2345, 2.8877, 0.1014, -1.6222, -0.7854, 0, 0);
		testMethod(2350, 2.8882, 0.0936, -1.5598, -0.7854, 0, 0);
		testMethod(2355, 2.8887, 0.0861, -1.4974, -0.7854, 0, 0);
		testMethod(2360, 2.8891, 0.0789, -1.435, -0.7854, 0, 0);
		testMethod(2365, 2.8895, 0.0721, -1.3726, -0.7854, 0, 0);
		testMethod(2370, 2.8898, 0.0655, -1.3102, -0.7854, 0, 0);
		testMethod(2375, 2.8901, 0.0593, -1.2478, -0.7854, 0, 0);
		testMethod(2380, 2.8904, 0.0533, -1.1854, -0.7854, 0, 0);
		testMethod(2385, 2.8907, 0.0477, -1.123, -0.7854, 0, 0);
		testMethod(2390, 2.8909, 0.0424, -1.0606, -0.7854, 0, 0);
		testMethod(2395, 2.8911, 0.0374, -0.9983, -0.7854, 0, 0);
		testMethod(2400, 2.8913, 0.0328, -0.9359, -0.7854, 0, 0);
		testMethod(2405, 2.8914, 0.0284, -0.8735, -0.7854, 0, 0);
		testMethod(2410, 2.8916, 0.0243, -0.8111, -0.7854, 0, 0);
		testMethod(2415, 2.8917, 0.0206, -0.7487, -0.7854, 0, 0);
		testMethod(2420, 2.8918, 0.0172, -0.6863, -0.7854, 0, 0);
		testMethod(2425, 2.8918, 0.014, -0.6239, -0.7854, 0, 0);
		testMethod(2430, 2.8919, 0.0112, -0.5615, -0.7854, 0, 0);
		testMethod(2435, 2.8919, 0.0087, -0.4991, -0.7854, 0, 0);
		testMethod(2440, 2.892, 0.0066, -0.4367, -0.7854, 0, 0);
		testMethod(2445, 2.892, 0.0047, -0.3743, -0.7854, 0, 0);
		testMethod(2450, 2.892, 0.0031, -0.312, -0.7854, 0, 0);
		testMethod(2455, 2.892, 0.0019, -0.2496, -0.7854, 0, 0);
		testMethod(2460, 2.8921, 0.0009, -0.1872, -0.7854, 0, 0);
		testMethod(2465, 2.8921, 0.0003, -0.1248, -0.7854, 0, 0);
		testMethod(2470, 2.8921, 0, -0.0624, -0.7854, 0, 0);
		testMethod(2475, 2.8921, 0, 0, -0.7854, 0, 0);
		testMethod(2475, 2.8921, 0, 0, -0.7854, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}