package org.usfirst.frc.team1197.robot;

public class BoilerPos2 extends TorTrajectory {

	public BoilerPos2() {
		super(2.5, 0);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0624, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1249, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1873, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2498, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3122, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.3746, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4371, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4995, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.5619, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.6244, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6868, 0, 0, 0);
		testMethod(60, 0.0005, 0.0244, 0.7493, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8117, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.8741, 0, 0, 0);
		testMethod(75, 0.001, 0.0375, 0.9366, 0, 0, 0);
		testMethod(80, 0.0012, 0.0425, 0.999, 0, 0, 0);
		testMethod(85, 0.0014, 0.0478, 1.0614, 0, 0, 0);
		testMethod(90, 0.0016, 0.0534, 1.1239, 0, 0, 0);
		testMethod(95, 0.0019, 0.0593, 1.1863, 0, 0, 0);
		testMethod(100, 0.0022, 0.0656, 1.2488, 0, 0, 0);
		testMethod(105, 0.0026, 0.0721, 1.3112, 0, 0, 0);
		testMethod(110, 0.003, 0.079, 1.3736, 0, 0, 0);
		testMethod(115, 0.0034, 0.0862, 1.4361, 0, 0, 0);
		testMethod(120, 0.0038, 0.0937, 1.4985, 0, 0, 0);
		testMethod(125, 0.0043, 0.1015, 1.5609, 0, 0, 0);
		testMethod(130, 0.0048, 0.1096, 1.6234, 0, 0, 0);
		testMethod(135, 0.0054, 0.118, 1.6858, 0, 0, 0);
		testMethod(140, 0.006, 0.1267, 1.7483, 0, 0, 0);
		testMethod(145, 0.0067, 0.1358, 1.8107, 0, 0, 0);
		testMethod(150, 0.0074, 0.1452, 1.8731, 0, 0, 0);
		testMethod(155, 0.0081, 0.1548, 1.9356, 0, 0, 0);
		testMethod(160, 0.0089, 0.1648, 1.998, 0, 0, 0);
		testMethod(165, 0.0098, 0.1751, 2.0604, 0, 0, 0);
		testMethod(170, 0.0107, 0.1858, 2.1229, 0, 0, 0);
		testMethod(175, 0.0116, 0.1967, 2.1853, 0, 0, 0);
		testMethod(180, 0.0126, 0.2079, 2.2478, 0, 0, 0);
		testMethod(185, 0.0137, 0.2195, 2.3102, 0, 0, 0);
		testMethod(190, 0.0148, 0.2313, 2.3726, 0, 0, 0);
		testMethod(195, 0.016, 0.2435, 2.4351, 0, 0, 0);
		testMethod(200, 0.0173, 0.256, 2.4975, 0, 0, 0);
		testMethod(205, 0.0186, 0.2685, 2.4975, 0, 0, 0);
		testMethod(210, 0.02, 0.281, 2.4975, 0, 0, 0);
		testMethod(215, 0.0214, 0.2935, 2.4975, 0, 0, 0);
		testMethod(220, 0.0229, 0.3059, 2.4975, 0, 0, 0);
		testMethod(225, 0.0245, 0.3184, 2.4975, 0, 0, 0);
		testMethod(230, 0.0261, 0.3309, 2.4975, 0, 0, 0);
		testMethod(235, 0.0278, 0.3434, 2.4975, 0, 0, 0);
		testMethod(240, 0.0295, 0.3559, 2.4975, 0, 0, 0);
		testMethod(245, 0.0313, 0.3684, 2.4975, 0, 0, 0);
		testMethod(250, 0.0332, 0.3809, 2.4975, 0, 0, 0);
		testMethod(255, 0.0351, 0.3934, 2.4975, 0, 0, 0);
		testMethod(260, 0.0371, 0.4058, 2.4975, 0, 0, 0);
		testMethod(265, 0.0392, 0.4183, 2.4975, 0, 0, 0);
		testMethod(270, 0.0413, 0.4308, 2.4975, 0, 0, 0);
		testMethod(275, 0.0435, 0.4433, 2.4975, 0, 0, 0);
		testMethod(280, 0.0458, 0.4558, 2.4975, 0, 0, 0);
		testMethod(285, 0.0481, 0.4683, 2.4975, 0, 0, 0);
		testMethod(290, 0.0504, 0.4808, 2.4975, 0, 0, 0);
		testMethod(295, 0.0529, 0.4933, 2.4975, 0, 0, 0);
		testMethod(300, 0.0554, 0.5057, 2.4975, 0, 0, 0);
		testMethod(305, 0.0579, 0.5182, 2.4975, 0, 0, 0);
		testMethod(310, 0.0605, 0.5307, 2.4975, 0, 0, 0);
		testMethod(315, 0.0632, 0.5432, 2.4975, 0, 0, 0);
		testMethod(320, 0.066, 0.5557, 2.4975, 0, 0, 0);
		testMethod(325, 0.0688, 0.5682, 2.4975, 0, 0, 0);
		testMethod(330, 0.0717, 0.5807, 2.4975, 0, 0, 0);
		testMethod(335, 0.0746, 0.5932, 2.4975, 0, 0, 0);
		testMethod(340, 0.0776, 0.6056, 2.4975, 0, 0, 0);
		testMethod(345, 0.0807, 0.6181, 2.4975, 0, 0, 0);
		testMethod(350, 0.0838, 0.6306, 2.4975, 0, 0, 0);
		testMethod(355, 0.087, 0.6431, 2.4975, 0, 0, 0);
		testMethod(360, 0.0902, 0.6556, 2.4975, 0, 0, 0);
		testMethod(365, 0.0935, 0.6681, 2.4975, 0, 0, 0);
		testMethod(370, 0.0969, 0.6806, 2.4975, 0, 0, 0);
		testMethod(375, 0.1003, 0.6931, 2.4975, 0, 0, 0);
		testMethod(380, 0.1038, 0.7055, 2.4975, 0, 0, 0);
		testMethod(385, 0.1074, 0.718, 2.4975, 0, 0, 0);
		testMethod(390, 0.111, 0.7305, 2.4975, 0, 0, 0);
		testMethod(395, 0.1147, 0.743, 2.4975, 0, 0, 0);
		testMethod(400, 0.1184, 0.7555, 2.4975, 0, 0, 0);
		testMethod(405, 0.1222, 0.768, 2.4975, 0, 0, 0);
		testMethod(410, 0.1261, 0.7805, 2.4975, 0, 0, 0);
		testMethod(415, 0.13, 0.793, 2.4975, 0, 0, 0);
		testMethod(420, 0.134, 0.8054, 2.4975, 0, 0, 0);
		testMethod(425, 0.1381, 0.8179, 2.4975, 0, 0, 0);
		testMethod(430, 0.1422, 0.8304, 2.4975, 0, 0, 0);
		testMethod(435, 0.1464, 0.8429, 2.4975, 0, 0, 0);
		testMethod(440, 0.1506, 0.8554, 2.4975, 0, 0, 0);
		testMethod(445, 0.155, 0.8679, 2.4975, 0, 0, 0);
		testMethod(450, 0.1593, 0.8804, 2.4975, 0, 0, 0);
		testMethod(455, 0.1638, 0.8929, 2.4975, 0, 0, 0);
		testMethod(460, 0.1683, 0.9053, 2.4975, 0, 0, 0);
		testMethod(465, 0.1728, 0.9178, 2.4975, 0, 0, 0);
		testMethod(470, 0.1774, 0.9303, 2.4975, 0, 0, 0);
		testMethod(475, 0.1821, 0.9428, 2.4975, 0, 0, 0);
		testMethod(480, 0.1869, 0.9553, 2.4975, 0, 0, 0);
		testMethod(485, 0.1917, 0.9678, 2.4975, 0, 0, 0);
		testMethod(490, 0.1965, 0.9803, 2.4975, 0, 0, 0);
		testMethod(495, 0.2015, 0.9928, 2.4975, 0, 0, 0);
		testMethod(500, 0.2065, 1.0052, 2.4975, 0, 0, 0);
		testMethod(505, 0.2115, 1.0177, 2.4975, 0, 0, 0);
		testMethod(510, 0.2166, 1.0302, 2.4975, 0, 0, 0);
		testMethod(515, 0.2218, 1.0427, 2.4975, 0, 0, 0);
		testMethod(520, 0.2271, 1.0552, 2.4975, 0, 0, 0);
		testMethod(525, 0.2324, 1.0677, 2.4975, 0, 0, 0);
		testMethod(530, 0.2377, 1.0802, 2.4975, 0, 0, 0);
		testMethod(535, 0.2432, 1.0927, 2.4975, 0, 0, 0);
		testMethod(540, 0.2487, 1.1051, 2.4975, 0, 0, 0);
		testMethod(545, 0.2542, 1.1176, 2.4975, 0, 0, 0);
		testMethod(550, 0.2598, 1.1301, 2.4975, 0, 0, 0);
		testMethod(555, 0.2655, 1.1426, 2.4975, 0, 0, 0);
		testMethod(560, 0.2713, 1.1551, 2.4975, 0, 0, 0);
		testMethod(565, 0.2771, 1.1676, 2.4975, 0, 0, 0);
		testMethod(570, 0.283, 1.1801, 2.4975, 0, 0, 0);
		testMethod(575, 0.2889, 1.1926, 2.4975, 0, 0, 0);
		testMethod(580, 0.2949, 1.205, 2.4975, 0, 0, 0);
		testMethod(585, 0.3009, 1.2175, 2.4975, 0, 0, 0);
		testMethod(590, 0.3071, 1.23, 2.4975, 0, 0, 0);
		testMethod(595, 0.3132, 1.2425, 2.4975, 0, 0, 0);
		testMethod(600, 0.3195, 1.255, 2.4975, 0, 0, 0);
		testMethod(605, 0.3258, 1.2675, 2.4975, 0, 0, 0);
		testMethod(610, 0.3322, 1.28, 2.4975, 0, 0, 0);
		testMethod(615, 0.3386, 1.2925, 2.4975, 0, 0, 0);
		testMethod(620, 0.3451, 1.3049, 2.4975, 0, 0, 0);
		testMethod(625, 0.3516, 1.3174, 2.4975, 0, 0, 0);
		testMethod(630, 0.3583, 1.3299, 2.4975, 0, 0, 0);
		testMethod(635, 0.3649, 1.3424, 2.4975, 0, 0, 0);
		testMethod(640, 0.3717, 1.3549, 2.4975, 0, 0, 0);
		testMethod(645, 0.3785, 1.3674, 2.4975, 0, 0, 0);
		testMethod(650, 0.3853, 1.3799, 2.4975, 0, 0, 0);
		testMethod(655, 0.3923, 1.3924, 2.4975, 0, 0, 0);
		testMethod(660, 0.3993, 1.4048, 2.4975, 0, 0, 0);
		testMethod(665, 0.4063, 1.4173, 2.4975, 0, 0, 0);
		testMethod(670, 0.4134, 1.4298, 2.4975, 0, 0, 0);
		testMethod(675, 0.4206, 1.4423, 2.4975, 0, 0, 0);
		testMethod(680, 0.4279, 1.4548, 2.4975, 0, 0, 0);
		testMethod(685, 0.4352, 1.4673, 2.4975, 0, 0, 0);
		testMethod(690, 0.4425, 1.4798, 2.4975, 0, 0, 0);
		testMethod(695, 0.45, 1.4923, 2.4975, 0, 0, 0);
		testMethod(700, 0.4575, 1.5047, 2.4975, 0, 0, 0);
		testMethod(705, 0.465, 1.5172, 2.4975, 0, 0, 0);
		testMethod(710, 0.4726, 1.5297, 2.4975, 0, 0, 0);
		testMethod(715, 0.4803, 1.5422, 2.4975, 0, 0, 0);
		testMethod(720, 0.4881, 1.5547, 2.4975, 0, 0, 0);
		testMethod(725, 0.4959, 1.5672, 2.4975, 0, 0, 0);
		testMethod(730, 0.5037, 1.5797, 2.4975, 0, 0, 0);
		testMethod(735, 0.5117, 1.5922, 2.4975, 0, 0, 0);
		testMethod(740, 0.5197, 1.6046, 2.4975, 0, 0, 0);
		testMethod(745, 0.5277, 1.6171, 2.4975, 0, 0, 0);
		testMethod(750, 0.5358, 1.6296, 2.4975, 0, 0, 0);
		testMethod(755, 0.544, 1.6421, 2.4975, 0, 0, 0);
		testMethod(760, 0.5522, 1.6546, 2.4975, 0, 0, 0);
		testMethod(765, 0.5605, 1.6671, 2.4975, 0, 0, 0);
		testMethod(770, 0.5689, 1.6796, 2.4975, 0, 0, 0);
		testMethod(775, 0.5773, 1.6917, 2.4351, 0, 0, 0);
		testMethod(780, 0.5858, 1.7036, 2.3726, 0, 0, 0);
		testMethod(785, 0.5944, 1.7152, 2.3102, 0, 0, 0);
		testMethod(790, 0.603, 1.7264, 2.2478, 0, 0, 0);
		testMethod(795, 0.6116, 1.7373, 2.1853, 0, 0, 0);
		testMethod(800, 0.6204, 1.7479, 2.1229, 0, 0, 0);
		testMethod(805, 0.6291, 1.7582, 2.0604, 0, 0, 0);
		testMethod(810, 0.6379, 1.7682, 1.998, 0, 0, 0);
		testMethod(815, 0.6468, 1.7779, 1.9356, 0, 0, 0);
		testMethod(820, 0.6557, 1.7873, 1.8731, 0, 0, 0);
		testMethod(825, 0.6647, 1.7963, 1.8107, 0, 0, 0);
		testMethod(830, 0.6737, 1.8051, 1.7483, 0, 0, 0);
		testMethod(835, 0.6827, 1.8135, 1.6858, 0, 0, 0);
		testMethod(840, 0.6918, 1.8216, 1.6234, 0, 0, 0);
		testMethod(845, 0.7009, 1.8294, 1.5609, 0, 0, 0);
		testMethod(850, 0.7101, 1.8369, 1.4985, 0, 0, 0);
		testMethod(855, 0.7193, 1.8441, 1.4361, 0, 0, 0);
		testMethod(860, 0.7285, 1.851, 1.3736, 0, 0, 0);
		testMethod(865, 0.7378, 1.8575, 1.3112, 0, 0, 0);
		testMethod(870, 0.7471, 1.8638, 1.2488, 0, 0, 0);
		testMethod(875, 0.7565, 1.8697, 1.1863, 0, 0, 0);
		testMethod(880, 0.7658, 1.8753, 1.1239, 0, 0, 0);
		testMethod(885, 0.7752, 1.8806, 1.0614, 0, 0, 0);
		testMethod(890, 0.7846, 1.8856, 0.999, 0, 0, 0);
		testMethod(895, 0.7941, 1.8903, 0.9366, 0, 0, 0);
		testMethod(900, 0.8035, 1.8947, 0.8741, 0, 0, 0);
		testMethod(905, 0.813, 1.8987, 0.8117, 0, 0, 0);
		testMethod(910, 0.8225, 1.9025, 0.7493, 0, 0, 0);
		testMethod(915, 0.832, 1.9059, 0.6868, 0, 0, 0);
		testMethod(920, 0.8416, 1.909, 0.6244, 0, 0, 0);
		testMethod(925, 0.8511, 1.9118, 0.5619, 0, 0, 0);
		testMethod(930, 0.8607, 1.9143, 0.4995, 0, 0, 0);
		testMethod(935, 0.8703, 1.9165, 0.4371, 0, 0, 0);
		testMethod(940, 0.8799, 1.9184, 0.3746, 0, 0, 0);
		testMethod(945, 0.8894, 1.92, 0.3122, 0, 0, 0);
		testMethod(950, 0.899, 1.9212, 0.2498, 0, 0, 0);
		testMethod(955, 0.9087, 1.9221, 0.1873, 0, 0, 0);
		testMethod(960, 0.9183, 1.9228, 0.1249, 0, 0, 0);
		testMethod(965, 0.9279, 1.9231, 0.0624, 0, 0, 0);
		testMethod(970, 0.9375, 1.9231, 0, 0, 0, 0);
		testMethod(975, 0.9471, 1.9231, 0, 0, 0, 0);
		testMethod(980, 0.9567, 1.9231, 0, 0, 0, 0);
		testMethod(985, 0.9663, 1.9231, 0, 0, 0, 0);
		testMethod(990, 0.976, 1.9231, 0, 0, 0, 0);
		testMethod(995, 0.9856, 1.9231, 0, 0, 0, 0);
		testMethod(1000, 0.9952, 1.9231, 0, 0, 0, 0);
		testMethod(1005, 1.0048, 1.9231, 0, 0, 0, 0);
		testMethod(1010, 1.0144, 1.9231, 0, 0, 0, 0);
		testMethod(1015, 1.024, 1.9231, 0, 0, 0, 0);
		testMethod(1020, 1.0337, 1.9231, 0, 0, 0, 0);
		testMethod(1025, 1.0433, 1.9231, 0, 0, 0, 0);
		testMethod(1030, 1.0529, 1.9231, 0, 0, 0, 0);
		testMethod(1035, 1.0625, 1.9231, 0, 0, 0, 0);
		testMethod(1040, 1.0721, 1.9231, 0, 0, 0, 0);
		testMethod(1045, 1.0817, 1.9231, 0, 0, 0, 0);
		testMethod(1050, 1.0913, 1.9231, 0, 0, 0, 0);
		testMethod(1055, 1.101, 1.9231, 0, 0, 0, 0);
		testMethod(1060, 1.1106, 1.9231, 0, 0, 0, 0);
		testMethod(1065, 1.1202, 1.9231, 0, 0, 0, 0);
		testMethod(1070, 1.1298, 1.9231, 0, 0, 0, 0);
		testMethod(1075, 1.1394, 1.9231, 0, 0, 0, 0);
		testMethod(1080, 1.149, 1.9231, 0, 0, 0, 0);
		testMethod(1085, 1.1587, 1.9231, 0, 0, 0, 0);
		testMethod(1090, 1.1683, 1.9231, 0, 0, 0, 0);
		testMethod(1095, 1.1779, 1.9231, 0, 0, 0, 0);
		testMethod(1100, 1.1875, 1.9231, 0, 0, 0, 0);
		testMethod(1105, 1.1971, 1.9231, 0, 0, 0, 0);
		testMethod(1110, 1.2067, 1.9231, 0, 0, 0, 0);
		testMethod(1115, 1.2163, 1.9231, 0, 0, 0, 0);
		testMethod(1120, 1.226, 1.9231, 0, 0, 0, 0);
		testMethod(1125, 1.2356, 1.9231, 0, 0, 0, 0);
		testMethod(1130, 1.2452, 1.9231, 0, 0, 0, 0);
		testMethod(1135, 1.2548, 1.9231, 0, 0, 0, 0);
		testMethod(1140, 1.2644, 1.9231, 0, 0, 0, 0);
		testMethod(1145, 1.274, 1.9231, 0, 0, 0, 0);
		testMethod(1150, 1.2837, 1.9231, 0, 0, 0, 0);
		testMethod(1155, 1.2933, 1.9231, 0, 0, 0, 0);
		testMethod(1160, 1.3029, 1.9231, 0, 0, 0, 0);
		testMethod(1165, 1.3125, 1.9231, 0, 0, 0, 0);
		testMethod(1170, 1.3221, 1.9231, 0, 0, 0, 0);
		testMethod(1175, 1.3317, 1.9231, 0, 0, 0, 0);
		testMethod(1180, 1.3413, 1.9231, 0, 0, 0, 0);
		testMethod(1185, 1.351, 1.9231, 0, 0, 0, 0);
		testMethod(1190, 1.3606, 1.9231, 0, 0, 0, 0);
		testMethod(1195, 1.3702, 1.9231, 0, 0, 0, 0);
		testMethod(1200, 1.3798, 1.9231, 0, 0, 0, 0);
		testMethod(1205, 1.3894, 1.9231, 0, 0, 0, 0);
		testMethod(1210, 1.399, 1.9231, 0, 0, 0, 0);
		testMethod(1215, 1.4087, 1.9231, 0, 0, 0, 0);
		testMethod(1220, 1.4183, 1.9231, 0, 0, 0, 0);
		testMethod(1225, 1.4279, 1.9231, 0, 0, 0, 0);
		testMethod(1230, 1.4375, 1.9231, 0, 0, 0, 0);
		testMethod(1235, 1.4471, 1.9231, 0, 0, 0, 0);
		testMethod(1240, 1.4567, 1.9231, 0, 0, 0, 0);
		testMethod(1245, 1.4663, 1.9231, 0, 0, 0, 0);
		testMethod(1250, 1.476, 1.9231, 0, 0, 0, 0);
		testMethod(1255, 1.4856, 1.9231, 0, 0, 0, 0);
		testMethod(1260, 1.4952, 1.9231, 0, 0, 0, 0);
		testMethod(1265, 1.5048, 1.9231, 0, 0, 0, 0);
		testMethod(1270, 1.5144, 1.9231, 0, 0, 0, 0);
		testMethod(1275, 1.524, 1.9231, 0, 0, 0, 0);
		testMethod(1280, 1.5337, 1.9231, 0, 0, 0, 0);
		testMethod(1285, 1.5433, 1.9231, 0, 0, 0, 0);
		testMethod(1290, 1.5529, 1.9231, 0, 0, 0, 0);
		testMethod(1295, 1.5625, 1.9231, 0, 0, 0, 0);
		testMethod(1300, 1.5721, 1.9231, 0, 0, 0, 0);
		testMethod(1305, 1.5817, 1.9228, -0.0624, 0, 0, 0);
		testMethod(1310, 1.5913, 1.9221, -0.1249, 0, 0, 0);
		testMethod(1315, 1.601, 1.9212, -0.1873, 0, 0, 0);
		testMethod(1320, 1.6106, 1.92, -0.2498, 0, 0, 0);
		testMethod(1325, 1.6201, 1.9184, -0.3122, 0, 0, 0);
		testMethod(1330, 1.6297, 1.9165, -0.3746, 0, 0, 0);
		testMethod(1335, 1.6393, 1.9143, -0.4371, 0, 0, 0);
		testMethod(1340, 1.6489, 1.9118, -0.4995, 0, 0, 0);
		testMethod(1345, 1.6584, 1.909, -0.5619, 0, 0, 0);
		testMethod(1350, 1.668, 1.9059, -0.6244, 0, 0, 0);
		testMethod(1355, 1.6775, 1.9025, -0.6868, 0, 0, 0);
		testMethod(1360, 1.687, 1.8987, -0.7493, 0, 0, 0);
		testMethod(1365, 1.6965, 1.8947, -0.8117, 0, 0, 0);
		testMethod(1370, 1.7059, 1.8903, -0.8741, 0, 0, 0);
		testMethod(1375, 1.7154, 1.8856, -0.9366, 0, 0, 0);
		testMethod(1380, 1.7248, 1.8806, -0.999, 0, 0, 0);
		testMethod(1385, 1.7342, 1.8753, -1.0614, 0, 0, 0);
		testMethod(1390, 1.7435, 1.8697, -1.1239, 0, 0, 0);
		testMethod(1395, 1.7529, 1.8638, -1.1863, 0, 0, 0);
		testMethod(1400, 1.7622, 1.8575, -1.2488, 0, 0, 0);
		testMethod(1405, 1.7715, 1.851, -1.3112, 0, 0, 0);
		testMethod(1410, 1.7807, 1.8441, -1.3736, 0, 0, 0);
		testMethod(1415, 1.7899, 1.8369, -1.4361, 0, 0, 0);
		testMethod(1420, 1.7991, 1.8294, -1.4985, 0, 0, 0);
		testMethod(1425, 1.8082, 1.8216, -1.5609, 0, 0, 0);
		testMethod(1430, 1.8173, 1.8135, -1.6234, 0, 0, 0);
		testMethod(1435, 1.8263, 1.8051, -1.6858, 0, 0, 0);
		testMethod(1440, 1.8353, 1.7963, -1.7483, 0, 0, 0);
		testMethod(1445, 1.8443, 1.7873, -1.8107, 0, 0, 0);
		testMethod(1450, 1.8532, 1.7779, -1.8731, 0, 0, 0);
		testMethod(1455, 1.8621, 1.7682, -1.9356, 0, 0, 0);
		testMethod(1460, 1.8709, 1.7582, -1.998, 0, 0, 0);
		testMethod(1465, 1.8796, 1.7479, -2.0604, 0, 0, 0);
		testMethod(1470, 1.8884, 1.7373, -2.1229, 0, 0, 0);
		testMethod(1475, 1.897, 1.7264, -2.1853, 0, 0, 0);
		testMethod(1480, 1.9056, 1.7152, -2.2478, 0, 0, 0);
		testMethod(1485, 1.9142, 1.7036, -2.3102, 0, 0, 0);
		testMethod(1490, 1.9227, 1.6917, -2.3726, 0, 0, 0);
		testMethod(1495, 1.9311, 1.6796, -2.4351, 0, 0, 0);
		testMethod(1500, 1.9395, 1.6671, -2.4975, 0, 0, 0);
		testMethod(1505, 1.9478, 1.6546, -2.4975, 0, 0, 0);
		testMethod(1510, 1.956, 1.6421, -2.4975, 0, 0, 0);
		testMethod(1515, 1.9642, 1.6296, -2.4975, 0, 0, 0);
		testMethod(1520, 1.9723, 1.6171, -2.4975, 0, 0, 0);
		testMethod(1525, 1.9803, 1.6046, -2.4975, 0, 0, 0);
		testMethod(1530, 1.9883, 1.5922, -2.4975, 0, 0, 0);
		testMethod(1535, 1.9963, 1.5797, -2.4975, 0, 0, 0);
		testMethod(1540, 2.0041, 1.5672, -2.4975, 0, 0, 0);
		testMethod(1545, 2.0119, 1.5547, -2.4975, 0, 0, 0);
		testMethod(1550, 2.0197, 1.5422, -2.4975, 0, 0, 0);
		testMethod(1555, 2.0274, 1.5297, -2.4975, 0, 0, 0);
		testMethod(1560, 2.035, 1.5172, -2.4975, 0, 0, 0);
		testMethod(1565, 2.0425, 1.5047, -2.4975, 0, 0, 0);
		testMethod(1570, 2.05, 1.4923, -2.4975, 0, 0, 0);
		testMethod(1575, 2.0575, 1.4798, -2.4975, 0, 0, 0);
		testMethod(1580, 2.0648, 1.4673, -2.4975, 0, 0, 0);
		testMethod(1585, 2.0721, 1.4548, -2.4975, 0, 0, 0);
		testMethod(1590, 2.0794, 1.4423, -2.4975, 0, 0, 0);
		testMethod(1595, 2.0866, 1.4298, -2.4975, 0, 0, 0);
		testMethod(1600, 2.0937, 1.4173, -2.4975, 0, 0, 0);
		testMethod(1605, 2.1007, 1.4048, -2.4975, 0, 0, 0);
		testMethod(1610, 2.1077, 1.3924, -2.4975, 0, 0, 0);
		testMethod(1615, 2.1147, 1.3799, -2.4975, 0, 0, 0);
		testMethod(1620, 2.1215, 1.3674, -2.4975, 0, 0, 0);
		testMethod(1625, 2.1283, 1.3549, -2.4975, 0, 0, 0);
		testMethod(1630, 2.1351, 1.3424, -2.4975, 0, 0, 0);
		testMethod(1635, 2.1417, 1.3299, -2.4975, 0, 0, 0);
		testMethod(1640, 2.1484, 1.3174, -2.4975, 0, 0, 0);
		testMethod(1645, 2.1549, 1.3049, -2.4975, 0, 0, 0);
		testMethod(1650, 2.1614, 1.2925, -2.4975, 0, 0, 0);
		testMethod(1655, 2.1678, 1.28, -2.4975, 0, 0, 0);
		testMethod(1660, 2.1742, 1.2675, -2.4975, 0, 0, 0);
		testMethod(1665, 2.1805, 1.255, -2.4975, 0, 0, 0);
		testMethod(1670, 2.1868, 1.2425, -2.4975, 0, 0, 0);
		testMethod(1675, 2.1929, 1.23, -2.4975, 0, 0, 0);
		testMethod(1680, 2.1991, 1.2175, -2.4975, 0, 0, 0);
		testMethod(1685, 2.2051, 1.205, -2.4975, 0, 0, 0);
		testMethod(1690, 2.2111, 1.1926, -2.4975, 0, 0, 0);
		testMethod(1695, 2.217, 1.1801, -2.4975, 0, 0, 0);
		testMethod(1700, 2.2229, 1.1676, -2.4975, 0, 0, 0);
		testMethod(1705, 2.2287, 1.1551, -2.4975, 0, 0, 0);
		testMethod(1710, 2.2345, 1.1426, -2.4975, 0, 0, 0);
		testMethod(1715, 2.2402, 1.1301, -2.4975, 0, 0, 0);
		testMethod(1720, 2.2458, 1.1176, -2.4975, 0, 0, 0);
		testMethod(1725, 2.2513, 1.1051, -2.4975, 0, 0, 0);
		testMethod(1730, 2.2568, 1.0927, -2.4975, 0, 0, 0);
		testMethod(1735, 2.2623, 1.0802, -2.4975, 0, 0, 0);
		testMethod(1740, 2.2676, 1.0677, -2.4975, 0, 0, 0);
		testMethod(1745, 2.2729, 1.0552, -2.4975, 0, 0, 0);
		testMethod(1750, 2.2782, 1.0427, -2.4975, 0, 0, 0);
		testMethod(1755, 2.2834, 1.0302, -2.4975, 0, 0, 0);
		testMethod(1760, 2.2885, 1.0177, -2.4975, 0, 0, 0);
		testMethod(1765, 2.2935, 1.0052, -2.4975, 0, 0, 0);
		testMethod(1770, 2.2985, 0.9928, -2.4975, 0, 0, 0);
		testMethod(1775, 2.3035, 0.9803, -2.4975, 0, 0, 0);
		testMethod(1780, 2.3083, 0.9678, -2.4975, 0, 0, 0);
		testMethod(1785, 2.3131, 0.9553, -2.4975, 0, 0, 0);
		testMethod(1790, 2.3179, 0.9428, -2.4975, 0, 0, 0);
		testMethod(1795, 2.3226, 0.9303, -2.4975, 0, 0, 0);
		testMethod(1800, 2.3272, 0.9178, -2.4975, 0, 0, 0);
		testMethod(1805, 2.3317, 0.9053, -2.4975, 0, 0, 0);
		testMethod(1810, 2.3362, 0.8929, -2.4975, 0, 0, 0);
		testMethod(1815, 2.3407, 0.8804, -2.4975, 0, 0, 0);
		testMethod(1820, 2.345, 0.8679, -2.4975, 0, 0, 0);
		testMethod(1825, 2.3494, 0.8554, -2.4975, 0, 0, 0);
		testMethod(1830, 2.3536, 0.8429, -2.4975, 0, 0, 0);
		testMethod(1835, 2.3578, 0.8304, -2.4975, 0, 0, 0);
		testMethod(1840, 2.3619, 0.8179, -2.4975, 0, 0, 0);
		testMethod(1845, 2.366, 0.8054, -2.4975, 0, 0, 0);
		testMethod(1850, 2.37, 0.793, -2.4975, 0, 0, 0);
		testMethod(1855, 2.3739, 0.7805, -2.4975, 0, 0, 0);
		testMethod(1860, 2.3778, 0.768, -2.4975, 0, 0, 0);
		testMethod(1865, 2.3816, 0.7555, -2.4975, 0, 0, 0);
		testMethod(1870, 2.3853, 0.743, -2.4975, 0, 0, 0);
		testMethod(1875, 2.389, 0.7305, -2.4975, 0, 0, 0);
		testMethod(1880, 2.3926, 0.718, -2.4975, 0, 0, 0);
		testMethod(1885, 2.3962, 0.7055, -2.4975, 0, 0, 0);
		testMethod(1890, 2.3997, 0.6931, -2.4975, 0, 0, 0);
		testMethod(1895, 2.4031, 0.6806, -2.4975, 0, 0, 0);
		testMethod(1900, 2.4065, 0.6681, -2.4975, 0, 0, 0);
		testMethod(1905, 2.4098, 0.6556, -2.4975, 0, 0, 0);
		testMethod(1910, 2.413, 0.6431, -2.4975, 0, 0, 0);
		testMethod(1915, 2.4162, 0.6306, -2.4975, 0, 0, 0);
		testMethod(1920, 2.4193, 0.6181, -2.4975, 0, 0, 0);
		testMethod(1925, 2.4224, 0.6056, -2.4975, 0, 0, 0);
		testMethod(1930, 2.4254, 0.5932, -2.4975, 0, 0, 0);
		testMethod(1935, 2.4283, 0.5807, -2.4975, 0, 0, 0);
		testMethod(1940, 2.4312, 0.5682, -2.4975, 0, 0, 0);
		testMethod(1945, 2.434, 0.5557, -2.4975, 0, 0, 0);
		testMethod(1950, 2.4368, 0.5432, -2.4975, 0, 0, 0);
		testMethod(1955, 2.4395, 0.5307, -2.4975, 0, 0, 0);
		testMethod(1960, 2.4421, 0.5182, -2.4975, 0, 0, 0);
		testMethod(1965, 2.4446, 0.5057, -2.4975, 0, 0, 0);
		testMethod(1970, 2.4471, 0.4933, -2.4975, 0, 0, 0);
		testMethod(1975, 2.4496, 0.4808, -2.4975, 0, 0, 0);
		testMethod(1980, 2.4519, 0.4683, -2.4975, 0, 0, 0);
		testMethod(1985, 2.4542, 0.4558, -2.4975, 0, 0, 0);
		testMethod(1990, 2.4565, 0.4433, -2.4975, 0, 0, 0);
		testMethod(1995, 2.4587, 0.4308, -2.4975, 0, 0, 0);
		testMethod(2000, 2.4608, 0.4183, -2.4975, 0, 0, 0);
		testMethod(2005, 2.4629, 0.4058, -2.4975, 0, 0, 0);
		testMethod(2010, 2.4649, 0.3934, -2.4975, 0, 0, 0);
		testMethod(2015, 2.4668, 0.3809, -2.4975, 0, 0, 0);
		testMethod(2020, 2.4687, 0.3684, -2.4975, 0, 0, 0);
		testMethod(2025, 2.4705, 0.3559, -2.4975, 0, 0, 0);
		testMethod(2030, 2.4722, 0.3434, -2.4975, 0, 0, 0);
		testMethod(2035, 2.4739, 0.3309, -2.4975, 0, 0, 0);
		testMethod(2040, 2.4755, 0.3184, -2.4975, 0, 0, 0);
		testMethod(2045, 2.4771, 0.3059, -2.4975, 0, 0, 0);
		testMethod(2050, 2.4786, 0.2935, -2.4975, 0, 0, 0);
		testMethod(2055, 2.48, 0.281, -2.4975, 0, 0, 0);
		testMethod(2060, 2.4814, 0.2685, -2.4975, 0, 0, 0);
		testMethod(2065, 2.4827, 0.256, -2.4975, 0, 0, 0);
		testMethod(2070, 2.484, 0.2435, -2.4975, 0, 0, 0);
		testMethod(2075, 2.4852, 0.2313, -2.4351, 0, 0, 0);
		testMethod(2080, 2.4863, 0.2195, -2.3726, 0, 0, 0);
		testMethod(2085, 2.4874, 0.2079, -2.3102, 0, 0, 0);
		testMethod(2090, 2.4884, 0.1967, -2.2478, 0, 0, 0);
		testMethod(2095, 2.4893, 0.1858, -2.1853, 0, 0, 0);
		testMethod(2100, 2.4902, 0.1751, -2.1229, 0, 0, 0);
		testMethod(2105, 2.4911, 0.1648, -2.0604, 0, 0, 0);
		testMethod(2110, 2.4919, 0.1548, -1.998, 0, 0, 0);
		testMethod(2115, 2.4926, 0.1452, -1.9356, 0, 0, 0);
		testMethod(2120, 2.4933, 0.1358, -1.8731, 0, 0, 0);
		testMethod(2125, 2.494, 0.1267, -1.8107, 0, 0, 0);
		testMethod(2130, 2.4946, 0.118, -1.7483, 0, 0, 0);
		testMethod(2135, 2.4952, 0.1096, -1.6858, 0, 0, 0);
		testMethod(2140, 2.4957, 0.1015, -1.6234, 0, 0, 0);
		testMethod(2145, 2.4962, 0.0937, -1.5609, 0, 0, 0);
		testMethod(2150, 2.4966, 0.0862, -1.4985, 0, 0, 0);
		testMethod(2155, 2.497, 0.079, -1.4361, 0, 0, 0);
		testMethod(2160, 2.4974, 0.0721, -1.3736, 0, 0, 0);
		testMethod(2165, 2.4978, 0.0656, -1.3112, 0, 0, 0);
		testMethod(2170, 2.4981, 0.0593, -1.2488, 0, 0, 0);
		testMethod(2175, 2.4984, 0.0534, -1.1863, 0, 0, 0);
		testMethod(2180, 2.4986, 0.0478, -1.1239, 0, 0, 0);
		testMethod(2185, 2.4988, 0.0425, -1.0614, 0, 0, 0);
		testMethod(2190, 2.499, 0.0375, -0.999, 0, 0, 0);
		testMethod(2195, 2.4992, 0.0328, -0.9366, 0, 0, 0);
		testMethod(2200, 2.4994, 0.0284, -0.8741, 0, 0, 0);
		testMethod(2205, 2.4995, 0.0244, -0.8117, 0, 0, 0);
		testMethod(2210, 2.4996, 0.0206, -0.7493, 0, 0, 0);
		testMethod(2215, 2.4997, 0.0172, -0.6868, 0, 0, 0);
		testMethod(2220, 2.4998, 0.014, -0.6244, 0, 0, 0);
		testMethod(2225, 2.4998, 0.0112, -0.5619, 0, 0, 0);
		testMethod(2230, 2.4999, 0.0087, -0.4995, 0, 0, 0);
		testMethod(2235, 2.4999, 0.0066, -0.4371, 0, 0, 0);
		testMethod(2240, 2.5, 0.0047, -0.3746, 0, 0, 0);
		testMethod(2245, 2.5, 0.0031, -0.3122, 0, 0, 0);
		testMethod(2250, 2.5, 0.0019, -0.2498, 0, 0, 0);
		testMethod(2255, 2.5, 0.0009, -0.1873, 0, 0, 0);
		testMethod(2260, 2.5, 0.0003, -0.1249, 0, 0, 0);
		testMethod(2265, 2.5, 0, -0.0624, 0, 0, 0);
		testMethod(2270, 2.5, 0, 0, 0, 0, 0);
		testMethod(2270, 2.5, 0, 0, 0, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}