package org.usfirst.frc.team1197.robot;

public class LoadingPos1 extends TorTrajectory {

	public LoadingPos1() {
		super(-4.1642, -1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0622, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1244, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.1866, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2488, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3109, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.3731, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.4353, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4975, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5597, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6219, 0, 0, 0);
		testMethod(55, -0.0004, -0.0205, -0.6841, 0, 0, 0);
		testMethod(60, -0.0005, -0.0243, -0.7463, 0, 0, 0);
		testMethod(65, -0.0006, -0.0283, -0.8085, 0, 0, 0);
		testMethod(70, -0.0008, -0.0326, -0.8707, 0, 0, 0);
		testMethod(75, -0.001, -0.0373, -0.9328, 0, 0, 0);
		testMethod(80, -0.0012, -0.0423, -0.995, 0, 0, 0);
		testMethod(85, -0.0014, -0.0476, -1.0572, 0, 0, 0);
		testMethod(90, -0.0016, -0.0532, -1.1194, 0, 0, 0);
		testMethod(95, -0.0019, -0.0591, -1.1816, 0, 0, 0);
		testMethod(100, -0.0022, -0.0653, -1.2438, 0, 0, 0);
		testMethod(105, -0.0026, -0.0718, -1.306, 0, 0, 0);
		testMethod(110, -0.003, -0.0787, -1.3682, 0, 0, 0);
		testMethod(115, -0.0034, -0.0858, -1.4304, 0, 0, 0);
		testMethod(120, -0.0038, -0.0933, -1.4926, 0, 0, 0);
		testMethod(125, -0.0043, -0.1011, -1.5547, 0, 0, 0);
		testMethod(130, -0.0048, -0.1091, -1.6169, 0, 0, 0);
		testMethod(135, -0.0054, -0.1175, -1.6791, 0, 0, 0);
		testMethod(140, -0.006, -0.1262, -1.7413, 0, 0, 0);
		testMethod(145, -0.0067, -0.1353, -1.8035, 0, 0, 0);
		testMethod(150, -0.0074, -0.1446, -1.8657, 0, 0, 0);
		testMethod(155, -0.0081, -0.1542, -1.9279, 0, 0, 0);
		testMethod(160, -0.0089, -0.1642, -1.9901, 0, 0, 0);
		testMethod(165, -0.0097, -0.1744, -2.0523, 0, 0, 0);
		testMethod(170, -0.0106, -0.185, -2.1144, 0, 0, 0);
		testMethod(175, -0.0116, -0.1959, -2.1766, 0, 0, 0);
		testMethod(180, -0.0126, -0.2071, -2.2388, 0, 0, 0);
		testMethod(185, -0.0137, -0.2186, -2.301, 0, 0, 0);
		testMethod(190, -0.0148, -0.2304, -2.3632, 0, 0, 0);
		testMethod(195, -0.016, -0.2425, -2.4254, 0, 0, 0);
		testMethod(200, -0.0172, -0.255, -2.4876, 0, 0, 0);
		testMethod(205, -0.0185, -0.2674, -2.4876, 0, 0, 0);
		testMethod(210, -0.0199, -0.2799, -2.4876, 0, 0, 0);
		testMethod(215, -0.0213, -0.2923, -2.4876, 0, 0, 0);
		testMethod(220, -0.0228, -0.3047, -2.4876, 0, 0, 0);
		testMethod(225, -0.0244, -0.3172, -2.4876, 0, 0, 0);
		testMethod(230, -0.026, -0.3296, -2.4876, 0, 0, 0);
		testMethod(235, -0.0277, -0.342, -2.4876, 0, 0, 0);
		testMethod(240, -0.0294, -0.3545, -2.4876, 0, 0, 0);
		testMethod(245, -0.0312, -0.3669, -2.4876, 0, 0, 0);
		testMethod(250, -0.0331, -0.3794, -2.4876, 0, 0, 0);
		testMethod(255, -0.035, -0.3918, -2.4876, 0, 0, 0);
		testMethod(260, -0.037, -0.4042, -2.4876, 0, 0, 0);
		testMethod(265, -0.039, -0.4167, -2.4876, 0, 0, 0);
		testMethod(270, -0.0412, -0.4291, -2.4876, 0, 0, 0);
		testMethod(275, -0.0433, -0.4415, -2.4876, 0, 0, 0);
		testMethod(280, -0.0456, -0.454, -2.4876, 0, 0, 0);
		testMethod(285, -0.0479, -0.4664, -2.4876, 0, 0, 0);
		testMethod(290, -0.0502, -0.4789, -2.4876, 0, 0, 0);
		testMethod(295, -0.0527, -0.4913, -2.4876, 0, 0, 0);
		testMethod(300, -0.0551, -0.5037, -2.4876, 0, 0, 0);
		testMethod(305, -0.0577, -0.5162, -2.4876, 0, 0, 0);
		testMethod(310, -0.0603, -0.5286, -2.4876, 0, 0, 0);
		testMethod(315, -0.063, -0.541, -2.4876, 0, 0, 0);
		testMethod(320, -0.0657, -0.5535, -2.4876, 0, 0, 0);
		testMethod(325, -0.0685, -0.5659, -2.4876, 0, 0, 0);
		testMethod(330, -0.0714, -0.5784, -2.4876, 0, 0, 0);
		testMethod(335, -0.0743, -0.5908, -2.4876, 0, 0, 0);
		testMethod(340, -0.0773, -0.6032, -2.4876, 0, 0, 0);
		testMethod(345, -0.0803, -0.6157, -2.4876, 0, 0, 0);
		testMethod(350, -0.0834, -0.6281, -2.4876, 0, 0, 0);
		testMethod(355, -0.0866, -0.6406, -2.4876, 0, 0, 0);
		testMethod(360, -0.0898, -0.653, -2.4876, 0, 0, 0);
		testMethod(365, -0.0931, -0.6654, -2.4876, 0, 0, 0);
		testMethod(370, -0.0965, -0.6779, -2.4876, 0, 0, 0);
		testMethod(375, -0.0999, -0.6903, -2.4876, 0, 0, 0);
		testMethod(380, -0.1034, -0.7027, -2.4876, 0, 0, 0);
		testMethod(385, -0.107, -0.7152, -2.4876, 0, 0, 0);
		testMethod(390, -0.1106, -0.7276, -2.4876, 0, 0, 0);
		testMethod(395, -0.1142, -0.7401, -2.4876, 0, 0, 0);
		testMethod(400, -0.118, -0.7525, -2.4876, 0, 0, 0);
		testMethod(405, -0.1218, -0.7649, -2.4876, 0, 0, 0);
		testMethod(410, -0.1256, -0.7774, -2.4876, 0, 0, 0);
		testMethod(415, -0.1295, -0.7898, -2.4876, 0, 0, 0);
		testMethod(420, -0.1335, -0.8022, -2.4876, 0, 0, 0);
		testMethod(425, -0.1375, -0.8147, -2.4876, 0, 0, 0);
		testMethod(430, -0.1417, -0.8271, -2.4876, 0, 0, 0);
		testMethod(435, -0.1458, -0.8396, -2.4876, 0, 0, 0);
		testMethod(440, -0.15, -0.852, -2.4876, 0, 0, 0);
		testMethod(445, -0.1543, -0.8644, -2.4876, 0, 0, 0);
		testMethod(450, -0.1587, -0.8769, -2.4876, 0, 0, 0);
		testMethod(455, -0.1631, -0.8893, -2.4876, 0, 0, 0);
		testMethod(460, -0.1676, -0.9017, -2.4876, 0, 0, 0);
		testMethod(465, -0.1721, -0.9142, -2.4876, 0, 0, 0);
		testMethod(470, -0.1767, -0.9266, -2.4876, 0, 0, 0);
		testMethod(475, -0.1814, -0.9391, -2.4876, 0, 0, 0);
		testMethod(480, -0.1861, -0.9515, -2.4876, 0, 0, 0);
		testMethod(485, -0.1909, -0.9639, -2.4876, 0, 0, 0);
		testMethod(490, -0.1958, -0.9764, -2.4876, 0, 0, 0);
		testMethod(495, -0.2007, -0.9888, -2.4876, 0, 0, 0);
		testMethod(500, -0.2056, -1.0013, -2.4876, 0, 0, 0);
		testMethod(505, -0.2107, -1.0137, -2.4876, 0, 0, 0);
		testMethod(510, -0.2158, -1.0261, -2.4876, 0, 0, 0);
		testMethod(515, -0.2209, -1.0386, -2.4876, 0, 0, 0);
		testMethod(520, -0.2262, -1.051, -2.4876, 0, 0, 0);
		testMethod(525, -0.2315, -1.0634, -2.4876, 0, 0, 0);
		testMethod(530, -0.2368, -1.0759, -2.4876, 0, 0, 0);
		testMethod(535, -0.2422, -1.0883, -2.4876, 0, 0, 0);
		testMethod(540, -0.2477, -1.1008, -2.4876, 0, 0, 0);
		testMethod(545, -0.2532, -1.1132, -2.4876, 0, 0, 0);
		testMethod(550, -0.2588, -1.1256, -2.4876, 0, 0, 0);
		testMethod(555, -0.2645, -1.1381, -2.4876, 0, 0, 0);
		testMethod(560, -0.2702, -1.1505, -2.4876, 0, 0, 0);
		testMethod(565, -0.276, -1.1629, -2.4876, 0, 0, 0);
		testMethod(570, -0.2818, -1.1754, -2.4876, 0, 0, 0);
		testMethod(575, -0.2877, -1.1878, -2.4876, 0, 0, 0);
		testMethod(580, -0.2937, -1.2003, -2.4876, 0, 0, 0);
		testMethod(585, -0.2997, -1.2127, -2.4876, 0, 0, 0);
		testMethod(590, -0.3058, -1.2251, -2.4876, 0, 0, 0);
		testMethod(595, -0.312, -1.2376, -2.4876, 0, 0, 0);
		testMethod(600, -0.3182, -1.25, -2.4876, 0, 0, 0);
		testMethod(605, -0.3245, -1.2624, -2.4876, 0, 0, 0);
		testMethod(610, -0.3308, -1.2749, -2.4876, 0, 0, 0);
		testMethod(615, -0.3372, -1.2873, -2.4876, 0, 0, 0);
		testMethod(620, -0.3437, -1.2998, -2.4876, 0, 0, 0);
		testMethod(625, -0.3502, -1.3122, -2.4876, 0, 0, 0);
		testMethod(630, -0.3568, -1.3246, -2.4876, 0, 0, 0);
		testMethod(635, -0.3635, -1.3371, -2.4876, 0, 0, 0);
		testMethod(640, -0.3702, -1.3495, -2.4876, 0, 0, 0);
		testMethod(645, -0.377, -1.362, -2.4876, 0, 0, 0);
		testMethod(650, -0.3838, -1.3744, -2.4876, 0, 0, 0);
		testMethod(655, -0.3907, -1.3868, -2.4876, 0, 0, 0);
		testMethod(660, -0.3977, -1.3993, -2.4876, 0, 0, 0);
		testMethod(665, -0.4047, -1.4117, -2.4876, 0, 0, 0);
		testMethod(670, -0.4118, -1.4241, -2.4876, 0, 0, 0);
		testMethod(675, -0.419, -1.4366, -2.4876, 0, 0, 0);
		testMethod(680, -0.4262, -1.449, -2.4876, 0, 0, 0);
		testMethod(685, -0.4334, -1.4615, -2.4876, 0, 0, 0);
		testMethod(690, -0.4408, -1.4739, -2.4876, 0, 0, 0);
		testMethod(695, -0.4482, -1.4863, -2.4876, 0, 0, 0);
		testMethod(700, -0.4556, -1.4988, -2.4876, 0, 0, 0);
		testMethod(705, -0.4632, -1.5112, -2.4876, 0, 0, 0);
		testMethod(710, -0.4708, -1.5236, -2.4876, 0, 0, 0);
		testMethod(715, -0.4784, -1.5361, -2.4876, 0, 0, 0);
		testMethod(720, -0.4861, -1.5485, -2.4876, 0, 0, 0);
		testMethod(725, -0.4939, -1.561, -2.4876, 0, 0, 0);
		testMethod(730, -0.5017, -1.5734, -2.4876, 0, 0, 0);
		testMethod(735, -0.5096, -1.5858, -2.4876, 0, 0, 0);
		testMethod(740, -0.5176, -1.5983, -2.4876, 0, 0, 0);
		testMethod(745, -0.5256, -1.6107, -2.4876, 0, 0, 0);
		testMethod(750, -0.5337, -1.6231, -2.4876, 0, 0, 0);
		testMethod(755, -0.5418, -1.6356, -2.4876, 0, 0, 0);
		testMethod(760, -0.5501, -1.648, -2.4876, 0, 0, 0);
		testMethod(765, -0.5583, -1.6605, -2.4876, 0, 0, 0);
		testMethod(770, -0.5667, -1.6729, -2.4876, 0, 0, 0);
		testMethod(775, -0.5751, -1.6853, -2.4876, 0, 0, 0);
		testMethod(780, -0.5835, -1.6975, -2.4254, 0, 0, 0);
		testMethod(785, -0.592, -1.7093, -2.3632, 0, 0, 0);
		testMethod(790, -0.6006, -1.7208, -2.301, 0, 0, 0);
		testMethod(795, -0.6092, -1.732, -2.2388, 0, 0, 0);
		testMethod(800, -0.6179, -1.7429, -2.1766, 0, 0, 0);
		testMethod(805, -0.6267, -1.7534, -2.1144, 0, 0, 0);
		testMethod(810, -0.6355, -1.7637, -2.0523, 0, 0, 0);
		testMethod(815, -0.6443, -1.7736, -1.9901, 0, 0, 0);
		testMethod(820, -0.6532, -1.7833, -1.9279, 0, 0, 0);
		testMethod(825, -0.6621, -1.7926, -1.8657, 0, 0, 0);
		testMethod(830, -0.6711, -1.8016, -1.8035, 0, 0, 0);
		testMethod(835, -0.6801, -1.8103, -1.7413, 0, 0, 0);
		testMethod(840, -0.6892, -1.8187, -1.6791, 0, 0, 0);
		testMethod(845, -0.6983, -1.8268, -1.6169, 0, 0, 0);
		testMethod(850, -0.7075, -1.8346, -1.5547, 0, 0, 0);
		testMethod(855, -0.7167, -1.8421, -1.4926, 0, 0, 0);
		testMethod(860, -0.7259, -1.8492, -1.4304, 0, 0, 0);
		testMethod(865, -0.7352, -1.856, -1.3682, 0, 0, 0);
		testMethod(870, -0.7445, -1.8626, -1.306, 0, 0, 0);
		testMethod(875, -0.7538, -1.8688, -1.2438, 0, 0, 0);
		testMethod(880, -0.7632, -1.8747, -1.1816, 0, 0, 0);
		testMethod(885, -0.7725, -1.8803, -1.1194, 0, 0, 0);
		testMethod(890, -0.782, -1.8856, -1.0572, 0, 0, 0);
		testMethod(895, -0.7914, -1.8906, -0.995, 0, 0, 0);
		testMethod(900, -0.8009, -1.8952, -0.9328, 0, 0, 0);
		testMethod(905, -0.8103, -1.8996, -0.8707, 0, 0, 0);
		testMethod(910, -0.8199, -1.9036, -0.8085, 0, 0, 0);
		testMethod(915, -0.8294, -1.9074, -0.7463, -0, -0.0002, -0.0366);
		testMethod(920, -0.8389, -1.9108, -0.6841, -0, -0.0013, -0.216);
		testMethod(925, -0.8485, -1.9139, -0.6219, -0, -0.0033, -0.4116);
		testMethod(930, -0.8581, -1.9167, -0.5597, -0, -0.0064, -0.6087);
		testMethod(935, -0.8677, -1.9192, -0.4975, -0.0001, -0.0104, -0.8072);
		testMethod(940, -0.8773, -1.9213, -0.4353, -0.0001, -0.0154, -1.0067);
		testMethod(945, -0.8869, -1.9232, -0.3731, -0.0002, -0.0215, -1.2069);
		testMethod(950, -0.8965, -1.9248, -0.3109, -0.0004, -0.0285, -1.4075);
		testMethod(955, -0.9061, -1.926, -0.2488, -0.0005, -0.0365, -1.6081);
		testMethod(960, -0.9157, -1.9269, -0.1866, -0.0007, -0.0456, -1.8085);
		testMethod(965, -0.9254, -1.9276, -0.1244, -0.001, -0.0556, -2.0083);
		testMethod(970, -0.935, -1.9279, -0.0622, -0.0013, -0.0667, -2.2071);
		testMethod(975, -0.9447, -1.9279, -0, -0.0016, -0.0787, -2.4048);
		testMethod(980, -0.9543, -1.9279, -0, -0.0021, -0.0917, -2.604);
		testMethod(985, -0.9639, -1.9279, -0, -0.0026, -0.1057, -2.8033);
		testMethod(990, -0.9736, -1.9279, -0, -0.0031, -0.1207, -3.0025);
		testMethod(995, -0.9832, -1.9279, -0, -0.0038, -0.1367, -3.2018);
		testMethod(1000, -0.9929, -1.9279, -0, -0.0045, -0.1538, -3.4011);
		testMethod(1005, -1.0025, -1.9279, -0, -0.0053, -0.1718, -3.6003);
		testMethod(1010, -1.0121, -1.9279, -0, -0.0062, -0.1908, -3.7996);
		testMethod(1015, -1.0218, -1.9279, -0, -0.0072, -0.2107, -3.9988);
		testMethod(1020, -1.0314, -1.9279, -0, -0.0083, -0.2317, -4.1981);
		testMethod(1025, -1.0411, -1.9279, -0, -0.0095, -0.2537, -4.3974);
		testMethod(1030, -1.0507, -1.9279, -0, -0.0109, -0.2767, -4.5966);
		testMethod(1035, -1.0603, -1.9279, -0, -0.0123, -0.3007, -4.7959);
		testMethod(1040, -1.07, -1.9279, -0, -0.0139, -0.3257, -4.9951);
		testMethod(1045, -1.0796, -1.9279, -0, -0.0156, -0.3516, -5.1944);
		testMethod(1050, -1.0893, -1.9279, -0, -0.0174, -0.3786, -5.3937);
		testMethod(1055, -1.0989, -1.9279, -0, -0.0194, -0.4066, -5.5929);
		testMethod(1060, -1.1085, -1.9279, -0, -0.0215, -0.4355, -5.7922);
		testMethod(1065, -1.1182, -1.9279, -0, -0.0237, -0.4655, -5.9914);
		testMethod(1070, -1.1278, -1.9279, -0, -0.0261, -0.4964, -6.1907);
		testMethod(1075, -1.1374, -1.9279, -0, -0.0287, -0.5284, -6.3899);
		testMethod(1080, -1.1471, -1.9279, -0, -0.0314, -0.5613, -6.5892);
		testMethod(1085, -1.1567, -1.9279, -0, -0.0343, -0.5951, -6.7555);
		testMethod(1090, -1.1664, -1.9279, -0, -0.0374, -0.6277, -6.5166);
		testMethod(1095, -1.176, -1.9279, -0, -0.0406, -0.6593, -6.3173);
		testMethod(1100, -1.1856, -1.9279, -0, -0.0439, -0.6899, -6.1181);
		testMethod(1105, -1.1953, -1.9279, -0, -0.0475, -0.7195, -5.9188);
		testMethod(1110, -1.2049, -1.9279, -0, -0.0511, -0.7481, -5.7196);
		testMethod(1115, -1.2146, -1.9279, -0, -0.0549, -0.7757, -5.5203);
		testMethod(1120, -1.2242, -1.9279, -0, -0.0589, -0.8023, -5.321);
		testMethod(1125, -1.2338, -1.9279, -0, -0.063, -0.8279, -5.1218);
		testMethod(1130, -1.2435, -1.9279, -0, -0.0672, -0.8525, -4.9225);
		testMethod(1135, -1.2531, -1.9279, -0, -0.0715, -0.8761, -4.7233);
		testMethod(1140, -1.2628, -1.9279, -0, -0.0759, -0.8987, -4.524);
		testMethod(1145, -1.2724, -1.9279, -0, -0.0805, -0.9204, -4.3247);
		testMethod(1150, -1.282, -1.9279, -0, -0.0851, -0.941, -4.1255);
		testMethod(1155, -1.2917, -1.9279, -0, -0.0899, -0.9606, -3.9262);
		testMethod(1160, -1.3013, -1.9279, -0, -0.0947, -0.9792, -3.727);
		testMethod(1165, -1.311, -1.9279, -0, -0.0997, -0.9969, -3.5277);
		testMethod(1170, -1.3206, -1.9279, -0, -0.1047, -1.0135, -3.3284);
		testMethod(1175, -1.3302, -1.9279, -0, -0.1098, -1.0292, -3.1292);
		testMethod(1180, -1.3399, -1.9279, -0, -0.115, -1.0438, -2.9299);
		testMethod(1185, -1.3495, -1.9279, -0, -0.1202, -1.0575, -2.7307);
		testMethod(1190, -1.3592, -1.9279, -0, -0.1256, -1.0701, -2.5314);
		testMethod(1195, -1.3688, -1.9279, -0, -0.1309, -1.0818, -2.3321);
		testMethod(1200, -1.3784, -1.9279, -0, -0.1364, -1.0925, -2.1329);
		testMethod(1205, -1.3881, -1.9279, -0, -0.1419, -1.1021, -1.9336);
		testMethod(1210, -1.3977, -1.9279, -0, -0.1474, -1.1108, -1.7344);
		testMethod(1215, -1.4074, -1.9279, -0, -0.153, -1.1185, -1.5351);
		testMethod(1220, -1.417, -1.9279, -0, -0.1586, -1.1252, -1.3358);
		testMethod(1225, -1.4266, -1.9279, -0, -0.1642, -1.1308, -1.1366);
		testMethod(1230, -1.4363, -1.9279, -0, -0.1699, -1.1355, -0.9373);
		testMethod(1235, -1.4459, -1.9279, -0, -0.1756, -1.1392, -0.7381);
		testMethod(1240, -1.4555, -1.9279, -0, -0.1813, -1.1419, -0.5388);
		testMethod(1245, -1.4652, -1.9279, -0, -0.187, -1.1436, -0.3395);
		testMethod(1250, -1.4748, -1.9279, -0, -0.1927, -1.1443, -0.1403);
		testMethod(1255, -1.4845, -1.9279, -0, -0.1984, -1.1443, -0.0041);
		testMethod(1260, -1.4941, -1.9279, -0, -0.2042, -1.1443, 0);
		testMethod(1265, -1.5037, -1.9279, -0, -0.2099, -1.1443, 0);
		testMethod(1270, -1.5134, -1.9279, -0, -0.2156, -1.1443, 0);
		testMethod(1275, -1.523, -1.9279, -0, -0.2213, -1.1443, 0);
		testMethod(1280, -1.5327, -1.9279, -0, -0.227, -1.1443, 0);
		testMethod(1285, -1.5423, -1.9279, -0, -0.2328, -1.1443, 0);
		testMethod(1290, -1.5519, -1.9279, -0, -0.2385, -1.1443, 0);
		testMethod(1295, -1.5616, -1.9279, -0, -0.2442, -1.1443, 0);
		testMethod(1300, -1.5712, -1.9279, -0, -0.2499, -1.1443, 0);
		testMethod(1305, -1.5809, -1.9279, -0, -0.2557, -1.1443, 0);
		testMethod(1310, -1.5905, -1.9279, -0, -0.2614, -1.1443, 0);
		testMethod(1315, -1.6001, -1.9279, -0, -0.2671, -1.1443, 0);
		testMethod(1320, -1.6098, -1.9279, -0, -0.2728, -1.1443, 0);
		testMethod(1325, -1.6194, -1.9279, -0, -0.2785, -1.1443, 0);
		testMethod(1330, -1.6291, -1.9279, -0, -0.2843, -1.1443, 0);
		testMethod(1335, -1.6387, -1.9279, -0, -0.29, -1.1443, 0);
		testMethod(1340, -1.6483, -1.9279, -0, -0.2957, -1.1443, 0);
		testMethod(1345, -1.658, -1.9279, -0, -0.3014, -1.1443, 0);
		testMethod(1350, -1.6676, -1.9279, -0, -0.3071, -1.1443, 0);
		testMethod(1355, -1.6773, -1.9279, -0, -0.3129, -1.1443, 0);
		testMethod(1360, -1.6869, -1.9279, -0, -0.3186, -1.1443, 0);
		testMethod(1365, -1.6965, -1.9279, -0, -0.3243, -1.1443, 0);
		testMethod(1370, -1.7062, -1.9279, -0, -0.33, -1.1443, 0);
		testMethod(1375, -1.7158, -1.9279, -0, -0.3358, -1.1443, 0);
		testMethod(1380, -1.7255, -1.9279, -0, -0.3415, -1.1443, 0);
		testMethod(1385, -1.7351, -1.9279, -0, -0.3472, -1.1443, 0);
		testMethod(1390, -1.7447, -1.9279, -0, -0.3529, -1.1443, 0);
		testMethod(1395, -1.7544, -1.9279, -0, -0.3586, -1.1443, 0);
		testMethod(1400, -1.764, -1.9279, -0, -0.3644, -1.1443, 0);
		testMethod(1405, -1.7736, -1.9279, -0, -0.3701, -1.1443, 0);
		testMethod(1410, -1.7833, -1.9279, -0, -0.3758, -1.1443, 0);
		testMethod(1415, -1.7929, -1.9279, -0, -0.3815, -1.1443, 0);
		testMethod(1420, -1.8026, -1.9279, -0, -0.3873, -1.1443, 0);
		testMethod(1425, -1.8122, -1.9279, -0, -0.393, -1.1443, 0);
		testMethod(1430, -1.8218, -1.9279, -0, -0.3987, -1.1443, 0);
		testMethod(1435, -1.8315, -1.9279, -0, -0.4044, -1.1443, 0);
		testMethod(1440, -1.8411, -1.9279, -0, -0.4101, -1.1443, 0);
		testMethod(1445, -1.8508, -1.9279, -0, -0.4159, -1.1443, 0);
		testMethod(1450, -1.8604, -1.9279, -0, -0.4216, -1.1443, 0);
		testMethod(1455, -1.87, -1.9279, -0, -0.4273, -1.1443, 0);
		testMethod(1460, -1.8797, -1.9279, -0, -0.433, -1.1443, 0);
		testMethod(1465, -1.8893, -1.9279, -0, -0.4387, -1.1443, 0);
		testMethod(1470, -1.899, -1.9279, -0, -0.4445, -1.1443, 0);
		testMethod(1475, -1.9086, -1.9279, -0, -0.4502, -1.1443, 0);
		testMethod(1480, -1.9182, -1.9279, -0, -0.4559, -1.1443, 0);
		testMethod(1485, -1.9279, -1.9279, -0, -0.4616, -1.1443, 0);
		testMethod(1490, -1.9375, -1.9279, -0, -0.4674, -1.1443, 0);
		testMethod(1495, -1.9472, -1.9279, -0, -0.4731, -1.1443, 0);
		testMethod(1500, -1.9568, -1.9279, -0, -0.4788, -1.1443, 0);
		testMethod(1505, -1.9664, -1.9279, -0, -0.4845, -1.1443, 0);
		testMethod(1510, -1.9761, -1.9279, -0, -0.4902, -1.1443, 0);
		testMethod(1515, -1.9857, -1.9279, -0, -0.496, -1.1443, 0);
		testMethod(1520, -1.9954, -1.9279, -0, -0.5017, -1.1443, 0);
		testMethod(1525, -2.005, -1.9279, -0, -0.5074, -1.1443, 0);
		testMethod(1530, -2.0146, -1.9279, -0, -0.5131, -1.1443, 0);
		testMethod(1535, -2.0243, -1.9279, -0, -0.5188, -1.1443, 0);
		testMethod(1540, -2.0339, -1.9279, -0, -0.5246, -1.1443, 0);
		testMethod(1545, -2.0436, -1.9279, -0, -0.5303, -1.1443, 0);
		testMethod(1550, -2.0532, -1.9279, -0, -0.536, -1.1443, 0);
		testMethod(1555, -2.0628, -1.9279, -0, -0.5417, -1.1443, 0);
		testMethod(1560, -2.0725, -1.9279, -0, -0.5475, -1.1443, 0);
		testMethod(1565, -2.0821, -1.9279, -0, -0.5532, -1.1443, 0);
		testMethod(1570, -2.0917, -1.9279, -0, -0.5589, -1.1443, 0);
		testMethod(1575, -2.1014, -1.9279, -0, -0.5646, -1.1443, 0);
		testMethod(1580, -2.111, -1.9279, -0, -0.5703, -1.1443, 0);
		testMethod(1585, -2.1207, -1.9279, -0, -0.5761, -1.1443, 0);
		testMethod(1590, -2.1303, -1.9279, -0, -0.5818, -1.1443, 0);
		testMethod(1595, -2.1399, -1.9279, -0, -0.5875, -1.1443, 0);
		testMethod(1600, -2.1496, -1.9279, -0, -0.5932, -1.1443, 0);
		testMethod(1605, -2.1592, -1.9279, -0, -0.599, -1.1443, 0);
		testMethod(1610, -2.1689, -1.9279, -0, -0.6047, -1.1443, 0);
		testMethod(1615, -2.1785, -1.9279, -0, -0.6104, -1.1443, 0);
		testMethod(1620, -2.1881, -1.9279, -0, -0.6161, -1.1443, 0);
		testMethod(1625, -2.1978, -1.9279, -0, -0.6218, -1.1443, 0);
		testMethod(1630, -2.2074, -1.9279, -0, -0.6276, -1.1443, 0);
		testMethod(1635, -2.2171, -1.9279, -0, -0.6333, -1.1443, 0);
		testMethod(1640, -2.2267, -1.9279, -0, -0.639, -1.1443, 0);
		testMethod(1645, -2.2363, -1.9279, -0, -0.6447, -1.1443, 0);
		testMethod(1650, -2.246, -1.9279, -0, -0.6504, -1.1443, 0);
		testMethod(1655, -2.2556, -1.9279, -0, -0.6562, -1.1443, 0);
		testMethod(1660, -2.2653, -1.9279, -0, -0.6619, -1.1443, 0);
		testMethod(1665, -2.2749, -1.9279, -0, -0.6676, -1.1443, 0);
		testMethod(1670, -2.2845, -1.9279, -0, -0.6733, -1.1443, 0);
		testMethod(1675, -2.2942, -1.9279, -0, -0.6791, -1.1443, 0);
		testMethod(1680, -2.3038, -1.9279, -0, -0.6848, -1.1443, 0);
		testMethod(1685, -2.3135, -1.9279, -0, -0.6905, -1.1443, 0);
		testMethod(1690, -2.3231, -1.9279, -0, -0.6962, -1.1443, 0);
		testMethod(1695, -2.3327, -1.9279, -0, -0.7019, -1.1443, 0);
		testMethod(1700, -2.3424, -1.9279, -0, -0.7077, -1.1443, 0);
		testMethod(1705, -2.352, -1.9279, -0, -0.7134, -1.1443, 0);
		testMethod(1710, -2.3617, -1.9279, -0, -0.7191, -1.1443, 0);
		testMethod(1715, -2.3713, -1.9279, -0, -0.7248, -1.1443, 0);
		testMethod(1720, -2.3809, -1.9279, -0, -0.7306, -1.1443, 0);
		testMethod(1725, -2.3906, -1.9279, -0, -0.7363, -1.1443, 0);
		testMethod(1730, -2.4002, -1.9279, -0, -0.742, -1.1443, 0);
		testMethod(1735, -2.4098, -1.9279, -0, -0.7477, -1.1443, 0);
		testMethod(1740, -2.4195, -1.9279, -0, -0.7534, -1.1443, 0);
		testMethod(1745, -2.4291, -1.9279, -0, -0.7592, -1.1443, 0);
		testMethod(1750, -2.4388, -1.9279, -0, -0.7649, -1.1443, 0);
		testMethod(1755, -2.4484, -1.9279, -0, -0.7706, -1.1443, 0);
		testMethod(1760, -2.458, -1.9279, -0, -0.7763, -1.1443, 0);
		testMethod(1765, -2.4677, -1.9279, -0, -0.782, -1.1443, 0);
		testMethod(1770, -2.4773, -1.9279, -0, -0.7878, -1.1443, 0);
		testMethod(1775, -2.487, -1.9279, -0, -0.7935, -1.1443, 0);
		testMethod(1780, -2.4966, -1.9279, -0, -0.7992, -1.1443, 0);
		testMethod(1785, -2.5062, -1.9279, -0, -0.8049, -1.1443, 0);
		testMethod(1790, -2.5159, -1.9279, -0, -0.8107, -1.1443, 0);
		testMethod(1795, -2.5255, -1.9279, -0, -0.8164, -1.1443, 0);
		testMethod(1800, -2.5352, -1.9279, -0, -0.8221, -1.1443, 0);
		testMethod(1805, -2.5448, -1.9279, -0, -0.8278, -1.1443, 0);
		testMethod(1810, -2.5544, -1.9279, -0, -0.8335, -1.1443, 0);
		testMethod(1815, -2.5641, -1.9279, -0, -0.8393, -1.1443, 0);
		testMethod(1820, -2.5737, -1.9279, -0, -0.845, -1.1443, 0);
		testMethod(1825, -2.5834, -1.9279, -0, -0.8507, -1.1443, 0);
		testMethod(1830, -2.593, -1.9279, -0, -0.8564, -1.1442, 0.0323);
		testMethod(1835, -2.6026, -1.9279, -0, -0.8621, -1.1431, 0.2131);
		testMethod(1840, -2.6123, -1.9279, -0, -0.8679, -1.141, 0.4123);
		testMethod(1845, -2.6219, -1.9279, -0, -0.8736, -1.138, 0.6116);
		testMethod(1850, -2.6316, -1.9279, -0, -0.8792, -1.1339, 0.8108);
		testMethod(1855, -2.6412, -1.9279, -0, -0.8849, -1.1289, 1.0101);
		testMethod(1860, -2.6508, -1.9279, -0, -0.8905, -1.1228, 1.2094);
		testMethod(1865, -2.6605, -1.9279, -0, -0.8961, -1.1158, 1.4086);
		testMethod(1870, -2.6701, -1.9279, -0, -0.9017, -1.1077, 1.6079);
		testMethod(1875, -2.6798, -1.9279, -0, -0.9072, -1.0987, 1.8071);
		testMethod(1880, -2.6894, -1.9279, -0, -0.9127, -1.0887, 2.0064);
		testMethod(1885, -2.699, -1.9279, -0, -0.9181, -1.0776, 2.2057);
		testMethod(1890, -2.7087, -1.9279, -0, -0.9234, -1.0656, 2.4049);
		testMethod(1895, -2.7183, -1.9279, -0, -0.9287, -1.0526, 2.6042);
		testMethod(1900, -2.7279, -1.9279, -0, -0.934, -1.0386, 2.8034);
		testMethod(1905, -2.7376, -1.9279, -0, -0.9391, -1.0236, 3.0027);
		testMethod(1910, -2.7472, -1.9279, -0, -0.9442, -1.0076, 3.202);
		testMethod(1915, -2.7569, -1.9279, -0, -0.9492, -0.9906, 3.4012);
		testMethod(1920, -2.7665, -1.9279, -0, -0.9541, -0.9726, 3.6005);
		testMethod(1925, -2.7761, -1.9279, -0, -0.9589, -0.9536, 3.7997);
		testMethod(1930, -2.7858, -1.9279, -0, -0.9636, -0.9336, 3.999);
		testMethod(1935, -2.7954, -1.9279, -0, -0.9682, -0.9126, 4.1983);
		testMethod(1940, -2.8051, -1.9279, -0, -0.9728, -0.8906, 4.3975);
		testMethod(1945, -2.8147, -1.9279, -0, -0.9772, -0.8676, 4.5968);
		testMethod(1950, -2.8243, -1.9279, -0, -0.9814, -0.8436, 4.796);
		testMethod(1955, -2.834, -1.9279, -0, -0.9856, -0.8186, 4.9953);
		testMethod(1960, -2.8436, -1.9279, -0, -0.9896, -0.7927, 5.1946);
		testMethod(1965, -2.8533, -1.9279, -0, -0.9935, -0.7657, 5.3938);
		testMethod(1970, -2.8629, -1.9279, -0, -0.9973, -0.7377, 5.5931);
		testMethod(1975, -2.8725, -1.9279, -0, -1.0009, -0.7088, 5.7923);
		testMethod(1980, -2.8822, -1.9279, -0, -1.0044, -0.6788, 5.9916);
		testMethod(1985, -2.8918, -1.9279, -0, -1.0077, -0.6479, 6.1909);
		testMethod(1990, -2.9015, -1.9279, -0, -1.0108, -0.6159, 6.3901);
		testMethod(1995, -2.9111, -1.9279, -0, -1.0138, -0.583, 6.5894);
		testMethod(2000, -2.9207, -1.9279, -0, -1.0167, -0.5492, 6.7554);
		testMethod(2005, -2.9304, -1.9279, -0, -1.0193, -0.5166, 6.5164);
		testMethod(2010, -2.94, -1.9279, -0, -1.0218, -0.485, 6.3172);
		testMethod(2015, -2.9497, -1.9279, -0, -1.0242, -0.4544, 6.1179);
		testMethod(2020, -2.9593, -1.9279, -0, -1.0264, -0.4248, 5.9186);
		testMethod(2025, -2.9689, -1.9279, -0, -1.0284, -0.3962, 5.7194);
		testMethod(2030, -2.9786, -1.9279, -0, -1.0303, -0.3686, 5.5201);
		testMethod(2035, -2.9882, -1.9279, -0, -1.0321, -0.342, 5.3209);
		testMethod(2040, -2.9979, -1.9279, -0, -1.0338, -0.3164, 5.1216);
		testMethod(2045, -3.0075, -1.9279, -0, -1.0353, -0.2918, 4.9223);
		testMethod(2050, -3.0171, -1.9279, -0, -1.0367, -0.2682, 4.7231);
		testMethod(2055, -3.0268, -1.9279, -0, -1.038, -0.2456, 4.5238);
		testMethod(2060, -3.0364, -1.9279, -0, -1.0391, -0.224, 4.3246);
		testMethod(2065, -3.046, -1.9279, -0, -1.0402, -0.2033, 4.1253);
		testMethod(2070, -3.0557, -1.9279, -0, -1.0412, -0.1837, 3.9261);
		testMethod(2075, -3.0653, -1.9279, -0, -1.042, -0.1651, 3.7268);
		testMethod(2080, -3.075, -1.9279, -0, -1.0428, -0.1474, 3.5275);
		testMethod(2085, -3.0846, -1.9279, -0, -1.0435, -0.1308, 3.3283);
		testMethod(2090, -3.0942, -1.9279, -0, -1.0441, -0.1151, 3.129);
		testMethod(2095, -3.1039, -1.9279, -0, -1.0447, -0.1005, 2.9298);
		testMethod(2100, -3.1135, -1.9279, -0, -1.0451, -0.0868, 2.7305);
		testMethod(2105, -3.1232, -1.9279, -0, -1.0455, -0.0742, 2.5312);
		testMethod(2110, -3.1328, -1.9279, -0, -1.0459, -0.0625, 2.332);
		testMethod(2115, -3.1424, -1.9279, -0, -1.0462, -0.0519, 2.1327);
		testMethod(2120, -3.1521, -1.9279, -0, -1.0464, -0.0422, 1.9335);
		testMethod(2125, -3.1617, -1.9279, -0, -1.0466, -0.0335, 1.7342);
		testMethod(2130, -3.1714, -1.9279, -0, -1.0467, -0.0258, 1.5349);
		testMethod(2135, -3.181, -1.9279, -0, -1.0469, -0.0192, 1.3357);
		testMethod(2140, -3.1906, -1.9279, -0, -1.0469, -0.0135, 1.1364);
		testMethod(2145, -3.2003, -1.9279, -0, -1.047, -0.0088, 0.9372);
		testMethod(2150, -3.2099, -1.9279, -0, -1.047, -0.0051, 0.7379);
		testMethod(2155, -3.2196, -1.9279, -0, -1.047, -0.0024, 0.5386);
		testMethod(2160, -3.2292, -1.9279, -0, -1.0471, -0.0007, 0.3394);
		testMethod(2165, -3.2388, -1.9276, 0.0622, -1.0471, -0, 0.1401);
		testMethod(2170, -3.2485, -1.9269, 0.1244, -1.0471, 0, 0.0041);
		testMethod(2175, -3.2581, -1.926, 0.1866, -1.0471, 0, 0);
		testMethod(2180, -3.2677, -1.9248, 0.2488, -1.0471, 0, 0);
		testMethod(2185, -3.2773, -1.9232, 0.3109, -1.0471, 0, 0);
		testMethod(2190, -3.287, -1.9213, 0.3731, -1.0471, 0, 0);
		testMethod(2195, -3.2966, -1.9192, 0.4353, -1.0471, 0, 0);
		testMethod(2200, -3.3062, -1.9167, 0.4975, -1.0471, 0, 0);
		testMethod(2205, -3.3157, -1.9139, 0.5597, -1.0471, 0, 0);
		testMethod(2210, -3.3253, -1.9108, 0.6219, -1.0471, 0, 0);
		testMethod(2215, -3.3348, -1.9074, 0.6841, -1.0471, 0, 0);
		testMethod(2220, -3.3444, -1.9036, 0.7463, -1.0471, 0, 0);
		testMethod(2225, -3.3539, -1.8996, 0.8085, -1.0471, 0, 0);
		testMethod(2230, -3.3634, -1.8952, 0.8707, -1.0471, 0, 0);
		testMethod(2235, -3.3728, -1.8906, 0.9328, -1.0471, 0, 0);
		testMethod(2240, -3.3823, -1.8856, 0.995, -1.0471, 0, 0);
		testMethod(2245, -3.3917, -1.8803, 1.0572, -1.0471, 0, 0);
		testMethod(2250, -3.4011, -1.8747, 1.1194, -1.0471, 0, 0);
		testMethod(2255, -3.4104, -1.8688, 1.1816, -1.0471, 0, 0);
		testMethod(2260, -3.4198, -1.8626, 1.2438, -1.0471, 0, 0);
		testMethod(2265, -3.429, -1.856, 1.306, -1.0471, 0, 0);
		testMethod(2270, -3.4383, -1.8492, 1.3682, -1.0471, 0, 0);
		testMethod(2275, -3.4475, -1.8421, 1.4304, -1.0471, 0, 0);
		testMethod(2280, -3.4567, -1.8346, 1.4926, -1.0471, 0, 0);
		testMethod(2285, -3.4659, -1.8268, 1.5547, -1.0471, 0, 0);
		testMethod(2290, -3.475, -1.8187, 1.6169, -1.0471, 0, 0);
		testMethod(2295, -3.4841, -1.8103, 1.6791, -1.0471, 0, 0);
		testMethod(2300, -3.4931, -1.8016, 1.7413, -1.0471, 0, 0);
		testMethod(2305, -3.5021, -1.7926, 1.8035, -1.0471, 0, 0);
		testMethod(2310, -3.511, -1.7833, 1.8657, -1.0471, 0, 0);
		testMethod(2315, -3.5199, -1.7736, 1.9279, -1.0471, 0, 0);
		testMethod(2320, -3.5288, -1.7637, 1.9901, -1.0471, 0, 0);
		testMethod(2325, -3.5376, -1.7534, 2.0523, -1.0471, 0, 0);
		testMethod(2330, -3.5463, -1.7429, 2.1144, -1.0471, 0, 0);
		testMethod(2335, -3.555, -1.732, 2.1766, -1.0471, 0, 0);
		testMethod(2340, -3.5636, -1.7208, 2.2388, -1.0471, 0, 0);
		testMethod(2345, -3.5722, -1.7093, 2.301, -1.0471, 0, 0);
		testMethod(2350, -3.5807, -1.6975, 2.3632, -1.0471, 0, 0);
		testMethod(2355, -3.5892, -1.6853, 2.4254, -1.0471, 0, 0);
		testMethod(2360, -3.5976, -1.6729, 2.4876, -1.0471, 0, 0);
		testMethod(2365, -3.6059, -1.6605, 2.4876, -1.0471, 0, 0);
		testMethod(2370, -3.6142, -1.648, 2.4876, -1.0471, 0, 0);
		testMethod(2375, -3.6224, -1.6356, 2.4876, -1.0471, 0, 0);
		testMethod(2380, -3.6305, -1.6231, 2.4876, -1.0471, 0, 0);
		testMethod(2385, -3.6386, -1.6107, 2.4876, -1.0471, 0, 0);
		testMethod(2390, -3.6466, -1.5983, 2.4876, -1.0471, 0, 0);
		testMethod(2395, -3.6546, -1.5858, 2.4876, -1.0471, 0, 0);
		testMethod(2400, -3.6625, -1.5734, 2.4876, -1.0471, 0, 0);
		testMethod(2405, -3.6703, -1.561, 2.4876, -1.0471, 0, 0);
		testMethod(2410, -3.6781, -1.5485, 2.4876, -1.0471, 0, 0);
		testMethod(2415, -3.6858, -1.5361, 2.4876, -1.0471, 0, 0);
		testMethod(2420, -3.6935, -1.5236, 2.4876, -1.0471, 0, 0);
		testMethod(2425, -3.701, -1.5112, 2.4876, -1.0471, 0, 0);
		testMethod(2430, -3.7086, -1.4988, 2.4876, -1.0471, 0, 0);
		testMethod(2435, -3.716, -1.4863, 2.4876, -1.0471, 0, 0);
		testMethod(2440, -3.7234, -1.4739, 2.4876, -1.0471, 0, 0);
		testMethod(2445, -3.7308, -1.4615, 2.4876, -1.0471, 0, 0);
		testMethod(2450, -3.738, -1.449, 2.4876, -1.0471, 0, 0);
		testMethod(2455, -3.7453, -1.4366, 2.4876, -1.0471, 0, 0);
		testMethod(2460, -3.7524, -1.4241, 2.4876, -1.0471, 0, 0);
		testMethod(2465, -3.7595, -1.4117, 2.4876, -1.0471, 0, 0);
		testMethod(2470, -3.7665, -1.3993, 2.4876, -1.0471, 0, 0);
		testMethod(2475, -3.7735, -1.3868, 2.4876, -1.0471, 0, 0);
		testMethod(2480, -3.7804, -1.3744, 2.4876, -1.0471, 0, 0);
		testMethod(2485, -3.7872, -1.362, 2.4876, -1.0471, 0, 0);
		testMethod(2490, -3.794, -1.3495, 2.4876, -1.0471, 0, 0);
		testMethod(2495, -3.8007, -1.3371, 2.4876, -1.0471, 0, 0);
		testMethod(2500, -3.8074, -1.3246, 2.4876, -1.0471, 0, 0);
		testMethod(2505, -3.814, -1.3122, 2.4876, -1.0471, 0, 0);
		testMethod(2510, -3.8205, -1.2998, 2.4876, -1.0471, 0, 0);
		testMethod(2515, -3.827, -1.2873, 2.4876, -1.0471, 0, 0);
		testMethod(2520, -3.8334, -1.2749, 2.4876, -1.0471, 0, 0);
		testMethod(2525, -3.8397, -1.2624, 2.4876, -1.0471, 0, 0);
		testMethod(2530, -3.846, -1.25, 2.4876, -1.0471, 0, 0);
		testMethod(2535, -3.8522, -1.2376, 2.4876, -1.0471, 0, 0);
		testMethod(2540, -3.8584, -1.2251, 2.4876, -1.0471, 0, 0);
		testMethod(2545, -3.8645, -1.2127, 2.4876, -1.0471, 0, 0);
		testMethod(2550, -3.8705, -1.2003, 2.4876, -1.0471, 0, 0);
		testMethod(2555, -3.8765, -1.1878, 2.4876, -1.0471, 0, 0);
		testMethod(2560, -3.8824, -1.1754, 2.4876, -1.0471, 0, 0);
		testMethod(2565, -3.8882, -1.1629, 2.4876, -1.0471, 0, 0);
		testMethod(2570, -3.894, -1.1505, 2.4876, -1.0471, 0, 0);
		testMethod(2575, -3.8997, -1.1381, 2.4876, -1.0471, 0, 0);
		testMethod(2580, -3.9054, -1.1256, 2.4876, -1.0471, 0, 0);
		testMethod(2585, -3.911, -1.1132, 2.4876, -1.0471, 0, 0);
		testMethod(2590, -3.9165, -1.1008, 2.4876, -1.0471, 0, 0);
		testMethod(2595, -3.922, -1.0883, 2.4876, -1.0471, 0, 0);
		testMethod(2600, -3.9274, -1.0759, 2.4876, -1.0471, 0, 0);
		testMethod(2605, -3.9328, -1.0634, 2.4876, -1.0471, 0, 0);
		testMethod(2610, -3.938, -1.051, 2.4876, -1.0471, 0, 0);
		testMethod(2615, -3.9433, -1.0386, 2.4876, -1.0471, 0, 0);
		testMethod(2620, -3.9484, -1.0261, 2.4876, -1.0471, 0, 0);
		testMethod(2625, -3.9535, -1.0137, 2.4876, -1.0471, 0, 0);
		testMethod(2630, -3.9586, -1.0013, 2.4876, -1.0471, 0, 0);
		testMethod(2635, -3.9635, -0.9888, 2.4876, -1.0471, 0, 0);
		testMethod(2640, -3.9685, -0.9764, 2.4876, -1.0471, 0, 0);
		testMethod(2645, -3.9733, -0.9639, 2.4876, -1.0471, 0, 0);
		testMethod(2650, -3.9781, -0.9515, 2.4876, -1.0471, 0, 0);
		testMethod(2655, -3.9828, -0.9391, 2.4876, -1.0471, 0, 0);
		testMethod(2660, -3.9875, -0.9266, 2.4876, -1.0471, 0, 0);
		testMethod(2665, -3.9921, -0.9142, 2.4876, -1.0471, 0, 0);
		testMethod(2670, -3.9966, -0.9017, 2.4876, -1.0471, 0, 0);
		testMethod(2675, -4.0011, -0.8893, 2.4876, -1.0471, 0, 0);
		testMethod(2680, -4.0055, -0.8769, 2.4876, -1.0471, 0, 0);
		testMethod(2685, -4.0099, -0.8644, 2.4876, -1.0471, 0, 0);
		testMethod(2690, -4.0142, -0.852, 2.4876, -1.0471, 0, 0);
		testMethod(2695, -4.0184, -0.8396, 2.4876, -1.0471, 0, 0);
		testMethod(2700, -4.0226, -0.8271, 2.4876, -1.0471, 0, 0);
		testMethod(2705, -4.0267, -0.8147, 2.4876, -1.0471, 0, 0);
		testMethod(2710, -4.0307, -0.8022, 2.4876, -1.0471, 0, 0);
		testMethod(2715, -4.0347, -0.7898, 2.4876, -1.0471, 0, 0);
		testMethod(2720, -4.0386, -0.7774, 2.4876, -1.0471, 0, 0);
		testMethod(2725, -4.0425, -0.7649, 2.4876, -1.0471, 0, 0);
		testMethod(2730, -4.0463, -0.7525, 2.4876, -1.0471, 0, 0);
		testMethod(2735, -4.05, -0.7401, 2.4876, -1.0471, 0, 0);
		testMethod(2740, -4.0537, -0.7276, 2.4876, -1.0471, 0, 0);
		testMethod(2745, -4.0573, -0.7152, 2.4876, -1.0471, 0, 0);
		testMethod(2750, -4.0608, -0.7027, 2.4876, -1.0471, 0, 0);
		testMethod(2755, -4.0643, -0.6903, 2.4876, -1.0471, 0, 0);
		testMethod(2760, -4.0677, -0.6779, 2.4876, -1.0471, 0, 0);
		testMethod(2765, -4.0711, -0.6654, 2.4876, -1.0471, 0, 0);
		testMethod(2770, -4.0744, -0.653, 2.4876, -1.0471, 0, 0);
		testMethod(2775, -4.0776, -0.6406, 2.4876, -1.0471, 0, 0);
		testMethod(2780, -4.0808, -0.6281, 2.4876, -1.0471, 0, 0);
		testMethod(2785, -4.0839, -0.6157, 2.4876, -1.0471, 0, 0);
		testMethod(2790, -4.0869, -0.6032, 2.4876, -1.0471, 0, 0);
		testMethod(2795, -4.0899, -0.5908, 2.4876, -1.0471, 0, 0);
		testMethod(2800, -4.0928, -0.5784, 2.4876, -1.0471, 0, 0);
		testMethod(2805, -4.0957, -0.5659, 2.4876, -1.0471, 0, 0);
		testMethod(2810, -4.0985, -0.5535, 2.4876, -1.0471, 0, 0);
		testMethod(2815, -4.1012, -0.541, 2.4876, -1.0471, 0, 0);
		testMethod(2820, -4.1039, -0.5286, 2.4876, -1.0471, 0, 0);
		testMethod(2825, -4.1065, -0.5162, 2.4876, -1.0471, 0, 0);
		testMethod(2830, -4.1091, -0.5037, 2.4876, -1.0471, 0, 0);
		testMethod(2835, -4.1116, -0.4913, 2.4876, -1.0471, 0, 0);
		testMethod(2840, -4.114, -0.4789, 2.4876, -1.0471, 0, 0);
		testMethod(2845, -4.1163, -0.4664, 2.4876, -1.0471, 0, 0);
		testMethod(2850, -4.1186, -0.454, 2.4876, -1.0471, 0, 0);
		testMethod(2855, -4.1209, -0.4415, 2.4876, -1.0471, 0, 0);
		testMethod(2860, -4.1231, -0.4291, 2.4876, -1.0471, 0, 0);
		testMethod(2865, -4.1252, -0.4167, 2.4876, -1.0471, 0, 0);
		testMethod(2870, -4.1272, -0.4042, 2.4876, -1.0471, 0, 0);
		testMethod(2875, -4.1292, -0.3918, 2.4876, -1.0471, 0, 0);
		testMethod(2880, -4.1311, -0.3794, 2.4876, -1.0471, 0, 0);
		testMethod(2885, -4.133, -0.3669, 2.4876, -1.0471, 0, 0);
		testMethod(2890, -4.1348, -0.3545, 2.4876, -1.0471, 0, 0);
		testMethod(2895, -4.1366, -0.342, 2.4876, -1.0471, 0, 0);
		testMethod(2900, -4.1382, -0.3296, 2.4876, -1.0471, 0, 0);
		testMethod(2905, -4.1399, -0.3172, 2.4876, -1.0471, 0, 0);
		testMethod(2910, -4.1414, -0.3047, 2.4876, -1.0471, 0, 0);
		testMethod(2915, -4.1429, -0.2923, 2.4876, -1.0471, 0, 0);
		testMethod(2920, -4.1443, -0.2799, 2.4876, -1.0471, 0, 0);
		testMethod(2925, -4.1457, -0.2674, 2.4876, -1.0471, 0, 0);
		testMethod(2930, -4.147, -0.255, 2.4876, -1.0471, 0, 0);
		testMethod(2935, -4.1482, -0.2425, 2.4876, -1.0471, 0, 0);
		testMethod(2940, -4.1494, -0.2304, 2.4254, -1.0471, 0, 0);
		testMethod(2945, -4.1506, -0.2186, 2.3632, -1.0471, 0, 0);
		testMethod(2950, -4.1516, -0.2071, 2.301, -1.0471, 0, 0);
		testMethod(2955, -4.1526, -0.1959, 2.2388, -1.0471, 0, 0);
		testMethod(2960, -4.1536, -0.185, 2.1766, -1.0471, 0, 0);
		testMethod(2965, -4.1545, -0.1744, 2.1144, -1.0471, 0, 0);
		testMethod(2970, -4.1553, -0.1642, 2.0523, -1.0471, 0, 0);
		testMethod(2975, -4.1561, -0.1542, 1.9901, -1.0471, 0, 0);
		testMethod(2980, -4.1569, -0.1446, 1.9279, -1.0471, 0, 0);
		testMethod(2985, -4.1576, -0.1353, 1.8657, -1.0471, 0, 0);
		testMethod(2990, -4.1582, -0.1262, 1.8035, -1.0471, 0, 0);
		testMethod(2995, -4.1588, -0.1175, 1.7413, -1.0471, 0, 0);
		testMethod(3000, -4.1594, -0.1091, 1.6791, -1.0471, 0, 0);
		testMethod(3005, -4.1599, -0.1011, 1.6169, -1.0471, 0, 0);
		testMethod(3010, -4.1604, -0.0933, 1.5547, -1.0471, 0, 0);
		testMethod(3015, -4.1609, -0.0858, 1.4926, -1.0471, 0, 0);
		testMethod(3020, -4.1613, -0.0787, 1.4304, -1.0471, 0, 0);
		testMethod(3025, -4.1616, -0.0718, 1.3682, -1.0471, 0, 0);
		testMethod(3030, -4.162, -0.0653, 1.306, -1.0471, 0, 0);
		testMethod(3035, -4.1623, -0.0591, 1.2438, -1.0471, 0, 0);
		testMethod(3040, -4.1626, -0.0532, 1.1816, -1.0471, 0, 0);
		testMethod(3045, -4.1628, -0.0476, 1.1194, -1.0471, 0, 0);
		testMethod(3050, -4.1631, -0.0423, 1.0572, -1.0471, 0, 0);
		testMethod(3055, -4.1633, -0.0373, 0.995, -1.0471, 0, 0);
		testMethod(3060, -4.1634, -0.0326, 0.9328, -1.0471, 0, 0);
		testMethod(3065, -4.1636, -0.0283, 0.8707, -1.0471, 0, 0);
		testMethod(3070, -4.1637, -0.0243, 0.8085, -1.0471, 0, 0);
		testMethod(3075, -4.1638, -0.0205, 0.7463, -1.0471, 0, 0);
		testMethod(3080, -4.1639, -0.0171, 0.6841, -1.0471, 0, 0);
		testMethod(3085, -4.164, -0.014, 0.6219, -1.0471, 0, 0);
		testMethod(3090, -4.1641, -0.0112, 0.5597, -1.0471, 0, 0);
		testMethod(3095, -4.1641, -0.0087, 0.4975, -1.0471, 0, 0);
		testMethod(3100, -4.1641, -0.0065, 0.4353, -1.0471, 0, 0);
		testMethod(3105, -4.1642, -0.0047, 0.3731, -1.0471, 0, 0);
		testMethod(3110, -4.1642, -0.0031, 0.3109, -1.0471, 0, 0);
		testMethod(3115, -4.1642, -0.0019, 0.2488, -1.0471, 0, 0);
		testMethod(3120, -4.1642, -0.0009, 0.1866, -1.0471, 0, 0);
		testMethod(3125, -4.1642, -0.0003, 0.1244, -1.0471, 0, 0);
		testMethod(3130, -4.1642, -0, 0.0622, -1.0471, 0, 0);
		testMethod(3135, -4.1642, -0, -0, -1.0471, 0, 0);
		testMethod(3135, -4.1642, -0, -0, -1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}