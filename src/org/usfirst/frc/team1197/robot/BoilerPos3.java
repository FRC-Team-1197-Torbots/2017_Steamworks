package org.usfirst.frc.team1197.robot;

public class BoilerPos3 extends TorTrajectory {

	public BoilerPos3() {
		super(10.3371, 0);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0622, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1244, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1866, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2488, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3111, 0, 0, 0);
		testMethod(30, 0.0001, 0.0065, 0.3733, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4355, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4977, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.5599, 0, 0, 0);
		testMethod(50, 0.0003, 0.0171, 0.6221, 0, 0, 0);
		testMethod(55, 0.0004, 0.0205, 0.6843, 0, 0, 0);
		testMethod(60, 0.0005, 0.0243, 0.7465, 0, 0, 0);
		testMethod(65, 0.0006, 0.0283, 0.8088, 0, 0, 0);
		testMethod(70, 0.0008, 0.0327, 0.871, 0, 0, 0);
		testMethod(75, 0.001, 0.0373, 0.9332, 0, 0, 0);
		testMethod(80, 0.0012, 0.0423, 0.9954, 0, 0, 0);
		testMethod(85, 0.0014, 0.0476, 1.0576, 0, 0, 0);
		testMethod(90, 0.0016, 0.0532, 1.1198, 0, 0, 0);
		testMethod(95, 0.0019, 0.0591, 1.182, 0, 0, 0);
		testMethod(100, 0.0022, 0.0653, 1.2442, 0, 0, 0);
		testMethod(105, 0.0026, 0.0719, 1.3064, 0, 0, 0);
		testMethod(110, 0.003, 0.0787, 1.3687, 0, 0, 0);
		testMethod(115, 0.0034, 0.0859, 1.4309, 0, 0, 0);
		testMethod(120, 0.0038, 0.0933, 1.4931, 0, 0, 0);
		testMethod(125, 0.0043, 0.1011, 1.5553, 0, 0, 0);
		testMethod(130, 0.0048, 0.1092, 1.6175, 0, 0, 0);
		testMethod(135, 0.0054, 0.1176, 1.6797, 0, 0, 0);
		testMethod(140, 0.006, 0.1263, 1.7419, 0, 0, 0);
		testMethod(145, 0.0067, 0.1353, 1.8041, 0, 0, 0);
		testMethod(150, 0.0074, 0.1446, 1.8664, 0, 0, 0);
		testMethod(155, 0.0081, 0.1543, 1.9286, 0, 0, 0);
		testMethod(160, 0.0089, 0.1642, 1.9908, 0, 0, 0);
		testMethod(165, 0.0097, 0.1745, 2.053, 0, 0, 0);
		testMethod(170, 0.0106, 0.1851, 2.1152, 0, 0, 0);
		testMethod(175, 0.0116, 0.196, 2.1774, 0, 0, 0);
		testMethod(180, 0.0126, 0.2072, 2.2396, 0, 0, 0);
		testMethod(185, 0.0137, 0.2187, 2.3018, 0, 0, 0);
		testMethod(190, 0.0148, 0.2305, 2.364, 0, 0, 0);
		testMethod(195, 0.016, 0.2426, 2.4263, 0, 0, 0);
		testMethod(200, 0.0172, 0.2551, 2.4885, 0, 0, 0);
		testMethod(205, 0.0185, 0.2675, 2.4885, 0, 0, 0);
		testMethod(210, 0.0199, 0.28, 2.4885, 0, 0, 0);
		testMethod(215, 0.0213, 0.2924, 2.4885, 0, 0, 0);
		testMethod(220, 0.0228, 0.3048, 2.4885, 0, 0, 0);
		testMethod(225, 0.0244, 0.3173, 2.4885, 0, 0, 0);
		testMethod(230, 0.026, 0.3297, 2.4885, 0, 0, 0);
		testMethod(235, 0.0277, 0.3422, 2.4885, 0, 0, 0);
		testMethod(240, 0.0294, 0.3546, 2.4885, 0, 0, 0);
		testMethod(245, 0.0312, 0.367, 2.4885, 0, 0, 0);
		testMethod(250, 0.0331, 0.3795, 2.4885, 0, 0, 0);
		testMethod(255, 0.035, 0.3919, 2.4885, 0, 0, 0);
		testMethod(260, 0.037, 0.4044, 2.4885, 0, 0, 0);
		testMethod(265, 0.0391, 0.4168, 2.4885, 0, 0, 0);
		testMethod(270, 0.0412, 0.4293, 2.4885, 0, 0, 0);
		testMethod(275, 0.0433, 0.4417, 2.4885, 0, 0, 0);
		testMethod(280, 0.0456, 0.4541, 2.4885, 0, 0, 0);
		testMethod(285, 0.0479, 0.4666, 2.4885, 0, 0, 0);
		testMethod(290, 0.0503, 0.479, 2.4885, 0, 0, 0);
		testMethod(295, 0.0527, 0.4915, 2.4885, 0, 0, 0);
		testMethod(300, 0.0552, 0.5039, 2.4885, 0, 0, 0);
		testMethod(305, 0.0577, 0.5164, 2.4885, 0, 0, 0);
		testMethod(310, 0.0603, 0.5288, 2.4885, 0, 0, 0);
		testMethod(315, 0.063, 0.5412, 2.4885, 0, 0, 0);
		testMethod(320, 0.0657, 0.5537, 2.4885, 0, 0, 0);
		testMethod(325, 0.0685, 0.5661, 2.4885, 0, 0, 0);
		testMethod(330, 0.0714, 0.5786, 2.4885, 0, 0, 0);
		testMethod(335, 0.0743, 0.591, 2.4885, 0, 0, 0);
		testMethod(340, 0.0773, 0.6035, 2.4885, 0, 0, 0);
		testMethod(345, 0.0804, 0.6159, 2.4885, 0, 0, 0);
		testMethod(350, 0.0835, 0.6283, 2.4885, 0, 0, 0);
		testMethod(355, 0.0866, 0.6408, 2.4885, 0, 0, 0);
		testMethod(360, 0.0899, 0.6532, 2.4885, 0, 0, 0);
		testMethod(365, 0.0932, 0.6657, 2.4885, 0, 0, 0);
		testMethod(370, 0.0965, 0.6781, 2.4885, 0, 0, 0);
		testMethod(375, 0.1, 0.6906, 2.4885, 0, 0, 0);
		testMethod(380, 0.1034, 0.703, 2.4885, 0, 0, 0);
		testMethod(385, 0.107, 0.7154, 2.4885, 0, 0, 0);
		testMethod(390, 0.1106, 0.7279, 2.4885, 0, 0, 0);
		testMethod(395, 0.1143, 0.7403, 2.4885, 0, 0, 0);
		testMethod(400, 0.118, 0.7528, 2.4885, 0, 0, 0);
		testMethod(405, 0.1218, 0.7652, 2.4885, 0, 0, 0);
		testMethod(410, 0.1257, 0.7776, 2.4885, 0, 0, 0);
		testMethod(415, 0.1296, 0.7901, 2.4885, 0, 0, 0);
		testMethod(420, 0.1336, 0.8025, 2.4885, 0, 0, 0);
		testMethod(425, 0.1376, 0.815, 2.4885, 0, 0, 0);
		testMethod(430, 0.1417, 0.8274, 2.4885, 0, 0, 0);
		testMethod(435, 0.1459, 0.8399, 2.4885, 0, 0, 0);
		testMethod(440, 0.1501, 0.8523, 2.4885, 0, 0, 0);
		testMethod(445, 0.1544, 0.8647, 2.4885, 0, 0, 0);
		testMethod(450, 0.1587, 0.8772, 2.4885, 0, 0, 0);
		testMethod(455, 0.1632, 0.8896, 2.4885, 0, 0, 0);
		testMethod(460, 0.1676, 0.9021, 2.4885, 0, 0, 0);
		testMethod(465, 0.1722, 0.9145, 2.4885, 0, 0, 0);
		testMethod(470, 0.1768, 0.927, 2.4885, 0, 0, 0);
		testMethod(475, 0.1815, 0.9394, 2.4885, 0, 0, 0);
		testMethod(480, 0.1862, 0.9518, 2.4885, 0, 0, 0);
		testMethod(485, 0.191, 0.9643, 2.4885, 0, 0, 0);
		testMethod(490, 0.1958, 0.9767, 2.4885, 0, 0, 0);
		testMethod(495, 0.2007, 0.9892, 2.4885, 0, 0, 0);
		testMethod(500, 0.2057, 1.0016, 2.4885, 0, 0, 0);
		testMethod(505, 0.2108, 1.0141, 2.4885, 0, 0, 0);
		testMethod(510, 0.2159, 1.0265, 2.4885, 0, 0, 0);
		testMethod(515, 0.221, 1.0389, 2.4885, 0, 0, 0);
		testMethod(520, 0.2262, 1.0514, 2.4885, 0, 0, 0);
		testMethod(525, 0.2315, 1.0638, 2.4885, 0, 0, 0);
		testMethod(530, 0.2369, 1.0763, 2.4885, 0, 0, 0);
		testMethod(535, 0.2423, 1.0887, 2.4885, 0, 0, 0);
		testMethod(540, 0.2478, 1.1011, 2.4885, 0, 0, 0);
		testMethod(545, 0.2533, 1.1136, 2.4885, 0, 0, 0);
		testMethod(550, 0.2589, 1.126, 2.4885, 0, 0, 0);
		testMethod(555, 0.2646, 1.1385, 2.4885, 0, 0, 0);
		testMethod(560, 0.2703, 1.1509, 2.4885, 0, 0, 0);
		testMethod(565, 0.2761, 1.1634, 2.4885, 0, 0, 0);
		testMethod(570, 0.2819, 1.1758, 2.4885, 0, 0, 0);
		testMethod(575, 0.2878, 1.1882, 2.4885, 0, 0, 0);
		testMethod(580, 0.2938, 1.2007, 2.4885, 0, 0, 0);
		testMethod(585, 0.2998, 1.2131, 2.4885, 0, 0, 0);
		testMethod(590, 0.3059, 1.2256, 2.4885, 0, 0, 0);
		testMethod(595, 0.3121, 1.238, 2.4885, 0, 0, 0);
		testMethod(600, 0.3183, 1.2505, 2.4885, 0, 0, 0);
		testMethod(605, 0.3246, 1.2629, 2.4885, 0, 0, 0);
		testMethod(610, 0.331, 1.2753, 2.4885, 0, 0, 0);
		testMethod(615, 0.3374, 1.2878, 2.4885, 0, 0, 0);
		testMethod(620, 0.3438, 1.3002, 2.4885, 0, 0, 0);
		testMethod(625, 0.3504, 1.3127, 2.4885, 0, 0, 0);
		testMethod(630, 0.357, 1.3251, 2.4885, 0, 0, 0);
		testMethod(635, 0.3636, 1.3376, 2.4885, 0, 0, 0);
		testMethod(640, 0.3703, 1.35, 2.4885, 0, 0, 0);
		testMethod(645, 0.3771, 1.3624, 2.4885, 0, 0, 0);
		testMethod(650, 0.384, 1.3749, 2.4885, 0, 0, 0);
		testMethod(655, 0.3909, 1.3873, 2.4885, 0, 0, 0);
		testMethod(660, 0.3978, 1.3998, 2.4885, 0, 0, 0);
		testMethod(665, 0.4049, 1.4122, 2.4885, 0, 0, 0);
		testMethod(670, 0.412, 1.4247, 2.4885, 0, 0, 0);
		testMethod(675, 0.4191, 1.4371, 2.4885, 0, 0, 0);
		testMethod(680, 0.4263, 1.4495, 2.4885, 0, 0, 0);
		testMethod(685, 0.4336, 1.462, 2.4885, 0, 0, 0);
		testMethod(690, 0.4409, 1.4744, 2.4885, 0, 0, 0);
		testMethod(695, 0.4483, 1.4869, 2.4885, 0, 0, 0);
		testMethod(700, 0.4558, 1.4993, 2.4885, 0, 0, 0);
		testMethod(705, 0.4633, 1.5117, 2.4885, 0, 0, 0);
		testMethod(710, 0.4709, 1.5242, 2.4885, 0, 0, 0);
		testMethod(715, 0.4786, 1.5366, 2.4885, 0, 0, 0);
		testMethod(720, 0.4863, 1.5491, 2.4885, 0, 0, 0);
		testMethod(725, 0.4941, 1.5615, 2.4885, 0, 0, 0);
		testMethod(730, 0.5019, 1.574, 2.4885, 0, 0, 0);
		testMethod(735, 0.5098, 1.5864, 2.4885, 0, 0, 0);
		testMethod(740, 0.5178, 1.5988, 2.4885, 0, 0, 0);
		testMethod(745, 0.5258, 1.6113, 2.4885, 0, 0, 0);
		testMethod(750, 0.5339, 1.6237, 2.4885, 0, 0, 0);
		testMethod(755, 0.542, 1.6362, 2.4885, 0, 0, 0);
		testMethod(760, 0.5502, 1.6486, 2.4885, 0, 0, 0);
		testMethod(765, 0.5585, 1.6611, 2.4885, 0, 0, 0);
		testMethod(770, 0.5669, 1.6735, 2.4885, 0, 0, 0);
		testMethod(775, 0.5753, 1.6859, 2.4885, 0, 0, 0);
		testMethod(780, 0.5837, 1.6981, 2.4263, 0, 0, 0);
		testMethod(785, 0.5922, 1.7099, 2.364, 0, 0, 0);
		testMethod(790, 0.6008, 1.7214, 2.3018, -0, -0.0003, -0.0595);
		testMethod(795, 0.6095, 1.7326, 2.2396, -0, -0.0013, -0.2035);
		testMethod(800, 0.6181, 1.7435, 2.1774, -0, -0.0031, -0.3533);
		testMethod(805, 0.6269, 1.7541, 2.1152, -0, -0.0056, -0.5084);
		testMethod(810, 0.6357, 1.7643, 2.053, -0.0001, -0.009, -0.6687);
		testMethod(815, 0.6445, 1.7743, 1.9908, -0.0001, -0.0131, -0.8338);
		testMethod(820, 0.6534, 1.7839, 1.9286, -0.0002, -0.0182, -1.0036);
		testMethod(825, 0.6624, 1.7933, 1.8664, -0.0003, -0.024, -1.1779);
		testMethod(830, 0.6714, 1.8023, 1.8041, -0.0004, -0.0308, -1.3565);
		testMethod(835, 0.6804, 1.811, 1.7419, -0.0006, -0.0385, -1.5391);
		testMethod(840, 0.6895, 1.8194, 1.6797, -0.0008, -0.0471, -1.7255);
		testMethod(845, 0.6986, 1.8275, 1.6175, -0.0011, -0.0567, -1.9155);
		testMethod(850, 0.7077, 1.8352, 1.5553, -0.0014, -0.0673, -2.1088);
		testMethod(855, 0.7169, 1.8427, 1.4931, -0.0018, -0.0788, -2.3052);
		testMethod(860, 0.7262, 1.8499, 1.4309, -0.0022, -0.0913, -2.5044);
		testMethod(865, 0.7354, 1.8567, 1.3687, -0.0027, -0.1048, -2.7061);
		testMethod(870, 0.7447, 1.8632, 1.3064, -0.0032, -0.1194, -2.9101);
		testMethod(875, 0.7541, 1.8695, 1.2442, -0.0039, -0.135, -3.116);
		testMethod(880, 0.7634, 1.8754, 1.182, -0.0046, -0.1516, -3.3237);
		testMethod(885, 0.7728, 1.881, 1.1198, -0.0054, -0.1693, -3.5328);
		testMethod(890, 0.7822, 1.8863, 1.0576, -0.0063, -0.188, -3.7429);
		testMethod(895, 0.7917, 1.8912, 0.9954, -0.0073, -0.2077, -3.9539);
		testMethod(900, 0.8011, 1.8959, 0.9332, -0.0084, -0.2286, -4.1654);
		testMethod(905, 0.8106, 1.9003, 0.871, -0.0096, -0.2505, -4.3771);
		testMethod(910, 0.8201, 1.9043, 0.8088, -0.0109, -0.2734, -4.5886);
		testMethod(915, 0.8297, 1.908, 0.7465, -0.0123, -0.2974, -4.7998);
		testMethod(920, 0.8392, 1.9115, 0.6843, -0.0138, -0.3225, -5.0102);
		testMethod(925, 0.8488, 1.9146, 0.6221, -0.0155, -0.3485, -5.2195);
		testMethod(930, 0.8584, 1.9174, 0.5599, -0.0173, -0.3757, -5.4275);
		testMethod(935, 0.868, 1.9199, 0.4977, -0.0193, -0.4039, -5.6337);
		testMethod(940, 0.8776, 1.922, 0.4355, -0.0214, -0.433, -5.838);
		testMethod(945, 0.8872, 1.9239, 0.3733, -0.0236, -0.4632, -6.0398);
		testMethod(950, 0.8968, 1.9255, 0.3111, -0.026, -0.4944, -6.239);
		testMethod(955, 0.9064, 1.9267, 0.2488, -0.0286, -0.5266, -6.4352);
		testMethod(960, 0.9161, 1.9276, 0.1866, -0.0313, -0.5598, -6.628);
		testMethod(965, 0.9257, 1.9283, 0.1244, -0.0342, -0.5938, -6.8172);
		testMethod(970, 0.9354, 1.9286, 0.0622, -0.0372, -0.6289, -7.0023);
		testMethod(975, 0.945, 1.9286, 0, -0.0405, -0.6648, -7.1832);
		testMethod(980, 0.9546, 1.9286, 0, -0.0439, -0.7017, -7.3827);
		testMethod(985, 0.9643, 1.9286, 0, -0.0475, -0.7396, -7.5822);
		testMethod(990, 0.9739, 1.9286, 0, -0.0513, -0.7785, -7.7816);
		testMethod(995, 0.9836, 1.9286, 0, -0.0553, -0.8184, -7.9811);
		testMethod(1000, 0.9932, 1.9286, 0, -0.0595, -0.8593, -8.1806);
		testMethod(1005, 1.0029, 1.9286, 0, -0.0639, -0.9012, -8.3801);
		testMethod(1010, 1.0125, 1.9286, 0, -0.0685, -0.9438, -8.5102);
		testMethod(1015, 1.0221, 1.9286, 0, -0.0733, -0.9854, -8.3205);
		testMethod(1020, 1.0318, 1.9286, 0, -0.0783, -1.026, -8.1211);
		testMethod(1025, 1.0414, 1.9286, 0, -0.0835, -1.0656, -7.9216);
		testMethod(1030, 1.0511, 1.9286, 0, -0.089, -1.1042, -7.7221);
		testMethod(1035, 1.0607, 1.9286, 0, -0.0946, -1.1418, -7.5226);
		testMethod(1040, 1.0704, 1.9286, 0, -0.1004, -1.1784, -7.3232);
		testMethod(1045, 1.08, 1.9286, 0, -0.1064, -1.214, -7.1237);
		testMethod(1050, 1.0896, 1.9286, 0, -0.1125, -1.2487, -6.9242);
		testMethod(1055, 1.0993, 1.9286, 0, -0.1189, -1.2823, -6.7248);
		testMethod(1060, 1.1089, 1.9286, 0, -0.1253, -1.3149, -6.5253);
		testMethod(1065, 1.1186, 1.9286, 0, -0.132, -1.3465, -6.3258);
		testMethod(1070, 1.1282, 1.9286, 0, -0.1388, -1.3772, -6.1263);
		testMethod(1075, 1.1379, 1.9286, 0, -0.1458, -1.4068, -5.9269);
		testMethod(1080, 1.1475, 1.9286, 0, -0.1529, -1.4354, -5.7274);
		testMethod(1085, 1.1571, 1.9286, 0, -0.1601, -1.4631, -5.5279);
		testMethod(1090, 1.1668, 1.9286, 0, -0.1675, -1.4897, -5.3284);
		testMethod(1095, 1.1764, 1.9286, 0, -0.175, -1.5154, -5.129);
		testMethod(1100, 1.1861, 1.9286, 0, -0.1827, -1.54, -4.9295);
		testMethod(1105, 1.1957, 1.9286, 0, -0.1904, -1.5637, -4.73);
		testMethod(1110, 1.2054, 1.9286, 0, -0.1983, -1.5863, -4.5305);
		testMethod(1115, 1.215, 1.9286, 0, -0.2063, -1.608, -4.3311);
		testMethod(1120, 1.2246, 1.9286, 0, -0.2144, -1.6286, -4.1316);
		testMethod(1125, 1.2343, 1.9286, 0, -0.2226, -1.6483, -3.9321);
		testMethod(1130, 1.2439, 1.9286, 0, -0.2309, -1.667, -3.7327);
		testMethod(1135, 1.2536, 1.9286, 0, -0.2392, -1.6846, -3.5332);
		testMethod(1140, 1.2632, 1.9286, 0, -0.2477, -1.7013, -3.3337);
		testMethod(1145, 1.2729, 1.9286, 0, -0.2562, -1.717, -3.1342);
		testMethod(1150, 1.2825, 1.9286, 0, -0.2649, -1.7316, -2.9348);
		testMethod(1155, 1.2921, 1.9286, 0, -0.2736, -1.7453, -2.7353);
		testMethod(1160, 1.3018, 1.9286, 0, -0.2823, -1.758, -2.5358);
		testMethod(1165, 1.3114, 1.9286, 0, -0.2911, -1.7697, -2.3363);
		testMethod(1170, 1.3211, 1.9286, 0, -0.3, -1.7804, -2.1369);
		testMethod(1175, 1.3307, 1.9286, 0, -0.3089, -1.79, -1.9374);
		testMethod(1180, 1.3404, 1.9286, 0, -0.3179, -1.7987, -1.7379);
		testMethod(1185, 1.35, 1.9286, 0, -0.3269, -1.8064, -1.5384);
		testMethod(1190, 1.3596, 1.9286, 0, -0.336, -1.8131, -1.339);
		testMethod(1195, 1.3693, 1.9286, 0, -0.3451, -1.8188, -1.1395);
		testMethod(1200, 1.3789, 1.9286, 0, -0.3542, -1.8235, -0.94);
		testMethod(1205, 1.3886, 1.9286, 0, -0.3633, -1.8272, -0.7406);
		testMethod(1210, 1.3982, 1.9286, 0, -0.3724, -1.8299, -0.5411);
		testMethod(1215, 1.4079, 1.9286, 0, -0.3816, -1.8316, -0.3416);
		testMethod(1220, 1.4175, 1.9286, 0, -0.3907, -1.8323, -0.1421);
		testMethod(1225, 1.4271, 1.9286, 0, -0.3999, -1.8321, 0.0576);
		testMethod(1230, 1.4368, 1.9286, 0, -0.4091, -1.8308, 0.2572);
		testMethod(1235, 1.4464, 1.9286, 0, -0.4182, -1.8285, 0.4566);
		testMethod(1240, 1.4561, 1.9286, 0, -0.4273, -1.8252, 0.6561);
		testMethod(1245, 1.4657, 1.9286, 0, -0.4365, -1.8209, 0.8556);
		testMethod(1250, 1.4754, 1.9286, 0, -0.4456, -1.8156, 1.0551);
		testMethod(1255, 1.485, 1.9286, 0, -0.4546, -1.8094, 1.2545);
		testMethod(1260, 1.4946, 1.9286, 0, -0.4636, -1.8021, 1.454);
		testMethod(1265, 1.5043, 1.9286, 0, -0.4726, -1.7938, 1.6535);
		testMethod(1270, 1.5139, 1.9286, 0, -0.4816, -1.7846, 1.8529);
		testMethod(1275, 1.5236, 1.9286, 0, -0.4905, -1.7743, 2.0524);
		testMethod(1280, 1.5332, 1.9286, 0, -0.4993, -1.7631, 2.2519);
		testMethod(1285, 1.5429, 1.9286, 0, -0.5081, -1.7508, 2.4514);
		testMethod(1290, 1.5525, 1.9286, 0, -0.5168, -1.7375, 2.6508);
		testMethod(1295, 1.5621, 1.9286, 0, -0.5255, -1.7233, 2.8503);
		testMethod(1300, 1.5718, 1.9286, 0, -0.5341, -1.708, 3.0498);
		testMethod(1305, 1.5814, 1.9286, 0, -0.5426, -1.6918, 3.2493);
		testMethod(1310, 1.5911, 1.9286, 0, -0.551, -1.6746, 3.4487);
		testMethod(1315, 1.6007, 1.9286, 0, -0.5593, -1.6563, 3.6482);
		testMethod(1320, 1.6104, 1.9286, 0, -0.5675, -1.6371, 3.8477);
		testMethod(1325, 1.62, 1.9286, 0, -0.5757, -1.6168, 4.0472);
		testMethod(1330, 1.6296, 1.9286, 0, -0.5837, -1.5956, 4.2466);
		testMethod(1335, 1.6393, 1.9286, 0, -0.5916, -1.5734, 4.4461);
		testMethod(1340, 1.6489, 1.9286, 0, -0.5994, -1.5501, 4.6456);
		testMethod(1345, 1.6586, 1.9286, 0, -0.6071, -1.5259, 4.845);
		testMethod(1350, 1.6682, 1.9286, 0, -0.6147, -1.5007, 5.0445);
		testMethod(1355, 1.6779, 1.9286, 0, -0.6221, -1.4745, 5.244);
		testMethod(1360, 1.6875, 1.9286, 0, -0.6294, -1.4473, 5.4435);
		testMethod(1365, 1.6971, 1.9286, 0, -0.6366, -1.419, 5.6429);
		testMethod(1370, 1.7068, 1.9286, 0, -0.6436, -1.3898, 5.8424);
		testMethod(1375, 1.7164, 1.9286, 0, -0.6505, -1.3596, 6.0419);
		testMethod(1380, 1.7261, 1.9286, 0, -0.6572, -1.3284, 6.2414);
		testMethod(1385, 1.7357, 1.9286, 0, -0.6638, -1.2962, 6.4408);
		testMethod(1390, 1.7454, 1.9286, 0, -0.6702, -1.263, 6.6403);
		testMethod(1395, 1.755, 1.9286, 0, -0.6764, -1.2288, 6.8398);
		testMethod(1400, 1.7646, 1.9286, 0, -0.6825, -1.1936, 7.0393);
		testMethod(1405, 1.7743, 1.9286, 0, -0.6883, -1.1574, 7.2387);
		testMethod(1410, 1.7839, 1.9286, 0, -0.694, -1.1202, 7.4382);
		testMethod(1415, 1.7936, 1.9286, 0, -0.6995, -1.082, 7.6377);
		testMethod(1420, 1.8032, 1.9286, 0, -0.7049, -1.0429, 7.8371);
		testMethod(1425, 1.8129, 1.9286, 0, -0.71, -1.0027, 8.0366);
		testMethod(1430, 1.8225, 1.9286, 0, -0.7149, -0.9615, 8.2361);
		testMethod(1435, 1.8321, 1.9286, 0, -0.7196, -0.9193, 8.4356);
		testMethod(1440, 1.8418, 1.9286, 0, -0.7241, -0.8769, 8.4782);
		testMethod(1445, 1.8514, 1.9286, 0, -0.7284, -0.8356, 8.265);
		testMethod(1450, 1.8611, 1.9286, 0, -0.7324, -0.7953, 8.0656);
		testMethod(1455, 1.8707, 1.9286, 0, -0.7363, -0.7559, 7.8661);
		testMethod(1460, 1.8804, 1.9286, 0, -0.74, -0.7176, 7.6666);
		testMethod(1465, 1.89, 1.9286, 0, -0.7435, -0.6803, 7.4671);
		testMethod(1470, 1.8996, 1.9286, 0, -0.7468, -0.6439, 7.2677);
		testMethod(1475, 1.9093, 1.9286, 0, -0.7499, -0.6086, 7.0682);
		testMethod(1480, 1.9189, 1.9286, 0, -0.7529, -0.5742, 6.8687);
		testMethod(1485, 1.9286, 1.9286, 0, -0.7557, -0.5409, 6.6692);
		testMethod(1490, 1.9382, 1.9286, 0, -0.7583, -0.5086, 6.4698);
		testMethod(1495, 1.9479, 1.9286, 0, -0.7608, -0.4772, 6.2703);
		testMethod(1500, 1.9575, 1.9286, 0, -0.7631, -0.4468, 6.0708);
		testMethod(1505, 1.9671, 1.9286, 0, -0.7652, -0.4175, 5.8713);
		testMethod(1510, 1.9768, 1.9286, 0, -0.7672, -0.3891, 5.6719);
		testMethod(1515, 1.9864, 1.9286, 0, -0.7691, -0.3618, 5.4724);
		testMethod(1520, 1.9961, 1.9286, 0, -0.7709, -0.3354, 5.2729);
		testMethod(1525, 2.0057, 1.9286, 0, -0.7725, -0.31, 5.0735);
		testMethod(1530, 2.0154, 1.9286, 0, -0.774, -0.2857, 4.874);
		testMethod(1535, 2.025, 1.9286, 0, -0.7753, -0.2623, 4.6745);
		testMethod(1540, 2.0346, 1.9286, 0, -0.7766, -0.2399, 4.475);
		testMethod(1545, 2.0443, 1.9286, 0, -0.7777, -0.2185, 4.2756);
		testMethod(1550, 2.0539, 1.9286, 0, -0.7788, -0.1982, 4.0761);
		testMethod(1555, 2.0636, 1.9286, 0, -0.7797, -0.1788, 3.8766);
		testMethod(1560, 2.0732, 1.9286, 0, -0.7806, -0.1604, 3.6771);
		testMethod(1565, 2.0829, 1.9286, 0, -0.7813, -0.143, 3.4777);
		testMethod(1570, 2.0925, 1.9286, 0, -0.782, -0.1266, 3.2782);
		testMethod(1575, 2.1021, 1.9286, 0, -0.7826, -0.1112, 3.0787);
		testMethod(1580, 2.1118, 1.9286, 0, -0.7831, -0.0968, 2.8792);
		testMethod(1585, 2.1214, 1.9286, 0, -0.7836, -0.0834, 2.6798);
		testMethod(1590, 2.1311, 1.9286, 0, -0.784, -0.071, 2.4803);
		testMethod(1595, 2.1407, 1.9286, 0, -0.7843, -0.0596, 2.2808);
		testMethod(1600, 2.1504, 1.9286, 0, -0.7846, -0.0492, 2.0814);
		testMethod(1605, 2.16, 1.9286, 0, -0.7848, -0.0398, 1.8819);
		testMethod(1610, 2.1696, 1.9286, 0, -0.785, -0.0314, 1.6824);
		testMethod(1615, 2.1793, 1.9286, 0, -0.7851, -0.024, 1.4829);
		testMethod(1620, 2.1889, 1.9286, 0, -0.7852, -0.0176, 1.2835);
		testMethod(1625, 2.1986, 1.9286, 0, -0.7853, -0.0121, 1.084);
		testMethod(1630, 2.2082, 1.9286, 0, -0.7853, -0.0077, 0.8845);
		testMethod(1635, 2.2179, 1.9286, 0, -0.7853, -0.0043, 0.685);
		testMethod(1640, 2.2275, 1.9286, 0, -0.7854, -0.0019, 0.4856);
		testMethod(1645, 2.2371, 1.9286, 0, -0.7854, -0.0004, 0.2861);
		testMethod(1650, 2.2468, 1.9286, 0, -0.7854, 0, 0.087);
		testMethod(1655, 2.2564, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1660, 2.2661, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1665, 2.2757, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1670, 2.2854, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1675, 2.295, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1680, 2.3046, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1685, 2.3143, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1690, 2.3239, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1695, 2.3336, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1700, 2.3432, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1705, 2.3529, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1710, 2.3625, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1715, 2.3721, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1720, 2.3818, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1725, 2.3914, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1730, 2.4011, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1735, 2.4107, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1740, 2.4204, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1745, 2.43, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1750, 2.4396, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1755, 2.4493, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1760, 2.4589, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1765, 2.4686, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1770, 2.4782, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1775, 2.4879, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1780, 2.4975, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1785, 2.5071, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1790, 2.5168, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1795, 2.5264, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1800, 2.5361, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1805, 2.5457, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1810, 2.5554, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1815, 2.565, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1820, 2.5746, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1825, 2.5843, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1830, 2.5939, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1835, 2.6036, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1840, 2.6132, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1845, 2.6229, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1850, 2.6325, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1855, 2.6421, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1860, 2.6518, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1865, 2.6614, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1870, 2.6711, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1875, 2.6807, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1880, 2.6904, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1885, 2.7, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1890, 2.7096, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1895, 2.7193, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1900, 2.7289, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1905, 2.7386, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1910, 2.7482, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1915, 2.7579, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1920, 2.7675, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1925, 2.7771, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1930, 2.7868, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1935, 2.7964, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1940, 2.8061, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1945, 2.8157, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1950, 2.8253, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1955, 2.835, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1960, 2.8446, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1965, 2.8543, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1970, 2.8639, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1975, 2.8736, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1980, 2.8832, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1985, 2.8928, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1990, 2.9025, 1.9286, 0, -0.7854, 0, 0);
		testMethod(1995, 2.9121, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2000, 2.9218, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2005, 2.9314, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2010, 2.9411, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2015, 2.9507, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2020, 2.9603, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2025, 2.97, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2030, 2.9796, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2035, 2.9893, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2040, 2.9989, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2045, 3.0086, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2050, 3.0182, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2055, 3.0278, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2060, 3.0375, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2065, 3.0471, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2070, 3.0568, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2075, 3.0664, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2080, 3.0761, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2085, 3.0857, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2090, 3.0953, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2095, 3.105, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2100, 3.1146, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2105, 3.1243, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2110, 3.1339, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2115, 3.1436, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2120, 3.1532, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2125, 3.1628, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2130, 3.1725, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2135, 3.1821, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2140, 3.1918, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2145, 3.2014, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2150, 3.2111, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2155, 3.2207, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2160, 3.2303, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2165, 3.24, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2170, 3.2496, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2175, 3.2593, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2180, 3.2689, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2185, 3.2786, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2190, 3.2882, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2195, 3.2978, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2200, 3.3075, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2205, 3.3171, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2210, 3.3268, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2215, 3.3364, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2220, 3.3461, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2225, 3.3557, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2230, 3.3653, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2235, 3.375, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2240, 3.3846, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2245, 3.3943, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2250, 3.4039, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2255, 3.4136, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2260, 3.4232, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2265, 3.4328, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2270, 3.4425, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2275, 3.4521, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2280, 3.4618, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2285, 3.4714, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2290, 3.4811, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2295, 3.4907, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2300, 3.5003, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2305, 3.51, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2310, 3.5196, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2315, 3.5293, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2320, 3.5389, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2325, 3.5486, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2330, 3.5582, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2335, 3.5678, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2340, 3.5775, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2345, 3.5871, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2350, 3.5968, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2355, 3.6064, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2360, 3.6161, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2365, 3.6257, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2370, 3.6353, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2375, 3.645, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2380, 3.6546, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2385, 3.6643, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2390, 3.6739, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2395, 3.6836, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2400, 3.6932, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2405, 3.7028, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2410, 3.7125, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2415, 3.7221, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2420, 3.7318, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2425, 3.7414, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2430, 3.7511, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2435, 3.7607, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2440, 3.7703, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2445, 3.78, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2450, 3.7896, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2455, 3.7993, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2460, 3.8089, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2465, 3.8186, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2470, 3.8282, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2475, 3.8378, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2480, 3.8475, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2485, 3.8571, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2490, 3.8668, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2495, 3.8764, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2500, 3.8861, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2505, 3.8957, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2510, 3.9053, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2515, 3.915, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2520, 3.9246, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2525, 3.9343, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2530, 3.9439, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2535, 3.9536, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2540, 3.9632, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2545, 3.9728, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2550, 3.9825, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2555, 3.9921, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2560, 4.0018, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2565, 4.0114, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2570, 4.0211, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2575, 4.0307, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2580, 4.0403, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2585, 4.05, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2590, 4.0596, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2595, 4.0693, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2600, 4.0789, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2605, 4.0886, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2610, 4.0982, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2615, 4.1078, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2620, 4.1175, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2625, 4.1271, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2630, 4.1368, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2635, 4.1464, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2640, 4.1561, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2645, 4.1657, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2650, 4.1753, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2655, 4.185, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2660, 4.1946, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2665, 4.2043, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2670, 4.2139, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2675, 4.2236, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2680, 4.2332, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2685, 4.2428, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2690, 4.2525, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2695, 4.2621, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2700, 4.2718, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2705, 4.2814, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2710, 4.2911, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2715, 4.3007, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2720, 4.3103, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2725, 4.32, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2730, 4.3296, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2735, 4.3393, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2740, 4.3489, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2745, 4.3586, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2750, 4.3682, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2755, 4.3778, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2760, 4.3875, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2765, 4.3971, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2770, 4.4068, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2775, 4.4164, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2780, 4.4261, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2785, 4.4357, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2790, 4.4453, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2795, 4.455, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2800, 4.4646, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2805, 4.4743, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2810, 4.4839, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2815, 4.4936, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2820, 4.5032, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2825, 4.5128, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2830, 4.5225, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2835, 4.5321, 1.9286, 0, -0.7854, 0, 0);
		testMethod(2840, 4.5418, 1.9286, 0, -0.7854, 0.0001, 0.0154);
		testMethod(2845, 4.5514, 1.9286, 0, -0.7854, 0.001, 0.1781);
		testMethod(2850, 4.5611, 1.9286, 0, -0.7854, 0.0029, 0.3775);
		testMethod(2855, 4.5707, 1.9286, 0, -0.7853, 0.0057, 0.577);
		testMethod(2860, 4.5803, 1.9286, 0, -0.7853, 0.0096, 0.7765);
		testMethod(2865, 4.59, 1.9286, 0, -0.7852, 0.0145, 0.976);
		testMethod(2870, 4.5996, 1.9286, 0, -0.7851, 0.0204, 1.1754);
		testMethod(2875, 4.6093, 1.9286, 0, -0.785, 0.0273, 1.3749);
		testMethod(2880, 4.6189, 1.9286, 0, -0.7849, 0.0351, 1.5744);
		testMethod(2885, 4.6286, 1.9286, 0, -0.7847, 0.044, 1.7739);
		testMethod(2890, 4.6382, 1.9286, 0, -0.7844, 0.0539, 1.9733);
		testMethod(2895, 4.6478, 1.9286, 0, -0.7841, 0.0647, 2.1728);
		testMethod(2900, 4.6575, 1.9286, 0, -0.7838, 0.0766, 2.3723);
		testMethod(2905, 4.6671, 1.9286, 0, -0.7834, 0.0894, 2.5718);
		testMethod(2910, 4.6768, 1.9286, 0, -0.7829, 0.1033, 2.7712);
		testMethod(2915, 4.6864, 1.9286, 0, -0.7823, 0.1182, 2.9707);
		testMethod(2920, 4.6961, 1.9286, 0, -0.7817, 0.134, 3.1702);
		testMethod(2925, 4.7057, 1.9286, 0, -0.781, 0.1509, 3.3696);
		testMethod(2930, 4.7153, 1.9286, 0, -0.7802, 0.1687, 3.5691);
		testMethod(2935, 4.725, 1.9286, 0, -0.7793, 0.1875, 3.7686);
		testMethod(2940, 4.7346, 1.9286, 0, -0.7783, 0.2074, 3.9681);
		testMethod(2945, 4.7443, 1.9286, 0, -0.7772, 0.2282, 4.1675);
		testMethod(2950, 4.7539, 1.9286, 0, -0.776, 0.2501, 4.367);
		testMethod(2955, 4.7636, 1.9286, 0, -0.7747, 0.2729, 4.5665);
		testMethod(2960, 4.7732, 1.9286, 0, -0.7733, 0.2967, 4.766);
		testMethod(2965, 4.7828, 1.9286, 0, -0.7718, 0.3215, 4.9654);
		testMethod(2970, 4.7925, 1.9286, 0, -0.7701, 0.3474, 5.1649);
		testMethod(2975, 4.8021, 1.9286, 0, -0.7683, 0.3742, 5.3644);
		testMethod(2980, 4.8118, 1.9286, 0, -0.7663, 0.402, 5.5639);
		testMethod(2985, 4.8214, 1.9286, 0, -0.7643, 0.4308, 5.7633);
		testMethod(2990, 4.8311, 1.9286, 0, -0.762, 0.4606, 5.9628);
		testMethod(2995, 4.8407, 1.9286, 0, -0.7597, 0.4915, 6.1623);
		testMethod(3000, 4.8503, 1.9286, 0, -0.7571, 0.5233, 6.3617);
		testMethod(3005, 4.86, 1.9286, 0, -0.7544, 0.5561, 6.5612);
		testMethod(3010, 4.8696, 1.9286, 0, -0.7516, 0.5899, 6.7607);
		testMethod(3015, 4.8793, 1.9286, 0, -0.7485, 0.6247, 6.9602);
		testMethod(3020, 4.8889, 1.9286, 0, -0.7453, 0.6605, 7.1596);
		testMethod(3025, 4.8986, 1.9286, 0, -0.7419, 0.6973, 7.3591);
		testMethod(3030, 4.9082, 1.9286, 0, -0.7383, 0.7351, 7.5586);
		testMethod(3035, 4.9178, 1.9286, 0, -0.7346, 0.7738, 7.7581);
		testMethod(3040, 4.9275, 1.9286, 0, -0.7306, 0.8136, 7.9575);
		testMethod(3045, 4.9371, 1.9286, 0, -0.7264, 0.8544, 8.157);
		testMethod(3050, 4.9468, 1.9286, 0, -0.722, 0.8962, 8.3565);
		testMethod(3055, 4.9564, 1.9286, 0, -0.7175, 0.9388, 8.5145);
		testMethod(3060, 4.9661, 1.9286, 0, -0.7127, 0.9805, 8.3441);
		testMethod(3065, 4.9757, 1.9286, 0, -0.7077, 1.0212, 8.1446);
		testMethod(3070, 4.9853, 1.9286, 0, -0.7024, 1.0609, 7.9452);
		testMethod(3075, 4.995, 1.9286, 0, -0.697, 1.0997, 7.7457);
		testMethod(3080, 5.0046, 1.9286, 0, -0.6915, 1.1374, 7.5462);
		testMethod(3085, 5.0143, 1.9286, 0, -0.6857, 1.1741, 7.3467);
		testMethod(3090, 5.0239, 1.9286, 0, -0.6797, 1.2099, 7.1473);
		testMethod(3095, 5.0336, 1.9286, 0, -0.6736, 1.2446, 6.9478);
		testMethod(3100, 5.0432, 1.9286, 0, -0.6673, 1.2784, 6.7483);
		testMethod(3105, 5.0528, 1.9286, 0, -0.6608, 1.3111, 6.5489);
		testMethod(3110, 5.0625, 1.9286, 0, -0.6542, 1.3428, 6.3494);
		testMethod(3115, 5.0721, 1.9286, 0, -0.6474, 1.3736, 6.1499);
		testMethod(3120, 5.0818, 1.9286, 0, -0.6404, 1.4034, 5.9504);
		testMethod(3125, 5.0914, 1.9286, 0, -0.6333, 1.4321, 5.751);
		testMethod(3130, 5.1011, 1.9286, 0, -0.6261, 1.4599, 5.5515);
		testMethod(3135, 5.1107, 1.9286, 0, -0.6187, 1.4866, 5.352);
		testMethod(3140, 5.1203, 1.9286, 0, -0.6112, 1.5124, 5.1525);
		testMethod(3145, 5.13, 1.9286, 0, -0.6036, 1.5372, 4.9531);
		testMethod(3150, 5.1396, 1.9286, 0, -0.5959, 1.5609, 4.7536);
		testMethod(3155, 5.1493, 1.9286, 0, -0.588, 1.5837, 4.5541);
		testMethod(3160, 5.1589, 1.9286, 0, -0.58, 1.6055, 4.3546);
		testMethod(3165, 5.1686, 1.9286, 0, -0.572, 1.6262, 4.1552);
		testMethod(3170, 5.1782, 1.9286, 0, -0.5638, 1.646, 3.9557);
		testMethod(3175, 5.1878, 1.9286, 0, -0.5555, 1.6648, 3.7562);
		testMethod(3180, 5.1975, 1.9286, 0, -0.5471, 1.6826, 3.5568);
		testMethod(3185, 5.2071, 1.9286, 0, -0.5387, 1.6994, 3.3573);
		testMethod(3190, 5.2168, 1.9286, 0, -0.5301, 1.7152, 3.1578);
		testMethod(3195, 5.2264, 1.9286, 0, -0.5215, 1.7299, 2.9583);
		testMethod(3200, 5.2361, 1.9286, 0, -0.5128, 1.7437, 2.7589);
		testMethod(3205, 5.2457, 1.9286, 0, -0.5041, 1.7565, 2.5594);
		testMethod(3210, 5.2553, 1.9286, 0, -0.4953, 1.7683, 2.3599);
		testMethod(3215, 5.265, 1.9286, 0, -0.4864, 1.7791, 2.1604);
		testMethod(3220, 5.2746, 1.9286, 0, -0.4775, 1.7889, 1.961);
		testMethod(3225, 5.2843, 1.9286, 0, -0.4685, 1.7978, 1.7615);
		testMethod(3230, 5.2939, 1.9286, 0, -0.4595, 1.8056, 1.562);
		testMethod(3235, 5.3036, 1.9286, 0, -0.4505, 1.8124, 1.3625);
		testMethod(3240, 5.3132, 1.9286, 0, -0.4414, 1.8182, 1.1631);
		testMethod(3245, 5.3228, 1.9286, 0, -0.4323, 1.823, 0.9636);
		testMethod(3250, 5.3325, 1.9286, 0, -0.4232, 1.8268, 0.7641);
		testMethod(3255, 5.3421, 1.9286, 0, -0.414, 1.8297, 0.5647);
		testMethod(3260, 5.3518, 1.9286, 0, -0.4049, 1.8315, 0.3652);
		testMethod(3265, 5.3614, 1.9286, 0, -0.3957, 1.8323, 0.1657);
		testMethod(3270, 5.3711, 1.9286, 0, -0.3865, 1.8321, -0.034);
		testMethod(3275, 5.3807, 1.9286, 0, -0.3774, 1.831, -0.2336);
		testMethod(3280, 5.3903, 1.9286, 0, -0.3682, 1.8288, -0.4331);
		testMethod(3285, 5.4, 1.9286, 0, -0.3591, 1.8256, -0.6325);
		testMethod(3290, 5.4096, 1.9286, 0, -0.35, 1.8215, -0.832);
		testMethod(3295, 5.4193, 1.9286, 0, -0.3409, 1.8163, -1.0315);
		testMethod(3300, 5.4289, 1.9286, 0, -0.3318, 1.8102, -1.231);
		testMethod(3305, 5.4386, 1.9286, 0, -0.3228, 1.803, -1.4304);
		testMethod(3310, 5.4482, 1.9286, 0, -0.3138, 1.7949, -1.6299);
		testMethod(3315, 5.4578, 1.9286, 0, -0.3048, 1.7857, -1.8294);
		testMethod(3320, 5.4675, 1.9286, 0, -0.2959, 1.7756, -2.0288);
		testMethod(3325, 5.4771, 1.9286, 0, -0.2871, 1.7644, -2.2283);
		testMethod(3330, 5.4868, 1.9286, 0, -0.2783, 1.7523, -2.4278);
		testMethod(3335, 5.4964, 1.9286, 0, -0.2696, 1.7392, -2.6273);
		testMethod(3340, 5.5061, 1.9286, 0, -0.2609, 1.725, -2.8267);
		testMethod(3345, 5.5157, 1.9286, 0, -0.2523, 1.7099, -3.0262);
		testMethod(3350, 5.5253, 1.9286, 0, -0.2438, 1.6938, -3.2257);
		testMethod(3355, 5.535, 1.9286, 0, -0.2354, 1.6766, -3.4252);
		testMethod(3360, 5.5446, 1.9286, 0, -0.227, 1.6585, -3.6246);
		testMethod(3365, 5.5543, 1.9286, 0, -0.2188, 1.6394, -3.8241);
		testMethod(3370, 5.5639, 1.9286, 0, -0.2106, 1.6193, -4.0236);
		testMethod(3375, 5.5736, 1.9286, 0, -0.2026, 1.5982, -4.2231);
		testMethod(3380, 5.5832, 1.9286, 0, -0.1947, 1.5761, -4.4225);
		testMethod(3385, 5.5928, 1.9286, 0, -0.1868, 1.5529, -4.622);
		testMethod(3390, 5.6025, 1.9286, 0, -0.1791, 1.5288, -4.8215);
		testMethod(3395, 5.6121, 1.9286, 0, -0.1716, 1.5037, -5.0209);
		testMethod(3400, 5.6218, 1.9286, 0, -0.1641, 1.4776, -5.2204);
		testMethod(3405, 5.6314, 1.9286, 0, -0.1568, 1.4505, -5.4199);
		testMethod(3410, 5.6411, 1.9286, 0, -0.1496, 1.4224, -5.6194);
		testMethod(3415, 5.6507, 1.9286, 0, -0.1426, 1.3933, -5.8188);
		testMethod(3420, 5.6603, 1.9286, 0, -0.1357, 1.3632, -6.0183);
		testMethod(3425, 5.67, 1.9286, 0, -0.1289, 1.3322, -6.2178);
		testMethod(3430, 5.6796, 1.9286, 0, -0.1223, 1.3001, -6.4173);
		testMethod(3435, 5.6893, 1.9286, 0, -0.1159, 1.267, -6.6167);
		testMethod(3440, 5.6989, 1.9286, 0, -0.1097, 1.2329, -6.8162);
		testMethod(3445, 5.7086, 1.9286, 0, -0.1036, 1.1978, -7.0157);
		testMethod(3450, 5.7182, 1.9286, 0, -0.0977, 1.1618, -7.2152);
		testMethod(3455, 5.7278, 1.9286, 0, -0.092, 1.1247, -7.4146);
		testMethod(3460, 5.7375, 1.9286, 0, -0.0865, 1.0866, -7.6141);
		testMethod(3465, 5.7471, 1.9286, 0, -0.0811, 1.0475, -7.8136);
		testMethod(3470, 5.7568, 1.9286, 0, -0.076, 1.0075, -8.013);
		testMethod(3475, 5.7664, 1.9286, 0, -0.0711, 0.9664, -8.2125);
		testMethod(3480, 5.7761, 1.9286, 0, -0.0663, 0.9244, -8.412);
		testMethod(3485, 5.7857, 1.9286, 0, -0.0618, 0.8819, -8.4956);
		testMethod(3490, 5.7953, 1.9286, 0, -0.0575, 0.8404, -8.2886);
		testMethod(3495, 5.805, 1.9286, 0, -0.0534, 0.8, -8.0891);
		testMethod(3500, 5.8146, 1.9286, 0, -0.0495, 0.7605, -7.8897);
		testMethod(3505, 5.8243, 1.9286, 0, -0.0458, 0.7221, -7.6902);
		testMethod(3510, 5.8339, 1.9286, 0, -0.0423, 0.6846, -7.4907);
		testMethod(3515, 5.8436, 1.9286, 0, -0.0389, 0.6482, -7.2912);
		testMethod(3520, 5.8532, 1.9286, 0, -0.0358, 0.6127, -7.0918);
		testMethod(3525, 5.8628, 1.9286, 0, -0.0328, 0.5783, -6.8923);
		testMethod(3530, 5.8725, 1.9286, 0, -0.03, 0.5448, -6.6928);
		testMethod(3535, 5.8821, 1.9286, 0, -0.0274, 0.5123, -6.4933);
		testMethod(3540, 5.8918, 1.9286, 0, -0.0249, 0.4809, -6.2939);
		testMethod(3545, 5.9014, 1.9286, 0, -0.0226, 0.4504, -6.0944);
		testMethod(3550, 5.9111, 1.9286, 0, -0.0204, 0.4209, -5.8949);
		testMethod(3555, 5.9207, 1.9286, 0, -0.0183, 0.3924, -5.6954);
		testMethod(3560, 5.9303, 1.9286, 0, -0.0165, 0.365, -5.496);
		testMethod(3565, 5.94, 1.9286, 0, -0.0147, 0.3385, -5.2965);
		testMethod(3570, 5.9496, 1.9286, 0, -0.0131, 0.313, -5.097);
		testMethod(3575, 5.9593, 1.9286, 0, -0.0116, 0.2885, -4.8976);
		testMethod(3580, 5.9689, 1.9286, 0, -0.0102, 0.265, -4.6981);
		testMethod(3585, 5.9786, 1.9286, 0, -0.0089, 0.2425, -4.4986);
		testMethod(3590, 5.9882, 1.9286, 0, -0.0078, 0.221, -4.2991);
		testMethod(3595, 5.9978, 1.9286, 0, -0.0067, 0.2005, -4.0997);
		testMethod(3600, 6.0075, 1.9286, 0, -0.0057, 0.181, -3.9002);
		testMethod(3605, 6.0171, 1.9286, 0, -0.0049, 0.1625, -3.7007);
		testMethod(3610, 6.0268, 1.9286, 0, -0.0041, 0.145, -3.5012);
		testMethod(3615, 6.0364, 1.9286, 0, -0.0034, 0.1285, -3.3018);
		testMethod(3620, 6.0461, 1.9286, 0, -0.0028, 0.113, -3.1023);
		testMethod(3625, 6.0557, 1.9286, 0, -0.0023, 0.0985, -2.9028);
		testMethod(3630, 6.0653, 1.9286, 0, -0.0018, 0.085, -2.7033);
		testMethod(3635, 6.075, 1.9286, 0, -0.0015, 0.0724, -2.5039);
		testMethod(3640, 6.0846, 1.9286, 0, -0.0011, 0.0609, -2.3044);
		testMethod(3645, 6.0943, 1.9286, 0, -0.0008, 0.0504, -2.1049);
		testMethod(3650, 6.1039, 1.9286, 0, -0.0006, 0.0409, -1.9055);
		testMethod(3655, 6.1136, 1.9286, 0, -0.0004, 0.0323, -1.706);
		testMethod(3660, 6.1232, 1.9286, 0, -0.0003, 0.0248, -1.5065);
		testMethod(3665, 6.1328, 1.9286, 0, -0.0002, 0.0183, -1.307);
		testMethod(3670, 6.1425, 1.9286, 0, -0.0001, 0.0127, -1.1076);
		testMethod(3675, 6.1521, 1.9286, 0, -0.0001, 0.0082, -0.9081);
		testMethod(3680, 6.1618, 1.9286, 0, -0, 0.0046, -0.7086);
		testMethod(3685, 6.1714, 1.9286, 0, -0, 0.0021, -0.5091);
		testMethod(3690, 6.1811, 1.9286, 0, -0, 0.0006, -0.3097);
		testMethod(3695, 6.1907, 1.9286, 0, -0, 0, -0.1102);
		testMethod(3700, 6.2003, 1.9286, 0, 0, 0, -0.0003);
		testMethod(3705, 6.21, 1.9286, 0, 0, 0, 0);
		testMethod(3710, 6.2196, 1.9286, 0, 0, 0, 0);
		testMethod(3715, 6.2293, 1.9286, 0, 0, 0, 0);
		testMethod(3720, 6.2389, 1.9286, 0, 0, 0, 0);
		testMethod(3725, 6.2486, 1.9286, 0, 0, 0, 0);
		testMethod(3730, 6.2582, 1.9286, 0, 0, 0, 0);
		testMethod(3735, 6.2678, 1.9286, 0, 0, 0, 0);
		testMethod(3740, 6.2775, 1.9286, 0, 0, 0, 0);
		testMethod(3745, 6.2871, 1.9286, 0, 0, 0, 0);
		testMethod(3750, 6.2968, 1.9286, 0, 0, 0, 0);
		testMethod(3755, 6.3064, 1.9286, 0, 0, 0, 0);
		testMethod(3760, 6.3161, 1.9286, 0, 0, 0, 0);
		testMethod(3765, 6.3257, 1.9286, 0, 0, 0, 0);
		testMethod(3770, 6.3353, 1.9286, 0, 0, 0, 0);
		testMethod(3775, 6.345, 1.9286, 0, 0, 0, 0);
		testMethod(3780, 6.3546, 1.9286, 0, 0, 0, 0);
		testMethod(3785, 6.3643, 1.9286, 0, 0, 0, 0);
		testMethod(3790, 6.3739, 1.9286, 0, 0, 0, 0);
		testMethod(3795, 6.3836, 1.9286, 0, 0, 0, 0);
		testMethod(3800, 6.3932, 1.9286, 0, 0, 0, 0);
		testMethod(3805, 6.4028, 1.9286, 0, 0, 0, 0);
		testMethod(3810, 6.4125, 1.9286, 0, 0, 0, 0);
		testMethod(3815, 6.4221, 1.9286, 0, 0, 0, 0);
		testMethod(3820, 6.4318, 1.9286, 0, 0, 0, 0);
		testMethod(3825, 6.4414, 1.9286, 0, 0, 0, 0);
		testMethod(3830, 6.4511, 1.9286, 0, 0, 0, 0);
		testMethod(3835, 6.4607, 1.9286, 0, 0, 0, 0);
		testMethod(3840, 6.4703, 1.9286, 0, 0, 0, 0);
		testMethod(3845, 6.48, 1.9286, 0, 0, 0, 0);
		testMethod(3850, 6.4896, 1.9286, 0, 0, 0, 0);
		testMethod(3855, 6.4993, 1.9286, 0, 0, 0, 0);
		testMethod(3860, 6.5089, 1.9286, 0, 0, 0, 0);
		testMethod(3865, 6.5186, 1.9286, 0, 0, 0, 0);
		testMethod(3870, 6.5282, 1.9286, 0, 0, 0, 0);
		testMethod(3875, 6.5378, 1.9286, 0, 0, 0, 0);
		testMethod(3880, 6.5475, 1.9286, 0, 0, 0, 0);
		testMethod(3885, 6.5571, 1.9286, 0, 0, 0, 0);
		testMethod(3890, 6.5668, 1.9286, 0, 0, 0, 0);
		testMethod(3895, 6.5764, 1.9286, 0, 0, 0, 0);
		testMethod(3900, 6.5861, 1.9286, 0, 0, 0, 0);
		testMethod(3905, 6.5957, 1.9286, 0, 0, 0, 0);
		testMethod(3910, 6.6053, 1.9286, 0, 0, 0, 0);
		testMethod(3915, 6.615, 1.9286, 0, 0, 0, 0);
		testMethod(3920, 6.6246, 1.9286, 0, 0, 0, 0);
		testMethod(3925, 6.6343, 1.9286, 0, 0, 0, 0);
		testMethod(3930, 6.6439, 1.9286, 0, 0, 0, 0);
		testMethod(3935, 6.6536, 1.9286, 0, 0, 0, 0);
		testMethod(3940, 6.6632, 1.9286, 0, 0, 0, 0);
		testMethod(3945, 6.6728, 1.9286, 0, 0, 0, 0);
		testMethod(3950, 6.6825, 1.9286, 0, 0, 0, 0);
		testMethod(3955, 6.6921, 1.9286, 0, 0, 0, 0);
		testMethod(3960, 6.7018, 1.9286, 0, 0, 0, 0);
		testMethod(3965, 6.7114, 1.9286, 0, 0, 0, 0);
		testMethod(3970, 6.7211, 1.9286, 0, 0, 0, 0);
		testMethod(3975, 6.7307, 1.9286, 0, 0, 0, 0);
		testMethod(3980, 6.7403, 1.9286, 0, 0, 0, 0);
		testMethod(3985, 6.75, 1.9286, 0, 0, 0, 0);
		testMethod(3990, 6.7596, 1.9286, 0, 0, 0, 0);
		testMethod(3995, 6.7693, 1.9286, 0, 0, 0, 0);
		testMethod(4000, 6.7789, 1.9286, 0, 0, 0, 0);
		testMethod(4005, 6.7886, 1.9286, 0, 0, 0, 0);
		testMethod(4010, 6.7982, 1.9286, 0, 0, 0, 0);
		testMethod(4015, 6.8078, 1.9286, 0, 0, 0, 0);
		testMethod(4020, 6.8175, 1.9286, 0, 0, 0, 0);
		testMethod(4025, 6.8271, 1.9286, 0, 0, 0, 0);
		testMethod(4030, 6.8368, 1.9286, 0, 0, 0, 0);
		testMethod(4035, 6.8464, 1.9286, 0, 0, 0, 0);
		testMethod(4040, 6.8561, 1.9286, 0, 0, 0, 0);
		testMethod(4045, 6.8657, 1.9286, 0, 0, 0, 0);
		testMethod(4050, 6.8753, 1.9286, 0, 0, 0, 0);
		testMethod(4055, 6.885, 1.9286, 0, 0, 0, 0);
		testMethod(4060, 6.8946, 1.9286, 0, 0, 0, 0);
		testMethod(4065, 6.9043, 1.9286, 0, 0, 0, 0);
		testMethod(4070, 6.9139, 1.9286, 0, 0, 0, 0);
		testMethod(4075, 6.9236, 1.9286, 0, 0, 0, 0);
		testMethod(4080, 6.9332, 1.9286, 0, 0, 0, 0);
		testMethod(4085, 6.9428, 1.9286, 0, 0, 0, 0);
		testMethod(4090, 6.9525, 1.9286, 0, 0, 0, 0);
		testMethod(4095, 6.9621, 1.9286, 0, 0, 0, 0);
		testMethod(4100, 6.9718, 1.9286, 0, 0, 0, 0);
		testMethod(4105, 6.9814, 1.9286, 0, 0, 0, 0);
		testMethod(4110, 6.9911, 1.9286, 0, 0, 0, 0);
		testMethod(4115, 7.0007, 1.9286, 0, 0, 0, 0);
		testMethod(4120, 7.0103, 1.9286, 0, 0, 0, 0);
		testMethod(4125, 7.02, 1.9286, 0, 0, 0, 0);
		testMethod(4130, 7.0296, 1.9286, 0, 0, 0, 0);
		testMethod(4135, 7.0393, 1.9286, 0, 0, 0, 0);
		testMethod(4140, 7.0489, 1.9286, 0, 0, 0, 0);
		testMethod(4145, 7.0586, 1.9286, 0, 0, 0, 0);
		testMethod(4150, 7.0682, 1.9286, 0, 0, 0, 0);
		testMethod(4155, 7.0778, 1.9286, 0, 0, 0, 0);
		testMethod(4160, 7.0875, 1.9286, 0, 0, 0, 0);
		testMethod(4165, 7.0971, 1.9286, 0, 0, 0, 0);
		testMethod(4170, 7.1068, 1.9286, 0, 0, 0, 0);
		testMethod(4175, 7.1164, 1.9286, 0, 0, 0, 0);
		testMethod(4180, 7.1261, 1.9286, 0, 0, 0, 0);
		testMethod(4185, 7.1357, 1.9286, 0, 0, 0, 0);
		testMethod(4190, 7.1453, 1.9286, 0, 0, 0, 0);
		testMethod(4195, 7.155, 1.9286, 0, 0, 0, 0);
		testMethod(4200, 7.1646, 1.9286, 0, 0, 0, 0);
		testMethod(4205, 7.1743, 1.9286, 0, 0, 0, 0);
		testMethod(4210, 7.1839, 1.9286, 0, 0, 0, 0);
		testMethod(4215, 7.1936, 1.9286, 0, 0, 0, 0);
		testMethod(4220, 7.2032, 1.9286, 0, 0, 0, 0);
		testMethod(4225, 7.2128, 1.9286, 0, 0, 0, 0);
		testMethod(4230, 7.2225, 1.9286, 0, 0, 0, 0);
		testMethod(4235, 7.2321, 1.9286, 0, 0, 0, 0);
		testMethod(4240, 7.2418, 1.9286, 0, 0, 0, 0);
		testMethod(4245, 7.2514, 1.9286, 0, 0, 0, 0);
		testMethod(4250, 7.2611, 1.9286, 0, 0, 0, 0);
		testMethod(4255, 7.2707, 1.9286, 0, 0, 0, 0);
		testMethod(4260, 7.2803, 1.9286, 0, 0, 0, 0);
		testMethod(4265, 7.29, 1.9286, 0, 0, 0, 0);
		testMethod(4270, 7.2996, 1.9286, 0, 0, 0, 0);
		testMethod(4275, 7.3093, 1.9286, 0, 0, 0, 0);
		testMethod(4280, 7.3189, 1.9286, 0, 0, 0, 0);
		testMethod(4285, 7.3286, 1.9286, 0, 0, 0, 0);
		testMethod(4290, 7.3382, 1.9286, 0, 0, 0, 0);
		testMethod(4295, 7.3478, 1.9286, 0, 0, 0, 0);
		testMethod(4300, 7.3575, 1.9286, 0, 0, 0, 0);
		testMethod(4305, 7.3671, 1.9286, 0, 0, 0, 0);
		testMethod(4310, 7.3768, 1.9286, 0, 0, 0, 0);
		testMethod(4315, 7.3864, 1.9286, 0, 0, 0, 0);
		testMethod(4320, 7.3961, 1.9286, 0, 0, 0, 0);
		testMethod(4325, 7.4057, 1.9286, 0, 0, 0, 0);
		testMethod(4330, 7.4153, 1.9286, 0, 0, 0, 0);
		testMethod(4335, 7.425, 1.9286, 0, 0, 0, 0);
		testMethod(4340, 7.4346, 1.9286, 0, 0, 0, 0);
		testMethod(4345, 7.4443, 1.9286, 0, 0, 0, 0);
		testMethod(4350, 7.4539, 1.9286, 0, 0, 0, 0);
		testMethod(4355, 7.4636, 1.9286, 0, 0, 0, 0);
		testMethod(4360, 7.4732, 1.9286, 0, 0, 0, 0);
		testMethod(4365, 7.4828, 1.9286, 0, 0, 0, 0);
		testMethod(4370, 7.4925, 1.9286, 0, 0, 0, 0);
		testMethod(4375, 7.5021, 1.9286, 0, 0, 0, 0);
		testMethod(4380, 7.5118, 1.9286, 0, 0, 0, 0);
		testMethod(4385, 7.5214, 1.9286, 0, 0, 0, 0);
		testMethod(4390, 7.5311, 1.9286, 0, 0, 0, 0);
		testMethod(4395, 7.5407, 1.9286, 0, 0, 0, 0);
		testMethod(4400, 7.5503, 1.9286, 0, 0, 0, 0);
		testMethod(4405, 7.56, 1.9286, 0, 0, 0, 0);
		testMethod(4410, 7.5696, 1.9286, 0, 0, 0, 0);
		testMethod(4415, 7.5793, 1.9286, 0, 0, 0, 0);
		testMethod(4420, 7.5889, 1.9286, 0, 0, 0, 0);
		testMethod(4425, 7.5986, 1.9286, 0, 0, 0, 0);
		testMethod(4430, 7.6082, 1.9286, 0, 0, 0, 0);
		testMethod(4435, 7.6178, 1.9286, 0, 0, 0, 0);
		testMethod(4440, 7.6275, 1.9286, 0, 0, 0, 0);
		testMethod(4445, 7.6371, 1.9286, 0, 0, 0, 0);
		testMethod(4450, 7.6468, 1.9286, 0, 0, 0, 0);
		testMethod(4455, 7.6564, 1.9286, 0, 0, 0, 0);
		testMethod(4460, 7.6661, 1.9286, 0, 0, 0, 0);
		testMethod(4465, 7.6757, 1.9286, 0, 0, 0, 0);
		testMethod(4470, 7.6853, 1.9286, 0, 0, 0, 0);
		testMethod(4475, 7.695, 1.9286, 0, 0, 0, 0);
		testMethod(4480, 7.7046, 1.9286, 0, 0, 0, 0);
		testMethod(4485, 7.7143, 1.9286, 0, 0, 0, 0);
		testMethod(4490, 7.7239, 1.9286, 0, 0, 0, 0);
		testMethod(4495, 7.7336, 1.9286, 0, 0, 0, 0);
		testMethod(4500, 7.7432, 1.9286, 0, 0, 0, 0);
		testMethod(4505, 7.7528, 1.9286, 0, 0, 0, 0);
		testMethod(4510, 7.7625, 1.9286, 0, 0, 0, 0);
		testMethod(4515, 7.7721, 1.9286, 0, 0, 0, 0);
		testMethod(4520, 7.7818, 1.9286, 0, 0, 0, 0);
		testMethod(4525, 7.7914, 1.9286, 0, 0, 0, 0);
		testMethod(4530, 7.8011, 1.9286, 0, 0, 0, 0);
		testMethod(4535, 7.8107, 1.9286, 0, 0, 0, 0);
		testMethod(4540, 7.8203, 1.9286, 0, 0, 0, 0);
		testMethod(4545, 7.83, 1.9286, 0, 0, 0, 0);
		testMethod(4550, 7.8396, 1.9286, 0, 0, 0, 0);
		testMethod(4555, 7.8493, 1.9286, 0, 0, 0, 0);
		testMethod(4560, 7.8589, 1.9286, 0, 0, 0, 0);
		testMethod(4565, 7.8686, 1.9286, 0, 0, 0, 0);
		testMethod(4570, 7.8782, 1.9286, 0, 0, 0, 0);
		testMethod(4575, 7.8878, 1.9286, 0, 0, 0, 0);
		testMethod(4580, 7.8975, 1.9286, 0, 0, 0, 0);
		testMethod(4585, 7.9071, 1.9286, 0, 0, 0, 0);
		testMethod(4590, 7.9168, 1.9286, 0, 0, 0, 0);
		testMethod(4595, 7.9264, 1.9286, 0, 0, 0, 0);
		testMethod(4600, 7.9361, 1.9286, 0, 0, 0, 0);
		testMethod(4605, 7.9457, 1.9286, 0, 0, 0, 0);
		testMethod(4610, 7.9553, 1.9286, 0, 0, 0, 0);
		testMethod(4615, 7.965, 1.9286, 0, 0, 0, 0);
		testMethod(4620, 7.9746, 1.9286, 0, 0, 0, 0);
		testMethod(4625, 7.9843, 1.9286, 0, 0, 0, 0);
		testMethod(4630, 7.9939, 1.9286, 0, 0, 0, 0);
		testMethod(4635, 8.0036, 1.9286, 0, 0, 0, 0);
		testMethod(4640, 8.0132, 1.9286, 0, 0, 0, 0);
		testMethod(4645, 8.0228, 1.9286, 0, 0, 0, 0);
		testMethod(4650, 8.0325, 1.9286, 0, 0, 0, 0);
		testMethod(4655, 8.0421, 1.9286, 0, 0, 0, 0);
		testMethod(4660, 8.0518, 1.9286, 0, 0, 0, 0);
		testMethod(4665, 8.0614, 1.9286, 0, 0, 0, 0);
		testMethod(4670, 8.0711, 1.9286, 0, 0, 0, 0);
		testMethod(4675, 8.0807, 1.9286, 0, 0, 0, 0);
		testMethod(4680, 8.0903, 1.9286, 0, 0, 0, 0);
		testMethod(4685, 8.1, 1.9286, 0, 0, 0, 0);
		testMethod(4690, 8.1096, 1.9286, 0, 0, 0, 0);
		testMethod(4695, 8.1193, 1.9286, 0, 0, 0, 0);
		testMethod(4700, 8.1289, 1.9286, 0, 0, 0, 0);
		testMethod(4705, 8.1386, 1.9286, 0, 0, 0, 0);
		testMethod(4710, 8.1482, 1.9286, 0, 0, 0, 0);
		testMethod(4715, 8.1578, 1.9286, 0, 0, 0, 0);
		testMethod(4720, 8.1675, 1.9286, 0, 0, 0, 0);
		testMethod(4725, 8.1771, 1.9286, 0, 0, 0, 0);
		testMethod(4730, 8.1868, 1.9286, 0, 0, 0, 0);
		testMethod(4735, 8.1964, 1.9286, 0, 0, 0, 0);
		testMethod(4740, 8.2061, 1.9286, 0, 0, 0, 0);
		testMethod(4745, 8.2157, 1.9286, 0, 0, 0, 0);
		testMethod(4750, 8.2253, 1.9286, 0, 0, 0, 0);
		testMethod(4755, 8.235, 1.9286, 0, 0, 0, 0);
		testMethod(4760, 8.2446, 1.9286, 0, 0, 0, 0);
		testMethod(4765, 8.2543, 1.9286, 0, 0, 0, 0);
		testMethod(4770, 8.2639, 1.9286, 0, 0, 0, 0);
		testMethod(4775, 8.2736, 1.9286, 0, 0, 0, 0);
		testMethod(4780, 8.2832, 1.9286, 0, 0, 0, 0);
		testMethod(4785, 8.2928, 1.9286, 0, 0, 0, 0);
		testMethod(4790, 8.3025, 1.9286, 0, 0, 0, 0);
		testMethod(4795, 8.3121, 1.9286, 0, 0, 0, 0);
		testMethod(4800, 8.3218, 1.9286, 0, 0, 0, 0);
		testMethod(4805, 8.3314, 1.9286, 0, 0, 0, 0);
		testMethod(4810, 8.341, 1.9286, 0, 0, 0, 0);
		testMethod(4815, 8.3507, 1.9286, 0, 0, 0, 0);
		testMethod(4820, 8.3603, 1.9286, 0, 0, 0, 0);
		testMethod(4825, 8.37, 1.9286, 0, 0, 0, 0);
		testMethod(4830, 8.3796, 1.9286, 0, 0, 0, 0);
		testMethod(4835, 8.3893, 1.9286, 0, 0, 0, 0);
		testMethod(4840, 8.3989, 1.9286, 0, 0, 0, 0);
		testMethod(4845, 8.4085, 1.9286, 0, 0, 0, 0);
		testMethod(4850, 8.4182, 1.9286, 0, 0, 0, 0);
		testMethod(4855, 8.4278, 1.9286, 0, 0, 0, 0);
		testMethod(4860, 8.4375, 1.9286, 0, 0, 0, 0);
		testMethod(4865, 8.4471, 1.9286, 0, 0, 0, 0);
		testMethod(4870, 8.4568, 1.9286, 0, 0, 0, 0);
		testMethod(4875, 8.4664, 1.9286, 0, 0, 0, 0);
		testMethod(4880, 8.476, 1.9286, 0, 0, 0, 0);
		testMethod(4885, 8.4857, 1.9286, 0, 0, 0, 0);
		testMethod(4890, 8.4953, 1.9286, 0, 0, 0, 0);
		testMethod(4895, 8.505, 1.9286, 0, 0, 0, 0);
		testMethod(4900, 8.5146, 1.9286, 0, 0, 0, 0);
		testMethod(4905, 8.5243, 1.9286, 0, 0, 0, 0);
		testMethod(4910, 8.5339, 1.9286, 0, 0, 0, 0);
		testMethod(4915, 8.5435, 1.9286, 0, 0, 0, 0);
		testMethod(4920, 8.5532, 1.9286, 0, 0, 0, 0);
		testMethod(4925, 8.5628, 1.9286, 0, 0, 0, 0);
		testMethod(4930, 8.5725, 1.9286, 0, 0, 0, 0);
		testMethod(4935, 8.5821, 1.9286, 0, 0, 0, 0);
		testMethod(4940, 8.5918, 1.9286, 0, 0, 0, 0);
		testMethod(4945, 8.6014, 1.9286, 0, 0, 0, 0);
		testMethod(4950, 8.611, 1.9286, 0, 0, 0, 0);
		testMethod(4955, 8.6207, 1.9286, 0, 0, 0, 0);
		testMethod(4960, 8.6303, 1.9286, 0, 0, 0, 0);
		testMethod(4965, 8.64, 1.9286, 0, 0, 0, 0);
		testMethod(4970, 8.6496, 1.9286, 0, 0, 0, 0);
		testMethod(4975, 8.6593, 1.9286, 0, 0, 0, 0);
		testMethod(4980, 8.6689, 1.9286, 0, 0, 0, 0);
		testMethod(4985, 8.6785, 1.9286, 0, 0, 0, 0);
		testMethod(4990, 8.6882, 1.9286, 0, 0, 0, 0);
		testMethod(4995, 8.6978, 1.9286, 0, 0, 0, 0);
		testMethod(5000, 8.7075, 1.9286, 0, 0, 0, 0);
		testMethod(5005, 8.7171, 1.9286, 0, 0, 0, 0);
		testMethod(5010, 8.7268, 1.9286, 0, 0, 0, 0);
		testMethod(5015, 8.7364, 1.9286, 0, 0, 0, 0);
		testMethod(5020, 8.746, 1.9286, 0, 0, 0, 0);
		testMethod(5025, 8.7557, 1.9286, 0, 0, 0, 0);
		testMethod(5030, 8.7653, 1.9286, 0, 0, 0, 0);
		testMethod(5035, 8.775, 1.9286, 0, 0, 0, 0);
		testMethod(5040, 8.7846, 1.9286, 0, 0, 0, 0);
		testMethod(5045, 8.7943, 1.9286, 0, 0, 0, 0);
		testMethod(5050, 8.8039, 1.9286, 0, 0, 0, 0);
		testMethod(5055, 8.8135, 1.9286, 0, 0, 0, 0);
		testMethod(5060, 8.8232, 1.9286, 0, 0, 0, 0);
		testMethod(5065, 8.8328, 1.9286, 0, 0, 0, 0);
		testMethod(5070, 8.8425, 1.9286, 0, 0, 0, 0);
		testMethod(5075, 8.8521, 1.9286, 0, 0, 0, 0);
		testMethod(5080, 8.8618, 1.9286, 0, 0, 0, 0);
		testMethod(5085, 8.8714, 1.9286, 0, 0, 0, 0);
		testMethod(5090, 8.881, 1.9286, 0, 0, 0, 0);
		testMethod(5095, 8.8907, 1.9286, 0, 0, 0, 0);
		testMethod(5100, 8.9003, 1.9286, 0, 0, 0, 0);
		testMethod(5105, 8.91, 1.9286, 0, 0, 0, 0);
		testMethod(5110, 8.9196, 1.9286, 0, 0, 0, 0);
		testMethod(5115, 8.9293, 1.9286, 0, 0, 0, 0);
		testMethod(5120, 8.9389, 1.9286, 0, 0, 0, 0);
		testMethod(5125, 8.9485, 1.9286, 0, 0, 0, 0);
		testMethod(5130, 8.9582, 1.9286, 0, 0, 0, 0);
		testMethod(5135, 8.9678, 1.9286, 0, 0, 0, 0);
		testMethod(5140, 8.9775, 1.9286, 0, 0, 0, 0);
		testMethod(5145, 8.9871, 1.9286, 0, 0, 0, 0);
		testMethod(5150, 8.9968, 1.9286, 0, 0, 0, 0);
		testMethod(5155, 9.0064, 1.9286, 0, 0, 0, 0);
		testMethod(5160, 9.016, 1.9286, 0, 0, 0, 0);
		testMethod(5165, 9.0257, 1.9286, 0, 0, 0, 0);
		testMethod(5170, 9.0353, 1.9286, 0, 0, 0, 0);
		testMethod(5175, 9.045, 1.9286, 0, 0, 0, 0);
		testMethod(5180, 9.0546, 1.9286, 0, 0, 0, 0);
		testMethod(5185, 9.0643, 1.9286, 0, 0, 0, 0);
		testMethod(5190, 9.0739, 1.9286, 0, 0, 0, 0);
		testMethod(5195, 9.0835, 1.9286, 0, 0, 0, 0);
		testMethod(5200, 9.0932, 1.9286, 0, 0, 0, 0);
		testMethod(5205, 9.1028, 1.9286, 0, 0, 0, 0);
		testMethod(5210, 9.1125, 1.9286, 0, 0, 0, 0);
		testMethod(5215, 9.1221, 1.9286, 0, 0, 0, 0);
		testMethod(5220, 9.1318, 1.9286, 0, 0, 0, 0);
		testMethod(5225, 9.1414, 1.9286, 0, 0, 0, 0);
		testMethod(5230, 9.151, 1.9286, 0, 0, 0, 0);
		testMethod(5235, 9.1607, 1.9286, 0, 0, 0, 0);
		testMethod(5240, 9.1703, 1.9286, 0, 0, 0, 0);
		testMethod(5245, 9.18, 1.9286, 0, 0, 0, 0);
		testMethod(5250, 9.1896, 1.9286, 0, 0, 0, 0);
		testMethod(5255, 9.1993, 1.9286, 0, 0, 0, 0);
		testMethod(5260, 9.2089, 1.9286, 0, 0, 0, 0);
		testMethod(5265, 9.2185, 1.9286, 0, 0, 0, 0);
		testMethod(5270, 9.2282, 1.9286, 0, 0, 0, 0);
		testMethod(5275, 9.2378, 1.9286, 0, 0, 0, 0);
		testMethod(5280, 9.2475, 1.9286, 0, 0, 0, 0);
		testMethod(5285, 9.2571, 1.9286, 0, 0, 0, 0);
		testMethod(5290, 9.2668, 1.9286, 0, 0, 0, 0);
		testMethod(5295, 9.2764, 1.9286, 0, 0, 0, 0);
		testMethod(5300, 9.286, 1.9286, 0, 0, 0, 0);
		testMethod(5305, 9.2957, 1.9286, 0, 0, 0, 0);
		testMethod(5310, 9.3053, 1.9286, 0, 0, 0, 0);
		testMethod(5315, 9.315, 1.9286, 0, 0, 0, 0);
		testMethod(5320, 9.3246, 1.9286, 0, 0, 0, 0);
		testMethod(5325, 9.3343, 1.9286, 0, 0, 0, 0);
		testMethod(5330, 9.3439, 1.9286, 0, 0, 0, 0);
		testMethod(5335, 9.3535, 1.9286, 0, 0, 0, 0);
		testMethod(5340, 9.3632, 1.9286, 0, 0, 0, 0);
		testMethod(5345, 9.3728, 1.9286, 0, 0, 0, 0);
		testMethod(5350, 9.3825, 1.9286, 0, 0, 0, 0);
		testMethod(5355, 9.3921, 1.9286, 0, 0, 0, 0);
		testMethod(5360, 9.4018, 1.9286, 0, 0, 0, 0);
		testMethod(5365, 9.4114, 1.9283, -0.0622, 0, 0, 0);
		testMethod(5370, 9.421, 1.9276, -0.1244, 0, 0, 0);
		testMethod(5375, 9.4307, 1.9267, -0.1866, 0, 0, 0);
		testMethod(5380, 9.4403, 1.9255, -0.2488, 0, 0, 0);
		testMethod(5385, 9.4499, 1.9239, -0.3111, 0, 0, 0);
		testMethod(5390, 9.4595, 1.922, -0.3733, 0, 0, 0);
		testMethod(5395, 9.4692, 1.9199, -0.4355, 0, 0, 0);
		testMethod(5400, 9.4787, 1.9174, -0.4977, 0, 0, 0);
		testMethod(5405, 9.4883, 1.9146, -0.5599, 0, 0, 0);
		testMethod(5410, 9.4979, 1.9115, -0.6221, 0, 0, 0);
		testMethod(5415, 9.5074, 1.908, -0.6843, 0, 0, 0);
		testMethod(5420, 9.517, 1.9043, -0.7465, 0, 0, 0);
		testMethod(5425, 9.5265, 1.9003, -0.8088, 0, 0, 0);
		testMethod(5430, 9.536, 1.8959, -0.871, 0, 0, 0);
		testMethod(5435, 9.5454, 1.8912, -0.9332, 0, 0, 0);
		testMethod(5440, 9.5549, 1.8863, -0.9954, 0, 0, 0);
		testMethod(5445, 9.5643, 1.881, -1.0576, 0, 0, 0);
		testMethod(5450, 9.5737, 1.8754, -1.1198, 0, 0, 0);
		testMethod(5455, 9.5831, 1.8695, -1.182, 0, 0, 0);
		testMethod(5460, 9.5924, 1.8632, -1.2442, 0, 0, 0);
		testMethod(5465, 9.6017, 1.8567, -1.3064, 0, 0, 0);
		testMethod(5470, 9.611, 1.8499, -1.3687, 0, 0, 0);
		testMethod(5475, 9.6202, 1.8427, -1.4309, 0, 0, 0);
		testMethod(5480, 9.6294, 1.8352, -1.4931, 0, 0, 0);
		testMethod(5485, 9.6385, 1.8275, -1.5553, 0, 0, 0);
		testMethod(5490, 9.6477, 1.8194, -1.6175, 0, 0, 0);
		testMethod(5495, 9.6567, 1.811, -1.6797, 0, 0, 0);
		testMethod(5500, 9.6658, 1.8023, -1.7419, 0, 0, 0);
		testMethod(5505, 9.6748, 1.7933, -1.8041, 0, 0, 0);
		testMethod(5510, 9.6837, 1.7839, -1.8664, 0, 0, 0);
		testMethod(5515, 9.6926, 1.7743, -1.9286, 0, 0, 0);
		testMethod(5520, 9.7014, 1.7643, -1.9908, 0, 0, 0);
		testMethod(5525, 9.7102, 1.7541, -2.053, 0, 0, 0);
		testMethod(5530, 9.719, 1.7435, -2.1152, 0, 0, 0);
		testMethod(5535, 9.7277, 1.7326, -2.1774, 0, 0, 0);
		testMethod(5540, 9.7363, 1.7214, -2.2396, 0, 0, 0);
		testMethod(5545, 9.7449, 1.7099, -2.3018, 0, 0, 0);
		testMethod(5550, 9.7534, 1.6981, -2.364, 0, 0, 0);
		testMethod(5555, 9.7619, 1.6859, -2.4263, 0, 0, 0);
		testMethod(5560, 9.7703, 1.6735, -2.4885, 0, 0, 0);
		testMethod(5565, 9.7786, 1.6611, -2.4885, 0, 0, 0);
		testMethod(5570, 9.7869, 1.6486, -2.4885, 0, 0, 0);
		testMethod(5575, 9.7951, 1.6362, -2.4885, 0, 0, 0);
		testMethod(5580, 9.8032, 1.6237, -2.4885, 0, 0, 0);
		testMethod(5585, 9.8113, 1.6113, -2.4885, 0, 0, 0);
		testMethod(5590, 9.8193, 1.5988, -2.4885, 0, 0, 0);
		testMethod(5595, 9.8273, 1.5864, -2.4885, 0, 0, 0);
		testMethod(5600, 9.8352, 1.574, -2.4885, 0, 0, 0);
		testMethod(5605, 9.843, 1.5615, -2.4885, 0, 0, 0);
		testMethod(5610, 9.8508, 1.5491, -2.4885, 0, 0, 0);
		testMethod(5615, 9.8585, 1.5366, -2.4885, 0, 0, 0);
		testMethod(5620, 9.8662, 1.5242, -2.4885, 0, 0, 0);
		testMethod(5625, 9.8738, 1.5117, -2.4885, 0, 0, 0);
		testMethod(5630, 9.8813, 1.4993, -2.4885, 0, 0, 0);
		testMethod(5635, 9.8888, 1.4869, -2.4885, 0, 0, 0);
		testMethod(5640, 9.8962, 1.4744, -2.4885, 0, 0, 0);
		testMethod(5645, 9.9035, 1.462, -2.4885, 0, 0, 0);
		testMethod(5650, 9.9108, 1.4495, -2.4885, 0, 0, 0);
		testMethod(5655, 9.918, 1.4371, -2.4885, 0, 0, 0);
		testMethod(5660, 9.9252, 1.4247, -2.4885, 0, 0, 0);
		testMethod(5665, 9.9323, 1.4122, -2.4885, 0, 0, 0);
		testMethod(5670, 9.9393, 1.3998, -2.4885, 0, 0, 0);
		testMethod(5675, 9.9463, 1.3873, -2.4885, 0, 0, 0);
		testMethod(5680, 9.9532, 1.3749, -2.4885, 0, 0, 0);
		testMethod(5685, 9.96, 1.3624, -2.4885, 0, 0, 0);
		testMethod(5690, 9.9668, 1.35, -2.4885, 0, 0, 0);
		testMethod(5695, 9.9735, 1.3376, -2.4885, 0, 0, 0);
		testMethod(5700, 9.9802, 1.3251, -2.4885, 0, 0, 0);
		testMethod(5705, 9.9868, 1.3127, -2.4885, 0, 0, 0);
		testMethod(5710, 9.9933, 1.3002, -2.4885, 0, 0, 0);
		testMethod(5715, 9.9998, 1.2878, -2.4885, 0, 0, 0);
		testMethod(5720, 10.0062, 1.2753, -2.4885, 0, 0, 0);
		testMethod(5725, 10.0125, 1.2629, -2.4885, 0, 0, 0);
		testMethod(5730, 10.0188, 1.2505, -2.4885, 0, 0, 0);
		testMethod(5735, 10.025, 1.238, -2.4885, 0, 0, 0);
		testMethod(5740, 10.0312, 1.2256, -2.4885, 0, 0, 0);
		testMethod(5745, 10.0373, 1.2131, -2.4885, 0, 0, 0);
		testMethod(5750, 10.0433, 1.2007, -2.4885, 0, 0, 0);
		testMethod(5755, 10.0493, 1.1882, -2.4885, 0, 0, 0);
		testMethod(5760, 10.0552, 1.1758, -2.4885, 0, 0, 0);
		testMethod(5765, 10.061, 1.1634, -2.4885, 0, 0, 0);
		testMethod(5770, 10.0668, 1.1509, -2.4885, 0, 0, 0);
		testMethod(5775, 10.0725, 1.1385, -2.4885, 0, 0, 0);
		testMethod(5780, 10.0782, 1.126, -2.4885, 0, 0, 0);
		testMethod(5785, 10.0838, 1.1136, -2.4885, 0, 0, 0);
		testMethod(5790, 10.0893, 1.1011, -2.4885, 0, 0, 0);
		testMethod(5795, 10.0948, 1.0887, -2.4885, 0, 0, 0);
		testMethod(5800, 10.1002, 1.0763, -2.4885, 0, 0, 0);
		testMethod(5805, 10.1056, 1.0638, -2.4885, 0, 0, 0);
		testMethod(5810, 10.1109, 1.0514, -2.4885, 0, 0, 0);
		testMethod(5815, 10.1161, 1.0389, -2.4885, 0, 0, 0);
		testMethod(5820, 10.1213, 1.0265, -2.4885, 0, 0, 0);
		testMethod(5825, 10.1264, 1.0141, -2.4885, 0, 0, 0);
		testMethod(5830, 10.1314, 1.0016, -2.4885, 0, 0, 0);
		testMethod(5835, 10.1364, 0.9892, -2.4885, 0, 0, 0);
		testMethod(5840, 10.1413, 0.9767, -2.4885, 0, 0, 0);
		testMethod(5845, 10.1461, 0.9643, -2.4885, 0, 0, 0);
		testMethod(5850, 10.1509, 0.9518, -2.4885, 0, 0, 0);
		testMethod(5855, 10.1557, 0.9394, -2.4885, 0, 0, 0);
		testMethod(5860, 10.1603, 0.927, -2.4885, 0, 0, 0);
		testMethod(5865, 10.1649, 0.9145, -2.4885, 0, 0, 0);
		testMethod(5870, 10.1695, 0.9021, -2.4885, 0, 0, 0);
		testMethod(5875, 10.174, 0.8896, -2.4885, 0, 0, 0);
		testMethod(5880, 10.1784, 0.8772, -2.4885, 0, 0, 0);
		testMethod(5885, 10.1827, 0.8647, -2.4885, 0, 0, 0);
		testMethod(5890, 10.187, 0.8523, -2.4885, 0, 0, 0);
		testMethod(5895, 10.1912, 0.8399, -2.4885, 0, 0, 0);
		testMethod(5900, 10.1954, 0.8274, -2.4885, 0, 0, 0);
		testMethod(5905, 10.1995, 0.815, -2.4885, 0, 0, 0);
		testMethod(5910, 10.2036, 0.8025, -2.4885, 0, 0, 0);
		testMethod(5915, 10.2075, 0.7901, -2.4885, 0, 0, 0);
		testMethod(5920, 10.2115, 0.7776, -2.4885, 0, 0, 0);
		testMethod(5925, 10.2153, 0.7652, -2.4885, 0, 0, 0);
		testMethod(5930, 10.2191, 0.7528, -2.4885, 0, 0, 0);
		testMethod(5935, 10.2228, 0.7403, -2.4885, 0, 0, 0);
		testMethod(5940, 10.2265, 0.7279, -2.4885, 0, 0, 0);
		testMethod(5945, 10.2301, 0.7154, -2.4885, 0, 0, 0);
		testMethod(5950, 10.2337, 0.703, -2.4885, 0, 0, 0);
		testMethod(5955, 10.2372, 0.6906, -2.4885, 0, 0, 0);
		testMethod(5960, 10.2406, 0.6781, -2.4885, 0, 0, 0);
		testMethod(5965, 10.2439, 0.6657, -2.4885, 0, 0, 0);
		testMethod(5970, 10.2472, 0.6532, -2.4885, 0, 0, 0);
		testMethod(5975, 10.2505, 0.6408, -2.4885, 0, 0, 0);
		testMethod(5980, 10.2536, 0.6283, -2.4885, 0, 0, 0);
		testMethod(5985, 10.2568, 0.6159, -2.4885, 0, 0, 0);
		testMethod(5990, 10.2598, 0.6035, -2.4885, 0, 0, 0);
		testMethod(5995, 10.2628, 0.591, -2.4885, 0, 0, 0);
		testMethod(6000, 10.2657, 0.5786, -2.4885, 0, 0, 0);
		testMethod(6005, 10.2686, 0.5661, -2.4885, 0, 0, 0);
		testMethod(6010, 10.2714, 0.5537, -2.4885, 0, 0, 0);
		testMethod(6015, 10.2741, 0.5412, -2.4885, 0, 0, 0);
		testMethod(6020, 10.2768, 0.5288, -2.4885, 0, 0, 0);
		testMethod(6025, 10.2794, 0.5164, -2.4885, 0, 0, 0);
		testMethod(6030, 10.2819, 0.5039, -2.4885, 0, 0, 0);
		testMethod(6035, 10.2844, 0.4915, -2.4885, 0, 0, 0);
		testMethod(6040, 10.2869, 0.479, -2.4885, 0, 0, 0);
		testMethod(6045, 10.2892, 0.4666, -2.4885, 0, 0, 0);
		testMethod(6050, 10.2915, 0.4541, -2.4885, 0, 0, 0);
		testMethod(6055, 10.2938, 0.4417, -2.4885, 0, 0, 0);
		testMethod(6060, 10.2959, 0.4293, -2.4885, 0, 0, 0);
		testMethod(6065, 10.2981, 0.4168, -2.4885, 0, 0, 0);
		testMethod(6070, 10.3001, 0.4044, -2.4885, 0, 0, 0);
		testMethod(6075, 10.3021, 0.3919, -2.4885, 0, 0, 0);
		testMethod(6080, 10.304, 0.3795, -2.4885, 0, 0, 0);
		testMethod(6085, 10.3059, 0.367, -2.4885, 0, 0, 0);
		testMethod(6090, 10.3077, 0.3546, -2.4885, 0, 0, 0);
		testMethod(6095, 10.3094, 0.3422, -2.4885, 0, 0, 0);
		testMethod(6100, 10.3111, 0.3297, -2.4885, 0, 0, 0);
		testMethod(6105, 10.3127, 0.3173, -2.4885, 0, 0, 0);
		testMethod(6110, 10.3143, 0.3048, -2.4885, 0, 0, 0);
		testMethod(6115, 10.3158, 0.2924, -2.4885, 0, 0, 0);
		testMethod(6120, 10.3172, 0.28, -2.4885, 0, 0, 0);
		testMethod(6125, 10.3186, 0.2675, -2.4885, 0, 0, 0);
		testMethod(6130, 10.3199, 0.2551, -2.4885, 0, 0, 0);
		testMethod(6135, 10.3211, 0.2426, -2.4885, 0, 0, 0);
		testMethod(6140, 10.3223, 0.2305, -2.4263, 0, 0, 0);
		testMethod(6145, 10.3234, 0.2187, -2.364, 0, 0, 0);
		testMethod(6150, 10.3245, 0.2072, -2.3018, 0, 0, 0);
		testMethod(6155, 10.3255, 0.196, -2.2396, 0, 0, 0);
		testMethod(6160, 10.3265, 0.1851, -2.1774, 0, 0, 0);
		testMethod(6165, 10.3274, 0.1745, -2.1152, 0, 0, 0);
		testMethod(6170, 10.3282, 0.1642, -2.053, 0, 0, 0);
		testMethod(6175, 10.329, 0.1543, -1.9908, 0, 0, 0);
		testMethod(6180, 10.3298, 0.1446, -1.9286, 0, 0, 0);
		testMethod(6185, 10.3305, 0.1353, -1.8664, 0, 0, 0);
		testMethod(6190, 10.3311, 0.1263, -1.8041, 0, 0, 0);
		testMethod(6195, 10.3317, 0.1176, -1.7419, 0, 0, 0);
		testMethod(6200, 10.3323, 0.1092, -1.6797, 0, 0, 0);
		testMethod(6205, 10.3328, 0.1011, -1.6175, 0, 0, 0);
		testMethod(6210, 10.3333, 0.0933, -1.5553, 0, 0, 0);
		testMethod(6215, 10.3338, 0.0859, -1.4931, 0, 0, 0);
		testMethod(6220, 10.3342, 0.0787, -1.4309, 0, 0, 0);
		testMethod(6225, 10.3345, 0.0719, -1.3687, 0, 0, 0);
		testMethod(6230, 10.3349, 0.0653, -1.3064, 0, 0, 0);
		testMethod(6235, 10.3352, 0.0591, -1.2442, 0, 0, 0);
		testMethod(6240, 10.3355, 0.0532, -1.182, 0, 0, 0);
		testMethod(6245, 10.3357, 0.0476, -1.1198, 0, 0, 0);
		testMethod(6250, 10.336, 0.0423, -1.0576, 0, 0, 0);
		testMethod(6255, 10.3362, 0.0373, -0.9954, 0, 0, 0);
		testMethod(6260, 10.3363, 0.0327, -0.9332, 0, 0, 0);
		testMethod(6265, 10.3365, 0.0283, -0.871, 0, 0, 0);
		testMethod(6270, 10.3366, 0.0243, -0.8088, 0, 0, 0);
		testMethod(6275, 10.3367, 0.0205, -0.7465, 0, 0, 0);
		testMethod(6280, 10.3368, 0.0171, -0.6843, 0, 0, 0);
		testMethod(6285, 10.3369, 0.014, -0.6221, 0, 0, 0);
		testMethod(6290, 10.337, 0.0112, -0.5599, 0, 0, 0);
		testMethod(6295, 10.337, 0.0087, -0.4977, 0, 0, 0);
		testMethod(6300, 10.337, 0.0065, -0.4355, 0, 0, 0);
		testMethod(6305, 10.3371, 0.0047, -0.3733, 0, 0, 0);
		testMethod(6310, 10.3371, 0.0031, -0.3111, 0, 0, 0);
		testMethod(6315, 10.3371, 0.0019, -0.2488, 0, 0, 0);
		testMethod(6320, 10.3371, 0.0009, -0.1866, 0, 0, 0);
		testMethod(6325, 10.3371, 0.0003, -0.1244, 0, 0, 0);
		testMethod(6330, 10.3371, 0, -0.0622, 0, 0, 0);
		testMethod(6335, 10.3371, 0, 0, 0, 0, 0);
		testMethod(6335, 10.3371, 0, 0, 0, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}