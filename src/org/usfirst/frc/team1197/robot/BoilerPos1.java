package org.usfirst.frc.team1197.robot;

public class BoilerPos1 extends TorTrajectory {
	public BoilerPos1(boolean isRed) {
		super(1.7947, 1.0385, isRed);	
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0005, 0.0997, 0, 0, 0);
		testMethod(10, 0, 0.0015, 0.1994, 0, 0, 0);
		testMethod(15, 0, 0.003, 0.2991, 0, 0, 0);
		testMethod(20, 0, 0.005, 0.3988, 0, 0, 0);
		testMethod(25, 0.0001, 0.0075, 0.4986, 0, 0, 0);
		testMethod(30, 0.0001, 0.0105, 0.5983, 0, 0, 0);
		testMethod(35, 0.0002, 0.014, 0.698, 0, 0, 0);
		testMethod(40, 0.0003, 0.0179, 0.7977, 0, 0, 0);
		testMethod(45, 0.0004, 0.0224, 0.8974, 0, 0, 0);
		testMethod(50, 0.0005, 0.0274, 0.9971, 0, 0, 0);
		testMethod(55, 0.0006, 0.0329, 1.0968, 0, 0, 0);
		testMethod(60, 0.0008, 0.0389, 1.1965, 0, 0, 0);
		testMethod(65, 0.001, 0.0454, 1.2962, 0, 0, 0);
		testMethod(70, 0.0013, 0.0523, 1.396, 0, 0, 0);
		testMethod(75, 0.0015, 0.0598, 1.4957, 0, 0, 0);
		testMethod(80, 0.0019, 0.0678, 1.5954, 0, 0, 0);
		testMethod(85, 0.0022, 0.0763, 1.6951, 0, 0, 0);
		testMethod(90, 0.0026, 0.0853, 1.7948, 0, 0, 0);
		testMethod(95, 0.0031, 0.0947, 1.8945, 0, 0, 0);
		testMethod(100, 0.0036, 0.1047, 1.9942, 0, 0, 0);
		testMethod(105, 0.0041, 0.1152, 2.0939, 0, 0, 0);
		testMethod(110, 0.0047, 0.1261, 2.1936, 0, 0, 0);
		testMethod(115, 0.0054, 0.1376, 2.2934, 0, 0, 0);
		testMethod(120, 0.0061, 0.1496, 2.3931, 0, 0, 0);
		testMethod(125, 0.0069, 0.162, 2.4928, 0, 0, 0);
		testMethod(130, 0.0077, 0.175, 2.5925, 0, 0, 0);
		testMethod(135, 0.0086, 0.1885, 2.6922, 0, 0, 0);
		testMethod(140, 0.0096, 0.2024, 2.7919, 0, 0, 0);
		testMethod(145, 0.0107, 0.2169, 2.8916, 0, 0, 0);
		testMethod(150, 0.0118, 0.2318, 2.9913, 0, 0, 0);
		testMethod(155, 0.013, 0.2473, 3.091, 0, 0, 0);
		testMethod(160, 0.0143, 0.2632, 3.1908, 0, 0, 0);
		testMethod(165, 0.0156, 0.2797, 3.2905, 0, 0, 0);
		testMethod(170, 0.0171, 0.2966, 3.3902, 0, 0, 0);
		testMethod(175, 0.0186, 0.3141, 3.4899, 0, 0, 0);
		testMethod(180, 0.0202, 0.3315, 3.4899, 0, 0, 0);
		testMethod(185, 0.0219, 0.349, 3.4899, 0, 0, 0);
		testMethod(190, 0.0237, 0.3664, 3.4899, 0, 0, 0);
		testMethod(195, 0.0256, 0.3839, 3.4899, 0, 0, 0);
		testMethod(200, 0.0275, 0.4013, 3.4899, 0, 0, 0);
		testMethod(205, 0.0296, 0.4188, 3.4899, 0, 0, 0);
		testMethod(210, 0.0317, 0.4362, 3.4899, 0, 0, 0);
		testMethod(215, 0.0339, 0.4537, 3.4899, 0, 0, 0);
		testMethod(220, 0.0363, 0.4711, 3.4899, 0, 0, 0);
		testMethod(225, 0.0387, 0.4886, 3.4899, 0, 0, 0);
		testMethod(230, 0.0411, 0.506, 3.4899, 0, 0, 0);
		testMethod(235, 0.0437, 0.5235, 3.4899, 0, 0, 0);
		testMethod(240, 0.0464, 0.5409, 3.4899, 0, 0, 0);
		testMethod(245, 0.0491, 0.5584, 3.4899, 0, 0, 0);
		testMethod(250, 0.052, 0.5758, 3.4899, 0, 0, 0);
		testMethod(255, 0.0549, 0.5933, 3.4899, 0, 0, 0);
		testMethod(260, 0.0579, 0.6107, 3.4899, 0, 0, 0);
		testMethod(265, 0.061, 0.6282, 3.4899, 0, 0, 0);
		testMethod(270, 0.0642, 0.6456, 3.4899, 0, 0, 0);
		testMethod(275, 0.0674, 0.6631, 3.4899, 0, 0, 0);
		testMethod(280, 0.0708, 0.6805, 3.4899, 0, 0, 0);
		testMethod(285, 0.0742, 0.698, 3.4899, 0, 0, 0);
		testMethod(290, 0.0778, 0.7154, 3.4899, 0, 0, 0);
		testMethod(295, 0.0814, 0.7329, 3.4899, 0, 0, 0);
		testMethod(300, 0.0851, 0.7503, 3.4899, 0, 0, 0);
		testMethod(305, 0.0889, 0.7678, 3.4899, 0, 0, 0.0069);
		testMethod(310, 0.0928, 0.7852, 3.4899, 0, 0.0001, 0.0204);
		testMethod(315, 0.0968, 0.8027, 3.4899, 0, 0.0003, 0.0356);
		testMethod(320, 0.1008, 0.8201, 3.4899, 0, 0.0006, 0.0528);
		testMethod(325, 0.105, 0.8376, 3.4899, 0, 0.0009, 0.072);
		testMethod(330, 0.1092, 0.855, 3.4899, 0, 0.0014, 0.0932);
		testMethod(335, 0.1135, 0.8725, 3.4899, 0, 0.002, 0.1166);
		testMethod(340, 0.1179, 0.8899, 3.4899, 0, 0.0027, 0.1424);
		testMethod(345, 0.1224, 0.9074, 3.4899, 0, 0.0036, 0.1706);
		testMethod(350, 0.127, 0.9248, 3.4899, 0.0001, 0.0046, 0.2012);
		testMethod(355, 0.1317, 0.9423, 3.4899, 0.0001, 0.0057, 0.2346);
		testMethod(360, 0.1364, 0.9597, 3.4899, 0.0001, 0.0071, 0.2707);
		testMethod(365, 0.1413, 0.9772, 3.4899, 0.0002, 0.0086, 0.3097);
		testMethod(370, 0.1462, 0.9946, 3.4899, 0.0002, 0.0104, 0.3517);
		testMethod(375, 0.1512, 1.0121, 3.4899, 0.0003, 0.0124, 0.3968);
		testMethod(380, 0.1563, 1.0295, 3.4899, 0.0003, 0.0146, 0.4452);
		testMethod(385, 0.1615, 1.047, 3.4899, 0.0004, 0.0171, 0.4969);
		testMethod(390, 0.1668, 1.0644, 3.4899, 0.0005, 0.0198, 0.5522);
		testMethod(395, 0.1721, 1.0819, 3.4899, 0.0006, 0.0229, 0.6111);
		testMethod(400, 0.1776, 1.0993, 3.4899, 0.0007, 0.0263, 0.6738);
		testMethod(405, 0.1831, 1.1168, 3.4899, 0.0009, 0.03, 0.7405);
		testMethod(410, 0.1888, 1.1342, 3.4899, 0.001, 0.034, 0.8112);
		testMethod(415, 0.1945, 1.1517, 3.4899, 0.0012, 0.0385, 0.8861);
		testMethod(420, 0.2003, 1.1691, 3.4899, 0.0014, 0.0433, 0.9653);
		testMethod(425, 0.2062, 1.1866, 3.4899, 0.0017, 0.0485, 1.049);
		testMethod(430, 0.2121, 1.204, 3.4899, 0.0019, 0.0542, 1.1374);
		testMethod(435, 0.2182, 1.2215, 3.4899, 0.0022, 0.0604, 1.2305);
		testMethod(440, 0.2244, 1.2389, 3.4899, 0.0025, 0.067, 1.3286);
		testMethod(445, 0.2306, 1.2564, 3.4899, 0.0029, 0.0742, 1.4318);
		testMethod(450, 0.2369, 1.2738, 3.4899, 0.0033, 0.0819, 1.5403);
		testMethod(455, 0.2433, 1.2913, 3.4899, 0.0037, 0.0901, 1.6542);
		testMethod(460, 0.2498, 1.3087, 3.4899, 0.0042, 0.099, 1.7736);
		testMethod(465, 0.2564, 1.3262, 3.4899, 0.0047, 0.1085, 1.8988);
		testMethod(470, 0.2631, 1.3436, 3.4899, 0.0052, 0.1187, 2.0299);
		testMethod(475, 0.2699, 1.3611, 3.4899, 0.0059, 0.1295, 2.1671);
		testMethod(480, 0.2767, 1.3785, 3.4899, 0.0065, 0.141, 2.3105);
		testMethod(485, 0.2836, 1.396, 3.4899, 0.0073, 0.1533, 2.4604);
		testMethod(490, 0.2907, 1.4134, 3.4899, 0.0081, 0.1664, 2.6168);
		testMethod(495, 0.2978, 1.4309, 3.4899, 0.0089, 0.1803, 2.78);
		testMethod(500, 0.305, 1.4483, 3.4899, 0.0099, 0.1951, 2.9502);
		testMethod(505, 0.3123, 1.4658, 3.4899, 0.0109, 0.2107, 3.1275);
		testMethod(510, 0.3196, 1.4832, 3.4899, 0.012, 0.2273, 3.3121);
		testMethod(515, 0.3271, 1.5007, 3.4899, 0.0132, 0.2448, 3.5042);
		testMethod(520, 0.3346, 1.5181, 3.4899, 0.0144, 0.2633, 3.7041);
		testMethod(525, 0.3423, 1.5356, 3.4899, 0.0158, 0.2829, 3.9117);
		testMethod(530, 0.35, 1.553, 3.4899, 0.0173, 0.3035, 4.1275);
		testMethod(535, 0.3578, 1.5705, 3.4899, 0.0188, 0.3253, 4.3516);
		testMethod(540, 0.3657, 1.5879, 3.4899, 0.0205, 0.3482, 4.5841);
		testMethod(545, 0.3737, 1.6053, 3.4899, 0.0223, 0.3723, 4.8253);
		testMethod(550, 0.3818, 1.6228, 3.4899, 0.0243, 0.3977, 5.0753);
		testMethod(555, 0.3899, 1.6397, 3.3902, 0.0263, 0.4242, 5.3079);
		testMethod(560, 0.3981, 1.6562, 3.2905, 0.0285, 0.452, 5.5441);
		testMethod(565, 0.4065, 1.6722, 3.1908, 0.0308, 0.4809, 5.7834);
		testMethod(570, 0.4149, 1.6876, 3.091, 0.0333, 0.511, 6.0256);
		testMethod(575, 0.4233, 1.7026, 2.9913, 0.0359, 0.5424, 6.2704);
		testMethod(580, 0.4319, 1.717, 2.8916, 0.0387, 0.5749, 6.5172);
		testMethod(585, 0.4405, 1.731, 2.7919, 0.0417, 0.6088, 6.7658);
		testMethod(590, 0.4492, 1.7444, 2.6922, 0.0448, 0.6439, 7.0157);
		testMethod(595, 0.458, 1.7574, 2.5925, 0.0481, 0.6802, 7.2666);
		testMethod(600, 0.4668, 1.7699, 2.4928, 0.0516, 0.7178, 7.518);
		testMethod(605, 0.4757, 1.7818, 2.3931, 0.0553, 0.7566, 7.7694);
		testMethod(610, 0.4846, 1.7933, 2.2934, 0.0592, 0.7967, 8.0205);
		testMethod(615, 0.4936, 1.8043, 2.1936, 0.0633, 0.8381, 8.2707);
		testMethod(620, 0.5026, 1.8147, 2.0939, 0.0676, 0.8809, 8.5618);
		testMethod(625, 0.5117, 1.8247, 1.9942, 0.0721, 0.9235, 8.5317);
		testMethod(630, 0.5209, 1.8342, 1.8945, 0.0768, 0.9657, 8.4322);
		testMethod(635, 0.5301, 1.8432, 1.7948, 0.0817, 1.0073, 8.3199);
		testMethod(640, 0.5393, 1.8516, 1.6951, 0.0869, 1.0483, 8.1951);
		testMethod(645, 0.5486, 1.8596, 1.5954, 0.0922, 1.0886, 8.058);
		testMethod(650, 0.5579, 1.8671, 1.4957, 0.0978, 1.1281, 7.9091);
		testMethod(655, 0.5673, 1.8741, 1.396, 0.1035, 1.1669, 7.7487);
		testMethod(660, 0.5766, 1.8806, 1.2962, 0.1094, 1.2047, 7.5772);
		testMethod(665, 0.5861, 1.8865, 1.1965, 0.1155, 1.2417, 7.3949);
		testMethod(670, 0.5955, 1.892, 1.0968, 0.1218, 1.2777, 7.2023);
		testMethod(675, 0.605, 1.897, 0.9971, 0.1283, 1.3127, 6.9998);
		testMethod(680, 0.6145, 1.9015, 0.8974, 0.135, 1.3467, 6.7877);
		testMethod(685, 0.624, 1.9055, 0.7977, 0.1418, 1.3795, 6.5666);
		testMethod(690, 0.6335, 1.909, 0.698, 0.1488, 1.4112, 6.3368);
		testMethod(695, 0.6431, 1.912, 0.5983, 0.1559, 1.4417, 6.099);
		testMethod(700, 0.6526, 1.9145, 0.4986, 0.1632, 1.4709, 5.8534);
		testMethod(705, 0.6622, 1.9164, 0.3988, 0.1706, 1.499, 5.6006);
		testMethod(710, 0.6718, 1.9179, 0.2991, 0.1782, 1.5257, 5.3412);
		testMethod(715, 0.6814, 1.9189, 0.1994, 0.1859, 1.551, 5.0755);
		testMethod(720, 0.691, 1.9194, 0.0997, 0.1937, 1.5751, 4.8041);
		testMethod(725, 0.7006, 1.9194, 0, 0.2016, 1.5977, 4.5274);
		testMethod(730, 0.7102, 1.9194, 0, 0.2097, 1.6193, 4.3308);
		testMethod(735, 0.7198, 1.9194, 0, 0.2178, 1.64, 4.1341);
		testMethod(740, 0.7294, 1.9194, 0, 0.226, 1.6597, 3.9375);
		testMethod(745, 0.739, 1.9194, 0, 0.2344, 1.6784, 3.7408);
		testMethod(750, 0.7486, 1.9194, 0, 0.2428, 1.6961, 3.5442);
		testMethod(755, 0.7582, 1.9194, 0, 0.2514, 1.7129, 3.3475);
		testMethod(760, 0.7678, 1.9194, 0, 0.26, 1.7286, 3.1509);
		testMethod(765, 0.7774, 1.9194, 0, 0.2686, 1.7434, 2.9542);
		testMethod(770, 0.787, 1.9194, 0, 0.2774, 1.7572, 2.7575);
		testMethod(775, 0.7966, 1.9194, 0, 0.2862, 1.77, 2.5609);
		testMethod(780, 0.8062, 1.9194, 0, 0.2951, 1.7818, 2.3642);
		testMethod(785, 0.8158, 1.9194, 0, 0.304, 1.7926, 2.1676);
		testMethod(790, 0.8254, 1.9194, 0, 0.313, 1.8025, 1.9709);
		testMethod(795, 0.835, 1.9194, 0, 0.322, 1.8114, 1.7743);
		testMethod(800, 0.8446, 1.9194, 0, 0.3311, 1.8193, 1.5776);
		testMethod(805, 0.8542, 1.9194, 0, 0.3402, 1.8262, 1.381);
		testMethod(810, 0.8637, 1.9194, 0, 0.3494, 1.8321, 1.1843);
		testMethod(815, 0.8733, 1.9194, 0, 0.3586, 1.837, 0.9877);
		testMethod(820, 0.8829, 1.9194, 0, 0.3678, 1.841, 0.791);
		testMethod(825, 0.8925, 1.9194, 0, 0.377, 1.8439, 0.5943);
		testMethod(830, 0.9021, 1.9194, 0, 0.3862, 1.8459, 0.3977);
		testMethod(835, 0.9117, 1.9194, 0, 0.3954, 1.8469, 0.201);
		testMethod(840, 0.9213, 1.9194, 0, 0.4047, 1.8471, 0.0268);
		testMethod(845, 0.9309, 1.9194, 0, 0.4139, 1.8471, 0);
		testMethod(850, 0.9405, 1.9194, 0, 0.4231, 1.8471, 0);
		testMethod(855, 0.9501, 1.9194, 0, 0.4324, 1.8471, 0);
		testMethod(860, 0.9597, 1.9194, 0, 0.4416, 1.8471, 0);
		testMethod(865, 0.9693, 1.9194, 0, 0.4508, 1.8471, 0);
		testMethod(870, 0.9789, 1.9194, 0, 0.4601, 1.8471, 0);
		testMethod(875, 0.9885, 1.9194, 0, 0.4693, 1.8471, 0);
		testMethod(880, 0.9981, 1.9194, 0, 0.4785, 1.8471, 0);
		testMethod(885, 1.0077, 1.9194, 0, 0.4878, 1.8471, 0);
		testMethod(890, 1.0173, 1.9194, 0, 0.497, 1.8471, 0);
		testMethod(895, 1.0269, 1.9194, 0, 0.5062, 1.8471, 0);
		testMethod(900, 1.0365, 1.9194, 0, 0.5155, 1.8471, 0);
		testMethod(905, 1.0461, 1.9194, 0, 0.5247, 1.8471, 0);
		testMethod(910, 1.0557, 1.9194, 0, 0.534, 1.8471, 0);
		testMethod(915, 1.0653, 1.9194, 0, 0.5432, 1.8471, 0);
		testMethod(920, 1.0749, 1.9194, 0, 0.5524, 1.8471, 0);
		testMethod(925, 1.0845, 1.9194, 0, 0.5617, 1.8471, 0);
		testMethod(930, 1.0941, 1.9194, 0, 0.5709, 1.8471, 0);
		testMethod(935, 1.1037, 1.9194, 0, 0.5801, 1.8471, 0);
		testMethod(940, 1.1133, 1.9189, -0.0997, 0.5894, 1.8466, -0.096);
		testMethod(945, 1.1229, 1.9179, -0.1994, 0.5986, 1.8456, -0.1919);
		testMethod(950, 1.1325, 1.9164, -0.2991, 0.6078, 1.8442, -0.2879);
		testMethod(955, 1.142, 1.9145, -0.3988, 0.617, 1.8423, -0.3838);
		testMethod(960, 1.1516, 1.912, -0.4986, 0.6262, 1.8399, -0.4798);
		testMethod(965, 1.1611, 1.909, -0.5983, 0.6354, 1.837, -0.5757);
		testMethod(970, 1.1707, 1.9055, -0.698, 0.6446, 1.8336, -0.6717);
		testMethod(975, 1.1802, 1.9015, -0.7977, 0.6538, 1.8295, -0.8226);
		testMethod(980, 1.1897, 1.897, -0.8974, 0.6629, 1.824, -1.1031);
		testMethod(985, 1.1992, 1.892, -0.9971, 0.672, 1.8171, -1.3863);
		testMethod(990, 1.2086, 1.8865, -1.0968, 0.6811, 1.8088, -1.666);
		testMethod(995, 1.218, 1.8806, -1.1965, 0.6901, 1.799, -1.9419);
		testMethod(1000, 1.2274, 1.8741, -1.2962, 0.6991, 1.788, -2.2133);
		testMethod(1005, 1.2368, 1.8671, -1.396, 0.708, 1.7756, -2.48);
		testMethod(1010, 1.2461, 1.8596, -1.4957, 0.7168, 1.7619, -2.7414);
		testMethod(1015, 1.2554, 1.8516, -1.5954, 0.7256, 1.7469, -2.9971);
		testMethod(1020, 1.2646, 1.8432, -1.6951, 0.7343, 1.7307, -3.2468);
		testMethod(1025, 1.2738, 1.8342, -1.7948, 0.7429, 1.7132, -3.4899);
		testMethod(1030, 1.2829, 1.8247, -1.8945, 0.7514, 1.6946, -3.7261);
		testMethod(1035, 1.292, 1.8147, -1.9942, 0.7598, 1.6748, -3.9551);
		testMethod(1040, 1.3011, 1.8043, -2.0939, 0.7682, 1.6539, -4.1765);
		testMethod(1045, 1.3101, 1.7933, -2.1936, 0.7764, 1.632, -4.3898);
		testMethod(1050, 1.319, 1.7818, -2.2934, 0.7845, 1.609, -4.5949);
		testMethod(1055, 1.3279, 1.7699, -2.3931, 0.7925, 1.585, -4.7914);
		testMethod(1060, 1.3367, 1.7574, -2.4928, 0.8003, 1.5601, -4.9789);
		testMethod(1065, 1.3455, 1.7444, -2.5925, 0.8081, 1.5344, -5.1573);
		testMethod(1070, 1.3542, 1.731, -2.6922, 0.8157, 1.5077, -5.3263);
		testMethod(1075, 1.3628, 1.717, -2.7919, 0.8231, 1.4803, -5.4856);
		testMethod(1080, 1.3713, 1.7026, -2.8916, 0.8305, 1.4521, -5.635);
		testMethod(1085, 1.3798, 1.6876, -2.9913, 0.8377, 1.4232, -5.7744);
		testMethod(1090, 1.3882, 1.6722, -3.091, 0.8447, 1.3937, -5.9036);
		testMethod(1095, 1.3965, 1.6562, -3.1908, 0.8516, 1.3636, -6.0224);
		testMethod(1100, 1.4048, 1.6397, -3.2905, 0.8583, 1.333, -6.1308);
		testMethod(1105, 1.4129, 1.6228, -3.3902, 0.8649, 1.3018, -6.2285);
		testMethod(1110, 1.421, 1.6053, -3.4899, 0.8713, 1.2702, -6.3156);
		testMethod(1115, 1.429, 1.5879, -3.4899, 0.8776, 1.2387, -6.3147);
		testMethod(1120, 1.4369, 1.5705, -3.4899, 0.8837, 1.2071, -6.3077);
		testMethod(1125, 1.4447, 1.553, -3.4899, 0.8897, 1.1757, -6.2948);
		testMethod(1130, 1.4524, 1.5356, -3.4899, 0.8955, 1.1443, -6.2761);
		testMethod(1135, 1.46, 1.5181, -3.4899, 0.9011, 1.113, -6.2519);
		testMethod(1140, 1.4676, 1.5007, -3.4899, 0.9066, 1.0819, -6.2224);
		testMethod(1145, 1.475, 1.4832, -3.4899, 0.912, 1.051, -6.1876);
		testMethod(1150, 1.4824, 1.4658, -3.4899, 0.9171, 1.0202, -6.1479);
		testMethod(1155, 1.4897, 1.4483, -3.4899, 0.9222, 0.9897, -6.1035);
		testMethod(1160, 1.4969, 1.4309, -3.4899, 0.927, 0.9594, -6.0544);
		testMethod(1165, 1.504, 1.4134, -3.4899, 0.9318, 0.9294, -6.001);
		testMethod(1170, 1.511, 1.396, -3.4899, 0.9363, 0.8997, -5.9433);
		testMethod(1175, 1.518, 1.3785, -3.4899, 0.9407, 0.8703, -5.8816);
		testMethod(1180, 1.5248, 1.3611, -3.4899, 0.945, 0.8412, -5.816);
		testMethod(1185, 1.5316, 1.3436, -3.4899, 0.9492, 0.8125, -5.7467);
		testMethod(1190, 1.5383, 1.3262, -3.4899, 0.9532, 0.7841, -5.6739);
		testMethod(1195, 1.5448, 1.3087, -3.4899, 0.957, 0.7561, -5.5977);
		testMethod(1200, 1.5513, 1.2913, -3.4899, 0.9607, 0.7285, -5.5184);
		testMethod(1205, 1.5578, 1.2738, -3.4899, 0.9643, 0.7014, -5.436);
		testMethod(1210, 1.5641, 1.2564, -3.4899, 0.9677, 0.6746, -5.3508);
		testMethod(1215, 1.5703, 1.2389, -3.4899, 0.971, 0.6483, -5.2629);
		testMethod(1220, 1.5765, 1.2215, -3.4899, 0.9742, 0.6224, -5.1725);
		testMethod(1225, 1.5825, 1.204, -3.4899, 0.9773, 0.597, -5.0797);
		testMethod(1230, 1.5885, 1.1866, -3.4899, 0.9802, 0.5721, -4.9847);
		testMethod(1235, 1.5944, 1.1691, -3.4899, 0.983, 0.5477, -4.88);
		testMethod(1240, 1.6002, 1.1517, -3.4899, 0.9857, 0.5244, -4.6641);
		testMethod(1245, 1.6059, 1.1342, -3.4899, 0.9882, 0.502, -4.4859);
		testMethod(1250, 1.6115, 1.1168, -3.4899, 0.9907, 0.4804, -4.3136);
		testMethod(1255, 1.6171, 1.0993, -3.4899, 0.993, 0.4597, -4.147);
		testMethod(1260, 1.6225, 1.0819, -3.4899, 0.9953, 0.4397, -3.9859);
		testMethod(1265, 1.6279, 1.0644, -3.4899, 0.9974, 0.4206, -3.8302);
		testMethod(1270, 1.6332, 1.047, -3.4899, 0.9995, 0.4022, -3.6799);
		testMethod(1275, 1.6384, 1.0295, -3.4899, 1.0015, 0.3845, -3.5347);
		testMethod(1280, 1.6435, 1.0121, -3.4899, 1.0033, 0.3675, -3.3945);
		testMethod(1285, 1.6485, 0.9946, -3.4899, 1.0051, 0.3512, -3.2591);
		testMethod(1290, 1.6534, 0.9772, -3.4899, 1.0068, 0.3356, -3.1286);
		testMethod(1295, 1.6583, 0.9597, -3.4899, 1.0085, 0.3206, -3.0026);
		testMethod(1300, 1.663, 0.9423, -3.4899, 1.0101, 0.3062, -2.8812);
		testMethod(1305, 1.6677, 0.9248, -3.4899, 1.0116, 0.2924, -2.7642);
		testMethod(1310, 1.6723, 0.9074, -3.4899, 1.013, 0.2791, -2.6514);
		testMethod(1315, 1.6768, 0.8899, -3.4899, 1.0143, 0.2664, -2.5427);
		testMethod(1320, 1.6812, 0.8725, -3.4899, 1.0156, 0.2542, -2.4381);
		testMethod(1325, 1.6855, 0.855, -3.4899, 1.0169, 0.2425, -2.3374);
		testMethod(1330, 1.6897, 0.8376, -3.4899, 1.0181, 0.2313, -2.2405);
		testMethod(1335, 1.6939, 0.8201, -3.4899, 1.0192, 0.2206, -2.1473);
		testMethod(1340, 1.6979, 0.8027, -3.4899, 1.0203, 0.2103, -2.0577);
		testMethod(1345, 1.7019, 0.7852, -3.4899, 1.0213, 0.2004, -1.9716);
		testMethod(1350, 1.7058, 0.7678, -3.4899, 1.0223, 0.191, -1.8889);
		testMethod(1355, 1.7096, 0.7503, -3.4899, 1.0232, 0.1819, -1.8094);
		testMethod(1360, 1.7133, 0.7329, -3.4899, 1.0241, 0.1733, -1.7332);
		testMethod(1365, 1.7169, 0.7154, -3.4899, 1.0249, 0.165, -1.66);
		testMethod(1370, 1.7204, 0.698, -3.4899, 1.0258, 0.157, -1.5898);
		testMethod(1375, 1.7239, 0.6805, -3.4899, 1.0265, 0.1494, -1.5226);
		testMethod(1380, 1.7272, 0.6631, -3.4899, 1.0272, 0.1421, -1.4581);
		testMethod(1385, 1.7305, 0.6456, -3.4899, 1.0279, 0.1351, -1.3964);
		testMethod(1390, 1.7337, 0.6282, -3.4899, 1.0286, 0.1284, -1.3373);
		testMethod(1395, 1.7368, 0.6107, -3.4899, 1.0292, 0.122, -1.2808);
		testMethod(1400, 1.7398, 0.5933, -3.4899, 1.0298, 0.1159, -1.2268);
		testMethod(1405, 1.7427, 0.5758, -3.4899, 1.0304, 0.11, -1.1752);
		testMethod(1410, 1.7456, 0.5584, -3.4899, 1.0309, 0.1044, -1.126);
		testMethod(1415, 1.7483, 0.5409, -3.4899, 1.0314, 0.099, -1.079);
		testMethod(1420, 1.751, 0.5235, -3.4899, 1.0319, 0.0938, -1.0342);
		testMethod(1425, 1.7535, 0.506, -3.4899, 1.0324, 0.0889, -0.9915);
		testMethod(1430, 1.756, 0.4886, -3.4899, 1.0328, 0.0841, -0.9509);
		testMethod(1435, 1.7584, 0.4711, -3.4899, 1.0332, 0.0796, -0.9122);
		testMethod(1440, 1.7607, 0.4537, -3.4899, 1.0336, 0.0752, -0.8755);
		testMethod(1445, 1.763, 0.4362, -3.4899, 1.034, 0.071, -0.8406);
		testMethod(1450, 1.7651, 0.4188, -3.4899, 1.0343, 0.0669, -0.8076);
		testMethod(1455, 1.7671, 0.4013, -3.4899, 1.0346, 0.0631, -0.7763);
		testMethod(1460, 1.7691, 0.3839, -3.4899, 1.0349, 0.0593, -0.7468);
		testMethod(1465, 1.771, 0.3664, -3.4899, 1.0352, 0.0557, -0.7188);
		testMethod(1470, 1.7728, 0.349, -3.4899, 1.0355, 0.0523, -0.6925);
		testMethod(1475, 1.7745, 0.3315, -3.4899, 1.0357, 0.0489, -0.6677);
		testMethod(1480, 1.7761, 0.3141, -3.4899, 1.036, 0.0457, -0.6445);
		testMethod(1485, 1.7776, 0.2966, -3.4899, 1.0362, 0.0426, -0.6227);
		testMethod(1490, 1.7791, 0.2797, -3.3902, 1.0364, 0.0397, -0.5883);
		testMethod(1495, 1.7804, 0.2632, -3.2905, 1.0366, 0.0369, -0.5559);
		testMethod(1500, 1.7817, 0.2473, -3.1908, 1.0368, 0.0342, -0.5255);
		testMethod(1505, 1.7829, 0.2318, -3.091, 1.0369, 0.0318, -0.4968);
		testMethod(1510, 1.784, 0.2169, -2.9913, 1.0371, 0.0294, -0.4697);
		testMethod(1515, 1.7851, 0.2024, -2.8916, 1.0372, 0.0272, -0.4441);
		testMethod(1520, 1.786, 0.1885, -2.7919, 1.0374, 0.0251, -0.42);
		testMethod(1525, 1.7869, 0.175, -2.6922, 1.0375, 0.0231, -0.3971);
		testMethod(1530, 1.7878, 0.162, -2.5925, 1.0376, 0.0212, -0.3753);
		testMethod(1535, 1.7886, 0.1496, -2.4928, 1.0377, 0.0195, -0.3547);
		testMethod(1540, 1.7893, 0.1376, -2.3931, 1.0378, 0.0178, -0.335);
		testMethod(1545, 1.7899, 0.1261, -2.2934, 1.0379, 0.0162, -0.3162);
		testMethod(1550, 1.7905, 0.1152, -2.1936, 1.038, 0.0147, -0.2983);
		testMethod(1555, 1.7911, 0.1047, -2.0939, 1.038, 0.0133, -0.2811);
		testMethod(1560, 1.7916, 0.0947, -1.9942, 1.0381, 0.012, -0.2646);
		testMethod(1565, 1.792, 0.0853, -1.8945, 1.0381, 0.0107, -0.2487);
		testMethod(1570, 1.7925, 0.0763, -1.7948, 1.0382, 0.0096, -0.2333);
		testMethod(1575, 1.7928, 0.0678, -1.6951, 1.0382, 0.0085, -0.2184);
		testMethod(1580, 1.7931, 0.0598, -1.5954, 1.0383, 0.0075, -0.204);
		testMethod(1585, 1.7934, 0.0523, -1.4957, 1.0383, 0.0065, -0.1899);
		testMethod(1590, 1.7937, 0.0454, -1.396, 1.0383, 0.0056, -0.1761);
		testMethod(1595, 1.7939, 0.0389, -1.2962, 1.0384, 0.0048, -0.1627);
		testMethod(1600, 1.794, 0.0329, -1.1965, 1.0384, 0.0041, -0.1495);
		testMethod(1605, 1.7942, 0.0274, -1.0968, 1.0384, 0.0034, -0.1365);
		testMethod(1610, 1.7943, 0.0224, -0.9971, 1.0384, 0.0028, -0.1237);
		testMethod(1615, 1.7944, 0.0179, -0.8974, 1.0384, 0.0022, -0.111);
		testMethod(1620, 1.7945, 0.014, -0.7977, 1.0385, 0.0017, -0.0985);
		testMethod(1625, 1.7946, 0.0105, -0.698, 1.0385, 0.0013, -0.086);
		testMethod(1630, 1.7946, 0.0075, -0.5983, 1.0385, 0.0009, -0.0736);
		testMethod(1635, 1.7946, 0.005, -0.4986, 1.0385, 0.0006, -0.0613);
		testMethod(1640, 1.7947, 0.003, -0.3988, 1.0385, 0.0004, -0.049);
		testMethod(1645, 1.7947, 0.0015, -0.2991, 1.0385, 0.0002, -0.0368);
		testMethod(1650, 1.7947, 0.0005, -0.1994, 1.0385, 0.0001, -0.0245);
		testMethod(1655, 1.7947, 0, -0.0997, 1.0385, 0, -0.0122);
		testMethod(1660, 1.7947, 0, 0, 1.0385, 0, 0);
		testMethod(1660, 1.7947, 0, 0, 1.0385, 0, 0);
		if(isRed){
			flipSign(rotation);
		}
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}