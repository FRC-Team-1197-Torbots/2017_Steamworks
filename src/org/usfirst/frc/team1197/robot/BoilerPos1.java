package org.usfirst.frc.team1197.robot;

public class BoilerPos1 extends TorTrajectory {
	public BoilerPos1() {
		super(3.4648, 1.0469);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0005, 0.1, 0, 0, 0);
		testMethod(10, 0, 0.0015, 0.2, 0, 0, 0);
		testMethod(15, 0, 0.003, 0.3, 0, 0, 0);
		testMethod(20, 0, 0.005, 0.4, 0, 0, 0);
		testMethod(25, 0.0001, 0.0075, 0.5, 0, 0, 0);
		testMethod(30, 0.0001, 0.0105, 0.6, 0, 0, 0);
		testMethod(35, 0.0002, 0.014, 0.7, 0, 0, 0);
		testMethod(40, 0.0003, 0.018, 0.8, 0, 0, 0);
		testMethod(45, 0.0004, 0.0225, 0.8999, 0, 0, 0);
		testMethod(50, 0.0005, 0.0275, 0.9999, 0, 0, 0);
		testMethod(55, 0.0006, 0.033, 1.0999, 0, 0, 0);
		testMethod(60, 0.0008, 0.039, 1.1999, 0, 0, 0);
		testMethod(65, 0.001, 0.0455, 1.2999, 0, 0, 0);
		testMethod(70, 0.0013, 0.0525, 1.3999, 0, 0, 0);
		testMethod(75, 0.0015, 0.06, 1.4999, 0, 0, 0);
		testMethod(80, 0.0019, 0.068, 1.5999, 0, 0, 0);
		testMethod(85, 0.0022, 0.0765, 1.6999, 0, 0, 0);
		testMethod(90, 0.0026, 0.0855, 1.7999, 0, 0, 0);
		testMethod(95, 0.0031, 0.095, 1.8999, 0, 0, 0);
		testMethod(100, 0.0036, 0.105, 1.9999, 0, 0, 0);
		testMethod(105, 0.0041, 0.1155, 2.0999, 0, 0, 0);
		testMethod(110, 0.0047, 0.1265, 2.1999, 0, 0, 0);
		testMethod(115, 0.0054, 0.138, 2.2999, 0, 0, 0);
		testMethod(120, 0.0061, 0.15, 2.3999, 0, 0, 0);
		testMethod(125, 0.0069, 0.1625, 2.4998, 0, 0, 0);
		testMethod(130, 0.0078, 0.1755, 2.5998, 0, 0, 0);
		testMethod(135, 0.0087, 0.189, 2.6998, 0, 0, 0);
		testMethod(140, 0.0096, 0.203, 2.7998, 0, 0, 0);
		testMethod(145, 0.0107, 0.2175, 2.8998, 0, 0, 0);
		testMethod(150, 0.0118, 0.2325, 2.9998, 0, 0, 0);
		testMethod(155, 0.013, 0.248, 3.0998, 0, 0, 0);
		testMethod(160, 0.0143, 0.264, 3.1998, 0, 0, 0);
		testMethod(165, 0.0157, 0.2805, 3.2998, 0, 0, 0);
		testMethod(170, 0.0171, 0.2975, 3.3998, 0, 0, 0);
		testMethod(175, 0.0186, 0.315, 3.4998, 0, 0, 0);
		testMethod(180, 0.0203, 0.3325, 3.4998, 0, 0, 0);
		testMethod(185, 0.022, 0.35, 3.4998, 0, 0, 0);
		testMethod(190, 0.0238, 0.3675, 3.4998, 0, 0, 0);
		testMethod(195, 0.0256, 0.385, 3.4998, 0, 0, 0);
		testMethod(200, 0.0276, 0.4025, 3.4998, 0, 0, 0);
		testMethod(205, 0.0297, 0.42, 3.4998, 0, 0, 0);
		testMethod(210, 0.0318, 0.4375, 3.4998, 0, 0, 0);
		testMethod(215, 0.034, 0.455, 3.4998, 0, 0, 0);
		testMethod(220, 0.0364, 0.4725, 3.4998, 0, 0, 0);
		testMethod(225, 0.0388, 0.49, 3.4998, 0, 0, 0);
		testMethod(230, 0.0413, 0.5075, 3.4998, 0, 0, 0);
		testMethod(235, 0.0438, 0.525, 3.4998, 0, 0, 0);
		testMethod(240, 0.0465, 0.5425, 3.4998, 0, 0, 0);
		testMethod(245, 0.0493, 0.56, 3.4998, 0, 0, 0);
		testMethod(250, 0.0521, 0.5775, 3.4998, 0, 0, 0);
		testMethod(255, 0.055, 0.595, 3.4998, 0, 0, 0);
		testMethod(260, 0.0581, 0.6125, 3.4998, 0, 0, 0);
		testMethod(265, 0.0612, 0.63, 3.4998, 0, 0, 0);
		testMethod(270, 0.0644, 0.6475, 3.4998, 0, 0, 0);
		testMethod(275, 0.0676, 0.665, 3.4998, 0, 0, 0);
		testMethod(280, 0.071, 0.6825, 3.4998, 0, 0, 0);
		testMethod(285, 0.0745, 0.7, 3.4998, 0, 0, 0);
		testMethod(290, 0.078, 0.7175, 3.4998, 0, 0, 0);
		testMethod(295, 0.0816, 0.735, 3.4998, 0, 0, 0);
		testMethod(300, 0.0854, 0.7525, 3.4998, 0, 0, 0);
		testMethod(305, 0.0892, 0.77, 3.4998, 0, 0, 0);
		testMethod(310, 0.0931, 0.7875, 3.4998, 0, 0, 0);
		testMethod(315, 0.097, 0.805, 3.4998, 0, 0, 0);
		testMethod(320, 0.1011, 0.8224, 3.4998, 0, 0, 0);
		testMethod(325, 0.1053, 0.8399, 3.4998, 0, 0, 0);
		testMethod(330, 0.1095, 0.8574, 3.4998, 0, 0, 0);
		testMethod(335, 0.1138, 0.8749, 3.4998, 0, 0, 0);
		testMethod(340, 0.1182, 0.8924, 3.4998, 0, 0, 0);
		testMethod(345, 0.1228, 0.9099, 3.4998, 0, 0, 0);
		testMethod(350, 0.1273, 0.9274, 3.4998, 0, 0, 0);
		testMethod(355, 0.132, 0.9449, 3.4998, 0, 0, 0);
		testMethod(360, 0.1368, 0.9624, 3.4998, 0, 0, 0);
		testMethod(365, 0.1417, 0.9799, 3.4998, 0, 0, 0);
		testMethod(370, 0.1466, 0.9974, 3.4998, 0, 0, 0);
		testMethod(375, 0.1516, 1.0149, 3.4998, 0, 0, 0);
		testMethod(380, 0.1567, 1.0324, 3.4998, 0, 0, 0);
		testMethod(385, 0.162, 1.0499, 3.4998, 0, 0, 0);
		testMethod(390, 0.1672, 1.0674, 3.4998, 0, 0, 0);
		testMethod(395, 0.1726, 1.0849, 3.4998, 0, 0, 0);
		testMethod(400, 0.1781, 1.1024, 3.4998, 0, 0, 0);
		testMethod(405, 0.1837, 1.1199, 3.4998, 0, 0, 0);
		testMethod(410, 0.1893, 1.1374, 3.4998, 0, 0, 0);
		testMethod(415, 0.195, 1.1549, 3.4998, 0, 0, 0);
		testMethod(420, 0.2008, 1.1724, 3.4998, 0, 0, 0);
		testMethod(425, 0.2067, 1.1899, 3.4998, 0, 0, 0);
		testMethod(430, 0.2127, 1.2074, 3.4998, 0, 0, 0);
		testMethod(435, 0.2188, 1.2249, 3.4998, 0, 0, 0);
		testMethod(440, 0.225, 1.2424, 3.4998, 0, 0, 0);
		testMethod(445, 0.2312, 1.2599, 3.4998, 0, 0, 0);
		testMethod(450, 0.2376, 1.2774, 3.4998, 0, 0, 0);
		testMethod(455, 0.244, 1.2949, 3.4998, 0, 0, 0);
		testMethod(460, 0.2505, 1.3124, 3.4998, 0, 0, 0);
		testMethod(465, 0.2571, 1.3299, 3.4998, 0, 0, 0);
		testMethod(470, 0.2638, 1.3474, 3.4998, 0, 0, 0);
		testMethod(475, 0.2706, 1.3649, 3.4998, 0, 0, 0);
		testMethod(480, 0.2775, 1.3824, 3.4998, 0, 0, 0);
		testMethod(485, 0.2844, 1.3999, 3.4998, 0, 0, 0);
		testMethod(490, 0.2915, 1.4174, 3.4998, 0, 0, 0);
		testMethod(495, 0.2986, 1.4349, 3.4998, 0, 0, 0);
		testMethod(500, 0.3058, 1.4524, 3.4998, 0, 0, 0);
		testMethod(505, 0.3131, 1.4699, 3.4998, 0, 0, 0);
		testMethod(510, 0.3205, 1.4874, 3.4998, 0, 0, 0);
		testMethod(515, 0.328, 1.5049, 3.4998, 0, 0, 0);
		testMethod(520, 0.3356, 1.5224, 3.4998, 0, 0, 0);
		testMethod(525, 0.3432, 1.5399, 3.4998, 0, 0, 0);
		testMethod(530, 0.351, 1.5574, 3.4998, 0, 0, 0);
		testMethod(535, 0.3588, 1.5749, 3.4998, 0, 0, 0);
		testMethod(540, 0.3667, 1.5924, 3.4998, 0, 0, 0);
		testMethod(545, 0.3747, 1.6099, 3.4998, 0, 0, 0);
		testMethod(550, 0.3828, 1.6274, 3.4998, 0, 0, 0);
		testMethod(555, 0.391, 1.6444, 3.3998, 0, 0, 0);
		testMethod(560, 0.3993, 1.6609, 3.2998, 0, 0, 0);
		testMethod(565, 0.4076, 1.6769, 3.1998, 0, 0, 0);
		testMethod(570, 0.416, 1.6924, 3.0998, 0, 0, 0);
		testMethod(575, 0.4245, 1.7074, 2.9998, 0, 0, 0);
		testMethod(580, 0.4331, 1.7219, 2.8998, 0, 0, 0);
		testMethod(585, 0.4418, 1.7359, 2.7998, 0, 0, 0);
		testMethod(590, 0.4505, 1.7494, 2.6998, 0, 0, 0);
		testMethod(595, 0.4593, 1.7624, 2.5998, 0, 0, 0);
		testMethod(600, 0.4681, 1.7749, 2.4998, 0, 0, 0);
		testMethod(605, 0.477, 1.7869, 2.3999, 0, 0, 0);
		testMethod(610, 0.486, 1.7984, 2.2999, 0, 0, 0);
		testMethod(615, 0.495, 1.8094, 2.1999, 0, 0, 0);
		testMethod(620, 0.5041, 1.8199, 2.0999, 0, 0, 0);
		testMethod(625, 0.5132, 1.8299, 1.9999, 0, 0, 0);
		testMethod(630, 0.5224, 1.8394, 1.8999, 0, 0, 0);
		testMethod(635, 0.5316, 1.8484, 1.7999, 0, 0, 0);
		testMethod(640, 0.5408, 1.8569, 1.6999, 0, 0, 0);
		testMethod(645, 0.5501, 1.8649, 1.5999, 0, 0, 0);
		testMethod(650, 0.5595, 1.8724, 1.4999, 0, 0, 0);
		testMethod(655, 0.5689, 1.8794, 1.3999, 0, 0, 0);
		testMethod(660, 0.5783, 1.8859, 1.2999, 0, 0, 0);
		testMethod(665, 0.5877, 1.8919, 1.1999, 0, 0, 0);
		testMethod(670, 0.5972, 1.8974, 1.0999, 0, 0, 0);
		testMethod(675, 0.6067, 1.9024, 0.9999, 0, 0, 0);
		testMethod(680, 0.6162, 1.9069, 0.8999, 0, 0, 0);
		testMethod(685, 0.6258, 1.9109, 0.8, 0, 0, 0);
		testMethod(690, 0.6353, 1.9144, 0.7, 0, 0, 0);
		testMethod(695, 0.6449, 1.9174, 0.6, 0, 0, 0);
		testMethod(700, 0.6545, 1.9199, 0.5, 0, 0, 0);
		testMethod(705, 0.6641, 1.9219, 0.4, 0, 0, 0);
		testMethod(710, 0.6737, 1.9234, 0.3, 0, 0, 0);
		testMethod(715, 0.6833, 1.9244, 0.2, 0, 0, 0);
		testMethod(720, 0.693, 1.9249, 0.1, 0, 0, 0);
		testMethod(725, 0.7026, 1.9249, 0, 0, 0, 0);
		testMethod(730, 0.7122, 1.9249, 0, 0, 0, 0);
		testMethod(735, 0.7218, 1.9249, 0, 0, 0, 0);
		testMethod(740, 0.7315, 1.9249, 0, 0, 0, 0);
		testMethod(745, 0.7411, 1.9249, 0, 0, 0, 0);
		testMethod(750, 0.7507, 1.9249, 0, 0, 0, 0);
		testMethod(755, 0.7603, 1.9249, 0, 0, 0, 0);
		testMethod(760, 0.77, 1.9249, 0, 0, 0, 0);
		testMethod(765, 0.7796, 1.9249, 0, 0, 0, 0);
		testMethod(770, 0.7892, 1.9249, 0, 0, 0, 0);
		testMethod(775, 0.7988, 1.9249, 0, 0, 0, 0);
		testMethod(780, 0.8085, 1.9249, 0, 0, 0, 0);
		testMethod(785, 0.8181, 1.9249, 0, 0, 0, 0);
		testMethod(790, 0.8277, 1.9249, 0, 0, 0, 0);
		testMethod(795, 0.8373, 1.9249, 0, 0, 0, 0);
		testMethod(800, 0.8469, 1.9249, 0, 0, 0, 0);
		testMethod(805, 0.8566, 1.9249, 0, 0, 0, 0);
		testMethod(810, 0.8662, 1.9249, 0, 0, 0, 0);
		testMethod(815, 0.8758, 1.9249, 0, 0, 0, 0);
		testMethod(820, 0.8854, 1.9249, 0, 0, 0, 0);
		testMethod(825, 0.8951, 1.9249, 0, 0, 0, 0);
		testMethod(830, 0.9047, 1.9249, 0, 0, 0, 0);
		testMethod(835, 0.9143, 1.9249, 0, 0, 0, 0);
		testMethod(840, 0.9239, 1.9249, 0, 0, 0, 0);
		testMethod(845, 0.9336, 1.9249, 0, 0, 0, 0);
		testMethod(850, 0.9432, 1.9249, 0, 0, 0, 0);
		testMethod(855, 0.9528, 1.9249, 0, 0, 0, 0);
		testMethod(860, 0.9624, 1.9249, 0, 0, 0, 0);
		testMethod(865, 0.9721, 1.9249, 0, 0, 0, 0);
		testMethod(870, 0.9817, 1.9249, 0, 0, 0, 0);
		testMethod(875, 0.9913, 1.9249, 0, 0, 0, 0);
		testMethod(880, 1.0009, 1.9249, 0, 0, 0, 0);
		testMethod(885, 1.0106, 1.9249, 0, 0, 0, 0);
		testMethod(890, 1.0202, 1.9249, 0, 0, 0, 0);
		testMethod(895, 1.0298, 1.9249, 0, 0, 0, 0);
		testMethod(900, 1.0394, 1.9249, 0, 0, 0, 0);
		testMethod(905, 1.0491, 1.9249, 0, 0, 0, 0);
		testMethod(910, 1.0587, 1.9249, 0, 0, 0, 0);
		testMethod(915, 1.0683, 1.9249, 0, 0, 0, 0);
		testMethod(920, 1.0779, 1.9249, 0, 0, 0, 0);
		testMethod(925, 1.0876, 1.9249, 0, 0, 0, 0);
		testMethod(930, 1.0972, 1.9249, 0, 0, 0, 0);
		testMethod(935, 1.1068, 1.9249, 0, 0, 0, 0);
		testMethod(940, 1.1164, 1.9249, 0, 0, 0, 0);
		testMethod(945, 1.1261, 1.9249, 0, 0, 0, 0);
		testMethod(950, 1.1357, 1.9249, 0, 0, 0, 0);
		testMethod(955, 1.1453, 1.9249, 0, 0, 0, 0);
		testMethod(960, 1.1549, 1.9249, 0, 0, 0, 0);
		testMethod(965, 1.1646, 1.9249, 0, 0, 0, 0);
		testMethod(970, 1.1742, 1.9249, 0, 0, 0, 0);
		testMethod(975, 1.1838, 1.9249, 0, 0, 0, 0);
		testMethod(980, 1.1934, 1.9249, 0, 0, 0, 0);
		testMethod(985, 1.2031, 1.9249, 0, 0, 0, 0);
		testMethod(990, 1.2127, 1.9249, 0, 0, 0, 0);
		testMethod(995, 1.2223, 1.9249, 0, 0, 0, 0);
		testMethod(1000, 1.2319, 1.9249, 0, 0, 0, 0);
		testMethod(1005, 1.2415, 1.9249, 0, 0, 0, 0);
		testMethod(1010, 1.2512, 1.9249, 0, 0, 0, 0);
		testMethod(1015, 1.2608, 1.9249, 0, 0, 0, 0);
		testMethod(1020, 1.2704, 1.9249, 0, 0, 0, 0);
		testMethod(1025, 1.28, 1.9249, 0, 0, 0, 0);
		testMethod(1030, 1.2897, 1.9249, 0, 0, 0, 0);
		testMethod(1035, 1.2993, 1.9249, 0, 0, 0, 0);
		testMethod(1040, 1.3089, 1.9249, 0, 0, 0, 0);
		testMethod(1045, 1.3185, 1.9249, 0, 0, 0, 0);
		testMethod(1050, 1.3282, 1.9249, 0, 0, 0, 0);
		testMethod(1055, 1.3378, 1.9249, 0, 0, 0, 0);
		testMethod(1060, 1.3474, 1.9249, 0, 0, 0, 0);
		testMethod(1065, 1.357, 1.9249, 0, 0, 0, 0);
		testMethod(1070, 1.3667, 1.9249, 0, 0, 0, 0);
		testMethod(1075, 1.3763, 1.9249, 0, 0, 0, 0);
		testMethod(1080, 1.3859, 1.9249, 0, 0, 0, 0);
		testMethod(1085, 1.3955, 1.9249, 0, 0, 0, 0);
		testMethod(1090, 1.4052, 1.9249, 0, 0, 0, 0);
		testMethod(1095, 1.4148, 1.9249, 0, 0, 0, 0);
		testMethod(1100, 1.4244, 1.9249, 0, 0, 0.0005, 0.1004);
		testMethod(1105, 1.434, 1.9249, 0, 0, 0.002, 0.3035);
		testMethod(1110, 1.4437, 1.9249, 0, 0, 0.0046, 0.5066);
		testMethod(1115, 1.4533, 1.9249, 0, 0.0001, 0.0081, 0.7097);
		testMethod(1120, 1.4629, 1.9249, 0, 0.0001, 0.0127, 0.9127);
		testMethod(1125, 1.4725, 1.9249, 0, 0.0002, 0.0182, 1.1158);
		testMethod(1130, 1.4822, 1.9249, 0, 0.0003, 0.0248, 1.3189);
		testMethod(1135, 1.4918, 1.9249, 0, 0.0004, 0.0324, 1.522);
		testMethod(1140, 1.5014, 1.9249, 0, 0.0006, 0.0411, 1.7251);
		testMethod(1145, 1.511, 1.9249, 0, 0.0008, 0.0507, 1.9282);
		testMethod(1150, 1.5207, 1.9249, 0, 0.0011, 0.0614, 2.1313);
		testMethod(1155, 1.5303, 1.9249, 0, 0.0015, 0.073, 2.3344);
		testMethod(1160, 1.5399, 1.9249, 0, 0.0019, 0.0857, 2.5375);
		testMethod(1165, 1.5495, 1.9249, 0, 0.0023, 0.0994, 2.7406);
		testMethod(1170, 1.5592, 1.9249, 0, 0.0029, 0.1142, 2.9437);
		testMethod(1175, 1.5688, 1.9249, 0, 0.0035, 0.1299, 3.1468);
		testMethod(1180, 1.5784, 1.9249, 0, 0.0042, 0.1466, 3.3498);
		testMethod(1185, 1.588, 1.9249, 0, 0.0049, 0.1644, 3.5529);
		testMethod(1190, 1.5977, 1.9249, 0, 0.0058, 0.1832, 3.756);
		testMethod(1195, 1.6073, 1.9249, 0, 0.0068, 0.203, 3.9591);
		testMethod(1200, 1.6169, 1.9249, 0, 0.0078, 0.2238, 4.1622);
		testMethod(1205, 1.6265, 1.9249, 0, 0.009, 0.2456, 4.3653);
		testMethod(1210, 1.6361, 1.9249, 0, 0.0103, 0.2685, 4.5684);
		testMethod(1215, 1.6458, 1.9249, 0, 0.0117, 0.2923, 4.7715);
		testMethod(1220, 1.6554, 1.9249, 0, 0.0132, 0.3172, 4.9746);
		testMethod(1225, 1.665, 1.9249, 0, 0.0149, 0.3431, 5.1777);
		testMethod(1230, 1.6746, 1.9249, 0, 0.0166, 0.37, 5.3808);
		testMethod(1235, 1.6843, 1.9249, 0, 0.0186, 0.3979, 5.5839);
		testMethod(1240, 1.6939, 1.9249, 0, 0.0206, 0.4268, 5.787);
		testMethod(1245, 1.7035, 1.9249, 0, 0.0228, 0.4568, 5.99);
		testMethod(1250, 1.7131, 1.9249, 0, 0.0252, 0.4877, 6.1931);
		testMethod(1255, 1.7228, 1.9249, 0, 0.0277, 0.5197, 6.3962);
		testMethod(1260, 1.7324, 1.9249, 0, 0.0304, 0.5527, 6.5993);
		testMethod(1265, 1.742, 1.9249, 0, 0.0332, 0.5867, 6.8024);
		testMethod(1270, 1.7516, 1.9249, 0, 0.0363, 0.6218, 7.0055);
		testMethod(1275, 1.7613, 1.9249, 0, 0.0395, 0.6578, 7.2086);
		testMethod(1280, 1.7709, 1.9249, 0, 0.0428, 0.6949, 7.4117);
		testMethod(1285, 1.7805, 1.9249, 0, 0.0464, 0.7329, 7.6148);
		testMethod(1290, 1.7901, 1.9249, 0, 0.0502, 0.772, 7.8179);
		testMethod(1295, 1.7998, 1.9249, 0, 0.0541, 0.8121, 8.021);
		testMethod(1300, 1.8094, 1.9249, 0, 0.0583, 0.8533, 8.2241);
		testMethod(1305, 1.819, 1.9249, 0, 0.0627, 0.8954, 8.4271);
		testMethod(1310, 1.8286, 1.9249, 0, 0.0673, 0.9389, 8.6925);
		testMethod(1315, 1.8383, 1.9249, 0, 0.0721, 0.9814, 8.51);
		testMethod(1320, 1.8479, 1.9249, 0, 0.0771, 1.0229, 8.3069);
		testMethod(1325, 1.8575, 1.9249, 0, 0.0823, 1.0635, 8.1038);
		testMethod(1330, 1.8671, 1.9249, 0, 0.0877, 1.103, 7.9007);
		testMethod(1335, 1.8768, 1.9249, 0, 0.0933, 1.1414, 7.6976);
		testMethod(1340, 1.8864, 1.9249, 0, 0.0991, 1.1789, 7.4945);
		testMethod(1345, 1.896, 1.9249, 0, 0.1051, 1.2154, 7.2914);
		testMethod(1350, 1.9056, 1.9249, 0, 0.1113, 1.2508, 7.0883);
		testMethod(1355, 1.9153, 1.9249, 0, 0.1176, 1.2852, 6.8852);
		testMethod(1360, 1.9249, 1.9249, 0, 0.1241, 1.3187, 6.6821);
		testMethod(1365, 1.9345, 1.9249, 0, 0.1308, 1.3511, 6.4791);
		testMethod(1370, 1.9441, 1.9249, 0, 0.1376, 1.3824, 6.276);
		testMethod(1375, 1.9538, 1.9249, 0, 0.1446, 1.4128, 6.0729);
		testMethod(1380, 1.9634, 1.9249, 0, 0.1517, 1.4421, 5.8698);
		testMethod(1385, 1.973, 1.9249, 0, 0.159, 1.4705, 5.6667);
		testMethod(1390, 1.9826, 1.9249, 0, 0.1665, 1.4978, 5.4636);
		testMethod(1395, 1.9923, 1.9249, 0, 0.174, 1.5241, 5.2605);
		testMethod(1400, 2.0019, 1.9249, 0, 0.1817, 1.5494, 5.0574);
		testMethod(1405, 2.0115, 1.9249, 0, 0.1895, 1.5737, 4.8543);
		testMethod(1410, 2.0211, 1.9249, 0, 0.1974, 1.5969, 4.6512);
		testMethod(1415, 2.0307, 1.9249, 0, 0.2055, 1.6192, 4.4481);
		testMethod(1420, 2.0404, 1.9249, 0, 0.2136, 1.6404, 4.245);
		testMethod(1425, 2.05, 1.9249, 0, 0.2219, 1.6606, 4.042);
		testMethod(1430, 2.0596, 1.9249, 0, 0.2302, 1.6798, 3.8389);
		testMethod(1435, 2.0692, 1.9249, 0, 0.2387, 1.698, 3.6358);
		testMethod(1440, 2.0789, 1.9249, 0, 0.2472, 1.7151, 3.4327);
		testMethod(1445, 2.0885, 1.9249, 0, 0.2558, 1.7313, 3.2296);
		testMethod(1450, 2.0981, 1.9249, 0, 0.2645, 1.7464, 3.0265);
		testMethod(1455, 2.1077, 1.9249, 0, 0.2733, 1.7605, 2.8234);
		testMethod(1460, 2.1174, 1.9249, 0, 0.2821, 1.7736, 2.6203);
		testMethod(1465, 2.127, 1.9249, 0, 0.291, 1.7857, 2.4172);
		testMethod(1470, 2.1366, 1.9249, 0, 0.3, 1.7968, 2.2141);
		testMethod(1475, 2.1462, 1.9249, 0, 0.309, 1.8068, 2.011);
		testMethod(1480, 2.1559, 1.9249, 0, 0.318, 1.8159, 1.8079);
		testMethod(1485, 2.1655, 1.9249, 0, 0.3271, 1.8239, 1.6048);
		testMethod(1490, 2.1751, 1.9249, 0, 0.3363, 1.8309, 1.4018);
		testMethod(1495, 2.1847, 1.9249, 0, 0.3454, 1.8369, 1.1987);
		testMethod(1500, 2.1944, 1.9249, 0, 0.3546, 1.8419, 0.9956);
		testMethod(1505, 2.204, 1.9249, 0, 0.3639, 1.8458, 0.7925);
		testMethod(1510, 2.2136, 1.9249, 0, 0.3731, 1.8488, 0.5894);
		testMethod(1515, 2.2232, 1.9249, 0, 0.3823, 1.8507, 0.3863);
		testMethod(1520, 2.2329, 1.9249, 0, 0.3916, 1.8516, 0.1832);
		testMethod(1525, 2.2425, 1.9249, 0, 0.4009, 1.8517, 0.0164);
		testMethod(1530, 2.2521, 1.9249, 0, 0.4101, 1.8517, 0);
		testMethod(1535, 2.2617, 1.9249, 0, 0.4194, 1.8517, 0);
		testMethod(1540, 2.2714, 1.9249, 0, 0.4286, 1.8517, 0);
		testMethod(1545, 2.281, 1.9249, 0, 0.4379, 1.8517, 0);
		testMethod(1550, 2.2906, 1.9249, 0, 0.4472, 1.8517, 0);
		testMethod(1555, 2.3002, 1.9249, 0, 0.4564, 1.8517, 0);
		testMethod(1560, 2.3099, 1.9249, 0, 0.4657, 1.8517, 0);
		testMethod(1565, 2.3195, 1.9249, 0, 0.4749, 1.8517, 0);
		testMethod(1570, 2.3291, 1.9249, 0, 0.4842, 1.8517, 0);
		testMethod(1575, 2.3387, 1.9249, 0, 0.4934, 1.8517, 0);
		testMethod(1580, 2.3484, 1.9249, 0, 0.5027, 1.8517, 0);
		testMethod(1585, 2.358, 1.9249, 0, 0.512, 1.8517, 0);
		testMethod(1590, 2.3676, 1.9249, 0, 0.5212, 1.8517, 0);
		testMethod(1595, 2.3772, 1.9249, 0, 0.5305, 1.8517, 0);
		testMethod(1600, 2.3869, 1.9249, 0, 0.5397, 1.8517, 0);
		testMethod(1605, 2.3965, 1.9249, 0, 0.549, 1.8517, 0);
		testMethod(1610, 2.4061, 1.9249, 0, 0.5583, 1.8517, 0);
		testMethod(1615, 2.4157, 1.9249, 0, 0.5675, 1.8517, 0);
		testMethod(1620, 2.4254, 1.9249, 0, 0.5768, 1.8517, 0);
		testMethod(1625, 2.435, 1.9249, 0, 0.586, 1.8517, 0);
		testMethod(1630, 2.4446, 1.9249, 0, 0.5953, 1.8517, 0);
		testMethod(1635, 2.4542, 1.9249, 0, 0.6046, 1.8517, 0);
		testMethod(1640, 2.4638, 1.9249, 0, 0.6138, 1.8517, 0);
		testMethod(1645, 2.4735, 1.9249, 0, 0.6231, 1.8517, 0);
		testMethod(1650, 2.4831, 1.9249, 0, 0.6323, 1.8517, 0);
		testMethod(1655, 2.4927, 1.9249, 0, 0.6416, 1.8517, 0);
		testMethod(1660, 2.5023, 1.9249, 0, 0.6508, 1.8517, 0);
		testMethod(1665, 2.512, 1.9249, 0, 0.6601, 1.8513, -0.0854);
		testMethod(1670, 2.5216, 1.9249, 0, 0.6694, 1.8499, -0.2878);
		testMethod(1675, 2.5312, 1.9249, 0, 0.6786, 1.8474, -0.4909);
		testMethod(1680, 2.5408, 1.9249, 0, 0.6878, 1.8439, -0.694);
		testMethod(1685, 2.5505, 1.9249, 0, 0.697, 1.8394, -0.8971);
		testMethod(1690, 2.5601, 1.9249, 0, 0.7062, 1.8339, -1.1002);
		testMethod(1695, 2.5697, 1.9249, 0, 0.7154, 1.8274, -1.3033);
		testMethod(1700, 2.5793, 1.9249, 0, 0.7245, 1.8199, -1.5064);
		testMethod(1705, 2.589, 1.9249, 0, 0.7336, 1.8113, -1.7095);
		testMethod(1710, 2.5986, 1.9249, 0, 0.7426, 1.8018, -1.9125);
		testMethod(1715, 2.6082, 1.9249, 0, 0.7516, 1.7912, -2.1156);
		testMethod(1720, 2.6178, 1.9249, 0, 0.7605, 1.7796, -2.3187);
		testMethod(1725, 2.6275, 1.9249, 0, 0.7694, 1.767, -2.5218);
		testMethod(1730, 2.6371, 1.9249, 0, 0.7782, 1.7534, -2.7249);
		testMethod(1735, 2.6467, 1.9249, 0, 0.7869, 1.7387, -2.928);
		testMethod(1740, 2.6563, 1.9249, 0, 0.7956, 1.7231, -3.1311);
		testMethod(1745, 2.666, 1.9249, 0, 0.8041, 1.7064, -3.3342);
		testMethod(1750, 2.6756, 1.9249, 0, 0.8126, 1.6887, -3.5373);
		testMethod(1755, 2.6852, 1.9249, 0, 0.821, 1.67, -3.7404);
		testMethod(1760, 2.6948, 1.9249, 0, 0.8293, 1.6503, -3.9435);
		testMethod(1765, 2.7045, 1.9249, 0, 0.8375, 1.6296, -4.1466);
		testMethod(1770, 2.7141, 1.9249, 0, 0.8456, 1.6078, -4.3496);
		testMethod(1775, 2.7237, 1.9249, 0, 0.8536, 1.5851, -4.5527);
		testMethod(1780, 2.7333, 1.9249, 0, 0.8615, 1.5613, -4.7558);
		testMethod(1785, 2.743, 1.9249, 0, 0.8692, 1.5365, -4.9589);
		testMethod(1790, 2.7526, 1.9249, 0, 0.8768, 1.5107, -5.162);
		testMethod(1795, 2.7622, 1.9249, 0, 0.8843, 1.4839, -5.3651);
		testMethod(1800, 2.7718, 1.9249, 0, 0.8917, 1.456, -5.5682);
		testMethod(1805, 2.7815, 1.9244, -0.1, 0.8989, 1.4268, -5.8447);
		testMethod(1810, 2.7911, 1.9234, -0.2, 0.9059, 1.3962, -6.1148);
		testMethod(1815, 2.8007, 1.9219, -0.3, 0.9128, 1.3643, -6.3782);
		testMethod(1820, 2.8103, 1.9199, -0.4, 0.9196, 1.3312, -6.6341);
		testMethod(1825, 2.8199, 1.9174, -0.5, 0.9261, 1.2967, -6.8823);
		testMethod(1830, 2.8295, 1.9144, -0.6, 0.9325, 1.2611, -7.122);
		testMethod(1835, 2.839, 1.9109, -0.7, 0.9388, 1.2244, -7.353);
		testMethod(1840, 2.8486, 1.9069, -0.8, 0.9448, 1.1865, -7.5745);
		testMethod(1845, 2.8581, 1.9024, -0.8999, 0.9506, 1.1476, -7.7863);
		testMethod(1850, 2.8676, 1.8974, -0.9999, 0.9563, 1.1076, -7.9879);
		testMethod(1855, 2.8771, 1.8919, -1.0999, 0.9617, 1.0667, -8.1787);
		testMethod(1860, 2.8865, 1.8859, -1.1999, 0.9669, 1.0249, -8.3584);
		testMethod(1865, 2.8959, 1.8794, -1.2999, 0.9719, 0.9823, -8.5265);
		testMethod(1870, 2.9053, 1.8724, -1.3999, 0.9767, 0.9389, -8.6826);
		testMethod(1875, 2.9146, 1.8649, -1.4999, 0.9813, 0.8944, -8.9033);
		testMethod(1880, 2.9239, 1.8569, -1.5999, 0.9857, 0.8506, -8.752);
		testMethod(1885, 2.9332, 1.8484, -1.6999, 0.9898, 0.8081, -8.5105);
		testMethod(1890, 2.9424, 1.8394, -1.7999, 0.9938, 0.7667, -8.2662);
		testMethod(1895, 2.9516, 1.8299, -1.8999, 0.9975, 0.7266, -8.0195);
		testMethod(1900, 2.9607, 1.8199, -1.9999, 1.001, 0.6878, -7.771);
		testMethod(1905, 2.9698, 1.8094, -2.0999, 1.0044, 0.6502, -7.5211);
		testMethod(1910, 2.9788, 1.7984, -2.1999, 1.0075, 0.6138, -7.2703);
		testMethod(1915, 2.9878, 1.7869, -2.2999, 1.0105, 0.5787, -7.0192);
		testMethod(1920, 2.9967, 1.7749, -2.3999, 1.0133, 0.5449, -6.7682);
		testMethod(1925, 3.0055, 1.7624, -2.4998, 1.016, 0.5123, -6.5178);
		testMethod(1930, 3.0143, 1.7494, -2.5998, 1.0185, 0.481, -6.2683);
		testMethod(1935, 3.023, 1.7359, -2.6998, 1.0208, 0.4509, -6.0204);
		testMethod(1940, 3.0317, 1.7219, -2.7998, 1.023, 0.422, -5.7743);
		testMethod(1945, 3.0402, 1.7074, -2.8998, 1.025, 0.3943, -5.5305);
		testMethod(1950, 3.0487, 1.6924, -2.9998, 1.0269, 0.3679, -5.2893);
		testMethod(1955, 3.0572, 1.6769, -3.0998, 1.0287, 0.3426, -5.0512);
		testMethod(1960, 3.0655, 1.6609, -3.1998, 1.0303, 0.3185, -4.8166);
		testMethod(1965, 3.0738, 1.6444, -3.2998, 1.0319, 0.2956, -4.5856);
		testMethod(1970, 3.082, 1.6274, -3.3998, 1.0333, 0.2738, -4.3588);
		testMethod(1975, 3.09, 1.6099, -3.4998, 1.0346, 0.2531, -4.1363);
		testMethod(1980, 3.0981, 1.5924, -3.4998, 1.0358, 0.2336, -3.9044);
		testMethod(1985, 3.106, 1.5749, -3.4998, 1.037, 0.2152, -3.6813);
		testMethod(1990, 3.1138, 1.5574, -3.4998, 1.038, 0.1979, -3.4669);
		testMethod(1995, 3.1215, 1.5399, -3.4998, 1.0389, 0.1816, -3.261);
		testMethod(2000, 3.1292, 1.5224, -3.4998, 1.0398, 0.1663, -3.0633);
		testMethod(2005, 3.1368, 1.5049, -3.4998, 1.0406, 0.1519, -2.8737);
		testMethod(2010, 3.1442, 1.4874, -3.4998, 1.0413, 0.1384, -2.6919);
		testMethod(2015, 3.1516, 1.4699, -3.4998, 1.042, 0.1258, -2.5178);
		testMethod(2020, 3.1589, 1.4524, -3.4998, 1.0426, 0.1141, -2.3511);
		testMethod(2025, 3.1662, 1.4349, -3.4998, 1.0431, 0.1031, -2.1917);
		testMethod(2030, 3.1733, 1.4174, -3.4998, 1.0436, 0.0929, -2.0394);
		testMethod(2035, 3.1803, 1.3999, -3.4998, 1.0441, 0.0835, -1.894);
		testMethod(2040, 3.1873, 1.3824, -3.4998, 1.0445, 0.0747, -1.7553);
		testMethod(2045, 3.1942, 1.3649, -3.4998, 1.0448, 0.0666, -1.6232);
		testMethod(2050, 3.2009, 1.3474, -3.4998, 1.0451, 0.0591, -1.4973);
		testMethod(2055, 3.2076, 1.3299, -3.4998, 1.0454, 0.0522, -1.3777);
		testMethod(2060, 3.2142, 1.3124, -3.4998, 1.0456, 0.0459, -1.264);
		testMethod(2065, 3.2208, 1.2949, -3.4998, 1.0459, 0.0401, -1.1561);
		testMethod(2070, 3.2272, 1.2774, -3.4998, 1.046, 0.0348, -1.0539);
		testMethod(2075, 3.2335, 1.2599, -3.4998, 1.0462, 0.03, -0.9572);
		testMethod(2080, 3.2398, 1.2424, -3.4998, 1.0463, 0.0257, -0.8657);
		testMethod(2085, 3.246, 1.2249, -3.4998, 1.0465, 0.0218, -0.7795);
		testMethod(2090, 3.252, 1.2074, -3.4998, 1.0466, 0.0183, -0.6982);
		testMethod(2095, 3.258, 1.1899, -3.4998, 1.0466, 0.0152, -0.6217);
		testMethod(2100, 3.2639, 1.1724, -3.4998, 1.0467, 0.0125, -0.5498);
		testMethod(2105, 3.2698, 1.1549, -3.4998, 1.0468, 0.01, -0.4825);
		testMethod(2110, 3.2755, 1.1374, -3.4998, 1.0468, 0.0079, -0.4196);
		testMethod(2115, 3.2811, 1.1199, -3.4998, 1.0469, 0.0061, -0.3608);
		testMethod(2120, 3.2867, 1.1024, -3.4998, 1.0469, 0.0046, -0.3061);
		testMethod(2125, 3.2922, 1.0849, -3.4998, 1.0469, 0.0033, -0.2553);
		testMethod(2130, 3.2975, 1.0674, -3.4998, 1.0469, 0.0023, -0.2082);
		testMethod(2135, 3.3028, 1.0499, -3.4998, 1.0469, 0.0015, -0.1648);
		testMethod(2140, 3.308, 1.0324, -3.4998, 1.0469, 0.0008, -0.1249);
		testMethod(2145, 3.3132, 1.0149, -3.4998, 1.0469, 0.0004, -0.0883);
		testMethod(2150, 3.3182, 0.9974, -3.4998, 1.0469, 0.0001, -0.0549);
		testMethod(2155, 3.3231, 0.9799, -3.4998, 1.0469, 0, -0.0246);
		testMethod(2160, 3.328, 0.9624, -3.4998, 1.0469, 0, -0.002);
		testMethod(2165, 3.3328, 0.9449, -3.4998, 1.0469, 0, 0);
		testMethod(2170, 3.3374, 0.9274, -3.4998, 1.0469, 0, 0);
		testMethod(2175, 3.342, 0.9099, -3.4998, 1.0469, 0, 0);
		testMethod(2180, 3.3465, 0.8924, -3.4998, 1.0469, 0, 0);
		testMethod(2185, 3.351, 0.8749, -3.4998, 1.0469, 0, 0);
		testMethod(2190, 3.3553, 0.8574, -3.4998, 1.0469, 0, 0);
		testMethod(2195, 3.3595, 0.8399, -3.4998, 1.0469, 0, 0);
		testMethod(2200, 3.3637, 0.8224, -3.4998, 1.0469, 0, 0);
		testMethod(2205, 3.3678, 0.805, -3.4998, 1.0469, 0, 0);
		testMethod(2210, 3.3717, 0.7875, -3.4998, 1.0469, 0, 0);
		testMethod(2215, 3.3756, 0.77, -3.4998, 1.0469, 0, 0);
		testMethod(2220, 3.3794, 0.7525, -3.4998, 1.0469, 0, 0);
		testMethod(2225, 3.3832, 0.735, -3.4998, 1.0469, 0, 0);
		testMethod(2230, 3.3868, 0.7175, -3.4998, 1.0469, 0, 0);
		testMethod(2235, 3.3903, 0.7, -3.4998, 1.0469, 0, 0);
		testMethod(2240, 3.3938, 0.6825, -3.4998, 1.0469, 0, 0);
		testMethod(2245, 3.3972, 0.665, -3.4998, 1.0469, 0, 0);
		testMethod(2250, 3.4004, 0.6475, -3.4998, 1.0469, 0, 0);
		testMethod(2255, 3.4036, 0.63, -3.4998, 1.0469, 0, 0);
		testMethod(2260, 3.4067, 0.6125, -3.4998, 1.0469, 0, 0);
		testMethod(2265, 3.4098, 0.595, -3.4998, 1.0469, 0, 0);
		testMethod(2270, 3.4127, 0.5775, -3.4998, 1.0469, 0, 0);
		testMethod(2275, 3.4155, 0.56, -3.4998, 1.0469, 0, 0);
		testMethod(2280, 3.4183, 0.5425, -3.4998, 1.0469, 0, 0);
		testMethod(2285, 3.421, 0.525, -3.4998, 1.0469, 0, 0);
		testMethod(2290, 3.4235, 0.5075, -3.4998, 1.0469, 0, 0);
		testMethod(2295, 3.426, 0.49, -3.4998, 1.0469, 0, 0);
		testMethod(2300, 3.4284, 0.4725, -3.4998, 1.0469, 0, 0);
		testMethod(2305, 3.4308, 0.455, -3.4998, 1.0469, 0, 0);
		testMethod(2310, 3.433, 0.4375, -3.4998, 1.0469, 0, 0);
		testMethod(2315, 3.4351, 0.42, -3.4998, 1.0469, 0, 0);
		testMethod(2320, 3.4372, 0.4025, -3.4998, 1.0469, 0, 0);
		testMethod(2325, 3.4392, 0.385, -3.4998, 1.0469, 0, 0);
		testMethod(2330, 3.441, 0.3675, -3.4998, 1.0469, 0, 0);
		testMethod(2335, 3.4428, 0.35, -3.4998, 1.0469, 0, 0);
		testMethod(2340, 3.4445, 0.3325, -3.4998, 1.0469, 0, 0);
		testMethod(2345, 3.4461, 0.315, -3.4998, 1.0469, 0, 0);
		testMethod(2350, 3.4477, 0.2975, -3.4998, 1.0469, 0, 0);
		testMethod(2355, 3.4491, 0.2805, -3.3998, 1.0469, 0, 0);
		testMethod(2360, 3.4505, 0.264, -3.2998, 1.0469, 0, 0);
		testMethod(2365, 3.4518, 0.248, -3.1998, 1.0469, 0, 0);
		testMethod(2370, 3.453, 0.2325, -3.0998, 1.0469, 0, 0);
		testMethod(2375, 3.4541, 0.2175, -2.9998, 1.0469, 0, 0);
		testMethod(2380, 3.4551, 0.203, -2.8998, 1.0469, 0, 0);
		testMethod(2385, 3.4561, 0.189, -2.7998, 1.0469, 0, 0);
		testMethod(2390, 3.457, 0.1755, -2.6998, 1.0469, 0, 0);
		testMethod(2395, 3.4579, 0.1625, -2.5998, 1.0469, 0, 0);
		testMethod(2400, 3.4587, 0.15, -2.4998, 1.0469, 0, 0);
		testMethod(2405, 3.4594, 0.138, -2.3999, 1.0469, 0, 0);
		testMethod(2410, 3.46, 0.1265, -2.2999, 1.0469, 0, 0);
		testMethod(2415, 3.4606, 0.1155, -2.1999, 1.0469, 0, 0);
		testMethod(2420, 3.4612, 0.105, -2.0999, 1.0469, 0, 0);
		testMethod(2425, 3.4617, 0.095, -1.9999, 1.0469, 0, 0);
		testMethod(2430, 3.4621, 0.0855, -1.8999, 1.0469, 0, 0);
		testMethod(2435, 3.4626, 0.0765, -1.7999, 1.0469, 0, 0);
		testMethod(2440, 3.4629, 0.068, -1.6999, 1.0469, 0, 0);
		testMethod(2445, 3.4632, 0.06, -1.5999, 1.0469, 0, 0);
		testMethod(2450, 3.4635, 0.0525, -1.4999, 1.0469, 0, 0);
		testMethod(2455, 3.4638, 0.0455, -1.3999, 1.0469, 0, 0);
		testMethod(2460, 3.464, 0.039, -1.2999, 1.0469, 0, 0);
		testMethod(2465, 3.4642, 0.033, -1.1999, 1.0469, 0, 0);
		testMethod(2470, 3.4643, 0.0275, -1.0999, 1.0469, 0, 0);
		testMethod(2475, 3.4644, 0.0225, -0.9999, 1.0469, 0, 0);
		testMethod(2480, 3.4645, 0.018, -0.8999, 1.0469, 0, 0);
		testMethod(2485, 3.4646, 0.014, -0.8, 1.0469, 0, 0);
		testMethod(2490, 3.4647, 0.0105, -0.7, 1.0469, 0, 0);
		testMethod(2495, 3.4647, 0.0075, -0.6, 1.0469, 0, 0);
		testMethod(2500, 3.4647, 0.005, -0.5, 1.0469, 0, 0);
		testMethod(2505, 3.4648, 0.003, -0.4, 1.0469, 0, 0);
		testMethod(2510, 3.4648, 0.0015, -0.3, 1.0469, 0, 0);
		testMethod(2515, 3.4648, 0.0005, -0.2, 1.0469, 0, 0);
		testMethod(2520, 3.4648, 0, -0.1, 1.0469, 0, 0);
		testMethod(2525, 3.4648, 0, 0, 1.0469, 0, 0);
		testMethod(2525, 3.4648, 0, 0, 1.0469, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}
}