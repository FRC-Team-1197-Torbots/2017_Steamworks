package org.usfirst.frc.team1197.robot;

public class BoilerPos1 extends TorTrajectory {

	public BoilerPos1() {
		super(3.3983, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0005, 0.0991, 0, 0, 0);
		testMethod(10, 0, 0.0015, 0.1982, 0, 0, 0);
		testMethod(15, 0, 0.003, 0.2974, 0, 0, 0);
		testMethod(20, 0, 0.005, 0.3965, 0, 0, 0);
		testMethod(25, 0.0001, 0.0074, 0.4956, 0, 0, 0);
		testMethod(30, 0.0001, 0.0104, 0.5947, 0, 0, 0);
		testMethod(35, 0.0002, 0.0139, 0.6938, 0, 0, 0);
		testMethod(40, 0.0003, 0.0178, 0.793, 0, 0, 0);
		testMethod(45, 0.0004, 0.0223, 0.8921, 0, 0, 0);
		testMethod(50, 0.0005, 0.0273, 0.9912, 0, 0, 0);
		testMethod(55, 0.0006, 0.0327, 1.0903, 0, 0, 0);
		testMethod(60, 0.0008, 0.0387, 1.1894, 0, 0, 0);
		testMethod(65, 0.001, 0.0451, 1.2886, 0, 0, 0);
		testMethod(70, 0.0013, 0.052, 1.3877, 0, 0, 0);
		testMethod(75, 0.0015, 0.0595, 1.4868, 0, 0, 0);
		testMethod(80, 0.0019, 0.0674, 1.5859, 0, 0, 0);
		testMethod(85, 0.0022, 0.0758, 1.685, 0, 0, 0);
		testMethod(90, 0.0026, 0.0847, 1.7842, 0, 0, 0);
		testMethod(95, 0.0031, 0.0942, 1.8833, 0, 0, 0);
		testMethod(100, 0.0036, 0.1041, 1.9824, 0, 0, 0);
		testMethod(105, 0.0041, 0.1145, 2.0815, 0, 0, 0);
		testMethod(110, 0.0047, 0.1254, 2.1806, 0, 0, 0);
		testMethod(115, 0.0054, 0.1368, 2.2798, 0, 0, 0);
		testMethod(120, 0.0061, 0.1487, 2.3789, 0, 0, 0);
		testMethod(125, 0.0068, 0.1611, 2.478, 0, 0, 0);
		testMethod(130, 0.0077, 0.174, 2.5771, 0, 0, 0);
		testMethod(135, 0.0086, 0.1873, 2.6762, 0, 0, 0);
		testMethod(140, 0.0096, 0.2012, 2.7753, 0, 0, 0);
		testMethod(145, 0.0106, 0.2156, 2.8745, 0, 0, 0);
		testMethod(150, 0.0117, 0.2305, 2.9736, 0, 0, 0);
		testMethod(155, 0.0129, 0.2458, 3.0727, 0, 0, 0);
		testMethod(160, 0.0142, 0.2617, 3.1718, 0, 0, 0);
		testMethod(165, 0.0155, 0.278, 3.2709, 0, 0, 0);
		testMethod(170, 0.017, 0.2949, 3.3701, 0, 0, 0);
		testMethod(175, 0.0185, 0.3122, 3.4692, 0, 0, 0);
		testMethod(180, 0.0201, 0.3296, 3.4692, 0, 0, 0);
		testMethod(185, 0.0218, 0.3469, 3.4692, 0, 0, 0);
		testMethod(190, 0.0235, 0.3643, 3.4692, 0, 0, 0);
		testMethod(195, 0.0254, 0.3816, 3.4692, 0, 0, 0);
		testMethod(200, 0.0274, 0.399, 3.4692, 0, 0, 0);
		testMethod(205, 0.0294, 0.4163, 3.4692, 0, 0, 0);
		testMethod(210, 0.0315, 0.4336, 3.4692, 0, 0, 0);
		testMethod(215, 0.0337, 0.451, 3.4692, 0, 0, 0);
		testMethod(220, 0.036, 0.4683, 3.4692, 0, 0, 0);
		testMethod(225, 0.0384, 0.4857, 3.4692, 0, 0, 0);
		testMethod(230, 0.0409, 0.503, 3.4692, 0, 0, 0);
		testMethod(235, 0.0435, 0.5204, 3.4692, 0, 0, 0);
		testMethod(240, 0.0461, 0.5377, 3.4692, 0, 0, 0);
		testMethod(245, 0.0488, 0.5551, 3.4692, 0, 0, 0);
		testMethod(250, 0.0516, 0.5724, 3.4692, 0, 0, 0);
		testMethod(255, 0.0546, 0.5898, 3.4692, 0, 0, 0);
		testMethod(260, 0.0575, 0.6071, 3.4692, 0, 0, 0);
		testMethod(265, 0.0606, 0.6245, 3.4692, 0, 0, 0);
		testMethod(270, 0.0638, 0.6418, 3.4692, 0, 0, 0);
		testMethod(275, 0.067, 0.6591, 3.4692, 0, 0, 0);
		testMethod(280, 0.0704, 0.6765, 3.4692, 0, 0, 0);
		testMethod(285, 0.0738, 0.6938, 3.4692, 0, 0, 0);
		testMethod(290, 0.0773, 0.7112, 3.4692, 0, 0, 0);
		testMethod(295, 0.0809, 0.7285, 3.4692, 0, 0, 0);
		testMethod(300, 0.0846, 0.7459, 3.4692, 0, 0, 0);
		testMethod(305, 0.0884, 0.7632, 3.4692, 0, 0, 0);
		testMethod(310, 0.0922, 0.7806, 3.4692, 0, 0, 0);
		testMethod(315, 0.0962, 0.7979, 3.4692, 0, 0, 0);
		testMethod(320, 0.1002, 0.8153, 3.4692, 0, 0, 0);
		testMethod(325, 0.1043, 0.8326, 3.4692, 0, 0, 0);
		testMethod(330, 0.1085, 0.85, 3.4692, 0, 0, 0);
		testMethod(335, 0.1128, 0.8673, 3.4692, 0, 0, 0);
		testMethod(340, 0.1172, 0.8846, 3.4692, 0, 0, 0);
		testMethod(345, 0.1217, 0.902, 3.4692, 0, 0, 0);
		testMethod(350, 0.1262, 0.9193, 3.4692, 0, 0, 0);
		testMethod(355, 0.1309, 0.9367, 3.4692, 0, 0, 0);
		testMethod(360, 0.1356, 0.954, 3.4692, 0, 0, 0);
		testMethod(365, 0.1404, 0.9714, 3.4692, 0, 0, 0);
		testMethod(370, 0.1453, 0.9887, 3.4692, 0, 0, 0);
		testMethod(375, 0.1503, 1.0061, 3.4692, 0, 0, 0);
		testMethod(380, 0.1554, 1.0234, 3.4692, 0, 0, 0);
		testMethod(385, 0.1605, 1.0408, 3.4692, 0, 0, 0);
		testMethod(390, 0.1658, 1.0581, 3.4692, 0, 0, 0);
		testMethod(395, 0.1711, 1.0754, 3.4692, 0, 0, 0);
		testMethod(400, 0.1765, 1.0928, 3.4692, 0, 0, 0);
		testMethod(405, 0.182, 1.1101, 3.4692, 0, 0, 0);
		testMethod(410, 0.1876, 1.1275, 3.4692, 0, 0, 0);
		testMethod(415, 0.1933, 1.1448, 3.4692, 0, 0, 0);
		testMethod(420, 0.1991, 1.1622, 3.4692, 0, 0, 0);
		testMethod(425, 0.2049, 1.1795, 3.4692, 0, 0, 0);
		testMethod(430, 0.2109, 1.1969, 3.4692, 0, 0, 0);
		testMethod(435, 0.2169, 1.2142, 3.4692, 0, 0, 0);
		testMethod(440, 0.223, 1.2316, 3.4692, 0, 0, 0);
		testMethod(445, 0.2292, 1.2489, 3.4692, 0, 0, 0);
		testMethod(450, 0.2355, 1.2663, 3.4692, 0, 0, 0);
		testMethod(455, 0.2419, 1.2836, 3.4692, 0, 0, 0);
		testMethod(460, 0.2484, 1.3009, 3.4692, 0, 0, 0);
		testMethod(465, 0.2549, 1.3183, 3.4692, 0, 0, 0);
		testMethod(470, 0.2615, 1.3356, 3.4692, 0, 0, 0);
		testMethod(475, 0.2683, 1.353, 3.4692, 0, 0, 0);
		testMethod(480, 0.2751, 1.3703, 3.4692, 0, 0, 0);
		testMethod(485, 0.282, 1.3877, 3.4692, 0, 0, 0);
		testMethod(490, 0.2889, 1.405, 3.4692, 0, 0, 0);
		testMethod(495, 0.296, 1.4224, 3.4692, 0, 0, 0);
		testMethod(500, 0.3032, 1.4397, 3.4692, 0, 0, 0);
		testMethod(505, 0.3104, 1.4571, 3.4692, 0, 0, 0);
		testMethod(510, 0.3177, 1.4744, 3.4692, 0, 0, 0);
		testMethod(515, 0.3251, 1.4917, 3.4692, 0, 0, 0);
		testMethod(520, 0.3327, 1.5091, 3.4692, 0, 0, 0);
		testMethod(525, 0.3402, 1.5264, 3.4692, 0, 0, 0);
		testMethod(530, 0.3479, 1.5438, 3.4692, 0, 0, 0);
		testMethod(535, 0.3557, 1.5611, 3.4692, 0, 0, 0);
		testMethod(540, 0.3635, 1.5785, 3.4692, 0, 0, 0);
		testMethod(545, 0.3715, 1.5958, 3.4692, 0, 0, 0);
		testMethod(550, 0.3795, 1.6132, 3.4692, 0, 0, 0);
		testMethod(555, 0.3876, 1.6305, 3.4692, 0, 0, 0);
		testMethod(560, 0.3958, 1.6474, 3.3701, 0, 0, 0);
		testMethod(565, 0.4041, 1.6637, 3.2709, 0, 0, 0);
		testMethod(570, 0.4124, 1.6796, 3.1718, 0, 0, 0);
		testMethod(575, 0.4209, 1.6949, 3.0727, 0, 0, 0);
		testMethod(580, 0.4294, 1.7098, 2.9736, 0, 0, 0);
		testMethod(585, 0.438, 1.7242, 2.8745, 0, 0.0002, 0.0469);
		testMethod(590, 0.4466, 1.7381, 2.7753, 0, 0.0012, 0.1899);
		testMethod(595, 0.4553, 1.7514, 2.6762, 0, 0.0029, 0.342);
		testMethod(600, 0.4641, 1.7643, 2.5771, 0, 0.0054, 0.5005);
		testMethod(605, 0.473, 1.7767, 2.478, 0.0001, 0.0087, 0.6652);
		testMethod(610, 0.4819, 1.7886, 2.3789, 0.0001, 0.0129, 0.8358);
		testMethod(615, 0.4909, 1.8, 2.2798, 0.0002, 0.018, 1.0119);
		testMethod(620, 0.4999, 1.8109, 2.1806, 0.0003, 0.0239, 1.1931);
		testMethod(625, 0.509, 1.8213, 2.0815, 0.0004, 0.0308, 1.3791);
		testMethod(630, 0.5181, 1.8312, 1.9824, 0.0006, 0.0387, 1.5695);
		testMethod(635, 0.5273, 1.8407, 1.8833, 0.0008, 0.0475, 1.7638);
		testMethod(640, 0.5365, 1.8496, 1.7842, 0.0011, 0.0573, 1.9618);
		testMethod(645, 0.5458, 1.858, 1.685, 0.0014, 0.0681, 2.1629);
		testMethod(650, 0.5551, 1.8659, 1.5859, 0.0018, 0.0799, 2.3667);
		testMethod(655, 0.5644, 1.8734, 1.4868, 0.0022, 0.0928, 2.5727);
		testMethod(660, 0.5738, 1.8803, 1.3877, 0.0027, 0.1067, 2.7806);
		testMethod(665, 0.5832, 1.8867, 1.2886, 0.0033, 0.1217, 2.9897);
		testMethod(670, 0.5927, 1.8927, 1.1894, 0.0039, 0.1377, 3.1998);
		testMethod(675, 0.6022, 1.8981, 1.0903, 0.0047, 0.1547, 3.4102);
		testMethod(680, 0.6117, 1.9031, 0.9912, 0.0055, 0.1728, 3.6204);
		testMethod(685, 0.6212, 1.9076, 0.8921, 0.0064, 0.192, 3.8301);
		testMethod(690, 0.6307, 1.9115, 0.793, 0.0074, 0.2122, 4.0386);
		testMethod(695, 0.6403, 1.915, 0.6938, 0.0085, 0.2334, 4.2454);
		testMethod(700, 0.6499, 1.918, 0.5947, 0.0097, 0.2556, 4.4501);
		testMethod(705, 0.6595, 1.9204, 0.4956, 0.0111, 0.2789, 4.6522);
		testMethod(710, 0.6691, 1.9224, 0.3965, 0.0125, 0.3031, 4.851);
		testMethod(715, 0.6787, 1.9239, 0.2974, 0.0141, 0.3284, 5.0462);
		testMethod(720, 0.6883, 1.9249, 0.1982, 0.0158, 0.3546, 5.2371);
		testMethod(725, 0.698, 1.9254, 0.0991, 0.0176, 0.3817, 5.4233);
		testMethod(730, 0.7076, 1.9254, 0, 0.0196, 0.4097, 5.6042);
		testMethod(735, 0.7172, 1.9254, 0, 0.0217, 0.4387, 5.8027);
		testMethod(740, 0.7268, 1.9254, 0, 0.024, 0.4687, 6.0012);
		testMethod(745, 0.7365, 1.9254, 0, 0.0264, 0.4997, 6.1997);
		testMethod(750, 0.7461, 1.9254, 0, 0.029, 0.5317, 6.3981);
		testMethod(755, 0.7557, 1.9254, 0, 0.0317, 0.5647, 6.5966);
		testMethod(760, 0.7653, 1.9254, 0, 0.0347, 0.5987, 6.7951);
		testMethod(765, 0.775, 1.9254, 0, 0.0377, 0.6336, 6.9936);
		testMethod(770, 0.7846, 1.9254, 0, 0.041, 0.6696, 7.1921);
		testMethod(775, 0.7942, 1.9254, 0, 0.0444, 0.7066, 7.4042);
		testMethod(780, 0.8039, 1.9254, 0, 0.0481, 0.7428, 7.2284);
		testMethod(785, 0.8135, 1.9254, 0, 0.0519, 0.7779, 7.0299);
		testMethod(790, 0.8231, 1.9254, 0, 0.0558, 0.8121, 6.8315);
		testMethod(795, 0.8327, 1.9254, 0, 0.06, 0.8452, 6.633);
		testMethod(800, 0.8424, 1.9254, 0, 0.0643, 0.8774, 6.4345);
		testMethod(805, 0.852, 1.9254, 0, 0.0688, 0.9086, 6.236);
		testMethod(810, 0.8616, 1.9254, 0, 0.0734, 0.9388, 6.0375);
		testMethod(815, 0.8712, 1.9254, 0, 0.0781, 0.968, 5.839);
		testMethod(820, 0.8809, 1.9254, 0, 0.083, 0.9962, 5.6405);
		testMethod(825, 0.8905, 1.9254, 0, 0.0881, 1.0234, 5.442);
		testMethod(830, 0.9001, 1.9254, 0, 0.0933, 1.0496, 5.2435);
		testMethod(835, 0.9098, 1.9254, 0, 0.0986, 1.0748, 5.045);
		testMethod(840, 0.9194, 1.9254, 0, 0.104, 1.0991, 4.8465);
		testMethod(845, 0.929, 1.9254, 0, 0.1096, 1.1223, 4.648);
		testMethod(850, 0.9386, 1.9254, 0, 0.1152, 1.1445, 4.4496);
		testMethod(855, 0.9483, 1.9254, 0, 0.121, 1.1658, 4.2511);
		testMethod(860, 0.9579, 1.9254, 0, 0.1269, 1.1861, 4.0526);
		testMethod(865, 0.9675, 1.9254, 0, 0.1329, 1.2053, 3.8541);
		testMethod(870, 0.9771, 1.9254, 0, 0.139, 1.2236, 3.6556);
		testMethod(875, 0.9868, 1.9254, 0, 0.1451, 1.2409, 3.4571);
		testMethod(880, 0.9964, 1.9254, 0, 0.1514, 1.2572, 3.2586);
		testMethod(885, 1.006, 1.9254, 0, 0.1577, 1.2725, 3.0601);
		testMethod(890, 1.0156, 1.9254, 0, 0.1641, 1.2868, 2.8616);
		testMethod(895, 1.0253, 1.9254, 0, 0.1706, 1.3001, 2.6631);
		testMethod(900, 1.0349, 1.9254, 0, 0.1771, 1.3124, 2.4646);
		testMethod(905, 1.0445, 1.9254, 0, 0.1837, 1.3238, 2.2661);
		testMethod(910, 1.0542, 1.9254, 0, 0.1903, 1.3341, 2.0676);
		testMethod(915, 1.0638, 1.9254, 0, 0.197, 1.3435, 1.8692);
		testMethod(920, 1.0734, 1.9254, 0, 0.2038, 1.3518, 1.6707);
		testMethod(925, 1.083, 1.9254, 0, 0.2105, 1.3592, 1.4722);
		testMethod(930, 1.0927, 1.9254, 0, 0.2173, 1.3655, 1.2737);
		testMethod(935, 1.1023, 1.9254, 0, 0.2242, 1.3709, 1.0752);
		testMethod(940, 1.1119, 1.9254, 0, 0.2311, 1.3753, 0.8767);
		testMethod(945, 1.1215, 1.9254, 0, 0.2379, 1.3787, 0.6782);
		testMethod(950, 1.1312, 1.9254, 0, 0.2448, 1.3811, 0.4797);
		testMethod(955, 1.1408, 1.9254, 0, 0.2517, 1.3825, 0.2812);
		testMethod(960, 1.1504, 1.9254, 0, 0.2587, 1.3829, 0.0834);
		testMethod(965, 1.1601, 1.9254, 0, 0.2656, 1.3829, 0);
		testMethod(970, 1.1697, 1.9254, 0, 0.2725, 1.3829, 0);
		testMethod(975, 1.1793, 1.9254, 0, 0.2794, 1.3829, 0);
		testMethod(980, 1.1889, 1.9254, 0, 0.2863, 1.3829, 0);
		testMethod(985, 1.1986, 1.9254, 0, 0.2932, 1.3829, 0);
		testMethod(990, 1.2082, 1.9254, 0, 0.3001, 1.3829, 0);
		testMethod(995, 1.2178, 1.9254, 0, 0.3071, 1.3829, 0);
		testMethod(1000, 1.2274, 1.9254, 0, 0.314, 1.3829, 0);
		testMethod(1005, 1.2371, 1.9254, 0, 0.3209, 1.3829, 0);
		testMethod(1010, 1.2467, 1.9254, 0, 0.3278, 1.3829, 0);
		testMethod(1015, 1.2563, 1.9254, 0, 0.3347, 1.3829, 0);
		testMethod(1020, 1.2659, 1.9254, 0, 0.3416, 1.3829, 0);
		testMethod(1025, 1.2756, 1.9254, 0, 0.3486, 1.3829, 0);
		testMethod(1030, 1.2852, 1.9254, 0, 0.3555, 1.3829, 0);
		testMethod(1035, 1.2948, 1.9254, 0, 0.3624, 1.3829, 0);
		testMethod(1040, 1.3045, 1.9254, 0, 0.3693, 1.3829, 0);
		testMethod(1045, 1.3141, 1.9254, 0, 0.3762, 1.3829, 0);
		testMethod(1050, 1.3237, 1.9254, 0, 0.3831, 1.3829, 0);
		testMethod(1055, 1.3333, 1.9254, 0, 0.39, 1.3829, 0);
		testMethod(1060, 1.343, 1.9254, 0, 0.397, 1.3829, 0);
		testMethod(1065, 1.3526, 1.9254, 0, 0.4039, 1.3829, 0);
		testMethod(1070, 1.3622, 1.9254, 0, 0.4108, 1.3829, 0);
		testMethod(1075, 1.3718, 1.9254, 0, 0.4177, 1.3829, 0);
		testMethod(1080, 1.3815, 1.9254, 0, 0.4246, 1.3829, 0);
		testMethod(1085, 1.3911, 1.9254, 0, 0.4315, 1.3829, 0);
		testMethod(1090, 1.4007, 1.9254, 0, 0.4384, 1.3829, 0);
		testMethod(1095, 1.4104, 1.9254, 0, 0.4454, 1.3829, 0);
		testMethod(1100, 1.42, 1.9254, 0, 0.4523, 1.3829, 0);
		testMethod(1105, 1.4296, 1.9254, 0, 0.4592, 1.3829, 0);
		testMethod(1110, 1.4392, 1.9254, 0, 0.4661, 1.3829, 0);
		testMethod(1115, 1.4489, 1.9254, 0, 0.473, 1.3829, 0);
		testMethod(1120, 1.4585, 1.9254, 0, 0.4799, 1.3829, 0);
		testMethod(1125, 1.4681, 1.9254, 0, 0.4868, 1.3829, 0);
		testMethod(1130, 1.4777, 1.9254, 0, 0.4938, 1.3829, 0);
		testMethod(1135, 1.4874, 1.9254, 0, 0.5007, 1.3829, 0);
		testMethod(1140, 1.497, 1.9254, 0, 0.5076, 1.3829, 0);
		testMethod(1145, 1.5066, 1.9254, 0, 0.5145, 1.3829, 0);
		testMethod(1150, 1.5163, 1.9254, 0, 0.5214, 1.3829, 0);
		testMethod(1155, 1.5259, 1.9254, 0, 0.5283, 1.3829, 0);
		testMethod(1160, 1.5355, 1.9254, 0, 0.5352, 1.3829, 0);
		testMethod(1165, 1.5451, 1.9254, 0, 0.5422, 1.3829, 0);
		testMethod(1170, 1.5548, 1.9254, 0, 0.5491, 1.3829, 0);
		testMethod(1175, 1.5644, 1.9254, 0, 0.556, 1.3829, 0);
		testMethod(1180, 1.574, 1.9254, 0, 0.5629, 1.3829, 0);
		testMethod(1185, 1.5836, 1.9254, 0, 0.5698, 1.3829, 0);
		testMethod(1190, 1.5933, 1.9254, 0, 0.5767, 1.3829, 0);
		testMethod(1195, 1.6029, 1.9254, 0, 0.5836, 1.3829, 0);
		testMethod(1200, 1.6125, 1.9254, 0, 0.5906, 1.3829, 0);
		testMethod(1205, 1.6221, 1.9254, 0, 0.5975, 1.3829, 0);
		testMethod(1210, 1.6318, 1.9254, 0, 0.6044, 1.3829, 0);
		testMethod(1215, 1.6414, 1.9254, 0, 0.6113, 1.3829, 0);
		testMethod(1220, 1.651, 1.9254, 0, 0.6182, 1.3829, 0);
		testMethod(1225, 1.6607, 1.9254, 0, 0.6251, 1.3829, 0);
		testMethod(1230, 1.6703, 1.9254, 0, 0.632, 1.3829, 0);
		testMethod(1235, 1.6799, 1.9254, 0, 0.639, 1.3829, 0);
		testMethod(1240, 1.6895, 1.9254, 0, 0.6459, 1.3829, 0);
		testMethod(1245, 1.6992, 1.9254, 0, 0.6528, 1.3829, 0);
		testMethod(1250, 1.7088, 1.9254, 0, 0.6597, 1.3829, 0);
		testMethod(1255, 1.7184, 1.9254, 0, 0.6666, 1.3829, 0);
		testMethod(1260, 1.728, 1.9254, 0, 0.6735, 1.3829, 0);
		testMethod(1265, 1.7377, 1.9254, 0, 0.6804, 1.3829, 0);
		testMethod(1270, 1.7473, 1.9254, 0, 0.6874, 1.3829, 0);
		testMethod(1275, 1.7569, 1.9254, 0, 0.6943, 1.3829, 0);
		testMethod(1280, 1.7666, 1.9254, 0, 0.7012, 1.3829, 0);
		testMethod(1285, 1.7762, 1.9254, 0, 0.7081, 1.3829, 0);
		testMethod(1290, 1.7858, 1.9254, 0, 0.715, 1.3829, 0);
		testMethod(1295, 1.7954, 1.9254, 0, 0.7219, 1.3829, 0);
		testMethod(1300, 1.8051, 1.9254, 0, 0.7289, 1.3829, 0);
		testMethod(1305, 1.8147, 1.9254, 0, 0.7358, 1.3829, 0);
		testMethod(1310, 1.8243, 1.9254, 0, 0.7427, 1.3829, 0);
		testMethod(1315, 1.8339, 1.9254, 0, 0.7496, 1.3829, 0);
		testMethod(1320, 1.8436, 1.9254, 0, 0.7565, 1.3829, 0);
		testMethod(1325, 1.8532, 1.9254, 0, 0.7634, 1.3829, 0);
		testMethod(1330, 1.8628, 1.9254, 0, 0.7703, 1.3829, 0);
		testMethod(1335, 1.8724, 1.9254, 0, 0.7773, 1.3829, 0);
		testMethod(1340, 1.8821, 1.9254, 0, 0.7842, 1.3829, 0);
		testMethod(1345, 1.8917, 1.9254, 0, 0.7911, 1.3829, -0.0093);
		testMethod(1350, 1.9013, 1.9254, 0, 0.798, 1.3821, -0.1599);
		testMethod(1355, 1.911, 1.9254, 0, 0.8049, 1.3803, -0.3584);
		testMethod(1360, 1.9206, 1.9254, 0, 0.8118, 1.3775, -0.5568);
		testMethod(1365, 1.9302, 1.9254, 0, 0.8187, 1.3737, -0.7553);
		testMethod(1370, 1.9398, 1.9254, 0, 0.8255, 1.3689, -0.9538);
		testMethod(1375, 1.9495, 1.9254, 0, 0.8324, 1.3632, -1.1523);
		testMethod(1380, 1.9591, 1.9254, 0, 0.8392, 1.3564, -1.3508);
		testMethod(1385, 1.9687, 1.9254, 0, 0.8459, 1.3487, -1.5493);
		testMethod(1390, 1.9783, 1.9254, 0, 0.8526, 1.3399, -1.7478);
		testMethod(1395, 1.988, 1.9254, 0, 0.8593, 1.3302, -1.9463);
		testMethod(1400, 1.9976, 1.9254, 0, 0.8659, 1.3195, -2.1448);
		testMethod(1405, 2.0072, 1.9254, 0, 0.8725, 1.3078, -2.3433);
		testMethod(1410, 2.0169, 1.9254, 0, 0.879, 1.2951, -2.5418);
		testMethod(1415, 2.0265, 1.9254, 0, 0.8855, 1.2814, -2.7403);
		testMethod(1420, 2.0361, 1.9254, 0, 0.8918, 1.2667, -2.9387);
		testMethod(1425, 2.0457, 1.9254, 0, 0.8981, 1.251, -3.1372);
		testMethod(1430, 2.0554, 1.9254, 0, 0.9043, 1.2343, -3.3357);
		testMethod(1435, 2.065, 1.9254, 0, 0.9105, 1.2166, -3.5342);
		testMethod(1440, 2.0746, 1.9254, 0, 0.9165, 1.198, -3.7327);
		testMethod(1445, 2.0842, 1.9254, 0, 0.9224, 1.1783, -3.9312);
		testMethod(1450, 2.0939, 1.9254, 0, 0.9283, 1.1577, -4.1297);
		testMethod(1455, 2.1035, 1.9254, 0, 0.934, 1.136, -4.3282);
		testMethod(1460, 2.1131, 1.9254, 0, 0.9396, 1.1134, -4.5267);
		testMethod(1465, 2.1228, 1.9254, 0, 0.9452, 1.0898, -4.7252);
		testMethod(1470, 2.1324, 1.9254, 0, 0.9505, 1.0651, -4.9237);
		testMethod(1475, 2.142, 1.9254, 0, 0.9558, 1.0395, -5.1222);
		testMethod(1480, 2.1516, 1.9254, 0, 0.9609, 1.0129, -5.3206);
		testMethod(1485, 2.1613, 1.9254, 0, 0.9659, 0.9853, -5.5191);
		testMethod(1490, 2.1709, 1.9254, 0, 0.9708, 0.9567, -5.7176);
		testMethod(1495, 2.1805, 1.9254, 0, 0.9755, 0.9272, -5.9161);
		testMethod(1500, 2.1901, 1.9254, 0, 0.9801, 0.8966, -6.1146);
		testMethod(1505, 2.1998, 1.9254, 0, 0.9845, 0.865, -6.3131);
		testMethod(1510, 2.2094, 1.9254, 0, 0.9887, 0.8325, -6.5116);
		testMethod(1515, 2.219, 1.9254, 0, 0.9928, 0.7989, -6.7101);
		testMethod(1520, 2.2286, 1.9254, 0, 0.9967, 0.7644, -6.9086);
		testMethod(1525, 2.2383, 1.9254, 0, 1.0004, 0.7288, -7.1071);
		testMethod(1530, 2.2479, 1.9254, 0, 1.004, 0.6923, -7.3056);
		testMethod(1535, 2.2575, 1.9254, 0, 1.0073, 0.6555, -7.3601);
		testMethod(1540, 2.2672, 1.9254, 0, 1.0105, 0.6199, -7.115);
		testMethod(1545, 2.2768, 1.9254, 0, 1.0135, 0.5854, -6.9165);
		testMethod(1550, 2.2864, 1.9254, 0, 1.0164, 0.5518, -6.718);
		testMethod(1555, 2.296, 1.9254, 0, 1.0191, 0.5192, -6.5195);
		testMethod(1560, 2.3057, 1.9254, 0, 1.0216, 0.4876, -6.321);
		testMethod(1565, 2.3153, 1.9254, 0, 1.0239, 0.4569, -6.1225);
		testMethod(1570, 2.3249, 1.9254, 0, 1.0262, 0.4273, -5.924);
		testMethod(1575, 2.3345, 1.9254, 0, 1.0282, 0.3987, -5.7255);
		testMethod(1580, 2.3442, 1.9254, 0, 1.0301, 0.3711, -5.5271);
		testMethod(1585, 2.3538, 1.9254, 0, 1.0319, 0.3444, -5.3286);
		testMethod(1590, 2.3634, 1.9254, 0, 1.0336, 0.3188, -5.1301);
		testMethod(1595, 2.3731, 1.9254, 0, 1.0351, 0.2941, -4.9316);
		testMethod(1600, 2.3827, 1.9254, 0, 1.0365, 0.2704, -4.7331);
		testMethod(1605, 2.3923, 1.9254, 0, 1.0378, 0.2478, -4.5346);
		testMethod(1610, 2.4019, 1.9254, 0, 1.039, 0.2261, -4.3361);
		testMethod(1615, 2.4116, 1.9254, 0, 1.0401, 0.2054, -4.1376);
		testMethod(1620, 2.4212, 1.9254, 0, 1.0411, 0.1857, -3.9391);
		testMethod(1625, 2.4308, 1.9254, 0, 1.042, 0.167, -3.7406);
		testMethod(1630, 2.4404, 1.9254, 0, 1.0427, 0.1493, -3.5421);
		testMethod(1635, 2.4501, 1.9254, 0, 1.0434, 0.1326, -3.3436);
		testMethod(1640, 2.4597, 1.9254, 0, 1.0441, 0.1169, -3.1452);
		testMethod(1645, 2.4693, 1.9254, 0, 1.0446, 0.1021, -2.9467);
		testMethod(1650, 2.4789, 1.9254, 0, 1.0451, 0.0884, -2.7482);
		testMethod(1655, 2.4886, 1.9254, 0, 1.0455, 0.0756, -2.5497);
		testMethod(1660, 2.4982, 1.9254, 0, 1.0458, 0.0639, -2.3512);
		testMethod(1665, 2.5078, 1.9254, 0, 1.0461, 0.0531, -2.1527);
		testMethod(1670, 2.5175, 1.9254, 0, 1.0464, 0.0433, -1.9542);
		testMethod(1675, 2.5271, 1.9254, 0, 1.0466, 0.0346, -1.7557);
		testMethod(1680, 2.5367, 1.9254, 0, 1.0467, 0.0268, -1.5572);
		testMethod(1685, 2.5463, 1.9254, 0, 1.0468, 0.02, -1.3587);
		testMethod(1690, 2.556, 1.9254, 0, 1.0469, 0.0142, -1.1602);
		testMethod(1695, 2.5656, 1.9254, 0, 1.047, 0.0094, -0.9617);
		testMethod(1700, 2.5752, 1.9254, 0, 1.047, 0.0056, -0.7632);
		testMethod(1705, 2.5848, 1.9254, 0, 1.047, 0.0027, -0.5648);
		testMethod(1710, 2.5945, 1.9254, 0, 1.0471, 0.0009, -0.3663);
		testMethod(1715, 2.6041, 1.9254, 0, 1.0471, 0.0001, -0.1678);
		testMethod(1720, 2.6137, 1.9254, 0, 1.0471, 0, -0.0118);
		testMethod(1725, 2.6234, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1730, 2.633, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1735, 2.6426, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1740, 2.6522, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1745, 2.6619, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1750, 2.6715, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1755, 2.6811, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1760, 2.6907, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1765, 2.7004, 1.9254, 0, 1.0471, 0, 0);
		testMethod(1770, 2.71, 1.9249, -0.0991, 1.0471, 0, 0);
		testMethod(1775, 2.7196, 1.9239, -0.1982, 1.0471, 0, 0);
		testMethod(1780, 2.7292, 1.9224, -0.2974, 1.0471, 0, 0);
		testMethod(1785, 2.7388, 1.9204, -0.3965, 1.0471, 0, 0);
		testMethod(1790, 2.7484, 1.918, -0.4956, 1.0471, 0, 0);
		testMethod(1795, 2.758, 1.915, -0.5947, 1.0471, 0, 0);
		testMethod(1800, 2.7676, 1.9115, -0.6938, 1.0471, 0, 0);
		testMethod(1805, 2.7771, 1.9076, -0.793, 1.0471, 0, 0);
		testMethod(1810, 2.7867, 1.9031, -0.8921, 1.0471, 0, 0);
		testMethod(1815, 2.7962, 1.8981, -0.9912, 1.0471, 0, 0);
		testMethod(1820, 2.8056, 1.8927, -1.0903, 1.0471, 0, 0);
		testMethod(1825, 2.8151, 1.8867, -1.1894, 1.0471, 0, 0);
		testMethod(1830, 2.8245, 1.8803, -1.2886, 1.0471, 0, 0);
		testMethod(1835, 2.8339, 1.8734, -1.3877, 1.0471, 0, 0);
		testMethod(1840, 2.8432, 1.8659, -1.4868, 1.0471, 0, 0);
		testMethod(1845, 2.8525, 1.858, -1.5859, 1.0471, 0, 0);
		testMethod(1850, 2.8618, 1.8496, -1.685, 1.0471, 0, 0);
		testMethod(1855, 2.871, 1.8407, -1.7842, 1.0471, 0, 0);
		testMethod(1860, 2.8802, 1.8312, -1.8833, 1.0471, 0, 0);
		testMethod(1865, 2.8894, 1.8213, -1.9824, 1.0471, 0, 0);
		testMethod(1870, 2.8984, 1.8109, -2.0815, 1.0471, 0, 0);
		testMethod(1875, 2.9075, 1.8, -2.1806, 1.0471, 0, 0);
		testMethod(1880, 2.9164, 1.7886, -2.2798, 1.0471, 0, 0);
		testMethod(1885, 2.9253, 1.7767, -2.3789, 1.0471, 0, 0);
		testMethod(1890, 2.9342, 1.7643, -2.478, 1.0471, 0, 0);
		testMethod(1895, 2.943, 1.7514, -2.5771, 1.0471, 0, 0);
		testMethod(1900, 2.9517, 1.7381, -2.6762, 1.0471, 0, 0);
		testMethod(1905, 2.9604, 1.7242, -2.7753, 1.0471, 0, 0);
		testMethod(1910, 2.969, 1.7098, -2.8745, 1.0471, 0, 0);
		testMethod(1915, 2.9775, 1.6949, -2.9736, 1.0471, 0, 0);
		testMethod(1920, 2.9859, 1.6796, -3.0727, 1.0471, 0, 0);
		testMethod(1925, 2.9943, 1.6637, -3.1718, 1.0471, 0, 0);
		testMethod(1930, 3.0025, 1.6474, -3.2709, 1.0471, 0, 0);
		testMethod(1935, 3.0107, 1.6305, -3.3701, 1.0471, 0, 0);
		testMethod(1940, 3.0188, 1.6132, -3.4692, 1.0471, 0, 0);
		testMethod(1945, 3.0269, 1.5958, -3.4692, 1.0471, 0, 0);
		testMethod(1950, 3.0348, 1.5785, -3.4692, 1.0471, 0, 0);
		testMethod(1955, 3.0426, 1.5611, -3.4692, 1.0471, 0, 0);
		testMethod(1960, 3.0504, 1.5438, -3.4692, 1.0471, 0, 0);
		testMethod(1965, 3.0581, 1.5264, -3.4692, 1.0471, 0, 0);
		testMethod(1970, 3.0657, 1.5091, -3.4692, 1.0471, 0, 0);
		testMethod(1975, 3.0732, 1.4917, -3.4692, 1.0471, 0, 0);
		testMethod(1980, 3.0806, 1.4744, -3.4692, 1.0471, 0, 0);
		testMethod(1985, 3.0879, 1.4571, -3.4692, 1.0471, 0, 0);
		testMethod(1990, 3.0952, 1.4397, -3.4692, 1.0471, 0, 0);
		testMethod(1995, 3.1023, 1.4224, -3.4692, 1.0471, 0, 0);
		testMethod(2000, 3.1094, 1.405, -3.4692, 1.0471, 0, 0);
		testMethod(2005, 3.1164, 1.3877, -3.4692, 1.0471, 0, 0);
		testMethod(2010, 3.1233, 1.3703, -3.4692, 1.0471, 0, 0);
		testMethod(2015, 3.1301, 1.353, -3.4692, 1.0471, 0, 0);
		testMethod(2020, 3.1368, 1.3356, -3.4692, 1.0471, 0, 0);
		testMethod(2025, 3.1434, 1.3183, -3.4692, 1.0471, 0, 0);
		testMethod(2030, 3.15, 1.3009, -3.4692, 1.0471, 0, 0);
		testMethod(2035, 3.1564, 1.2836, -3.4692, 1.0471, 0, 0);
		testMethod(2040, 3.1628, 1.2663, -3.4692, 1.0471, 0, 0);
		testMethod(2045, 3.1691, 1.2489, -3.4692, 1.0471, 0, 0);
		testMethod(2050, 3.1753, 1.2316, -3.4692, 1.0471, 0, 0);
		testMethod(2055, 3.1814, 1.2142, -3.4692, 1.0471, 0, 0);
		testMethod(2060, 3.1874, 1.1969, -3.4692, 1.0471, 0, 0);
		testMethod(2065, 3.1934, 1.1795, -3.4692, 1.0471, 0, 0);
		testMethod(2070, 3.1992, 1.1622, -3.4692, 1.0471, 0, 0);
		testMethod(2075, 3.205, 1.1448, -3.4692, 1.0471, 0, 0);
		testMethod(2080, 3.2107, 1.1275, -3.4692, 1.0471, 0, 0);
		testMethod(2085, 3.2163, 1.1101, -3.4692, 1.0471, 0, 0);
		testMethod(2090, 3.2218, 1.0928, -3.4692, 1.0471, 0, 0);
		testMethod(2095, 3.2272, 1.0754, -3.4692, 1.0471, 0, 0);
		testMethod(2100, 3.2325, 1.0581, -3.4692, 1.0471, 0, 0);
		testMethod(2105, 3.2378, 1.0408, -3.4692, 1.0471, 0, 0);
		testMethod(2110, 3.243, 1.0234, -3.4692, 1.0471, 0, 0);
		testMethod(2115, 3.248, 1.0061, -3.4692, 1.0471, 0, 0);
		testMethod(2120, 3.253, 0.9887, -3.4692, 1.0471, 0, 0);
		testMethod(2125, 3.2579, 0.9714, -3.4692, 1.0471, 0, 0);
		testMethod(2130, 3.2627, 0.954, -3.4692, 1.0471, 0, 0);
		testMethod(2135, 3.2675, 0.9367, -3.4692, 1.0471, 0, 0);
		testMethod(2140, 3.2721, 0.9193, -3.4692, 1.0471, 0, 0);
		testMethod(2145, 3.2766, 0.902, -3.4692, 1.0471, 0, 0);
		testMethod(2150, 3.2811, 0.8846, -3.4692, 1.0471, 0, 0);
		testMethod(2155, 3.2855, 0.8673, -3.4692, 1.0471, 0, 0);
		testMethod(2160, 3.2898, 0.85, -3.4692, 1.0471, 0, 0);
		testMethod(2165, 3.294, 0.8326, -3.4692, 1.0471, 0, 0);
		testMethod(2170, 3.2981, 0.8153, -3.4692, 1.0471, 0, 0);
		testMethod(2175, 3.3021, 0.7979, -3.4692, 1.0471, 0, 0);
		testMethod(2180, 3.3061, 0.7806, -3.4692, 1.0471, 0, 0);
		testMethod(2185, 3.3099, 0.7632, -3.4692, 1.0471, 0, 0);
		testMethod(2190, 3.3137, 0.7459, -3.4692, 1.0471, 0, 0);
		testMethod(2195, 3.3174, 0.7285, -3.4692, 1.0471, 0, 0);
		testMethod(2200, 3.321, 0.7112, -3.4692, 1.0471, 0, 0);
		testMethod(2205, 3.3245, 0.6938, -3.4692, 1.0471, 0, 0);
		testMethod(2210, 3.3279, 0.6765, -3.4692, 1.0471, 0, 0);
		testMethod(2215, 3.3313, 0.6591, -3.4692, 1.0471, 0, 0);
		testMethod(2220, 3.3345, 0.6418, -3.4692, 1.0471, 0, 0);
		testMethod(2225, 3.3377, 0.6245, -3.4692, 1.0471, 0, 0);
		testMethod(2230, 3.3408, 0.6071, -3.4692, 1.0471, 0, 0);
		testMethod(2235, 3.3438, 0.5898, -3.4692, 1.0471, 0, 0);
		testMethod(2240, 3.3467, 0.5724, -3.4692, 1.0471, 0, 0);
		testMethod(2245, 3.3495, 0.5551, -3.4692, 1.0471, 0, 0);
		testMethod(2250, 3.3522, 0.5377, -3.4692, 1.0471, 0, 0);
		testMethod(2255, 3.3549, 0.5204, -3.4692, 1.0471, 0, 0);
		testMethod(2260, 3.3574, 0.503, -3.4692, 1.0471, 0, 0);
		testMethod(2265, 3.3599, 0.4857, -3.4692, 1.0471, 0, 0);
		testMethod(2270, 3.3623, 0.4683, -3.4692, 1.0471, 0, 0);
		testMethod(2275, 3.3646, 0.451, -3.4692, 1.0471, 0, 0);
		testMethod(2280, 3.3668, 0.4336, -3.4692, 1.0471, 0, 0);
		testMethod(2285, 3.3689, 0.4163, -3.4692, 1.0471, 0, 0);
		testMethod(2290, 3.371, 0.399, -3.4692, 1.0471, 0, 0);
		testMethod(2295, 3.3729, 0.3816, -3.4692, 1.0471, 0, 0);
		testMethod(2300, 3.3748, 0.3643, -3.4692, 1.0471, 0, 0);
		testMethod(2305, 3.3766, 0.3469, -3.4692, 1.0471, 0, 0);
		testMethod(2310, 3.3782, 0.3296, -3.4692, 1.0471, 0, 0);
		testMethod(2315, 3.3799, 0.3122, -3.4692, 1.0471, 0, 0);
		testMethod(2320, 3.3814, 0.2949, -3.4692, 1.0471, 0, 0);
		testMethod(2325, 3.3828, 0.278, -3.3701, 1.0471, 0, 0);
		testMethod(2330, 3.3842, 0.2617, -3.2709, 1.0471, 0, 0);
		testMethod(2335, 3.3854, 0.2458, -3.1718, 1.0471, 0, 0);
		testMethod(2340, 3.3866, 0.2305, -3.0727, 1.0471, 0, 0);
		testMethod(2345, 3.3877, 0.2156, -2.9736, 1.0471, 0, 0);
		testMethod(2350, 3.3888, 0.2012, -2.8745, 1.0471, 0, 0);
		testMethod(2355, 3.3897, 0.1873, -2.7753, 1.0471, 0, 0);
		testMethod(2360, 3.3906, 0.174, -2.6762, 1.0471, 0, 0);
		testMethod(2365, 3.3915, 0.1611, -2.5771, 1.0471, 0, 0);
		testMethod(2370, 3.3923, 0.1487, -2.478, 1.0471, 0, 0);
		testMethod(2375, 3.393, 0.1368, -2.3789, 1.0471, 0, 0);
		testMethod(2380, 3.3936, 0.1254, -2.2798, 1.0471, 0, 0);
		testMethod(2385, 3.3942, 0.1145, -2.1806, 1.0471, 0, 0);
		testMethod(2390, 3.3948, 0.1041, -2.0815, 1.0471, 0, 0);
		testMethod(2395, 3.3953, 0.0942, -1.9824, 1.0471, 0, 0);
		testMethod(2400, 3.3957, 0.0847, -1.8833, 1.0471, 0, 0);
		testMethod(2405, 3.3961, 0.0758, -1.7842, 1.0471, 0, 0);
		testMethod(2410, 3.3965, 0.0674, -1.685, 1.0471, 0, 0);
		testMethod(2415, 3.3968, 0.0595, -1.5859, 1.0471, 0, 0);
		testMethod(2420, 3.3971, 0.052, -1.4868, 1.0471, 0, 0);
		testMethod(2425, 3.3973, 0.0451, -1.3877, 1.0471, 0, 0);
		testMethod(2430, 3.3975, 0.0387, -1.2886, 1.0471, 0, 0);
		testMethod(2435, 3.3977, 0.0327, -1.1894, 1.0471, 0, 0);
		testMethod(2440, 3.3979, 0.0273, -1.0903, 1.0471, 0, 0);
		testMethod(2445, 3.398, 0.0223, -0.9912, 1.0471, 0, 0);
		testMethod(2450, 3.3981, 0.0178, -0.8921, 1.0471, 0, 0);
		testMethod(2455, 3.3982, 0.0139, -0.793, 1.0471, 0, 0);
		testMethod(2460, 3.3982, 0.0104, -0.6938, 1.0471, 0, 0);
		testMethod(2465, 3.3983, 0.0074, -0.5947, 1.0471, 0, 0);
		testMethod(2470, 3.3983, 0.005, -0.4956, 1.0471, 0, 0);
		testMethod(2475, 3.3983, 0.003, -0.3965, 1.0471, 0, 0);
		testMethod(2480, 3.3983, 0.0015, -0.2974, 1.0471, 0, 0);
		testMethod(2485, 3.3983, 0.0005, -0.1982, 1.0471, 0, 0);
		testMethod(2490, 3.3983, 0, -0.0991, 1.0471, 0, 0);
		testMethod(2495, 3.3983, 0, 0, 1.0471, 0, 0);
		testMethod(2495, 3.3983, 0, 0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}