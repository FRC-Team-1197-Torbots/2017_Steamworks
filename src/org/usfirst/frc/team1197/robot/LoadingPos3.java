package org.usfirst.frc.team1197.robot;

public class LoadingPos3 extends TorTrajectory {

	public LoadingPos3() {
		super(1.8867, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0621, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1242, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1863, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2484, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3105, 0, 0, 0);
		testMethod(30, 0.0001, 0.0065, 0.3726, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4347, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4968, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.5589, 0, 0, 0);
		testMethod(50, 0.0003, 0.0171, 0.621, 0, 0, 0);
		testMethod(55, 0.0004, 0.0205, 0.6831, 0, 0, 0);
		testMethod(60, 0.0005, 0.0242, 0.7452, 0, 0, 0);
		testMethod(65, 0.0006, 0.0283, 0.8073, 0, 0, 0);
		testMethod(70, 0.0008, 0.0326, 0.8694, 0, 0, 0);
		testMethod(75, 0.001, 0.0373, 0.9315, 0, 0, 0);
		testMethod(80, 0.0012, 0.0422, 0.9936, 0, 0, 0);
		testMethod(85, 0.0014, 0.0475, 1.0557, 0, 0, 0);
		testMethod(90, 0.0016, 0.0531, 1.1178, 0, 0, 0);
		testMethod(95, 0.0019, 0.059, 1.1799, 0, 0, 0);
		testMethod(100, 0.0022, 0.0652, 1.242, 0, 0, 0);
		testMethod(105, 0.0026, 0.0717, 1.3041, 0, 0, 0);
		testMethod(110, 0.0029, 0.0786, 1.3663, 0, 0, 0);
		testMethod(115, 0.0034, 0.0857, 1.4284, 0, 0, 0);
		testMethod(120, 0.0038, 0.0932, 1.4905, 0, 0, 0);
		testMethod(125, 0.0043, 0.1009, 1.5526, 0, 0, 0);
		testMethod(130, 0.0048, 0.109, 1.6147, 0, 0, 0);
		testMethod(135, 0.0054, 0.1174, 1.6768, 0, 0, 0);
		testMethod(140, 0.006, 0.1261, 1.7389, 0, 0, 0);
		testMethod(145, 0.0066, 0.1351, 1.801, 0, 0, 0);
		testMethod(150, 0.0073, 0.1444, 1.8631, 0, 0, 0);
		testMethod(155, 0.0081, 0.154, 1.9252, 0, 0, 0);
		testMethod(160, 0.0089, 0.164, 1.9873, 0, 0, 0);
		testMethod(165, 0.0097, 0.1742, 2.0494, 0, 0, 0);
		testMethod(170, 0.0106, 0.1848, 2.1115, 0, 0, 0);
		testMethod(175, 0.0116, 0.1956, 2.1736, 0, 0, 0);
		testMethod(180, 0.0126, 0.2068, 2.2357, 0, 0, 0);
		testMethod(185, 0.0136, 0.2183, 2.2978, 0, 0, 0);
		testMethod(190, 0.0148, 0.2301, 2.3599, 0, 0, 0);
		testMethod(195, 0.0159, 0.2422, 2.422, 0, 0, 0);
		testMethod(200, 0.0172, 0.2546, 2.4841, 0, 0, 0);
		testMethod(205, 0.0185, 0.267, 2.4841, 0, 0, 0);
		testMethod(210, 0.0199, 0.2795, 2.4841, 0, 0, 0);
		testMethod(215, 0.0213, 0.2919, 2.4841, 0, 0, 0);
		testMethod(220, 0.0228, 0.3043, 2.4841, 0, 0, 0);
		testMethod(225, 0.0243, 0.3167, 2.4841, 0, 0, 0);
		testMethod(230, 0.0259, 0.3291, 2.4841, 0, 0, 0);
		testMethod(235, 0.0276, 0.3416, 2.4841, 0, 0, 0);
		testMethod(240, 0.0294, 0.354, 2.4841, 0, 0, 0);
		testMethod(245, 0.0312, 0.3664, 2.4841, 0, 0, 0);
		testMethod(250, 0.033, 0.3788, 2.4841, 0, 0, 0);
		testMethod(255, 0.0349, 0.3912, 2.4841, 0, 0, 0.0009);
		testMethod(260, 0.0369, 0.4037, 2.4841, 0, 0, 0.0027);
		testMethod(265, 0.039, 0.4161, 2.4841, 0, 0, 0.0049);
		testMethod(270, 0.0411, 0.4285, 2.4841, 0, 0.0001, 0.0074);
		testMethod(275, 0.0433, 0.4409, 2.4841, 0, 0.0001, 0.0103);
		testMethod(280, 0.0455, 0.4533, 2.4841, 0, 0.0002, 0.0137);
		testMethod(285, 0.0478, 0.4658, 2.4841, 0, 0.0003, 0.0174);
		testMethod(290, 0.0502, 0.4782, 2.4841, 0, 0.0004, 0.0217);
		testMethod(295, 0.0526, 0.4906, 2.4841, 0, 0.0005, 0.0264);
		testMethod(300, 0.0551, 0.503, 2.4841, 0, 0.0007, 0.0317);
		testMethod(305, 0.0576, 0.5154, 2.4841, 0, 0.0009, 0.0376);
		testMethod(310, 0.0602, 0.5279, 2.4841, 0, 0.0011, 0.044);
		testMethod(315, 0.0629, 0.5403, 2.4841, 0, 0.0013, 0.0511);
		testMethod(320, 0.0656, 0.5527, 2.4841, 0, 0.0016, 0.0588);
		testMethod(325, 0.0684, 0.5651, 2.4841, 0, 0.002, 0.0673);
		testMethod(330, 0.0713, 0.5776, 2.4841, 0.0001, 0.0024, 0.0764);
		testMethod(335, 0.0742, 0.59, 2.4841, 0.0001, 0.0028, 0.0864);
		testMethod(340, 0.0772, 0.6024, 2.4841, 0.0001, 0.0033, 0.0972);
		testMethod(345, 0.0802, 0.6148, 2.4841, 0.0001, 0.0038, 0.1088);
		testMethod(350, 0.0833, 0.6272, 2.4841, 0.0001, 0.0044, 0.1213);
		testMethod(355, 0.0865, 0.6397, 2.4841, 0.0001, 0.0051, 0.1347);
		testMethod(360, 0.0897, 0.6521, 2.4841, 0.0002, 0.0058, 0.149);
		testMethod(365, 0.093, 0.6645, 2.4841, 0.0002, 0.0067, 0.1644);
		testMethod(370, 0.0964, 0.6769, 2.4841, 0.0002, 0.0076, 0.1809);
		testMethod(375, 0.0998, 0.6893, 2.4841, 0.0003, 0.0086, 0.1984);
		testMethod(380, 0.1033, 0.7018, 2.4841, 0.0003, 0.0097, 0.2171);
		testMethod(385, 0.1068, 0.7142, 2.4841, 0.0004, 0.0108, 0.2369);
		testMethod(390, 0.1104, 0.7266, 2.4841, 0.0004, 0.0121, 0.258);
		testMethod(395, 0.1141, 0.739, 2.4841, 0.0005, 0.0135, 0.2803);
		testMethod(400, 0.1178, 0.7514, 2.4841, 0.0006, 0.015, 0.304);
		testMethod(405, 0.1216, 0.7639, 2.4841, 0.0006, 0.0167, 0.329);
		testMethod(410, 0.1254, 0.7763, 2.4841, 0.0007, 0.0185, 0.3554);
		testMethod(415, 0.1293, 0.7887, 2.4841, 0.0008, 0.0204, 0.3833);
		testMethod(420, 0.1333, 0.8011, 2.4841, 0.0009, 0.0224, 0.4127);
		testMethod(425, 0.1374, 0.8135, 2.4841, 0.0011, 0.0247, 0.4437);
		testMethod(430, 0.1415, 0.826, 2.4841, 0.0012, 0.027, 0.4763);
		testMethod(435, 0.1456, 0.8384, 2.4841, 0.0013, 0.0296, 0.5105);
		testMethod(440, 0.1498, 0.8508, 2.4841, 0.0015, 0.0323, 0.5465);
		testMethod(445, 0.1541, 0.8632, 2.4841, 0.0016, 0.0353, 0.5842);
		testMethod(450, 0.1585, 0.8756, 2.4841, 0.0018, 0.0384, 0.6238);
		testMethod(455, 0.1629, 0.8881, 2.4841, 0.002, 0.0417, 0.6653);
		testMethod(460, 0.1674, 0.9005, 2.4841, 0.0023, 0.0452, 0.7086);
		testMethod(465, 0.1719, 0.9129, 2.4841, 0.0025, 0.049, 0.754);
		testMethod(470, 0.1765, 0.9253, 2.4841, 0.0027, 0.053, 0.8015);
		testMethod(475, 0.1811, 0.9377, 2.4841, 0.003, 0.0573, 0.8511);
		testMethod(480, 0.1859, 0.9502, 2.4841, 0.0033, 0.0618, 0.9028);
		testMethod(485, 0.1906, 0.9626, 2.4841, 0.0036, 0.0666, 0.9568);
		testMethod(490, 0.1955, 0.975, 2.4841, 0.004, 0.0716, 1.013);
		testMethod(495, 0.2004, 0.9874, 2.4841, 0.0044, 0.077, 1.0717);
		testMethod(500, 0.2054, 0.9998, 2.4841, 0.0048, 0.0827, 1.1327);
		testMethod(505, 0.2104, 1.0123, 2.4841, 0.0052, 0.0886, 1.1962);
		testMethod(510, 0.2155, 1.0247, 2.4841, 0.0056, 0.095, 1.2623);
		testMethod(515, 0.2206, 1.0371, 2.4841, 0.0061, 0.1016, 1.331);
		testMethod(520, 0.2259, 1.0495, 2.4841, 0.0067, 0.1086, 1.4024);
		testMethod(525, 0.2311, 1.0619, 2.4841, 0.0072, 0.116, 1.4765);
		testMethod(530, 0.2365, 1.0744, 2.4841, 0.0078, 0.1238, 1.5534);
		testMethod(535, 0.2419, 1.0868, 2.4841, 0.0085, 0.1319, 1.6332);
		testMethod(540, 0.2473, 1.0992, 2.4841, 0.0091, 0.1405, 1.716);
		testMethod(545, 0.2529, 1.1116, 2.4841, 0.0099, 0.1495, 1.8018);
		testMethod(550, 0.2585, 1.1241, 2.4841, 0.0106, 0.159, 1.8906);
		testMethod(555, 0.2641, 1.1365, 2.4841, 0.0115, 0.1689, 1.9827);
		testMethod(560, 0.2698, 1.1489, 2.4841, 0.0123, 0.1793, 2.0779);
		testMethod(565, 0.2756, 1.1613, 2.4841, 0.0132, 0.1902, 2.1765);
		testMethod(570, 0.2814, 1.1737, 2.4841, 0.0142, 0.2016, 2.2785);
		testMethod(575, 0.2873, 1.1862, 2.4841, 0.0153, 0.2135, 2.3839);
		testMethod(580, 0.2933, 1.1986, 2.4841, 0.0164, 0.2259, 2.4928);
		testMethod(585, 0.2993, 1.211, 2.4841, 0.0175, 0.239, 2.6054);
		testMethod(590, 0.3054, 1.2234, 2.4841, 0.0188, 0.2526, 2.7216);
		testMethod(595, 0.3116, 1.2358, 2.4841, 0.02, 0.2668, 2.8417);
		testMethod(600, 0.3178, 1.2483, 2.4841, 0.0214, 0.2816, 2.9655);
		testMethod(605, 0.324, 1.2607, 2.4841, 0.0229, 0.2971, 3.0933);
		testMethod(610, 0.3304, 1.2731, 2.4841, 0.0244, 0.3132, 3.2251);
		testMethod(615, 0.3368, 1.2855, 2.4841, 0.026, 0.33, 3.3609);
		testMethod(620, 0.3432, 1.2979, 2.4841, 0.0277, 0.3475, 3.501);
		testMethod(625, 0.3497, 1.3104, 2.4841, 0.0295, 0.3657, 3.6452);
		testMethod(630, 0.3563, 1.3228, 2.4841, 0.0314, 0.3847, 3.7938);
		testMethod(635, 0.363, 1.3352, 2.4841, 0.0333, 0.4044, 3.9469);
		testMethod(640, 0.3697, 1.3476, 2.4841, 0.0354, 0.425, 4.1044);
		testMethod(645, 0.3764, 1.36, 2.4841, 0.0376, 0.4463, 4.2665);
		testMethod(650, 0.3833, 1.3725, 2.4841, 0.0399, 0.4685, 4.4333);
		testMethod(655, 0.3902, 1.3849, 2.4841, 0.0423, 0.4915, 4.6048);
		testMethod(660, 0.3971, 1.3973, 2.4841, 0.0448, 0.5154, 4.7812);
		testMethod(665, 0.4041, 1.4097, 2.4841, 0.0474, 0.5402, 4.9626);
		testMethod(670, 0.4112, 1.4221, 2.4841, 0.0502, 0.5659, 5.1489);
		testMethod(675, 0.4184, 1.4346, 2.4841, 0.0531, 0.5927, 5.3404);
		testMethod(680, 0.4256, 1.447, 2.4841, 0.0561, 0.6203, 5.5371);
		testMethod(685, 0.4328, 1.4594, 2.4841, 0.0593, 0.649, 5.7391);
		testMethod(690, 0.4402, 1.4718, 2.4841, 0.0626, 0.6788, 5.9465);
		testMethod(695, 0.4476, 1.4842, 2.4841, 0.0661, 0.7096, 6.1594);
		testMethod(700, 0.455, 1.4967, 2.4841, 0.0697, 0.7415, 6.3779);
		testMethod(705, 0.4625, 1.5091, 2.4841, 0.0735, 0.7745, 6.602);
		testMethod(710, 0.4701, 1.5215, 2.4841, 0.0774, 0.8086, 6.8316);
		testMethod(715, 0.4777, 1.5339, 2.4841, 0.0816, 0.8435, 6.9807);
		testMethod(720, 0.4854, 1.5463, 2.4841, 0.0859, 0.8791, 7.1188);
		testMethod(725, 0.4932, 1.5588, 2.4841, 0.0904, 0.9154, 7.258);
		testMethod(730, 0.501, 1.5712, 2.4841, 0.095, 0.9524, 7.3983);
		testMethod(735, 0.5089, 1.5836, 2.4841, 0.0999, 0.9901, 7.5397);
		testMethod(740, 0.5169, 1.596, 2.4841, 0.1049, 1.0284, 7.6675);
		testMethod(745, 0.5249, 1.6085, 2.4841, 0.1102, 1.0667, 7.6562);
		testMethod(750, 0.5329, 1.6209, 2.4841, 0.1156, 1.1051, 7.6799);
		testMethod(755, 0.5411, 1.6333, 2.4841, 0.1212, 1.1436, 7.6993);
		testMethod(760, 0.5493, 1.6457, 2.4841, 0.127, 1.1822, 7.7143);
		testMethod(765, 0.5575, 1.6581, 2.4841, 0.1331, 1.2208, 7.7248);
		testMethod(770, 0.5659, 1.6706, 2.4841, 0.1393, 1.2595, 7.7306);
		testMethod(775, 0.5742, 1.683, 2.4841, 0.1456, 1.2981, 7.7316);
		testMethod(780, 0.5827, 1.6951, 2.422, 0.1522, 1.3365, 7.6783);
		testMethod(785, 0.5912, 1.7069, 2.3599, 0.159, 1.3746, 7.6158);
		testMethod(790, 0.5998, 1.7184, 2.2978, 0.166, 1.4123, 7.5443);
		testMethod(795, 0.6084, 1.7296, 2.2357, 0.1731, 1.4496, 7.4638);
		testMethod(800, 0.6171, 1.7404, 2.1736, 0.1805, 1.4865, 7.3744);
		testMethod(805, 0.6258, 1.751, 2.1115, 0.188, 1.5229, 7.2763);
		testMethod(810, 0.6346, 1.7612, 2.0494, 0.1957, 1.5587, 7.1695);
		testMethod(815, 0.6434, 1.7712, 1.9873, 0.2036, 1.594, 7.0542);
		testMethod(820, 0.6523, 1.7808, 1.9252, 0.2116, 1.6287, 6.9306);
		testMethod(825, 0.6612, 1.7901, 1.8631, 0.2199, 1.6626, 6.7986);
		testMethod(830, 0.6702, 1.7991, 1.801, 0.2283, 1.6959, 6.6587);
		testMethod(835, 0.6792, 1.8078, 1.7389, 0.2368, 1.7285, 6.5108);
		testMethod(840, 0.6882, 1.8162, 1.6768, 0.2455, 1.7603, 6.3551);
		testMethod(845, 0.6974, 1.8243, 1.6147, 0.2544, 1.7912, 6.192);
		testMethod(850, 0.7065, 1.832, 1.5526, 0.2635, 1.8213, 6.0215);
		testMethod(855, 0.7157, 1.8395, 1.4905, 0.2726, 1.8506, 5.8439);
		testMethod(860, 0.7249, 1.8466, 1.4284, 0.282, 1.8789, 5.6593);
		testMethod(865, 0.7341, 1.8534, 1.3663, 0.2914, 1.9062, 5.4681);
		testMethod(870, 0.7434, 1.86, 1.3041, 0.301, 1.9325, 5.2704);
		testMethod(875, 0.7527, 1.8662, 1.242, 0.3107, 1.9579, 5.0664);
		testMethod(880, 0.7621, 1.8721, 1.1799, 0.3206, 1.9822, 4.8565);
		testMethod(885, 0.7715, 1.8777, 1.1178, 0.3306, 2.0054, 4.6408);
		testMethod(890, 0.7809, 1.8829, 1.0557, 0.3406, 2.0275, 4.4197);
		testMethod(895, 0.7903, 1.8879, 0.9936, 0.3508, 2.0484, 4.1934);
		testMethod(900, 0.7997, 1.8926, 0.9315, 0.3611, 2.0682, 3.9621);
		testMethod(905, 0.8092, 1.8969, 0.8694, 0.3715, 2.0869, 3.7262);
		testMethod(910, 0.8187, 1.901, 0.8073, 0.382, 2.1043, 3.4859);
		testMethod(915, 0.8282, 1.9047, 0.7452, 0.3926, 2.1205, 3.2415);
		testMethod(920, 0.8377, 1.9081, 0.6831, 0.4032, 2.1355, 2.9933);
		testMethod(925, 0.8473, 1.9112, 0.621, 0.4139, 2.1492, 2.7416);
		testMethod(930, 0.8569, 1.914, 0.5589, 0.4247, 2.1616, 2.4867);
		testMethod(935, 0.8664, 1.9165, 0.4968, 0.4355, 2.1728, 2.2289);
		testMethod(940, 0.876, 1.9187, 0.4347, 0.4464, 2.1826, 1.9685);
		testMethod(945, 0.8856, 1.9205, 0.3726, 0.4574, 2.1911, 1.7058);
		testMethod(950, 0.8952, 1.9221, 0.3105, 0.4683, 2.1983, 1.4411);
		testMethod(955, 0.9048, 1.9233, 0.2484, 0.4793, 2.2042, 1.1748);
		testMethod(960, 0.9145, 1.9242, 0.1863, 0.4904, 2.2087, 0.9072);
		testMethod(965, 0.9241, 1.9249, 0.1242, 0.5014, 2.2119, 0.6385);
		testMethod(970, 0.9337, 1.9252, 0.0621, 0.5125, 2.2138, 0.3692);
		testMethod(975, 0.9433, 1.9252, 0, 0.5236, 2.2143, 0.0994);
		testMethod(980, 0.953, 1.9252, 0, 0.5346, 2.2138, -0.0992);
		testMethod(985, 0.9626, 1.9249, -0.0621, 0.5457, 2.2119, -0.369);
		testMethod(990, 0.9722, 1.9242, -0.1242, 0.5567, 2.2087, -0.6383);
		testMethod(995, 0.9818, 1.9233, -0.1863, 0.5678, 2.2042, -0.907);
		testMethod(1000, 0.9914, 1.9221, -0.2484, 0.5788, 2.1983, -1.1746);
		testMethod(1005, 1.001, 1.9205, -0.3105, 0.5898, 2.1911, -1.441);
		testMethod(1010, 1.0106, 1.9187, -0.3726, 0.6007, 2.1826, -1.7056);
		testMethod(1015, 1.0202, 1.9165, -0.4347, 0.6116, 2.1728, -1.9683);
		testMethod(1020, 1.0298, 1.914, -0.4968, 0.6224, 2.1616, -2.2287);
		testMethod(1025, 1.0394, 1.9112, -0.5589, 0.6332, 2.1492, -2.4865);
		testMethod(1030, 1.0489, 1.9081, -0.621, 0.6439, 2.1355, -2.7414);
		testMethod(1035, 1.0585, 1.9047, -0.6831, 0.6545, 2.1205, -2.9931);
		testMethod(1040, 1.068, 1.901, -0.7452, 0.6651, 2.1043, -3.2413);
		testMethod(1045, 1.0775, 1.8969, -0.8073, 0.6756, 2.0869, -3.4857);
		testMethod(1050, 1.0869, 1.8926, -0.8694, 0.686, 2.0683, -3.726);
		testMethod(1055, 1.0964, 1.8879, -0.9315, 0.6963, 2.0484, -3.9619);
		testMethod(1060, 1.1058, 1.8829, -0.9936, 0.7065, 2.0275, -4.1932);
		testMethod(1065, 1.1152, 1.8777, -1.0557, 0.7165, 2.0054, -4.4195);
		testMethod(1070, 1.1246, 1.8721, -1.1178, 0.7265, 1.9822, -4.6407);
		testMethod(1075, 1.1339, 1.8662, -1.1799, 0.7364, 1.9579, -4.8563);
		testMethod(1080, 1.1432, 1.86, -1.242, 0.7461, 1.9326, -5.0663);
		testMethod(1085, 1.1525, 1.8534, -1.3041, 0.7557, 1.9062, -5.2702);
		testMethod(1090, 1.1618, 1.8466, -1.3663, 0.7651, 1.8789, -5.4679);
		testMethod(1095, 1.171, 1.8395, -1.4284, 0.7745, 1.8506, -5.6592);
		testMethod(1100, 1.1802, 1.832, -1.4905, 0.7836, 1.8214, -5.8437);
		testMethod(1105, 1.1893, 1.8243, -1.5526, 0.7927, 1.7913, -6.0213);
		testMethod(1110, 1.1984, 1.8162, -1.6147, 0.8016, 1.7603, -6.1918);
		testMethod(1115, 1.2075, 1.8078, -1.6768, 0.8103, 1.7285, -6.355);
		testMethod(1120, 1.2165, 1.7991, -1.7389, 0.8188, 1.696, -6.5106);
		testMethod(1125, 1.2255, 1.7901, -1.801, 0.8272, 1.6627, -6.6585);
		testMethod(1130, 1.2344, 1.7808, -1.8631, 0.8355, 1.6287, -6.7985);
		testMethod(1135, 1.2433, 1.7712, -1.9252, 0.8435, 1.594, -6.9304);
		testMethod(1140, 1.2521, 1.7612, -1.9873, 0.8514, 1.5588, -7.0541);
		testMethod(1145, 1.2609, 1.751, -2.0494, 0.8591, 1.5229, -7.1694);
		testMethod(1150, 1.2696, 1.7404, -2.1115, 0.8666, 1.4865, -7.2762);
		testMethod(1155, 1.2783, 1.7296, -2.1736, 0.874, 1.4497, -7.3743);
		testMethod(1160, 1.2869, 1.7184, -2.2357, 0.8811, 1.4123, -7.4637);
		testMethod(1165, 1.2955, 1.7069, -2.2978, 0.8881, 1.3746, -7.5442);
		testMethod(1170, 1.304, 1.6951, -2.3599, 0.8949, 1.3365, -7.6157);
		testMethod(1175, 1.3124, 1.683, -2.422, 0.9015, 1.2981, -7.6782);
		testMethod(1180, 1.3208, 1.6706, -2.4841, 0.9079, 1.2595, -7.7315);
		testMethod(1185, 1.3291, 1.6581, -2.4841, 0.9141, 1.2208, -7.7305);
		testMethod(1190, 1.3374, 1.6457, -2.4841, 0.9201, 1.1822, -7.7247);
		testMethod(1195, 1.3456, 1.6333, -2.4841, 0.9259, 1.1436, -7.7142);
		testMethod(1200, 1.3537, 1.6209, -2.4841, 0.9315, 1.1051, -7.6993);
		testMethod(1205, 1.3618, 1.6085, -2.4841, 0.9369, 1.0667, -7.6798);
		testMethod(1210, 1.3698, 1.596, -2.4841, 0.9422, 1.0285, -7.6561);
		testMethod(1215, 1.3778, 1.5836, -2.4841, 0.9472, 0.9903, -7.6349);
		testMethod(1220, 1.3856, 1.5712, -2.4841, 0.9521, 0.9526, -7.54);
		testMethod(1225, 1.3935, 1.5588, -2.4841, 0.9567, 0.9156, -7.3986);
		testMethod(1230, 1.4012, 1.5463, -2.4841, 0.9612, 0.8793, -7.2583);
		testMethod(1235, 1.4089, 1.5339, -2.4841, 0.9655, 0.8437, -7.1191);
		testMethod(1240, 1.4166, 1.5215, -2.4841, 0.9697, 0.8088, -6.981);
		testMethod(1245, 1.4241, 1.5091, -2.4841, 0.9736, 0.7745, -6.863);
		testMethod(1250, 1.4317, 1.4967, -2.4841, 0.9774, 0.7415, -6.6022);
		testMethod(1255, 1.4391, 1.4842, -2.4841, 0.981, 0.7096, -6.378);
		testMethod(1260, 1.4465, 1.4718, -2.4841, 0.9845, 0.6788, -6.1595);
		testMethod(1265, 1.4538, 1.4594, -2.4841, 0.9878, 0.6491, -5.9467);
		testMethod(1270, 1.4611, 1.447, -2.4841, 0.991, 0.6204, -5.7393);
		testMethod(1275, 1.4683, 1.4346, -2.4841, 0.994, 0.5927, -5.5373);
		testMethod(1280, 1.4754, 1.4221, -2.4841, 0.9969, 0.566, -5.3406);
		testMethod(1285, 1.4825, 1.4097, -2.4841, 0.9997, 0.5402, -5.1491);
		testMethod(1290, 1.4895, 1.3973, -2.4841, 1.0023, 0.5154, -4.9627);
		testMethod(1295, 1.4965, 1.3849, -2.4841, 1.0049, 0.4915, -4.7814);
		testMethod(1300, 1.5034, 1.3725, -2.4841, 1.0073, 0.4685, -4.605);
		testMethod(1305, 1.5102, 1.36, -2.4841, 1.0095, 0.4463, -4.4334);
		testMethod(1310, 1.517, 1.3476, -2.4841, 1.0117, 0.425, -4.2666);
		testMethod(1315, 1.5237, 1.3352, -2.4841, 1.0138, 0.4045, -4.1045);
		testMethod(1320, 1.5303, 1.3228, -2.4841, 1.0158, 0.3847, -3.947);
		testMethod(1325, 1.5369, 1.3104, -2.4841, 1.0176, 0.3658, -3.794);
		testMethod(1330, 1.5434, 1.2979, -2.4841, 1.0194, 0.3475, -3.6454);
		testMethod(1335, 1.5499, 1.2855, -2.4841, 1.0211, 0.33, -3.5011);
		testMethod(1340, 1.5563, 1.2731, -2.4841, 1.0227, 0.3132, -3.361);
		testMethod(1345, 1.5626, 1.2607, -2.4841, 1.0242, 0.2971, -3.2252);
		testMethod(1350, 1.5689, 1.2483, -2.4841, 1.0257, 0.2816, -3.0934);
		testMethod(1355, 1.5751, 1.2358, -2.4841, 1.0271, 0.2668, -2.9656);
		testMethod(1360, 1.5813, 1.2234, -2.4841, 1.0284, 0.2526, -2.8418);
		testMethod(1365, 1.5874, 1.211, -2.4841, 1.0296, 0.239, -2.7218);
		testMethod(1370, 1.5934, 1.1986, -2.4841, 1.0308, 0.226, -2.6055);
		testMethod(1375, 1.5993, 1.1862, -2.4841, 1.0319, 0.2135, -2.4929);
		testMethod(1380, 1.6052, 1.1737, -2.4841, 1.0329, 0.2016, -2.384);
		testMethod(1385, 1.6111, 1.1613, -2.4841, 1.0339, 0.1902, -2.2786);
		testMethod(1390, 1.6168, 1.1489, -2.4841, 1.0348, 0.1793, -2.1766);
		testMethod(1395, 1.6226, 1.1365, -2.4841, 1.0357, 0.1689, -2.078);
		testMethod(1400, 1.6282, 1.1241, -2.4841, 1.0365, 0.159, -1.9828);
		testMethod(1405, 1.6338, 1.1116, -2.4841, 1.0373, 0.1495, -1.8907);
		testMethod(1410, 1.6393, 1.0992, -2.4841, 1.038, 0.1405, -1.8018);
		testMethod(1415, 1.6448, 1.0868, -2.4841, 1.0387, 0.1319, -1.7161);
		testMethod(1420, 1.6502, 1.0744, -2.4841, 1.0393, 0.1238, -1.6333);
		testMethod(1425, 1.6555, 1.0619, -2.4841, 1.0399, 0.116, -1.5535);
		testMethod(1430, 1.6608, 1.0495, -2.4841, 1.0405, 0.1086, -1.4766);
		testMethod(1435, 1.666, 1.0371, -2.4841, 1.041, 0.1016, -1.4024);
		testMethod(1440, 1.6712, 1.0247, -2.4841, 1.0415, 0.095, -1.3311);
		testMethod(1445, 1.6763, 1.0123, -2.4841, 1.0419, 0.0887, -1.2624);
		testMethod(1450, 1.6813, 0.9998, -2.4841, 1.0424, 0.0827, -1.1963);
		testMethod(1455, 1.6863, 0.9874, -2.4841, 1.0428, 0.077, -1.1328);
		testMethod(1460, 1.6912, 0.975, -2.4841, 1.0431, 0.0716, -1.0717);
		testMethod(1465, 1.696, 0.9626, -2.4841, 1.0435, 0.0666, -1.0131);
		testMethod(1470, 1.7008, 0.9502, -2.4841, 1.0438, 0.0618, -0.9568);
		testMethod(1475, 1.7055, 0.9377, -2.4841, 1.0441, 0.0573, -0.9029);
		testMethod(1480, 1.7102, 0.9253, -2.4841, 1.0444, 0.053, -0.8511);
		testMethod(1485, 1.7148, 0.9129, -2.4841, 1.0446, 0.049, -0.8016);
		testMethod(1490, 1.7193, 0.9005, -2.4841, 1.0449, 0.0452, -0.7541);
		testMethod(1495, 1.7238, 0.8881, -2.4841, 1.0451, 0.0417, -0.7087);
		testMethod(1500, 1.7282, 0.8756, -2.4841, 1.0453, 0.0384, -0.6653);
		testMethod(1505, 1.7325, 0.8632, -2.4841, 1.0455, 0.0353, -0.6238);
		testMethod(1510, 1.7368, 0.8508, -2.4841, 1.0456, 0.0323, -0.5843);
		testMethod(1515, 1.7411, 0.8384, -2.4841, 1.0458, 0.0296, -0.5465);
		testMethod(1520, 1.7452, 0.826, -2.4841, 1.0459, 0.0271, -0.5106);
		testMethod(1525, 1.7493, 0.8135, -2.4841, 1.0461, 0.0247, -0.4763);
		testMethod(1530, 1.7534, 0.8011, -2.4841, 1.0462, 0.0225, -0.4437);
		testMethod(1535, 1.7573, 0.7887, -2.4841, 1.0463, 0.0204, -0.4128);
		testMethod(1540, 1.7612, 0.7763, -2.4841, 1.0464, 0.0185, -0.3833);
		testMethod(1545, 1.7651, 0.7639, -2.4841, 1.0465, 0.0167, -0.3555);
		testMethod(1550, 1.7689, 0.7514, -2.4841, 1.0466, 0.0151, -0.329);
		testMethod(1555, 1.7726, 0.739, -2.4841, 1.0466, 0.0135, -0.304);
		testMethod(1560, 1.7763, 0.7266, -2.4841, 1.0467, 0.0121, -0.2803);
		testMethod(1565, 1.7799, 0.7142, -2.4841, 1.0467, 0.0108, -0.258);
		testMethod(1570, 1.7834, 0.7018, -2.4841, 1.0468, 0.0097, -0.2369);
		testMethod(1575, 1.7869, 0.6893, -2.4841, 1.0468, 0.0086, -0.2171);
		testMethod(1580, 1.7903, 0.6769, -2.4841, 1.0469, 0.0076, -0.1984);
		testMethod(1585, 1.7937, 0.6645, -2.4841, 1.0469, 0.0067, -0.1809);
		testMethod(1590, 1.7969, 0.6521, -2.4841, 1.0469, 0.0058, -0.1645);
		testMethod(1595, 1.8002, 0.6397, -2.4841, 1.047, 0.0051, -0.1491);
		testMethod(1600, 1.8033, 0.6272, -2.4841, 1.047, 0.0044, -0.1347);
		testMethod(1605, 1.8064, 0.6148, -2.4841, 1.047, 0.0038, -0.1213);
		testMethod(1610, 1.8095, 0.6024, -2.4841, 1.047, 0.0033, -0.1088);
		testMethod(1615, 1.8125, 0.59, -2.4841, 1.0471, 0.0028, -0.0972);
		testMethod(1620, 1.8154, 0.5776, -2.4841, 1.0471, 0.0024, -0.0864);
		testMethod(1625, 1.8182, 0.5651, -2.4841, 1.0471, 0.002, -0.0765);
		testMethod(1630, 1.821, 0.5527, -2.4841, 1.0471, 0.0016, -0.0673);
		testMethod(1635, 1.8238, 0.5403, -2.4841, 1.0471, 0.0013, -0.0588);
		testMethod(1640, 1.8264, 0.5279, -2.4841, 1.0471, 0.0011, -0.0511);
		testMethod(1645, 1.8291, 0.5154, -2.4841, 1.0471, 0.0009, -0.044);
		testMethod(1650, 1.8316, 0.503, -2.4841, 1.0471, 0.0007, -0.0376);
		testMethod(1655, 1.8341, 0.4906, -2.4841, 1.0471, 0.0005, -0.0317);
		testMethod(1660, 1.8365, 0.4782, -2.4841, 1.0471, 0.0004, -0.0264);
		testMethod(1665, 1.8389, 0.4658, -2.4841, 1.0471, 0.0003, -0.0217);
		testMethod(1670, 1.8412, 0.4533, -2.4841, 1.0471, 0.0002, -0.0174);
		testMethod(1675, 1.8434, 0.4409, -2.4841, 1.0471, 0.0001, -0.0137);
		testMethod(1680, 1.8456, 0.4285, -2.4841, 1.0471, 0.0001, -0.0103);
		testMethod(1685, 1.8477, 0.4161, -2.4841, 1.0471, 0, -0.0074);
		testMethod(1690, 1.8497, 0.4037, -2.4841, 1.0471, 0, -0.0049);
		testMethod(1695, 1.8517, 0.3912, -2.4841, 1.0471, 0, -0.0027);
		testMethod(1700, 1.8536, 0.3788, -2.4841, 1.0471, 0, -0.0009);
		testMethod(1705, 1.8555, 0.3664, -2.4841, 1.0471, 0, -0);
		testMethod(1710, 1.8573, 0.354, -2.4841, 1.0471, 0, 0);
		testMethod(1715, 1.859, 0.3416, -2.4841, 1.0471, 0, 0);
		testMethod(1720, 1.8607, 0.3291, -2.4841, 1.0471, 0, 0);
		testMethod(1725, 1.8623, 0.3167, -2.4841, 1.0471, 0, 0);
		testMethod(1730, 1.8639, 0.3043, -2.4841, 1.0471, 0, 0);
		testMethod(1735, 1.8654, 0.2919, -2.4841, 1.0471, 0, 0);
		testMethod(1740, 1.8668, 0.2795, -2.4841, 1.0471, 0, 0);
		testMethod(1745, 1.8682, 0.267, -2.4841, 1.0471, 0, 0);
		testMethod(1750, 1.8695, 0.2546, -2.4841, 1.0471, 0, 0);
		testMethod(1755, 1.8707, 0.2422, -2.4841, 1.0471, 0, 0);
		testMethod(1760, 1.8719, 0.2301, -2.422, 1.0471, 0, 0);
		testMethod(1765, 1.873, 0.2183, -2.3599, 1.0471, 0, 0);
		testMethod(1770, 1.8741, 0.2068, -2.2978, 1.0471, 0, 0);
		testMethod(1775, 1.8751, 0.1956, -2.2357, 1.0471, 0, 0);
		testMethod(1780, 1.876, 0.1848, -2.1736, 1.0471, 0, 0);
		testMethod(1785, 1.8769, 0.1742, -2.1115, 1.0471, 0, 0);
		testMethod(1790, 1.8778, 0.164, -2.0494, 1.0471, 0, 0);
		testMethod(1795, 1.8786, 0.154, -1.9873, 1.0471, 0, 0);
		testMethod(1800, 1.8793, 0.1444, -1.9252, 1.0471, 0, 0);
		testMethod(1805, 1.88, 0.1351, -1.8631, 1.0471, 0, 0);
		testMethod(1810, 1.8807, 0.1261, -1.801, 1.0471, 0, 0);
		testMethod(1815, 1.8813, 0.1174, -1.7389, 1.0471, 0, 0);
		testMethod(1820, 1.8819, 0.109, -1.6768, 1.0471, 0, 0);
		testMethod(1825, 1.8824, 0.1009, -1.6147, 1.0471, 0, 0);
		testMethod(1830, 1.8829, 0.0932, -1.5526, 1.0471, 0, 0);
		testMethod(1835, 1.8833, 0.0857, -1.4905, 1.0471, 0, 0);
		testMethod(1840, 1.8837, 0.0786, -1.4284, 1.0471, 0, 0);
		testMethod(1845, 1.8841, 0.0717, -1.3663, 1.0471, 0, 0);
		testMethod(1850, 1.8844, 0.0652, -1.3041, 1.0471, 0, 0);
		testMethod(1855, 1.8848, 0.059, -1.242, 1.0471, 0, 0);
		testMethod(1860, 1.885, 0.0531, -1.1799, 1.0471, 0, 0);
		testMethod(1865, 1.8853, 0.0475, -1.1178, 1.0471, 0, 0);
		testMethod(1870, 1.8855, 0.0422, -1.0557, 1.0471, 0, 0);
		testMethod(1875, 1.8857, 0.0373, -0.9936, 1.0471, 0, 0);
		testMethod(1880, 1.8859, 0.0326, -0.9315, 1.0471, 0, 0);
		testMethod(1885, 1.886, 0.0283, -0.8694, 1.0471, 0, 0);
		testMethod(1890, 1.8862, 0.0242, -0.8073, 1.0471, 0, 0);
		testMethod(1895, 1.8863, 0.0205, -0.7452, 1.0471, 0, 0);
		testMethod(1900, 1.8864, 0.0171, -0.6831, 1.0471, 0, 0);
		testMethod(1905, 1.8864, 0.014, -0.621, 1.0471, 0, 0);
		testMethod(1910, 1.8865, 0.0112, -0.5589, 1.0471, 0, 0);
		testMethod(1915, 1.8866, 0.0087, -0.4968, 1.0471, 0, 0);
		testMethod(1920, 1.8866, 0.0065, -0.4347, 1.0471, 0, 0);
		testMethod(1925, 1.8866, 0.0047, -0.3726, 1.0471, 0, 0);
		testMethod(1930, 1.8866, 0.0031, -0.3105, 1.0471, 0, 0);
		testMethod(1935, 1.8867, 0.0019, -0.2484, 1.0471, 0, 0);
		testMethod(1940, 1.8867, 0.0009, -0.1863, 1.0471, 0, 0);
		testMethod(1945, 1.8867, 0.0003, -0.1242, 1.0471, 0, 0);
		testMethod(1950, 1.8867, 0, -0.0621, 1.0471, 0, 0);
		testMethod(1955, 1.8867, 0, 0, 1.0471, 0, 0);
		testMethod(1955, 1.8867, 0, 0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}