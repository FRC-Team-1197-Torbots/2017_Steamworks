package org.usfirst.frc.team1197.robot;

public class LoadingPos1 extends TorTrajectory {

	public LoadingPos1() {
		super(3.3117, -1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0621, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1242, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1863, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2484, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3106, 0, 0, 0);
		testMethod(30, 0.0001, 0.0065, 0.3727, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4348, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4969, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.559, 0, 0, 0);
		testMethod(50, 0.0003, 0.0171, 0.6211, 0, 0, 0);
		testMethod(55, 0.0004, 0.0205, 0.6832, 0, 0, 0);
		testMethod(60, 0.0005, 0.0242, 0.7453, 0, 0, 0);
		testMethod(65, 0.0006, 0.0283, 0.8074, 0, 0, 0);
		testMethod(70, 0.0008, 0.0326, 0.8695, 0, 0, 0);
		testMethod(75, 0.001, 0.0373, 0.9317, 0, 0, 0);
		testMethod(80, 0.0012, 0.0422, 0.9938, 0, 0, 0);
		testMethod(85, 0.0014, 0.0475, 1.0559, 0, 0, 0);
		testMethod(90, 0.0016, 0.0531, 1.118, 0, 0, 0);
		testMethod(95, 0.0019, 0.059, 1.1801, 0, 0, 0);
		testMethod(100, 0.0022, 0.0652, 1.2422, 0, 0, 0);
		testMethod(105, 0.0026, 0.0717, 1.3043, 0, 0, 0);
		testMethod(110, 0.0029, 0.0786, 1.3664, 0, 0, 0);
		testMethod(115, 0.0034, 0.0857, 1.4285, 0, 0, 0);
		testMethod(120, 0.0038, 0.0932, 1.4906, 0, 0, 0);
		testMethod(125, 0.0043, 0.1009, 1.5528, 0, 0, 0);
		testMethod(130, 0.0048, 0.109, 1.6149, 0, 0, 0);
		testMethod(135, 0.0054, 0.1174, 1.677, 0, 0, 0);
		testMethod(140, 0.006, 0.1261, 1.7391, 0, 0, 0);
		testMethod(145, 0.0066, 0.1351, 1.8012, 0, 0, 0);
		testMethod(150, 0.0073, 0.1444, 1.8633, 0, 0, 0);
		testMethod(155, 0.0081, 0.154, 1.9254, 0, 0, 0);
		testMethod(160, 0.0089, 0.164, 1.9875, 0, 0, 0);
		testMethod(165, 0.0097, 0.1742, 2.0496, 0, 0, 0);
		testMethod(170, 0.0106, 0.1848, 2.1117, 0, 0, 0);
		testMethod(175, 0.0116, 0.1956, 2.1739, 0, 0, 0);
		testMethod(180, 0.0126, 0.2068, 2.236, 0, 0, 0);
		testMethod(185, 0.0136, 0.2183, 2.2981, 0, 0, 0);
		testMethod(190, 0.0148, 0.2301, 2.3602, 0, 0, 0);
		testMethod(195, 0.0159, 0.2422, 2.4223, 0, 0, 0);
		testMethod(200, 0.0172, 0.2547, 2.4844, 0, 0, 0);
		testMethod(205, 0.0185, 0.2671, 2.4844, 0, 0, 0);
		testMethod(210, 0.0199, 0.2795, 2.4844, 0, 0, 0);
		testMethod(215, 0.0213, 0.2919, 2.4844, 0, 0, 0);
		testMethod(220, 0.0228, 0.3043, 2.4844, 0, 0, 0);
		testMethod(225, 0.0243, 0.3168, 2.4844, 0, 0, 0);
		testMethod(230, 0.0259, 0.3292, 2.4844, 0, 0, 0);
		testMethod(235, 0.0276, 0.3416, 2.4844, 0, 0, 0);
		testMethod(240, 0.0294, 0.354, 2.4844, 0, 0, 0);
		testMethod(245, 0.0312, 0.3665, 2.4844, 0, 0, 0);
		testMethod(250, 0.033, 0.3789, 2.4844, 0, 0, 0);
		testMethod(255, 0.035, 0.3913, 2.4844, 0, 0, 0);
		testMethod(260, 0.0369, 0.4037, 2.4844, 0, 0, 0);
		testMethod(265, 0.039, 0.4161, 2.4844, 0, 0, 0);
		testMethod(270, 0.0411, 0.4286, 2.4844, 0, 0, 0);
		testMethod(275, 0.0433, 0.441, 2.4844, 0, 0, 0);
		testMethod(280, 0.0455, 0.4534, 2.4844, 0, 0, 0);
		testMethod(285, 0.0478, 0.4658, 2.4844, 0, 0, 0);
		testMethod(290, 0.0502, 0.4782, 2.4844, 0, 0, 0);
		testMethod(295, 0.0526, 0.4907, 2.4844, 0, 0, 0);
		testMethod(300, 0.0551, 0.5031, 2.4844, 0, 0, 0);
		testMethod(305, 0.0576, 0.5155, 2.4844, 0, 0, 0);
		testMethod(310, 0.0602, 0.5279, 2.4844, 0, 0, 0);
		testMethod(315, 0.0629, 0.5404, 2.4844, 0, 0, 0);
		testMethod(320, 0.0656, 0.5528, 2.4844, 0, 0, 0);
		testMethod(325, 0.0684, 0.5652, 2.4844, 0, 0, 0);
		testMethod(330, 0.0713, 0.5776, 2.4844, 0, 0, 0);
		testMethod(335, 0.0742, 0.59, 2.4844, 0, 0, 0);
		testMethod(340, 0.0772, 0.6025, 2.4844, 0, 0, 0);
		testMethod(345, 0.0802, 0.6149, 2.4844, 0, 0, 0);
		testMethod(350, 0.0833, 0.6273, 2.4844, 0, 0, 0);
		testMethod(355, 0.0865, 0.6397, 2.4844, 0, 0, 0);
		testMethod(360, 0.0897, 0.6522, 2.4844, 0, 0, 0);
		testMethod(365, 0.093, 0.6646, 2.4844, 0, 0, 0);
		testMethod(370, 0.0964, 0.677, 2.4844, 0, 0, 0);
		testMethod(375, 0.0998, 0.6894, 2.4844, 0, 0, 0);
		testMethod(380, 0.1033, 0.7018, 2.4844, 0, 0, 0);
		testMethod(385, 0.1068, 0.7143, 2.4844, 0, 0, 0);
		testMethod(390, 0.1104, 0.7267, 2.4844, 0, 0, 0);
		testMethod(395, 0.1141, 0.7391, 2.4844, 0, 0, 0);
		testMethod(400, 0.1178, 0.7515, 2.4844, 0, 0, 0);
		testMethod(405, 0.1216, 0.764, 2.4844, 0, 0, 0);
		testMethod(410, 0.1254, 0.7764, 2.4844, 0, 0, 0);
		testMethod(415, 0.1294, 0.7888, 2.4844, 0, 0, 0);
		testMethod(420, 0.1333, 0.8012, 2.4844, 0, 0, 0);
		testMethod(425, 0.1374, 0.8136, 2.4844, 0, 0, 0);
		testMethod(430, 0.1415, 0.8261, 2.4844, 0, 0, 0);
		testMethod(435, 0.1456, 0.8385, 2.4844, 0, 0, 0);
		testMethod(440, 0.1499, 0.8509, 2.4844, 0, 0, 0);
		testMethod(445, 0.1541, 0.8633, 2.4844, 0, 0, 0);
		testMethod(450, 0.1585, 0.8758, 2.4844, 0, 0, 0);
		testMethod(455, 0.1629, 0.8882, 2.4844, 0, 0, 0);
		testMethod(460, 0.1674, 0.9006, 2.4844, 0, 0, 0);
		testMethod(465, 0.1719, 0.913, 2.4844, 0, 0, 0);
		testMethod(470, 0.1765, 0.9254, 2.4844, 0, 0, 0);
		testMethod(475, 0.1812, 0.9379, 2.4844, 0, 0, 0);
		testMethod(480, 0.1859, 0.9503, 2.4844, 0, 0, 0);
		testMethod(485, 0.1907, 0.9627, 2.4844, 0, 0, 0);
		testMethod(490, 0.1955, 0.9751, 2.4844, 0, 0, 0);
		testMethod(495, 0.2004, 0.9876, 2.4844, 0, 0, 0);
		testMethod(500, 0.2054, 1, 2.4844, 0, 0, 0);
		testMethod(505, 0.2104, 1.0124, 2.4844, 0, 0, 0);
		testMethod(510, 0.2155, 1.0248, 2.4844, 0, 0, 0);
		testMethod(515, 0.2207, 1.0372, 2.4844, 0, 0, 0);
		testMethod(520, 0.2259, 1.0497, 2.4844, 0, 0, 0);
		testMethod(525, 0.2312, 1.0621, 2.4844, 0, 0, 0);
		testMethod(530, 0.2365, 1.0745, 2.4844, 0, 0, 0);
		testMethod(535, 0.2419, 1.0869, 2.4844, 0, 0, 0);
		testMethod(540, 0.2474, 1.0994, 2.4844, 0, 0, 0);
		testMethod(545, 0.2529, 1.1118, 2.4844, 0, 0, 0);
		testMethod(550, 0.2585, 1.1242, 2.4844, 0, 0, 0);
		testMethod(555, 0.2641, 1.1366, 2.4844, 0, 0, 0);
		testMethod(560, 0.2699, 1.149, 2.4844, 0, 0, 0);
		testMethod(565, 0.2756, 1.1615, 2.4844, 0, 0, 0);
		testMethod(570, 0.2815, 1.1739, 2.4844, 0, 0, 0);
		testMethod(575, 0.2874, 1.1863, 2.4844, 0, 0, 0);
		testMethod(580, 0.2933, 1.1987, 2.4844, 0, 0, 0);
		testMethod(585, 0.2994, 1.2111, 2.4844, 0, 0, 0);
		testMethod(590, 0.3054, 1.2236, 2.4844, 0, 0, 0);
		testMethod(595, 0.3116, 1.236, 2.4844, 0, 0, 0);
		testMethod(600, 0.3178, 1.2484, 2.4844, 0, 0, 0);
		testMethod(605, 0.3241, 1.2608, 2.4844, 0, 0, 0);
		testMethod(610, 0.3304, 1.2733, 2.4844, 0, 0, 0);
		testMethod(615, 0.3368, 1.2857, 2.4844, 0, 0, 0);
		testMethod(620, 0.3433, 1.2981, 2.4844, 0, 0, 0);
		testMethod(625, 0.3498, 1.3105, 2.4844, 0, 0, 0);
		testMethod(630, 0.3564, 1.3229, 2.4844, 0, 0, 0);
		testMethod(635, 0.363, 1.3354, 2.4844, 0, 0, 0);
		testMethod(640, 0.3697, 1.3478, 2.4844, 0, 0, 0);
		testMethod(645, 0.3765, 1.3602, 2.4844, 0, 0, 0);
		testMethod(650, 0.3833, 1.3726, 2.4844, 0, 0, 0);
		testMethod(655, 0.3902, 1.3851, 2.4844, 0, 0, 0);
		testMethod(660, 0.3972, 1.3975, 2.4844, 0, 0, 0);
		testMethod(665, 0.4042, 1.4099, 2.4844, 0, 0, 0);
		testMethod(670, 0.4113, 1.4223, 2.4844, 0, 0, 0);
		testMethod(675, 0.4184, 1.4347, 2.4844, 0, 0, 0);
		testMethod(680, 0.4256, 1.4472, 2.4844, 0, 0, 0);
		testMethod(685, 0.4329, 1.4596, 2.4844, 0, 0, 0);
		testMethod(690, 0.4402, 1.472, 2.4844, 0, 0, 0);
		testMethod(695, 0.4476, 1.4844, 2.4844, 0, 0, 0);
		testMethod(700, 0.4551, 1.4969, 2.4844, -0, -0.0001, -0.0137);
		testMethod(705, 0.4626, 1.5093, 2.4844, -0, -0.0006, -0.0987);
		testMethod(710, 0.4702, 1.5217, 2.4844, -0, -0.0016, -0.198);
		testMethod(715, 0.4778, 1.5341, 2.4844, -0, -0.0031, -0.302);
		testMethod(720, 0.4855, 1.5465, 2.4844, -0, -0.0051, -0.4109);
		testMethod(725, 0.4933, 1.559, 2.4844, -0.0001, -0.0077, -0.5249);
		testMethod(730, 0.5011, 1.5714, 2.4844, -0.0001, -0.011, -0.6439);
		testMethod(735, 0.509, 1.5838, 2.4844, -0.0002, -0.0148, -0.7681);
		testMethod(740, 0.5169, 1.5962, 2.4844, -0.0003, -0.0193, -0.8976);
		testMethod(745, 0.5249, 1.6087, 2.4844, -0.0004, -0.0245, -1.0325);
		testMethod(750, 0.533, 1.6211, 2.4844, -0.0005, -0.0303, -1.173);
		testMethod(755, 0.5412, 1.6335, 2.4844, -0.0007, -0.0369, -1.319);
		testMethod(760, 0.5493, 1.6459, 2.4844, -0.0009, -0.0443, -1.4707);
		testMethod(765, 0.5576, 1.6583, 2.4844, -0.0011, -0.0524, -1.6283);
		testMethod(770, 0.5659, 1.6708, 2.4844, -0.0014, -0.0614, -1.7918);
		testMethod(775, 0.5743, 1.6832, 2.4844, -0.0017, -0.0712, -1.9613);
		testMethod(780, 0.5828, 1.6953, 2.4223, -0.0021, -0.0818, -2.1337);
		testMethod(785, 0.5913, 1.7071, 2.3602, -0.0026, -0.0934, -2.3107);
		testMethod(790, 0.5998, 1.7186, 2.2981, -0.0031, -0.1059, -2.4922);
		testMethod(795, 0.6085, 1.7298, 2.236, -0.0036, -0.1192, -2.6779);
		testMethod(800, 0.6171, 1.7406, 2.1739, -0.0042, -0.1336, -2.8676);
		testMethod(805, 0.6259, 1.7512, 2.1117, -0.005, -0.1489, -3.0612);
		testMethod(810, 0.6346, 1.7614, 2.0496, -0.0057, -0.1652, -3.2583);
		testMethod(815, 0.6435, 1.7714, 1.9875, -0.0066, -0.1825, -3.459);
		testMethod(820, 0.6524, 1.781, 1.9254, -0.0076, -0.2008, -3.6627);
		testMethod(825, 0.6613, 1.7903, 1.8633, -0.0086, -0.2201, -3.8695);
		testMethod(830, 0.6703, 1.7993, 1.8012, -0.0098, -0.2405, -4.079);
		testMethod(835, 0.6793, 1.808, 1.7391, -0.011, -0.262, -4.2909);
		testMethod(840, 0.6883, 1.8164, 1.677, -0.0124, -0.2845, -4.505);
		testMethod(845, 0.6974, 1.8245, 1.6149, -0.0139, -0.3081, -4.7211);
		testMethod(850, 0.7066, 1.8323, 1.5528, -0.0155, -0.3328, -4.9389);
		testMethod(855, 0.7158, 1.8397, 1.4906, -0.0172, -0.3586, -5.1581);
		testMethod(860, 0.725, 1.8468, 1.4285, -0.0191, -0.3855, -5.3784);
		testMethod(865, 0.7342, 1.8537, 1.3664, -0.0211, -0.4135, -5.5996);
		testMethod(870, 0.7435, 1.8602, 1.3043, -0.0232, -0.4426, -5.8213);
		testMethod(875, 0.7528, 1.8664, 1.2422, -0.0255, -0.4728, -6.0433);
		testMethod(880, 0.7622, 1.8723, 1.1801, -0.0279, -0.5041, -6.2653);
		testMethod(885, 0.7716, 1.8779, 1.118, -0.0305, -0.5366, -6.4869);
		testMethod(890, 0.781, 1.8832, 1.0559, -0.0333, -0.5703, -6.7433);
		testMethod(895, 0.7904, 1.8882, 0.9938, -0.0362, -0.6033, -6.6104);
		testMethod(900, 0.7998, 1.8928, 0.9317, -0.0393, -0.6356, -6.451);
		testMethod(905, 0.8093, 1.8972, 0.8695, -0.0426, -0.667, -6.2849);
		testMethod(910, 0.8188, 1.9012, 0.8074, -0.046, -0.6976, -6.1123);
		testMethod(915, 0.8283, 1.9049, 0.7453, -0.0496, -0.7273, -5.9336);
		testMethod(920, 0.8379, 1.9083, 0.6832, -0.0533, -0.756, -5.749);
		testMethod(925, 0.8474, 1.9114, 0.6211, -0.0571, -0.7838, -5.5589);
		testMethod(930, 0.857, 1.9142, 0.559, -0.0611, -0.8106, -5.3634);
		testMethod(935, 0.8665, 1.9167, 0.4969, -0.0652, -0.8364, -5.1629);
		testMethod(940, 0.8761, 1.9189, 0.4348, -0.0695, -0.8612, -4.9577);
		testMethod(945, 0.8857, 1.9208, 0.3727, -0.0738, -0.885, -4.7481);
		testMethod(950, 0.8953, 1.9223, 0.3106, -0.0783, -0.9076, -4.5345);
		testMethod(955, 0.905, 1.9236, 0.2484, -0.0829, -0.9292, -4.317);
		testMethod(960, 0.9146, 1.9245, 0.1863, -0.0876, -0.9497, -4.096);
		testMethod(965, 0.9242, 1.9251, 0.1242, -0.0924, -0.969, -3.8719);
		testMethod(970, 0.9338, 1.9254, 0.0621, -0.0973, -0.9873, -3.645);
		testMethod(975, 0.9435, 1.9254, 0, -0.1023, -1.0044, -3.4155);
		testMethod(980, 0.9531, 1.9254, 0, -0.1073, -1.0204, -3.217);
		testMethod(985, 0.9627, 1.9254, 0, -0.1125, -1.0355, -3.0185);
		testMethod(990, 0.9723, 1.9254, 0, -0.1177, -1.0496, -2.82);
		testMethod(995, 0.982, 1.9254, 0, -0.123, -1.0627, -2.6216);
		testMethod(1000, 0.9916, 1.9254, 0, -0.1283, -1.0749, -2.4231);
		testMethod(1005, 1.0012, 1.9254, 0, -0.1337, -1.086, -2.2246);
		testMethod(1010, 1.0108, 1.9254, 0, -0.1392, -1.0961, -2.0261);
		testMethod(1015, 1.0205, 1.9254, 0, -0.1447, -1.1052, -1.8276);
		testMethod(1020, 1.0301, 1.9254, 0, -0.1502, -1.1134, -1.6291);
		testMethod(1025, 1.0397, 1.9254, 0, -0.1558, -1.1205, -1.4306);
		testMethod(1030, 1.0494, 1.9254, 0, -0.1614, -1.1267, -1.2321);
		testMethod(1035, 1.059, 1.9254, 0, -0.1671, -1.1319, -1.0336);
		testMethod(1040, 1.0686, 1.9254, 0, -0.1727, -1.136, -0.8351);
		testMethod(1045, 1.0782, 1.9254, 0, -0.1784, -1.1392, -0.6366);
		testMethod(1050, 1.0879, 1.9254, 0, -0.1841, -1.1414, -0.4381);
		testMethod(1055, 1.0975, 1.9254, 0, -0.1898, -1.1426, -0.2396);
		testMethod(1060, 1.1071, 1.9254, 0, -0.1956, -1.1429, -0.0496);
		testMethod(1065, 1.1167, 1.9254, 0, -0.2013, -1.1429, 0);
		testMethod(1070, 1.1264, 1.9254, 0, -0.207, -1.1429, 0);
		testMethod(1075, 1.136, 1.9254, 0, -0.2127, -1.1429, 0);
		testMethod(1080, 1.1456, 1.9254, 0, -0.2184, -1.1429, 0);
		testMethod(1085, 1.1552, 1.9254, 0, -0.2241, -1.1429, 0);
		testMethod(1090, 1.1649, 1.9254, 0, -0.2298, -1.1429, 0);
		testMethod(1095, 1.1745, 1.9254, 0, -0.2356, -1.1429, 0);
		testMethod(1100, 1.1841, 1.9254, 0, -0.2413, -1.1429, 0);
		testMethod(1105, 1.1938, 1.9254, 0, -0.247, -1.1429, 0);
		testMethod(1110, 1.2034, 1.9254, 0, -0.2527, -1.1429, 0);
		testMethod(1115, 1.213, 1.9254, 0, -0.2584, -1.1429, 0);
		testMethod(1120, 1.2226, 1.9254, 0, -0.2641, -1.1429, 0);
		testMethod(1125, 1.2323, 1.9254, 0, -0.2698, -1.1429, 0);
		testMethod(1130, 1.2419, 1.9254, 0, -0.2756, -1.1429, 0);
		testMethod(1135, 1.2515, 1.9254, 0, -0.2813, -1.1429, 0);
		testMethod(1140, 1.2611, 1.9254, 0, -0.287, -1.1429, 0);
		testMethod(1145, 1.2708, 1.9254, 0, -0.2927, -1.1429, 0);
		testMethod(1150, 1.2804, 1.9254, 0, -0.2984, -1.1429, 0);
		testMethod(1155, 1.29, 1.9254, 0, -0.3041, -1.1429, 0);
		testMethod(1160, 1.2997, 1.9254, 0, -0.3098, -1.1429, 0);
		testMethod(1165, 1.3093, 1.9254, 0, -0.3156, -1.1429, 0);
		testMethod(1170, 1.3189, 1.9254, 0, -0.3213, -1.1429, 0);
		testMethod(1175, 1.3285, 1.9254, 0, -0.327, -1.1429, 0);
		testMethod(1180, 1.3382, 1.9254, 0, -0.3327, -1.1429, 0);
		testMethod(1185, 1.3478, 1.9254, 0, -0.3384, -1.1429, 0);
		testMethod(1190, 1.3574, 1.9254, 0, -0.3441, -1.1429, 0);
		testMethod(1195, 1.367, 1.9254, 0, -0.3498, -1.1429, 0);
		testMethod(1200, 1.3767, 1.9254, 0, -0.3556, -1.1429, 0);
		testMethod(1205, 1.3863, 1.9254, 0, -0.3613, -1.1429, 0);
		testMethod(1210, 1.3959, 1.9254, 0, -0.367, -1.1429, 0);
		testMethod(1215, 1.4056, 1.9254, 0, -0.3727, -1.1429, 0);
		testMethod(1220, 1.4152, 1.9254, 0, -0.3784, -1.1429, 0);
		testMethod(1225, 1.4248, 1.9254, 0, -0.3841, -1.1429, 0);
		testMethod(1230, 1.4344, 1.9254, 0, -0.3898, -1.1429, 0);
		testMethod(1235, 1.4441, 1.9254, 0, -0.3956, -1.1429, 0);
		testMethod(1240, 1.4537, 1.9254, 0, -0.4013, -1.1429, 0);
		testMethod(1245, 1.4633, 1.9254, 0, -0.407, -1.1429, 0);
		testMethod(1250, 1.4729, 1.9254, 0, -0.4127, -1.1429, 0);
		testMethod(1255, 1.4826, 1.9254, 0, -0.4184, -1.1429, 0);
		testMethod(1260, 1.4922, 1.9254, 0, -0.4241, -1.1429, 0);
		testMethod(1265, 1.5018, 1.9254, 0, -0.4298, -1.1429, 0);
		testMethod(1270, 1.5115, 1.9254, 0, -0.4356, -1.1429, 0);
		testMethod(1275, 1.5211, 1.9254, 0, -0.4413, -1.1429, 0);
		testMethod(1280, 1.5307, 1.9254, 0, -0.447, -1.1429, 0);
		testMethod(1285, 1.5403, 1.9254, 0, -0.4527, -1.1429, 0);
		testMethod(1290, 1.55, 1.9254, 0, -0.4584, -1.1429, 0);
		testMethod(1295, 1.5596, 1.9254, 0, -0.4641, -1.1429, 0);
		testMethod(1300, 1.5692, 1.9254, 0, -0.4698, -1.1429, 0);
		testMethod(1305, 1.5788, 1.9254, 0, -0.4756, -1.1429, 0);
		testMethod(1310, 1.5885, 1.9254, 0, -0.4813, -1.1429, 0);
		testMethod(1315, 1.5981, 1.9254, 0, -0.487, -1.1429, 0);
		testMethod(1320, 1.6077, 1.9254, 0, -0.4927, -1.1429, 0);
		testMethod(1325, 1.6173, 1.9254, 0, -0.4984, -1.1429, 0);
		testMethod(1330, 1.627, 1.9254, 0, -0.5041, -1.1429, 0);
		testMethod(1335, 1.6366, 1.9254, 0, -0.5098, -1.1429, 0);
		testMethod(1340, 1.6462, 1.9254, 0, -0.5156, -1.1429, 0);
		testMethod(1345, 1.6559, 1.9254, 0, -0.5213, -1.1429, 0);
		testMethod(1350, 1.6655, 1.9254, 0, -0.527, -1.1429, 0);
		testMethod(1355, 1.6751, 1.9254, 0, -0.5327, -1.1429, 0);
		testMethod(1360, 1.6847, 1.9254, 0, -0.5384, -1.1429, 0);
		testMethod(1365, 1.6944, 1.9254, 0, -0.5441, -1.1429, 0);
		testMethod(1370, 1.704, 1.9254, 0, -0.5498, -1.1429, 0);
		testMethod(1375, 1.7136, 1.9254, 0, -0.5556, -1.1429, 0);
		testMethod(1380, 1.7232, 1.9254, 0, -0.5613, -1.1429, 0);
		testMethod(1385, 1.7329, 1.9254, 0, -0.567, -1.1429, 0);
		testMethod(1390, 1.7425, 1.9254, 0, -0.5727, -1.1429, 0);
		testMethod(1395, 1.7521, 1.9254, 0, -0.5784, -1.1429, 0);
		testMethod(1400, 1.7618, 1.9254, 0, -0.5841, -1.1429, 0);
		testMethod(1405, 1.7714, 1.9254, 0, -0.5898, -1.1429, 0);
		testMethod(1410, 1.781, 1.9254, 0, -0.5956, -1.1429, 0);
		testMethod(1415, 1.7906, 1.9254, 0, -0.6013, -1.1429, 0);
		testMethod(1420, 1.8003, 1.9254, 0, -0.607, -1.1429, 0);
		testMethod(1425, 1.8099, 1.9254, 0, -0.6127, -1.1429, 0);
		testMethod(1430, 1.8195, 1.9254, 0, -0.6184, -1.1429, 0);
		testMethod(1435, 1.8291, 1.9254, 0, -0.6241, -1.1429, 0);
		testMethod(1440, 1.8388, 1.9254, 0, -0.6298, -1.1429, 0);
		testMethod(1445, 1.8484, 1.9254, 0, -0.6356, -1.1429, 0);
		testMethod(1450, 1.858, 1.9254, 0, -0.6413, -1.1429, 0);
		testMethod(1455, 1.8677, 1.9254, 0, -0.647, -1.1429, 0);
		testMethod(1460, 1.8773, 1.9254, 0, -0.6527, -1.1429, 0);
		testMethod(1465, 1.8869, 1.9254, 0, -0.6584, -1.1429, 0);
		testMethod(1470, 1.8965, 1.9254, 0, -0.6641, -1.1429, 0);
		testMethod(1475, 1.9062, 1.9254, 0, -0.6698, -1.1429, 0);
		testMethod(1480, 1.9158, 1.9254, 0, -0.6756, -1.1429, 0);
		testMethod(1485, 1.9254, 1.9254, 0, -0.6813, -1.1429, 0);
		testMethod(1490, 1.935, 1.9254, 0, -0.687, -1.1429, 0);
		testMethod(1495, 1.9447, 1.9254, 0, -0.6927, -1.1429, 0);
		testMethod(1500, 1.9543, 1.9254, 0, -0.6984, -1.1429, 0);
		testMethod(1505, 1.9639, 1.9254, 0, -0.7041, -1.1429, 0);
		testMethod(1510, 1.9736, 1.9254, 0, -0.7098, -1.1429, 0);
		testMethod(1515, 1.9832, 1.9254, 0, -0.7156, -1.1429, 0);
		testMethod(1520, 1.9928, 1.9254, 0, -0.7213, -1.1429, 0);
		testMethod(1525, 2.0024, 1.9254, 0, -0.727, -1.1429, 0);
		testMethod(1530, 2.0121, 1.9254, 0, -0.7327, -1.1429, 0);
		testMethod(1535, 2.0217, 1.9254, 0, -0.7384, -1.1429, 0);
		testMethod(1540, 2.0313, 1.9254, 0, -0.7441, -1.1429, 0);
		testMethod(1545, 2.0409, 1.9254, 0, -0.7498, -1.1429, 0);
		testMethod(1550, 2.0506, 1.9254, 0, -0.7556, -1.1429, 0);
		testMethod(1555, 2.0602, 1.9254, 0, -0.7613, -1.1429, 0);
		testMethod(1560, 2.0698, 1.9254, 0, -0.767, -1.1429, 0);
		testMethod(1565, 2.0794, 1.9254, 0, -0.7727, -1.1429, 0);
		testMethod(1570, 2.0891, 1.9254, 0, -0.7784, -1.1429, 0);
		testMethod(1575, 2.0987, 1.9254, 0, -0.7841, -1.1429, 0);
		testMethod(1580, 2.1083, 1.9254, 0, -0.7898, -1.1429, 0);
		testMethod(1585, 2.118, 1.9254, 0, -0.7956, -1.1429, 0);
		testMethod(1590, 2.1276, 1.9254, 0, -0.8013, -1.1429, 0);
		testMethod(1595, 2.1372, 1.9254, 0, -0.807, -1.1429, 0);
		testMethod(1600, 2.1468, 1.9254, 0, -0.8127, -1.1429, 0);
		testMethod(1605, 2.1565, 1.9254, 0, -0.8184, -1.1429, 0);
		testMethod(1610, 2.1661, 1.9254, 0, -0.8241, -1.1429, 0);
		testMethod(1615, 2.1757, 1.9254, 0, -0.8298, -1.1429, 0);
		testMethod(1620, 2.1853, 1.9254, 0, -0.8356, -1.1429, 0);
		testMethod(1625, 2.195, 1.9254, 0, -0.8413, -1.1429, 0);
		testMethod(1630, 2.2046, 1.9254, 0, -0.847, -1.1429, 0);
		testMethod(1635, 2.2142, 1.9254, 0, -0.8527, -1.1429, 0);
		testMethod(1640, 2.2239, 1.9254, 0, -0.8584, -1.1424, 0.0838);
		testMethod(1645, 2.2335, 1.9254, 0, -0.8641, -1.141, 0.2817);
		testMethod(1650, 2.2431, 1.9254, 0, -0.8698, -1.1386, 0.4802);
		testMethod(1655, 2.2527, 1.9254, 0, -0.8755, -1.1352, 0.6787);
		testMethod(1660, 2.2624, 1.9254, 0, -0.8812, -1.1309, 0.8772);
		testMethod(1665, 2.272, 1.9254, 0, -0.8868, -1.1255, 1.0757);
		testMethod(1670, 2.2816, 1.9254, 0, -0.8924, -1.1191, 1.2742);
		testMethod(1675, 2.2912, 1.9254, 0, -0.898, -1.1117, 1.4727);
		testMethod(1680, 2.3009, 1.9254, 0, -0.9035, -1.1034, 1.6712);
		testMethod(1685, 2.3105, 1.9254, 0, -0.909, -1.094, 1.8697);
		testMethod(1690, 2.3201, 1.9254, 0, -0.9145, -1.0837, 2.0682);
		testMethod(1695, 2.3298, 1.9254, 0, -0.9199, -1.0724, 2.2667);
		testMethod(1700, 2.3394, 1.9254, 0, -0.9252, -1.06, 2.4652);
		testMethod(1705, 2.349, 1.9254, 0, -0.9305, -1.0467, 2.6637);
		testMethod(1710, 2.3586, 1.9254, 0, -0.9357, -1.0324, 2.8621);
		testMethod(1715, 2.3683, 1.9254, 0, -0.9408, -1.0171, 3.0606);
		testMethod(1720, 2.3779, 1.9254, 0, -0.9458, -1.0008, 3.2591);
		testMethod(1725, 2.3875, 1.9251, -0.0621, -0.9508, -0.9834, 3.4891);
		testMethod(1730, 2.3971, 1.9245, -0.1242, -0.9557, -0.9648, 3.7166);
		testMethod(1735, 2.4068, 1.9236, -0.1863, -0.9605, -0.9451, 3.9414);
		testMethod(1740, 2.4164, 1.9223, -0.2484, -0.9651, -0.9243, 4.1631);
		testMethod(1745, 2.426, 1.9208, -0.3106, -0.9697, -0.9024, 4.3814);
		testMethod(1750, 2.4356, 1.9189, -0.3727, -0.9741, -0.8794, 4.5961);
		testMethod(1755, 2.4452, 1.9167, -0.4348, -0.9785, -0.8553, 4.8068);
		testMethod(1760, 2.4547, 1.9142, -0.4969, -0.9827, -0.8303, 5.0131);
		testMethod(1765, 2.4643, 1.9114, -0.559, -0.9868, -0.8042, 5.2149);
		testMethod(1770, 2.4739, 1.9083, -0.6211, -0.9907, -0.7771, 5.4117);
		testMethod(1775, 2.4834, 1.9049, -0.6832, -0.9946, -0.7491, 5.6034);
		testMethod(1780, 2.4929, 1.9012, -0.7453, -0.9982, -0.7202, 5.7895);
		testMethod(1785, 2.5024, 1.8972, -0.8074, -1.0018, -0.6903, 5.9699);
		testMethod(1790, 2.5119, 1.8928, -0.8695, -1.0051, -0.6596, 6.1442);
		testMethod(1795, 2.5213, 1.8882, -0.9317, -1.0083, -0.628, 6.3122);
		testMethod(1800, 2.5308, 1.8832, -0.9938, -1.0114, -0.5957, 6.4736);
		testMethod(1805, 2.5402, 1.8779, -1.0559, -1.0143, -0.5625, 6.6281);
		testMethod(1810, 2.5495, 1.8723, -1.118, -1.017, -0.529, 6.7039);
		testMethod(1815, 2.5589, 1.8664, -1.1801, -1.0196, -0.4969, 6.4281);
		testMethod(1820, 2.5682, 1.8602, -1.2422, -1.022, -0.4658, 6.2056);
		testMethod(1825, 2.5775, 1.8537, -1.3043, -1.0243, -0.4359, 5.9828);
		testMethod(1830, 2.5867, 1.8468, -1.3664, -1.0264, -0.4071, 5.7603);
		testMethod(1835, 2.596, 1.8397, -1.4285, -1.0283, -0.3794, 5.5382);
		testMethod(1840, 2.6051, 1.8323, -1.4906, -1.0302, -0.3529, 5.3169);
		testMethod(1845, 2.6143, 1.8245, -1.5528, -1.0319, -0.3274, 5.0966);
		testMethod(1850, 2.6234, 1.8164, -1.6149, -1.0334, -0.303, 4.8777);
		testMethod(1855, 2.6324, 1.808, -1.677, -1.0349, -0.2797, 4.6603);
		testMethod(1860, 2.6415, 1.7993, -1.7391, -1.0362, -0.2575, 4.4448);
		testMethod(1865, 2.6504, 1.7903, -1.8012, -1.0375, -0.2363, 4.2315);
		testMethod(1870, 2.6594, 1.781, -1.8633, -1.0386, -0.2162, 4.0205);
		testMethod(1875, 2.6682, 1.7714, -1.9254, -1.0396, -0.1971, 3.8121);
		testMethod(1880, 2.6771, 1.7614, -1.9875, -1.0406, -0.1791, 3.6067);
		testMethod(1885, 2.6859, 1.7512, -2.0496, -1.0414, -0.1621, 3.4043);
		testMethod(1890, 2.6946, 1.7406, -2.1117, -1.0422, -0.1461, 3.2053);
		testMethod(1895, 2.7033, 1.7298, -2.1739, -1.0429, -0.131, 3.0098);
		testMethod(1900, 2.7119, 1.7186, -2.236, -1.0435, -0.1169, 2.8181);
		testMethod(1905, 2.7204, 1.7071, -2.2981, -1.0441, -0.1038, 2.6303);
		testMethod(1910, 2.729, 1.6953, -2.3602, -1.0445, -0.0915, 2.4468);
		testMethod(1915, 2.7374, 1.6832, -2.4223, -1.045, -0.0802, 2.2675);
		testMethod(1920, 2.7458, 1.6708, -2.4844, -1.0453, -0.0697, 2.0928);
		testMethod(1925, 2.7541, 1.6583, -2.4844, -1.0457, -0.0601, 1.9207);
		testMethod(1930, 2.7624, 1.6459, -2.4844, -1.046, -0.0514, 1.7546);
		testMethod(1935, 2.7706, 1.6335, -2.4844, -1.0462, -0.0434, 1.5944);
		testMethod(1940, 2.7787, 1.6211, -2.4844, -1.0464, -0.0362, 1.4401);
		testMethod(1945, 2.7868, 1.6087, -2.4844, -1.0466, -0.0297, 1.2915);
		testMethod(1950, 2.7948, 1.5962, -2.4844, -1.0467, -0.024, 1.1486);
		testMethod(1955, 2.8027, 1.5838, -2.4844, -1.0468, -0.0189, 1.0112);
		testMethod(1960, 2.8106, 1.5714, -2.4844, -1.0469, -0.0145, 0.8792);
		testMethod(1965, 2.8185, 1.559, -2.4844, -1.0469, -0.0108, 0.7525);
		testMethod(1970, 2.8262, 1.5465, -2.4844, -1.047, -0.0076, 0.631);
		testMethod(1975, 2.8339, 1.5341, -2.4844, -1.047, -0.005, 0.5146);
		testMethod(1980, 2.8416, 1.5217, -2.4844, -1.047, -0.003, 0.4033);
		testMethod(1985, 2.8491, 1.5093, -2.4844, -1.047, -0.0015, 0.2969);
		testMethod(1990, 2.8567, 1.4969, -2.4844, -1.0471, -0.0006, 0.1952);
		testMethod(1995, 2.8641, 1.4844, -2.4844, -1.0471, -0.0001, 0.0984);
		testMethod(2000, 2.8715, 1.472, -2.4844, -1.0471, 0, 0.0145);
		testMethod(2005, 2.8788, 1.4596, -2.4844, -1.0471, 0, 0);
		testMethod(2010, 2.8861, 1.4472, -2.4844, -1.0471, 0, 0);
		testMethod(2015, 2.8933, 1.4347, -2.4844, -1.0471, 0, 0);
		testMethod(2020, 2.9004, 1.4223, -2.4844, -1.0471, 0, 0);
		testMethod(2025, 2.9075, 1.4099, -2.4844, -1.0471, 0, 0);
		testMethod(2030, 2.9145, 1.3975, -2.4844, -1.0471, 0, 0);
		testMethod(2035, 2.9215, 1.3851, -2.4844, -1.0471, 0, 0);
		testMethod(2040, 2.9284, 1.3726, -2.4844, -1.0471, 0, 0);
		testMethod(2045, 2.9352, 1.3602, -2.4844, -1.0471, 0, 0);
		testMethod(2050, 2.942, 1.3478, -2.4844, -1.0471, 0, 0);
		testMethod(2055, 2.9487, 1.3354, -2.4844, -1.0471, 0, 0);
		testMethod(2060, 2.9553, 1.3229, -2.4844, -1.0471, 0, 0);
		testMethod(2065, 2.9619, 1.3105, -2.4844, -1.0471, 0, 0);
		testMethod(2070, 2.9684, 1.2981, -2.4844, -1.0471, 0, 0);
		testMethod(2075, 2.9749, 1.2857, -2.4844, -1.0471, 0, 0);
		testMethod(2080, 2.9813, 1.2733, -2.4844, -1.0471, 0, 0);
		testMethod(2085, 2.9876, 1.2608, -2.4844, -1.0471, 0, 0);
		testMethod(2090, 2.9939, 1.2484, -2.4844, -1.0471, 0, 0);
		testMethod(2095, 3.0001, 1.236, -2.4844, -1.0471, 0, 0);
		testMethod(2100, 3.0063, 1.2236, -2.4844, -1.0471, 0, 0);
		testMethod(2105, 3.0124, 1.2111, -2.4844, -1.0471, 0, 0);
		testMethod(2110, 3.0184, 1.1987, -2.4844, -1.0471, 0, 0);
		testMethod(2115, 3.0243, 1.1863, -2.4844, -1.0471, 0, 0);
		testMethod(2120, 3.0302, 1.1739, -2.4844, -1.0471, 0, 0);
		testMethod(2125, 3.0361, 1.1615, -2.4844, -1.0471, 0, 0);
		testMethod(2130, 3.0419, 1.149, -2.4844, -1.0471, 0, 0);
		testMethod(2135, 3.0476, 1.1366, -2.4844, -1.0471, 0, 0);
		testMethod(2140, 3.0532, 1.1242, -2.4844, -1.0471, 0, 0);
		testMethod(2145, 3.0588, 1.1118, -2.4844, -1.0471, 0, 0);
		testMethod(2150, 3.0643, 1.0994, -2.4844, -1.0471, 0, 0);
		testMethod(2155, 3.0698, 1.0869, -2.4844, -1.0471, 0, 0);
		testMethod(2160, 3.0752, 1.0745, -2.4844, -1.0471, 0, 0);
		testMethod(2165, 3.0806, 1.0621, -2.4844, -1.0471, 0, 0);
		testMethod(2170, 3.0858, 1.0497, -2.4844, -1.0471, 0, 0);
		testMethod(2175, 3.0911, 1.0372, -2.4844, -1.0471, 0, 0);
		testMethod(2180, 3.0962, 1.0248, -2.4844, -1.0471, 0, 0);
		testMethod(2185, 3.1013, 1.0124, -2.4844, -1.0471, 0, 0);
		testMethod(2190, 3.1063, 1, -2.4844, -1.0471, 0, 0);
		testMethod(2195, 3.1113, 0.9876, -2.4844, -1.0471, 0, 0);
		testMethod(2200, 3.1162, 0.9751, -2.4844, -1.0471, 0, 0);
		testMethod(2205, 3.1211, 0.9627, -2.4844, -1.0471, 0, 0);
		testMethod(2210, 3.1258, 0.9503, -2.4844, -1.0471, 0, 0);
		testMethod(2215, 3.1306, 0.9379, -2.4844, -1.0471, 0, 0);
		testMethod(2220, 3.1352, 0.9254, -2.4844, -1.0471, 0, 0);
		testMethod(2225, 3.1398, 0.913, -2.4844, -1.0471, 0, 0);
		testMethod(2230, 3.1443, 0.9006, -2.4844, -1.0471, 0, 0);
		testMethod(2235, 3.1488, 0.8882, -2.4844, -1.0471, 0, 0);
		testMethod(2240, 3.1532, 0.8758, -2.4844, -1.0471, 0, 0);
		testMethod(2245, 3.1576, 0.8633, -2.4844, -1.0471, 0, 0);
		testMethod(2250, 3.1619, 0.8509, -2.4844, -1.0471, 0, 0);
		testMethod(2255, 3.1661, 0.8385, -2.4844, -1.0471, 0, 0);
		testMethod(2260, 3.1702, 0.8261, -2.4844, -1.0471, 0, 0);
		testMethod(2265, 3.1743, 0.8136, -2.4844, -1.0471, 0, 0);
		testMethod(2270, 3.1784, 0.8012, -2.4844, -1.0471, 0, 0);
		testMethod(2275, 3.1824, 0.7888, -2.4844, -1.0471, 0, 0);
		testMethod(2280, 3.1863, 0.7764, -2.4844, -1.0471, 0, 0);
		testMethod(2285, 3.1901, 0.764, -2.4844, -1.0471, 0, 0);
		testMethod(2290, 3.1939, 0.7515, -2.4844, -1.0471, 0, 0);
		testMethod(2295, 3.1976, 0.7391, -2.4844, -1.0471, 0, 0);
		testMethod(2300, 3.2013, 0.7267, -2.4844, -1.0471, 0, 0);
		testMethod(2305, 3.2049, 0.7143, -2.4844, -1.0471, 0, 0);
		testMethod(2310, 3.2084, 0.7018, -2.4844, -1.0471, 0, 0);
		testMethod(2315, 3.2119, 0.6894, -2.4844, -1.0471, 0, 0);
		testMethod(2320, 3.2153, 0.677, -2.4844, -1.0471, 0, 0);
		testMethod(2325, 3.2187, 0.6646, -2.4844, -1.0471, 0, 0);
		testMethod(2330, 3.222, 0.6522, -2.4844, -1.0471, 0, 0);
		testMethod(2335, 3.2252, 0.6397, -2.4844, -1.0471, 0, 0);
		testMethod(2340, 3.2284, 0.6273, -2.4844, -1.0471, 0, 0);
		testMethod(2345, 3.2315, 0.6149, -2.4844, -1.0471, 0, 0);
		testMethod(2350, 3.2345, 0.6025, -2.4844, -1.0471, 0, 0);
		testMethod(2355, 3.2375, 0.59, -2.4844, -1.0471, 0, 0);
		testMethod(2360, 3.2404, 0.5776, -2.4844, -1.0471, 0, 0);
		testMethod(2365, 3.2433, 0.5652, -2.4844, -1.0471, 0, 0);
		testMethod(2370, 3.2461, 0.5528, -2.4844, -1.0471, 0, 0);
		testMethod(2375, 3.2488, 0.5404, -2.4844, -1.0471, 0, 0);
		testMethod(2380, 3.2515, 0.5279, -2.4844, -1.0471, 0, 0);
		testMethod(2385, 3.2541, 0.5155, -2.4844, -1.0471, 0, 0);
		testMethod(2390, 3.2566, 0.5031, -2.4844, -1.0471, 0, 0);
		testMethod(2395, 3.2591, 0.4907, -2.4844, -1.0471, 0, 0);
		testMethod(2400, 3.2615, 0.4782, -2.4844, -1.0471, 0, 0);
		testMethod(2405, 3.2639, 0.4658, -2.4844, -1.0471, 0, 0);
		testMethod(2410, 3.2662, 0.4534, -2.4844, -1.0471, 0, 0);
		testMethod(2415, 3.2684, 0.441, -2.4844, -1.0471, 0, 0);
		testMethod(2420, 3.2706, 0.4286, -2.4844, -1.0471, 0, 0);
		testMethod(2425, 3.2727, 0.4161, -2.4844, -1.0471, 0, 0);
		testMethod(2430, 3.2748, 0.4037, -2.4844, -1.0471, 0, 0);
		testMethod(2435, 3.2768, 0.3913, -2.4844, -1.0471, 0, 0);
		testMethod(2440, 3.2787, 0.3789, -2.4844, -1.0471, 0, 0);
		testMethod(2445, 3.2806, 0.3665, -2.4844, -1.0471, 0, 0);
		testMethod(2450, 3.2824, 0.354, -2.4844, -1.0471, 0, 0);
		testMethod(2455, 3.2841, 0.3416, -2.4844, -1.0471, 0, 0);
		testMethod(2460, 3.2858, 0.3292, -2.4844, -1.0471, 0, 0);
		testMethod(2465, 3.2874, 0.3168, -2.4844, -1.0471, 0, 0);
		testMethod(2470, 3.2889, 0.3043, -2.4844, -1.0471, 0, 0);
		testMethod(2475, 3.2904, 0.2919, -2.4844, -1.0471, 0, 0);
		testMethod(2480, 3.2919, 0.2795, -2.4844, -1.0471, 0, 0);
		testMethod(2485, 3.2932, 0.2671, -2.4844, -1.0471, 0, 0);
		testMethod(2490, 3.2945, 0.2547, -2.4844, -1.0471, 0, 0);
		testMethod(2495, 3.2958, 0.2422, -2.4844, -1.0471, 0, 0);
		testMethod(2500, 3.297, 0.2301, -2.4223, -1.0471, 0, 0);
		testMethod(2505, 3.2981, 0.2183, -2.3602, -1.0471, 0, 0);
		testMethod(2510, 3.2991, 0.2068, -2.2981, -1.0471, 0, 0);
		testMethod(2515, 3.3001, 0.1956, -2.236, -1.0471, 0, 0);
		testMethod(2520, 3.3011, 0.1848, -2.1739, -1.0471, 0, 0);
		testMethod(2525, 3.302, 0.1742, -2.1117, -1.0471, 0, 0);
		testMethod(2530, 3.3028, 0.164, -2.0496, -1.0471, 0, 0);
		testMethod(2535, 3.3036, 0.154, -1.9875, -1.0471, 0, 0);
		testMethod(2540, 3.3044, 0.1444, -1.9254, -1.0471, 0, 0);
		testMethod(2545, 3.3051, 0.1351, -1.8633, -1.0471, 0, 0);
		testMethod(2550, 3.3057, 0.1261, -1.8012, -1.0471, 0, 0);
		testMethod(2555, 3.3063, 0.1174, -1.7391, -1.0471, 0, 0);
		testMethod(2560, 3.3069, 0.109, -1.677, -1.0471, 0, 0);
		testMethod(2565, 3.3074, 0.1009, -1.6149, -1.0471, 0, 0);
		testMethod(2570, 3.3079, 0.0932, -1.5528, -1.0471, 0, 0);
		testMethod(2575, 3.3084, 0.0857, -1.4906, -1.0471, 0, 0);
		testMethod(2580, 3.3088, 0.0786, -1.4285, -1.0471, 0, 0);
		testMethod(2585, 3.3091, 0.0717, -1.3664, -1.0471, 0, 0);
		testMethod(2590, 3.3095, 0.0652, -1.3043, -1.0471, 0, 0);
		testMethod(2595, 3.3098, 0.059, -1.2422, -1.0471, 0, 0);
		testMethod(2600, 3.3101, 0.0531, -1.1801, -1.0471, 0, 0);
		testMethod(2605, 3.3103, 0.0475, -1.118, -1.0471, 0, 0);
		testMethod(2610, 3.3106, 0.0422, -1.0559, -1.0471, 0, 0);
		testMethod(2615, 3.3108, 0.0373, -0.9938, -1.0471, 0, 0);
		testMethod(2620, 3.3109, 0.0326, -0.9317, -1.0471, 0, 0);
		testMethod(2625, 3.3111, 0.0283, -0.8695, -1.0471, 0, 0);
		testMethod(2630, 3.3112, 0.0242, -0.8074, -1.0471, 0, 0);
		testMethod(2635, 3.3113, 0.0205, -0.7453, -1.0471, 0, 0);
		testMethod(2640, 3.3114, 0.0171, -0.6832, -1.0471, 0, 0);
		testMethod(2645, 3.3115, 0.014, -0.6211, -1.0471, 0, 0);
		testMethod(2650, 3.3116, 0.0112, -0.559, -1.0471, 0, 0);
		testMethod(2655, 3.3116, 0.0087, -0.4969, -1.0471, 0, 0);
		testMethod(2660, 3.3116, 0.0065, -0.4348, -1.0471, 0, 0);
		testMethod(2665, 3.3117, 0.0047, -0.3727, -1.0471, 0, 0);
		testMethod(2670, 3.3117, 0.0031, -0.3106, -1.0471, 0, 0);
		testMethod(2675, 3.3117, 0.0019, -0.2484, -1.0471, 0, 0);
		testMethod(2680, 3.3117, 0.0009, -0.1863, -1.0471, 0, 0);
		testMethod(2685, 3.3117, 0.0003, -0.1242, -1.0471, 0, 0);
		testMethod(2690, 3.3117, 0, -0.0621, -1.0471, 0, 0);
		testMethod(2695, 3.3117, 0, 0, -1.0471, 0, 0);
		testMethod(2695, 3.3117, 0, 0, -1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}