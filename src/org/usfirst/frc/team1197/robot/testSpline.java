package org.usfirst.frc.team1197.robot;

public class testSpline extends TorTrajectory {

	public testSpline() {
		super(3.156, -1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0005, 0.1, 0, 0, 0);
		testMethod(10, 0, 0.0015, 0.1999, 0, 0, 0);
		testMethod(15, 0, 0.003, 0.2999, 0, 0, 0);
		testMethod(20, 0, 0.005, 0.3999, 0, 0, 0);
		testMethod(25, 0.0001, 0.0075, 0.4998, 0, 0, 0);
		testMethod(30, 0.0001, 0.0105, 0.5998, 0, 0, 0);
		testMethod(35, 0.0002, 0.014, 0.6998, 0, 0, 0);
		testMethod(40, 0.0003, 0.018, 0.7997, 0, 0, 0);
		testMethod(45, 0.0004, 0.0225, 0.8997, 0, 0, 0);
		testMethod(50, 0.0005, 0.0275, 0.9997, 0, 0, 0);
		testMethod(55, 0.0006, 0.033, 1.0996, 0, 0, 0);
		testMethod(60, 0.0008, 0.039, 1.1996, 0, 0, 0);
		testMethod(65, 0.001, 0.0455, 1.2996, 0, 0, 0);
		testMethod(70, 0.0013, 0.0525, 1.3996, 0, 0, 0);
		testMethod(75, 0.0015, 0.06, 1.4995, 0, 0, 0);
		testMethod(80, 0.0019, 0.068, 1.5995, 0, 0, 0);
		testMethod(85, 0.0022, 0.0765, 1.6995, 0, 0, 0);
		testMethod(90, 0.0026, 0.0855, 1.7994, 0, 0, 0);
		testMethod(95, 0.0031, 0.095, 1.8994, 0, 0, 0);
		testMethod(100, 0.0036, 0.105, 1.9994, 0, 0, 0);
		testMethod(105, 0.0041, 0.1155, 2.0993, 0, 0, 0);
		testMethod(110, 0.0047, 0.1265, 2.1993, 0, 0, 0);
		testMethod(115, 0.0054, 0.138, 2.2993, 0, 0, 0);
		testMethod(120, 0.0061, 0.15, 2.3992, 0, 0, 0);
		testMethod(125, 0.0069, 0.1624, 2.4992, 0, 0, 0);
		testMethod(130, 0.0077, 0.1754, 2.5992, 0, 0, 0);
		testMethod(135, 0.0087, 0.1889, 2.6991, 0, 0, 0);
		testMethod(140, 0.0096, 0.2029, 2.7991, 0, 0, 0);
		testMethod(145, 0.0107, 0.2174, 2.8991, 0, 0, 0);
		testMethod(150, 0.0118, 0.2324, 2.999, 0, 0, 0);
		testMethod(155, 0.013, 0.2479, 3.099, 0, 0, 0);
		testMethod(160, 0.0143, 0.2639, 3.199, 0, 0, 0);
		testMethod(165, 0.0157, 0.2804, 3.2989, 0, 0, 0);
		testMethod(170, 0.0171, 0.2974, 3.3989, 0, 0, 0);
		testMethod(175, 0.0186, 0.3149, 3.4989, 0, 0, 0);
		testMethod(180, 0.0202, 0.3324, 3.4989, 0, 0, 0);
		testMethod(185, 0.022, 0.3499, 3.4989, 0, 0, 0);
		testMethod(190, 0.0237, 0.3674, 3.4989, 0, 0, 0);
		testMethod(195, 0.0256, 0.3849, 3.4989, 0, 0, 0);
		testMethod(200, 0.0276, 0.4024, 3.4989, 0, 0, 0);
		testMethod(205, 0.0297, 0.4199, 3.4989, 0, 0, 0);
		testMethod(210, 0.0318, 0.4374, 3.4989, 0, 0, 0);
		testMethod(215, 0.034, 0.4549, 3.4989, 0, 0, 0);
		testMethod(220, 0.0363, 0.4723, 3.4989, 0, 0, 0);
		testMethod(225, 0.0388, 0.4898, 3.4989, 0, 0, 0);
		testMethod(230, 0.0412, 0.5073, 3.4989, 0, 0, 0);
		testMethod(235, 0.0438, 0.5248, 3.4989, 0, 0, 0);
		testMethod(240, 0.0465, 0.5423, 3.4989, 0, 0, 0);
		testMethod(245, 0.0492, 0.5598, 3.4989, 0, 0, 0);
		testMethod(250, 0.0521, 0.5773, 3.4989, 0, 0, 0);
		testMethod(255, 0.055, 0.5948, 3.4989, 0, 0, 0);
		testMethod(260, 0.058, 0.6123, 3.4989, 0, 0, 0);
		testMethod(265, 0.0611, 0.6298, 3.4989, 0, 0, 0);
		testMethod(270, 0.0643, 0.6473, 3.4989, 0, 0, 0);
		testMethod(275, 0.0676, 0.6648, 3.4989, 0, 0, 0);
		testMethod(280, 0.071, 0.6823, 3.4989, 0, 0, 0);
		testMethod(285, 0.0744, 0.6998, 3.4989, 0, 0, 0);
		testMethod(290, 0.078, 0.7173, 3.4989, 0, 0, 0);
		testMethod(295, 0.0816, 0.7348, 3.4989, 0, 0, 0);
		testMethod(300, 0.0853, 0.7523, 3.4989, 0, 0, 0);
		testMethod(305, 0.0891, 0.7698, 3.4989, 0, 0, 0);
		testMethod(310, 0.093, 0.7872, 3.4989, 0, 0, 0);
		testMethod(315, 0.097, 0.8047, 3.4989, 0, 0, 0);
		testMethod(320, 0.1011, 0.8222, 3.4989, 0, 0, 0);
		testMethod(325, 0.1052, 0.8397, 3.4989, 0, 0, 0);
		testMethod(330, 0.1095, 0.8572, 3.4989, 0, 0, 0);
		testMethod(335, 0.1138, 0.8747, 3.4989, 0, 0, 0);
		testMethod(340, 0.1182, 0.8922, 3.4989, 0, 0, 0);
		testMethod(345, 0.1227, 0.9097, 3.4989, 0, 0, 0);
		testMethod(350, 0.1273, 0.9272, 3.4989, 0, 0, 0);
		testMethod(355, 0.132, 0.9447, 3.4989, 0, 0, 0);
		testMethod(360, 0.1368, 0.9622, 3.4989, 0, 0, 0);
		testMethod(365, 0.1416, 0.9797, 3.4989, 0, 0, 0);
		testMethod(370, 0.1466, 0.9972, 3.4989, 0, 0, 0);
		testMethod(375, 0.1516, 1.0147, 3.4989, 0, 0, 0);
		testMethod(380, 0.1567, 1.0322, 3.4989, 0, 0, 0);
		testMethod(385, 0.1619, 1.0497, 3.4989, 0, 0, 0);
		testMethod(390, 0.1672, 1.0672, 3.4989, 0, 0, 0);
		testMethod(395, 0.1726, 1.0847, 3.4989, 0, 0, 0);
		testMethod(400, 0.178, 1.1021, 3.4989, 0, 0, 0);
		testMethod(405, 0.1836, 1.1196, 3.4989, 0, 0, 0);
		testMethod(410, 0.1892, 1.1371, 3.4989, 0, 0, 0);
		testMethod(415, 0.195, 1.1546, 3.4989, 0, 0, 0);
		testMethod(420, 0.2008, 1.1721, 3.4989, 0, 0, 0);
		testMethod(425, 0.2067, 1.1896, 3.4989, 0, 0, 0);
		testMethod(430, 0.2127, 1.2071, 3.4989, 0, 0, 0);
		testMethod(435, 0.2188, 1.2246, 3.4989, 0, 0, 0);
		testMethod(440, 0.2249, 1.2421, 3.4989, 0, 0, 0);
		testMethod(445, 0.2312, 1.2596, 3.4989, 0, 0, 0);
		testMethod(450, 0.2375, 1.2771, 3.4989, 0, 0, 0);
		testMethod(455, 0.244, 1.2946, 3.4989, 0, 0, 0);
		testMethod(460, 0.2505, 1.3121, 3.4989, 0, 0, 0);
		testMethod(465, 0.2571, 1.3296, 3.4989, 0, 0, 0);
		testMethod(470, 0.2638, 1.3471, 3.4989, 0, 0, 0);
		testMethod(475, 0.2706, 1.3646, 3.4989, 0, 0, 0);
		testMethod(480, 0.2774, 1.3821, 3.4989, 0, 0, 0);
		testMethod(485, 0.2844, 1.3996, 3.4989, 0, 0, 0);
		testMethod(490, 0.2914, 1.417, 3.4989, 0, 0, 0);
		testMethod(495, 0.2985, 1.4345, 3.4989, 0, 0, 0);
		testMethod(500, 0.3058, 1.452, 3.4989, 0, 0, 0);
		testMethod(505, 0.3131, 1.4695, 3.4989, 0, 0, 0);
		testMethod(510, 0.3205, 1.487, 3.4989, 0, 0, 0);
		testMethod(515, 0.3279, 1.5045, 3.4989, 0, 0, 0);
		testMethod(520, 0.3355, 1.522, 3.4989, 0, 0, 0);
		testMethod(525, 0.3432, 1.5395, 3.4989, 0, 0, 0);
		testMethod(530, 0.3509, 1.557, 3.4989, 0, 0, 0);
		testMethod(535, 0.3587, 1.5745, 3.4989, 0, 0, 0);
		testMethod(540, 0.3666, 1.592, 3.4989, 0, 0, 0);
		testMethod(545, 0.3746, 1.6095, 3.4989, 0, 0, 0);
		testMethod(550, 0.3827, 1.627, 3.4989, 0, 0, 0);
		testMethod(555, 0.3909, 1.644, 3.3989, 0, 0, 0);
		testMethod(560, 0.3992, 1.6605, 3.2989, 0, 0, 0);
		testMethod(565, 0.4075, 1.6765, 3.199, 0, 0, 0);
		testMethod(570, 0.4159, 1.692, 3.099, 0, 0, 0);
		testMethod(575, 0.4244, 1.707, 2.999, 0, 0, 0);
		testMethod(580, 0.433, 1.7215, 2.8991, 0, 0, 0);
		testMethod(585, 0.4416, 1.7354, 2.7991, 0, 0, 0);
		testMethod(590, 0.4504, 1.7489, 2.6991, 0, 0, 0);
		testMethod(595, 0.4591, 1.7619, 2.5992, 0, 0, 0);
		testMethod(600, 0.468, 1.7744, 2.4992, 0, 0, 0);
		testMethod(605, 0.4769, 1.7864, 2.3992, 0, 0, 0);
		testMethod(610, 0.4858, 1.7979, 2.2993, 0, 0, 0);
		testMethod(615, 0.4949, 1.8089, 2.1993, 0, 0, 0);
		testMethod(620, 0.5039, 1.8194, 2.0993, 0, 0, 0);
		testMethod(625, 0.513, 1.8294, 1.9994, 0, 0, 0);
		testMethod(630, 0.5222, 1.8389, 1.8994, 0, 0, 0);
		testMethod(635, 0.5314, 1.8479, 1.7994, 0, 0, 0);
		testMethod(640, 0.5407, 1.8564, 1.6995, 0, 0, 0);
		testMethod(645, 0.55, 1.8644, 1.5995, 0, 0, 0);
		testMethod(650, 0.5593, 1.8719, 1.4995, 0, 0, 0);
		testMethod(655, 0.5687, 1.8789, 1.3996, 0, 0, 0);
		testMethod(660, 0.5781, 1.8854, 1.2996, 0, 0, 0);
		testMethod(665, 0.5876, 1.8914, 1.1996, 0, 0, 0);
		testMethod(670, 0.597, 1.8969, 1.0996, 0, 0, 0);
		testMethod(675, 0.6065, 1.9019, 0.9997, 0, 0, 0);
		testMethod(680, 0.6161, 1.9064, 0.8997, 0, 0, 0);
		testMethod(685, 0.6256, 1.9104, 0.7997, 0, 0, 0);
		testMethod(690, 0.6352, 1.9139, 0.6998, 0, 0, 0);
		testMethod(695, 0.6447, 1.9169, 0.5998, 0, 0, 0);
		testMethod(700, 0.6543, 1.9194, 0.4998, 0, 0, 0);
		testMethod(705, 0.6639, 1.9214, 0.3999, 0, 0, 0);
		testMethod(710, 0.6735, 1.9229, 0.2999, 0, 0, 0);
		testMethod(715, 0.6832, 1.9239, 0.1999, 0, 0, 0);
		testMethod(720, 0.6928, 1.9244, 0.1, 0, 0, 0);
		testMethod(725, 0.7024, 1.9244, 0, 0, 0, 0);
		testMethod(730, 0.712, 1.9244, 0, 0, 0, 0);
		testMethod(735, 0.7216, 1.9244, 0, 0, 0, 0);
		testMethod(740, 0.7313, 1.9244, 0, 0, 0, 0);
		testMethod(745, 0.7409, 1.9244, 0, 0, 0, 0);
		testMethod(750, 0.7505, 1.9244, 0, 0, 0, 0);
		testMethod(755, 0.7601, 1.9244, 0, 0, 0, 0);
		testMethod(760, 0.7698, 1.9244, 0, 0, 0, 0);
		testMethod(765, 0.7794, 1.9244, 0, 0, 0, 0);
		testMethod(770, 0.789, 1.9244, 0, 0, 0, 0);
		testMethod(775, 0.7986, 1.9244, 0, 0, 0, 0);
		testMethod(780, 0.8082, 1.9244, 0, 0, 0, 0);
		testMethod(785, 0.8179, 1.9244, 0, 0, 0, 0);
		testMethod(790, 0.8275, 1.9244, 0, 0, 0, 0);
		testMethod(795, 0.8371, 1.9244, 0, 0, 0, 0);
		testMethod(800, 0.8467, 1.9244, 0, 0, 0, 0);
		testMethod(805, 0.8564, 1.9244, 0, 0, 0, 0);
		testMethod(810, 0.866, 1.9244, 0, 0, 0, 0);
		testMethod(815, 0.8756, 1.9244, 0, 0, 0, 0);
		testMethod(820, 0.8852, 1.9244, 0, 0, 0, 0);
		testMethod(825, 0.8948, 1.9244, 0, 0, 0, 0);
		testMethod(830, 0.9045, 1.9244, 0, 0, 0, 0);
		testMethod(835, 0.9141, 1.9244, 0, 0, 0, 0);
		testMethod(840, 0.9237, 1.9244, 0, 0, 0, 0);
		testMethod(845, 0.9333, 1.9244, 0, 0, 0, 0);
		testMethod(850, 0.9429, 1.9244, 0, 0, 0, 0);
		testMethod(855, 0.9526, 1.9244, 0, 0, 0, 0);
		testMethod(860, 0.9622, 1.9244, 0, 0, 0, 0);
		testMethod(865, 0.9718, 1.9244, 0, 0, 0, 0);
		testMethod(870, 0.9814, 1.9244, 0, 0, 0, 0);
		testMethod(875, 0.9911, 1.9244, 0, 0, 0, 0);
		testMethod(880, 1.0007, 1.9244, 0, 0, 0, 0);
		testMethod(885, 1.0103, 1.9244, 0, 0, 0, 0);
		testMethod(890, 1.0199, 1.9244, 0, 0, 0, 0);
		testMethod(895, 1.0295, 1.9244, 0, 0, 0, 0);
		testMethod(900, 1.0392, 1.9244, 0, 0, 0, 0);
		testMethod(905, 1.0488, 1.9244, 0, 0, 0, 0);
		testMethod(910, 1.0584, 1.9244, 0, 0, 0, 0);
		testMethod(915, 1.068, 1.9244, 0, 0, 0, 0);
		testMethod(920, 1.0777, 1.9244, 0, 0, 0, 0);
		testMethod(925, 1.0873, 1.9244, 0, 0, 0, 0);
		testMethod(930, 1.0969, 1.9244, 0, 0, 0, 0);
		testMethod(935, 1.1065, 1.9244, 0, 0, 0, 0);
		testMethod(940, 1.1161, 1.9244, 0, 0, 0, 0);
		testMethod(945, 1.1258, 1.9244, 0, 0, 0, 0);
		testMethod(950, 1.1354, 1.9244, 0, 0, 0, 0);
		testMethod(955, 1.145, 1.9244, 0, 0, 0, 0);
		testMethod(960, 1.1546, 1.9244, 0, 0, 0, 0);
		testMethod(965, 1.1643, 1.9244, 0, -0, -0.0003, -0.0564);
		testMethod(970, 1.1739, 1.9244, 0, -0, -0.0015, -0.2486);
		testMethod(975, 1.1835, 1.9244, 0, -0, -0.0038, -0.4467);
		testMethod(980, 1.1931, 1.9244, 0, -0, -0.007, -0.6449);
		testMethod(985, 1.2027, 1.9244, 0, -0.0001, -0.0112, -0.8431);
		testMethod(990, 1.2124, 1.9244, 0, -0.0002, -0.0164, -1.0413);
		testMethod(995, 1.222, 1.9244, 0, -0.0003, -0.0226, -1.2395);
		testMethod(1000, 1.2316, 1.9244, 0, -0.0004, -0.0298, -1.4376);
		testMethod(1005, 1.2412, 1.9244, 0, -0.0006, -0.038, -1.6358);
		testMethod(1010, 1.2509, 1.9244, 0, -0.0008, -0.0471, -1.834);
		testMethod(1015, 1.2605, 1.9244, 0, -0.001, -0.0573, -2.0322);
		testMethod(1020, 1.2701, 1.9244, 0, -0.0013, -0.0685, -2.2304);
		testMethod(1025, 1.2797, 1.9244, 0, -0.0017, -0.0806, -2.4285);
		testMethod(1030, 1.2893, 1.9244, 0, -0.0021, -0.0937, -2.6267);
		testMethod(1035, 1.299, 1.9244, 0, -0.0027, -0.1079, -2.8249);
		testMethod(1040, 1.3086, 1.9244, 0, -0.0032, -0.123, -3.0231);
		testMethod(1045, 1.3182, 1.9244, 0, -0.0039, -0.1391, -3.2212);
		testMethod(1050, 1.3278, 1.9244, 0, -0.0046, -0.1562, -3.4194);
		testMethod(1055, 1.3374, 1.9244, 0, -0.0054, -0.1743, -3.6176);
		testMethod(1060, 1.3471, 1.9244, 0, -0.0064, -0.1933, -3.8158);
		testMethod(1065, 1.3567, 1.9244, 0, -0.0074, -0.2134, -4.014);
		testMethod(1070, 1.3663, 1.9244, 0, -0.0085, -0.2345, -4.2121);
		testMethod(1075, 1.3759, 1.9244, 0, -0.0097, -0.2565, -4.4103);
		testMethod(1080, 1.3856, 1.9244, 0, -0.0111, -0.2796, -4.6085);
		testMethod(1085, 1.3952, 1.9244, 0, -0.0125, -0.3036, -4.8067);
		testMethod(1090, 1.4048, 1.9244, 0, -0.0141, -0.3286, -5.0049);
		testMethod(1095, 1.4144, 1.9244, 0, -0.0158, -0.3546, -5.203);
		testMethod(1100, 1.424, 1.9244, 0, -0.0177, -0.3816, -5.4012);
		testMethod(1105, 1.4337, 1.9244, 0, -0.0196, -0.4096, -5.5994);
		testMethod(1110, 1.4433, 1.9244, 0, -0.0218, -0.4386, -5.7976);
		testMethod(1115, 1.4529, 1.9244, 0, -0.024, -0.4686, -5.9957);
		testMethod(1120, 1.4625, 1.9244, 0, -0.0264, -0.4996, -6.1939);
		testMethod(1125, 1.4722, 1.9244, 0, -0.029, -0.5315, -6.3921);
		testMethod(1130, 1.4818, 1.9244, 0, -0.0318, -0.5645, -6.5903);
		testMethod(1135, 1.4914, 1.9244, 0, -0.0347, -0.5984, -6.7885);
		testMethod(1140, 1.501, 1.9244, 0, -0.0377, -0.6334, -6.9866);
		testMethod(1145, 1.5106, 1.9244, 0, -0.041, -0.6693, -7.1848);
		testMethod(1150, 1.5203, 1.9244, 0, -0.0444, -0.7062, -7.383);
		testMethod(1155, 1.5299, 1.9244, 0, -0.0481, -0.7441, -7.5812);
		testMethod(1160, 1.5395, 1.9244, 0, -0.0519, -0.783, -7.7794);
		testMethod(1165, 1.5491, 1.9244, 0, -0.0559, -0.8229, -7.9775);
		testMethod(1170, 1.5588, 1.9244, 0, -0.0601, -0.8638, -8.1757);
		testMethod(1175, 1.5684, 1.9244, 0, -0.0645, -0.9056, -8.3739);
		testMethod(1180, 1.578, 1.9244, 0, -0.0692, -0.9485, -8.5721);
		testMethod(1185, 1.5876, 1.9244, 0, -0.074, -0.9924, -8.7703);
		testMethod(1190, 1.5972, 1.9244, 0, -0.0791, -1.037, -8.9391);
		testMethod(1195, 1.6069, 1.9244, 0, -0.0844, -1.0818, -8.9453);
		testMethod(1200, 1.6165, 1.9244, 0, -0.0899, -1.1265, -8.9453);
		testMethod(1205, 1.6261, 1.9244, 0, -0.0957, -1.1712, -8.9443);
		testMethod(1210, 1.6357, 1.9244, 0, -0.1016, -1.215, -8.7512);
		testMethod(1215, 1.6453, 1.9244, 0, -0.1078, -1.2577, -8.5531);
		testMethod(1220, 1.655, 1.9244, 0, -0.1142, -1.2995, -8.3549);
		testMethod(1225, 1.6646, 1.9244, 0, -0.1208, -1.3403, -8.1567);
		testMethod(1230, 1.6742, 1.9244, 0, -0.1276, -1.3801, -7.9585);
		testMethod(1235, 1.6838, 1.9244, 0, -0.1346, -1.4189, -7.7604);
		testMethod(1240, 1.6935, 1.9244, 0, -0.1418, -1.4567, -7.5622);
		testMethod(1245, 1.7031, 1.9244, 0, -0.1492, -1.4935, -7.364);
		testMethod(1250, 1.7127, 1.9244, 0, -0.1567, -1.5294, -7.1658);
		testMethod(1255, 1.7223, 1.9244, 0, -0.1645, -1.5642, -6.9676);
		testMethod(1260, 1.7319, 1.9244, 0, -0.1724, -1.598, -6.7695);
		testMethod(1265, 1.7416, 1.9244, 0, -0.1804, -1.6309, -6.5713);
		testMethod(1270, 1.7512, 1.9244, 0, -0.1887, -1.6628, -6.3731);
		testMethod(1275, 1.7608, 1.9244, 0, -0.1971, -1.6936, -6.1749);
		testMethod(1280, 1.7704, 1.9244, 0, -0.2056, -1.7235, -5.9767);
		testMethod(1285, 1.7801, 1.9244, 0, -0.2143, -1.7524, -5.7786);
		testMethod(1290, 1.7897, 1.9244, 0, -0.2231, -1.7803, -5.5804);
		testMethod(1295, 1.7993, 1.9244, 0, -0.2321, -1.8072, -5.3822);
		testMethod(1300, 1.8089, 1.9244, 0, -0.2412, -1.8331, -5.184);
		testMethod(1305, 1.8185, 1.9244, 0, -0.2504, -1.8581, -4.9859);
		testMethod(1310, 1.8282, 1.9244, 0, -0.2598, -1.882, -4.7877);
		testMethod(1315, 1.8378, 1.9244, 0, -0.2692, -1.905, -4.5895);
		testMethod(1320, 1.8474, 1.9244, 0, -0.2788, -1.9269, -4.3913);
		testMethod(1325, 1.857, 1.9244, 0, -0.2885, -1.9479, -4.1931);
		testMethod(1330, 1.8667, 1.9244, 0, -0.2983, -1.9679, -3.995);
		testMethod(1335, 1.8763, 1.9244, 0, -0.3082, -1.9868, -3.7968);
		testMethod(1340, 1.8859, 1.9244, 0, -0.3182, -2.0048, -3.5986);
		testMethod(1345, 1.8955, 1.9244, 0, -0.3282, -2.0218, -3.4004);
		testMethod(1350, 1.9051, 1.9244, 0, -0.3384, -2.0378, -3.2022);
		testMethod(1355, 1.9148, 1.9244, 0, -0.3486, -2.0529, -3.0041);
		testMethod(1360, 1.9244, 1.9244, 0, -0.3589, -2.0669, -2.8059);
		testMethod(1365, 1.934, 1.9244, 0, -0.3693, -2.0799, -2.6077);
		testMethod(1370, 1.9436, 1.9244, 0, -0.3797, -2.092, -2.4095);
		testMethod(1375, 1.9533, 1.9244, 0, -0.3902, -2.103, -2.2113);
		testMethod(1380, 1.9629, 1.9244, 0, -0.4007, -2.1131, -2.0132);
		testMethod(1385, 1.9725, 1.9244, 0, -0.4113, -2.1222, -1.815);
		testMethod(1390, 1.9821, 1.9244, 0, -0.422, -2.1303, -1.6168);
		testMethod(1395, 1.9917, 1.9244, 0, -0.4326, -2.1374, -1.4186);
		testMethod(1400, 2.0014, 1.9244, 0, -0.4433, -2.1435, -1.2205);
		testMethod(1405, 2.011, 1.9244, 0, -0.4541, -2.1486, -1.0223);
		testMethod(1410, 2.0206, 1.9244, 0, -0.4648, -2.1527, -0.8241);
		testMethod(1415, 2.0302, 1.9244, 0, -0.4756, -2.1558, -0.6259);
		testMethod(1420, 2.0398, 1.9244, 0, -0.4864, -2.158, -0.4277);
		testMethod(1425, 2.0495, 1.9244, 0, -0.4972, -2.1591, -0.2296);
		testMethod(1430, 2.0591, 1.9244, 0, -0.508, -2.1593, -0.0429);
		testMethod(1435, 2.0687, 1.9244, 0, -0.5188, -2.1593, 0);
		testMethod(1440, 2.0783, 1.9244, 0, -0.5296, -2.1593, 0);
		testMethod(1445, 2.088, 1.9244, 0, -0.5403, -2.1593, 0);
		testMethod(1450, 2.0976, 1.9244, 0, -0.5511, -2.159, 0.0584);
		testMethod(1455, 2.1072, 1.9244, 0, -0.5619, -2.1578, 0.2512);
		testMethod(1460, 2.1168, 1.9244, 0, -0.5727, -2.1555, 0.4494);
		testMethod(1465, 2.1264, 1.9244, 0, -0.5835, -2.1523, 0.6475);
		testMethod(1470, 2.1361, 1.9244, 0, -0.5942, -2.1481, 0.8457);
		testMethod(1475, 2.1457, 1.9244, 0, -0.605, -2.1428, 1.0439);
		testMethod(1480, 2.1553, 1.9244, 0, -0.6157, -2.1366, 1.2421);
		testMethod(1485, 2.1649, 1.9244, 0, -0.6263, -2.1294, 1.4402);
		testMethod(1490, 2.1746, 1.9244, 0, -0.637, -2.1212, 1.6384);
		testMethod(1495, 2.1842, 1.9244, 0, -0.6475, -2.1121, 1.8366);
		testMethod(1500, 2.1938, 1.9244, 0, -0.6581, -2.1019, 2.0348);
		testMethod(1505, 2.2034, 1.9244, 0, -0.6686, -2.0907, 2.233);
		testMethod(1510, 2.213, 1.9244, 0, -0.679, -2.0786, 2.4311);
		testMethod(1515, 2.2227, 1.9244, 0, -0.6893, -2.0654, 2.6293);
		testMethod(1520, 2.2323, 1.9244, 0, -0.6996, -2.0513, 2.8275);
		testMethod(1525, 2.2419, 1.9244, 0, -0.7099, -2.0362, 3.0257);
		testMethod(1530, 2.2515, 1.9244, 0, -0.72, -2.02, 3.2239);
		testMethod(1535, 2.2612, 1.9244, 0, -0.7301, -2.0029, 3.422);
		testMethod(1540, 2.2708, 1.9244, 0, -0.74, -1.9848, 3.6202);
		testMethod(1545, 2.2804, 1.9244, 0, -0.7499, -1.9657, 3.8184);
		testMethod(1550, 2.29, 1.9244, 0, -0.7597, -1.9456, 4.0166);
		testMethod(1555, 2.2996, 1.9244, 0, -0.7694, -1.9246, 4.2148);
		testMethod(1560, 2.3093, 1.9244, 0, -0.7789, -1.9025, 4.4129);
		testMethod(1565, 2.3189, 1.9244, 0, -0.7884, -1.8795, 4.6111);
		testMethod(1570, 2.3285, 1.9244, 0, -0.7977, -1.8554, 4.8093);
		testMethod(1575, 2.3381, 1.9244, 0, -0.8069, -1.8304, 5.0075);
		testMethod(1580, 2.3478, 1.9244, 0, -0.816, -1.8043, 5.2056);
		testMethod(1585, 2.3574, 1.9244, 0, -0.825, -1.7773, 5.4038);
		testMethod(1590, 2.367, 1.9244, 0, -0.8338, -1.7493, 5.602);
		testMethod(1595, 2.3766, 1.9244, 0, -0.8425, -1.7203, 5.8002);
		testMethod(1600, 2.3862, 1.9244, 0, -0.851, -1.6903, 5.9984);
		testMethod(1605, 2.3959, 1.9244, 0, -0.8594, -1.6593, 6.1965);
		testMethod(1610, 2.4055, 1.9244, 0, -0.8676, -1.6274, 6.3947);
		testMethod(1615, 2.4151, 1.9244, 0, -0.8756, -1.5944, 6.5929);
		testMethod(1620, 2.4247, 1.9244, 0, -0.8835, -1.5604, 6.7911);
		testMethod(1625, 2.4343, 1.9244, 0, -0.8912, -1.5255, 6.9893);
		testMethod(1630, 2.444, 1.9244, 0, -0.8988, -1.4896, 7.1874);
		testMethod(1635, 2.4536, 1.9244, 0, -0.9061, -1.4526, 7.3856);
		testMethod(1640, 2.4632, 1.9244, 0, -0.9133, -1.4147, 7.5838);
		testMethod(1645, 2.4728, 1.9239, -0.1, -0.9203, -1.3754, 7.8524);
		testMethod(1650, 2.4825, 1.9229, -0.1999, -0.9271, -1.3349, 8.1127);
		testMethod(1655, 2.4921, 1.9214, -0.2999, -0.9336, -1.2931, 8.364);
		testMethod(1660, 2.5017, 1.9194, -0.3999, -0.94, -1.25, 8.6059);
		testMethod(1665, 2.5113, 1.9169, -0.4998, -0.9461, -1.2058, 8.838);
		testMethod(1670, 2.5208, 1.9139, -0.5998, -0.952, -1.1605, 9.0597);
		testMethod(1675, 2.5304, 1.9104, -0.6998, -0.9577, -1.1143, 9.242);
		testMethod(1680, 2.5399, 1.9064, -0.7997, -0.9632, -1.0681, 9.2545);
		testMethod(1685, 2.5495, 1.9019, -0.8997, -0.9684, -1.0218, 9.2518);
		testMethod(1690, 2.559, 1.8969, -0.9997, -0.9734, -0.9756, 9.2424);
		testMethod(1695, 2.5684, 1.8914, -1.0996, -0.9782, -0.9304, 9.0402);
		testMethod(1700, 2.5779, 1.8854, -1.1996, -0.9827, -0.8863, 8.825);
		testMethod(1705, 2.5873, 1.8789, -1.2996, -0.987, -0.8432, 8.6048);
		testMethod(1710, 2.5967, 1.8719, -1.3996, -0.9911, -0.8013, 8.3803);
		testMethod(1715, 2.606, 1.8644, -1.4995, -0.995, -0.7606, 8.1519);
		testMethod(1720, 2.6153, 1.8564, -1.5995, -0.9988, -0.721, 7.9202);
		testMethod(1725, 2.6246, 1.8479, -1.6995, -1.0023, -0.6826, 7.6857);
		testMethod(1730, 2.6338, 1.8389, -1.7994, -1.0056, -0.6453, 7.4489);
		testMethod(1735, 2.6429, 1.8294, -1.8994, -1.0087, -0.6093, 7.2104);
		testMethod(1740, 2.6521, 1.8194, -1.9994, -1.0117, -0.5744, 6.9705);
		testMethod(1745, 2.6611, 1.8089, -2.0993, -1.0145, -0.5408, 6.7298);
		testMethod(1750, 2.6702, 1.7979, -2.1993, -1.0171, -0.5083, 6.4888);
		testMethod(1755, 2.6791, 1.7864, -2.2993, -1.0195, -0.4771, 6.2479);
		testMethod(1760, 2.688, 1.7744, -2.3992, -1.0219, -0.447, 6.0076);
		testMethod(1765, 2.6969, 1.7619, -2.4992, -1.024, -0.4182, 5.7683);
		testMethod(1770, 2.7056, 1.7489, -2.5992, -1.026, -0.3905, 5.5305);
		testMethod(1775, 2.7143, 1.7354, -2.6991, -1.0279, -0.3641, 5.2946);
		testMethod(1780, 2.723, 1.7215, -2.7991, -1.0297, -0.3388, 5.0609);
		testMethod(1785, 2.7316, 1.707, -2.8991, -1.0313, -0.3146, 4.8299);
		testMethod(1790, 2.7401, 1.692, -2.999, -1.0328, -0.2916, 4.602);
		testMethod(1795, 2.7485, 1.6765, -3.099, -1.0342, -0.2697, 4.3774);
		testMethod(1800, 2.7568, 1.6605, -3.199, -1.0355, -0.2489, 4.1566);
		testMethod(1805, 2.7651, 1.644, -3.2989, -1.0367, -0.2292, 3.9398);
		testMethod(1810, 2.7733, 1.627, -3.3989, -1.0378, -0.2106, 3.7273);
		testMethod(1815, 2.7813, 1.6095, -3.4989, -1.0388, -0.193, 3.5195);
		testMethod(1820, 2.7894, 1.592, -3.4989, -1.0398, -0.1765, 3.306);
		testMethod(1825, 2.7973, 1.5745, -3.4989, -1.0406, -0.161, 3.101);
		testMethod(1830, 2.8051, 1.557, -3.4989, -1.0414, -0.1464, 2.9043);
		testMethod(1835, 2.8128, 1.5395, -3.4989, -1.0421, -0.1329, 2.7158);
		testMethod(1840, 2.8205, 1.522, -3.4989, -1.0427, -0.1202, 2.5351);
		testMethod(1845, 2.8281, 1.5045, -3.4989, -1.0433, -0.1084, 2.3622);
		testMethod(1850, 2.8355, 1.487, -3.4989, -1.0438, -0.0974, 2.1968);
		testMethod(1855, 2.8429, 1.4695, -3.4989, -1.0442, -0.0872, 2.0387);
		testMethod(1860, 2.8502, 1.452, -3.4989, -1.0447, -0.0778, 1.8878);
		testMethod(1865, 2.8574, 1.4345, -3.4989, -1.045, -0.069, 1.7438);
		testMethod(1870, 2.8646, 1.417, -3.4989, -1.0453, -0.061, 1.6066);
		testMethod(1875, 2.8716, 1.3996, -3.4989, -1.0456, -0.0536, 1.476);
		testMethod(1880, 2.8786, 1.3821, -3.4989, -1.0459, -0.0469, 1.3518);
		testMethod(1885, 2.8854, 1.3646, -3.4989, -1.0461, -0.0407, 1.2338);
		testMethod(1890, 2.8922, 1.3471, -3.4989, -1.0463, -0.0351, 1.1219);
		testMethod(1895, 2.8989, 1.3296, -3.4989, -1.0465, -0.03, 1.0159);
		testMethod(1900, 2.9055, 1.3121, -3.4989, -1.0466, -0.0254, 0.9155);
		testMethod(1905, 2.912, 1.2946, -3.4989, -1.0467, -0.0213, 0.8207);
		testMethod(1910, 2.9185, 1.2771, -3.4989, -1.0468, -0.0177, 0.7313);
		testMethod(1915, 2.9248, 1.2596, -3.4989, -1.0469, -0.0144, 0.6471);
		testMethod(1920, 2.9311, 1.2421, -3.4989, -1.0469, -0.0116, 0.5679);
		testMethod(1925, 2.9372, 1.2246, -3.4989, -1.047, -0.0091, 0.4935);
		testMethod(1930, 2.9433, 1.2071, -3.4989, -1.047, -0.007, 0.424);
		testMethod(1935, 2.9493, 1.1896, -3.4989, -1.0471, -0.0052, 0.3589);
		testMethod(1940, 2.9552, 1.1721, -3.4989, -1.0471, -0.0037, 0.2983);
		testMethod(1945, 2.961, 1.1546, -3.4989, -1.0471, -0.0025, 0.2419);
		testMethod(1950, 2.9667, 1.1371, -3.4989, -1.0471, -0.0016, 0.1897);
		testMethod(1955, 2.9724, 1.1196, -3.4989, -1.0471, -0.0009, 0.1414);
		testMethod(1960, 2.9779, 1.1021, -3.4989, -1.0471, -0.0004, 0.0969);
		testMethod(1965, 2.9834, 1.0847, -3.4989, -1.0471, -0.0001, 0.0561);
		testMethod(1970, 2.9888, 1.0672, -3.4989, -1.0471, -0, 0.0189);
		testMethod(1975, 2.9941, 1.0497, -3.4989, -1.0471, 0, 0);
		testMethod(1980, 2.9993, 1.0322, -3.4989, -1.0471, 0, 0);
		testMethod(1985, 3.0044, 1.0147, -3.4989, -1.0471, 0, 0);
		testMethod(1990, 3.0094, 0.9972, -3.4989, -1.0471, 0, 0);
		testMethod(1995, 3.0144, 0.9797, -3.4989, -1.0471, 0, 0);
		testMethod(2000, 3.0192, 0.9622, -3.4989, -1.0471, 0, 0);
		testMethod(2005, 3.024, 0.9447, -3.4989, -1.0471, 0, 0);
		testMethod(2010, 3.0287, 0.9272, -3.4989, -1.0471, 0, 0);
		testMethod(2015, 3.0333, 0.9097, -3.4989, -1.0471, 0, 0);
		testMethod(2020, 3.0378, 0.8922, -3.4989, -1.0471, 0, 0);
		testMethod(2025, 3.0422, 0.8747, -3.4989, -1.0471, 0, 0);
		testMethod(2030, 3.0465, 0.8572, -3.4989, -1.0471, 0, 0);
		testMethod(2035, 3.0508, 0.8397, -3.4989, -1.0471, 0, 0);
		testMethod(2040, 3.0549, 0.8222, -3.4989, -1.0471, 0, 0);
		testMethod(2045, 3.059, 0.8047, -3.4989, -1.0471, 0, 0);
		testMethod(2050, 3.063, 0.7872, -3.4989, -1.0471, 0, 0);
		testMethod(2055, 3.0669, 0.7698, -3.4989, -1.0471, 0, 0);
		testMethod(2060, 3.0707, 0.7523, -3.4989, -1.0471, 0, 0);
		testMethod(2065, 3.0744, 0.7348, -3.4989, -1.0471, 0, 0);
		testMethod(2070, 3.078, 0.7173, -3.4989, -1.0471, 0, 0);
		testMethod(2075, 3.0816, 0.6998, -3.4989, -1.0471, 0, 0);
		testMethod(2080, 3.085, 0.6823, -3.4989, -1.0471, 0, 0);
		testMethod(2085, 3.0884, 0.6648, -3.4989, -1.0471, 0, 0);
		testMethod(2090, 3.0917, 0.6473, -3.4989, -1.0471, 0, 0);
		testMethod(2095, 3.0948, 0.6298, -3.4989, -1.0471, 0, 0);
		testMethod(2100, 3.098, 0.6123, -3.4989, -1.0471, 0, 0);
		testMethod(2105, 3.101, 0.5948, -3.4989, -1.0471, 0, 0);
		testMethod(2110, 3.1039, 0.5773, -3.4989, -1.0471, 0, 0);
		testMethod(2115, 3.1067, 0.5598, -3.4989, -1.0471, 0, 0);
		testMethod(2120, 3.1095, 0.5423, -3.4989, -1.0471, 0, 0);
		testMethod(2125, 3.1122, 0.5248, -3.4989, -1.0471, 0, 0);
		testMethod(2130, 3.1147, 0.5073, -3.4989, -1.0471, 0, 0);
		testMethod(2135, 3.1172, 0.4898, -3.4989, -1.0471, 0, 0);
		testMethod(2140, 3.1196, 0.4723, -3.4989, -1.0471, 0, 0);
		testMethod(2145, 3.122, 0.4549, -3.4989, -1.0471, 0, 0);
		testMethod(2150, 3.1242, 0.4374, -3.4989, -1.0471, 0, 0);
		testMethod(2155, 3.1263, 0.4199, -3.4989, -1.0471, 0, 0);
		testMethod(2160, 3.1284, 0.4024, -3.4989, -1.0471, 0, 0);
		testMethod(2165, 3.1304, 0.3849, -3.4989, -1.0471, 0, 0);
		testMethod(2170, 3.1322, 0.3674, -3.4989, -1.0471, 0, 0);
		testMethod(2175, 3.134, 0.3499, -3.4989, -1.0471, 0, 0);
		testMethod(2180, 3.1357, 0.3324, -3.4989, -1.0471, 0, 0);
		testMethod(2185, 3.1374, 0.3149, -3.4989, -1.0471, 0, 0);
		testMethod(2190, 3.1389, 0.2974, -3.4989, -1.0471, 0, 0);
		testMethod(2195, 3.1403, 0.2804, -3.3989, -1.0471, 0, 0);
		testMethod(2200, 3.1417, 0.2639, -3.2989, -1.0471, 0, 0);
		testMethod(2205, 3.143, 0.2479, -3.199, -1.0471, 0, 0);
		testMethod(2210, 3.1442, 0.2324, -3.099, -1.0471, 0, 0);
		testMethod(2215, 3.1453, 0.2174, -2.999, -1.0471, 0, 0);
		testMethod(2220, 3.1464, 0.2029, -2.8991, -1.0471, 0, 0);
		testMethod(2225, 3.1473, 0.1889, -2.7991, -1.0471, 0, 0);
		testMethod(2230, 3.1482, 0.1754, -2.6991, -1.0471, 0, 0);
		testMethod(2235, 3.1491, 0.1624, -2.5992, -1.0471, 0, 0);
		testMethod(2240, 3.1499, 0.15, -2.4992, -1.0471, 0, 0);
		testMethod(2245, 3.1506, 0.138, -2.3992, -1.0471, 0, 0);
		testMethod(2250, 3.1512, 0.1265, -2.2993, -1.0471, 0, 0);
		testMethod(2255, 3.1519, 0.1155, -2.1993, -1.0471, 0, 0);
		testMethod(2260, 3.1524, 0.105, -2.0993, -1.0471, 0, 0);
		testMethod(2265, 3.1529, 0.095, -1.9994, -1.0471, 0, 0);
		testMethod(2270, 3.1534, 0.0855, -1.8994, -1.0471, 0, 0);
		testMethod(2275, 3.1538, 0.0765, -1.7994, -1.0471, 0, 0);
		testMethod(2280, 3.1541, 0.068, -1.6995, -1.0471, 0, 0);
		testMethod(2285, 3.1544, 0.06, -1.5995, -1.0471, 0, 0);
		testMethod(2290, 3.1547, 0.0525, -1.4995, -1.0471, 0, 0);
		testMethod(2295, 3.155, 0.0455, -1.3996, -1.0471, 0, 0);
		testMethod(2300, 3.1552, 0.039, -1.2996, -1.0471, 0, 0);
		testMethod(2305, 3.1554, 0.033, -1.1996, -1.0471, 0, 0);
		testMethod(2310, 3.1555, 0.0275, -1.0996, -1.0471, 0, 0);
		testMethod(2315, 3.1556, 0.0225, -0.9997, -1.0471, 0, 0);
		testMethod(2320, 3.1557, 0.018, -0.8997, -1.0471, 0, 0);
		testMethod(2325, 3.1558, 0.014, -0.7997, -1.0471, 0, 0);
		testMethod(2330, 3.1559, 0.0105, -0.6998, -1.0471, 0, 0);
		testMethod(2335, 3.1559, 0.0075, -0.5998, -1.0471, 0, 0);
		testMethod(2340, 3.156, 0.005, -0.4998, -1.0471, 0, 0);
		testMethod(2345, 3.156, 0.003, -0.3999, -1.0471, 0, 0);
		testMethod(2350, 3.156, 0.0015, -0.2999, -1.0471, 0, 0);
		testMethod(2355, 3.156, 0.0005, -0.1999, -1.0471, 0, 0);
		testMethod(2360, 3.156, 0, -0.1, -1.0471, 0, 0);
		testMethod(2365, 3.156, 0, 0, -1.0471, 0, 0);
		testMethod(2365, 3.156, 0, 0, -1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}