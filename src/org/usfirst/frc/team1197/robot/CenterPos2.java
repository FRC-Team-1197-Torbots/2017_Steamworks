package org.usfirst.frc.team1197.robot;

public class CenterPos2 extends TorTrajectory {

	public CenterPos2() {
		super(-5.6674, 3.1414);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0622, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1244, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.1866, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2487, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3109, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.3731, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.4353, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4975, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5597, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6218, 0, 0, 0);
		testMethod(55, -0.0004, -0.0205, -0.684, 0, 0, 0);
		testMethod(60, -0.0005, -0.0243, -0.7462, 0, 0, 0);
		testMethod(65, -0.0006, -0.0283, -0.8084, 0, 0, 0);
		testMethod(70, -0.0008, -0.0326, -0.8706, 0, 0, 0);
		testMethod(75, -0.001, -0.0373, -0.9328, 0, 0, 0);
		testMethod(80, -0.0012, -0.0423, -0.9949, 0, 0, 0);
		testMethod(85, -0.0014, -0.0476, -1.0571, 0, 0, 0);
		testMethod(90, -0.0016, -0.0532, -1.1193, 0, 0, 0);
		testMethod(95, -0.0019, -0.0591, -1.1815, 0, 0, 0);
		testMethod(100, -0.0022, -0.0653, -1.2437, 0, 0, 0);
		testMethod(105, -0.0026, -0.0718, -1.3059, 0, 0, 0);
		testMethod(110, -0.0029, -0.0787, -1.368, 0, 0, 0);
		testMethod(115, -0.0034, -0.0858, -1.4302, 0, 0, 0);
		testMethod(120, -0.0038, -0.0933, -1.4924, 0, 0, 0);
		testMethod(125, -0.0043, -0.101, -1.5546, 0, 0, 0);
		testMethod(130, -0.0048, -0.1091, -1.6168, 0, 0, 0);
		testMethod(135, -0.0054, -0.1175, -1.679, 0, 0, 0);
		testMethod(140, -0.006, -0.1262, -1.7411, 0, 0, 0);
		testMethod(145, -0.0066, -0.1352, -1.8033, 0, 0, 0);
		testMethod(150, -0.0073, -0.1446, -1.8655, 0, 0, 0);
		testMethod(155, -0.0081, -0.1542, -1.9277, 0, 0, 0);
		testMethod(160, -0.0089, -0.1642, -1.9899, 0, 0, 0);
		testMethod(165, -0.0097, -0.1744, -2.0521, 0, 0, 0);
		testMethod(170, -0.0106, -0.185, -2.1142, 0, 0, 0);
		testMethod(175, -0.0116, -0.1959, -2.1764, 0, 0, 0);
		testMethod(180, -0.0126, -0.2071, -2.2386, 0, 0, 0);
		testMethod(185, -0.0137, -0.2186, -2.3008, 0, 0, 0);
		testMethod(190, -0.0148, -0.2304, -2.363, 0, 0, 0);
		testMethod(195, -0.016, -0.2425, -2.4252, 0, 0, 0);
		testMethod(200, -0.0172, -0.255, -2.4873, 0, 0, 0);
		testMethod(205, -0.0185, -0.2674, -2.4873, 0, 0, 0);
		testMethod(210, -0.0199, -0.2798, -2.4873, 0, 0, 0);
		testMethod(215, -0.0213, -0.2923, -2.4873, 0, 0, 0);
		testMethod(220, -0.0228, -0.3047, -2.4873, 0, 0, 0);
		testMethod(225, -0.0244, -0.3171, -2.4873, 0, 0, 0);
		testMethod(230, -0.026, -0.3296, -2.4873, 0, 0, 0);
		testMethod(235, -0.0277, -0.342, -2.4873, 0, 0, 0);
		testMethod(240, -0.0294, -0.3544, -2.4873, 0, 0, 0);
		testMethod(245, -0.0312, -0.3669, -2.4873, 0, 0, 0);
		testMethod(250, -0.0331, -0.3793, -2.4873, 0, 0, 0);
		testMethod(255, -0.035, -0.3918, -2.4873, 0, 0, 0);
		testMethod(260, -0.037, -0.4042, -2.4873, 0, 0, 0);
		testMethod(265, -0.039, -0.4166, -2.4873, 0, 0, 0);
		testMethod(270, -0.0412, -0.4291, -2.4873, 0, 0, 0);
		testMethod(275, -0.0433, -0.4415, -2.4873, 0, 0, 0);
		testMethod(280, -0.0456, -0.4539, -2.4873, 0, 0, 0);
		testMethod(285, -0.0479, -0.4664, -2.4873, 0, 0, 0);
		testMethod(290, -0.0502, -0.4788, -2.4873, 0, 0, 0);
		testMethod(295, -0.0527, -0.4913, -2.4873, 0, 0, 0);
		testMethod(300, -0.0551, -0.5037, -2.4873, 0, 0, 0);
		testMethod(305, -0.0577, -0.5161, -2.4873, 0, 0, 0);
		testMethod(310, -0.0603, -0.5286, -2.4873, 0, 0, 0);
		testMethod(315, -0.063, -0.541, -2.4873, 0, 0, 0);
		testMethod(320, -0.0657, -0.5534, -2.4873, 0, 0, 0);
		testMethod(325, -0.0685, -0.5659, -2.4873, 0, 0, 0);
		testMethod(330, -0.0714, -0.5783, -2.4873, 0, 0, 0);
		testMethod(335, -0.0743, -0.5907, -2.4873, 0, 0, 0);
		testMethod(340, -0.0773, -0.6032, -2.4873, 0, 0, 0);
		testMethod(345, -0.0803, -0.6156, -2.4873, 0, 0, 0);
		testMethod(350, -0.0834, -0.6281, -2.4873, 0, 0, 0);
		testMethod(355, -0.0866, -0.6405, -2.4873, 0, 0, 0);
		testMethod(360, -0.0898, -0.6529, -2.4873, 0, 0, 0);
		testMethod(365, -0.0931, -0.6654, -2.4873, 0, 0, 0);
		testMethod(370, -0.0965, -0.6778, -2.4873, 0, 0, 0);
		testMethod(375, -0.0999, -0.6902, -2.4873, 0, 0, 0);
		testMethod(380, -0.1034, -0.7027, -2.4873, 0, 0, 0);
		testMethod(385, -0.1069, -0.7151, -2.4873, 0, 0, 0);
		testMethod(390, -0.1105, -0.7275, -2.4873, 0, 0, 0);
		testMethod(395, -0.1142, -0.74, -2.4873, 0, 0, 0);
		testMethod(400, -0.1179, -0.7524, -2.4873, 0, 0, 0);
		testMethod(405, -0.1217, -0.7649, -2.4873, 0, 0, 0);
		testMethod(410, -0.1256, -0.7773, -2.4873, 0, 0, 0);
		testMethod(415, -0.1295, -0.7897, -2.4873, 0, 0, 0);
		testMethod(420, -0.1335, -0.8022, -2.4873, 0, 0, 0);
		testMethod(425, -0.1375, -0.8146, -2.4873, 0, 0, 0);
		testMethod(430, -0.1416, -0.827, -2.4873, 0, 0, 0);
		testMethod(435, -0.1458, -0.8395, -2.4873, 0, 0, 0);
		testMethod(440, -0.15, -0.8519, -2.4873, 0, 0, 0);
		testMethod(445, -0.1543, -0.8644, -2.4873, 0, 0, 0);
		testMethod(450, -0.1587, -0.8768, -2.4873, 0, 0, 0);
		testMethod(455, -0.1631, -0.8892, -2.4873, 0, 0, 0);
		testMethod(460, -0.1676, -0.9017, -2.4873, 0, 0, 0);
		testMethod(465, -0.1721, -0.9141, -2.4873, 0, 0, 0);
		testMethod(470, -0.1767, -0.9265, -2.4873, 0, 0, 0);
		testMethod(475, -0.1814, -0.939, -2.4873, 0, 0, 0);
		testMethod(480, -0.1861, -0.9514, -2.4873, 0, 0, 0);
		testMethod(485, -0.1909, -0.9638, -2.4873, 0, 0, 0);
		testMethod(490, -0.1957, -0.9763, -2.4873, 0, 0, 0);
		testMethod(495, -0.2007, -0.9887, -2.4873, 0, 0, 0);
		testMethod(500, -0.2056, -1.0012, -2.4873, 0, 0, 0);
		testMethod(505, -0.2107, -1.0136, -2.4873, 0, 0, 0);
		testMethod(510, -0.2158, -1.026, -2.4873, 0, 0, 0);
		testMethod(515, -0.2209, -1.0385, -2.4873, 0, 0, 0);
		testMethod(520, -0.2261, -1.0509, -2.4873, 0, 0, 0);
		testMethod(525, -0.2314, -1.0633, -2.4873, 0, 0, 0);
		testMethod(530, -0.2368, -1.0758, -2.4873, 0, 0, 0);
		testMethod(535, -0.2422, -1.0882, -2.4873, 0, 0, 0);
		testMethod(540, -0.2477, -1.1007, -2.4873, 0, 0, 0);
		testMethod(545, -0.2532, -1.1131, -2.4873, 0, 0, 0);
		testMethod(550, -0.2588, -1.1255, -2.4873, 0, 0, 0);
		testMethod(555, -0.2645, -1.138, -2.4873, 0, 0, 0);
		testMethod(560, -0.2702, -1.1504, -2.4873, 0, 0, 0);
		testMethod(565, -0.276, -1.1628, -2.4873, 0, 0, 0);
		testMethod(570, -0.2818, -1.1753, -2.4873, 0, 0, 0);
		testMethod(575, -0.2877, -1.1877, -2.4873, 0, 0, 0);
		testMethod(580, -0.2937, -1.2001, -2.4873, 0, 0, 0.0025);
		testMethod(585, -0.2997, -1.2126, -2.4873, 0, 0.0002, 0.0402);
		testMethod(590, -0.3058, -1.225, -2.4873, 0, 0.0007, 0.0917);
		testMethod(595, -0.312, -1.2375, -2.4873, 0, 0.0014, 0.1464);
		testMethod(600, -0.3182, -1.2499, -2.4873, 0, 0.0024, 0.2043);
		testMethod(605, -0.3245, -1.2623, -2.4873, 0, 0.0038, 0.2655);
		testMethod(610, -0.3308, -1.2748, -2.4873, 0.0001, 0.0054, 0.33);
		testMethod(615, -0.3372, -1.2872, -2.4873, 0.0001, 0.0074, 0.3979);
		testMethod(620, -0.3437, -1.2996, -2.4873, 0.0001, 0.0097, 0.4694);
		testMethod(625, -0.3502, -1.3121, -2.4873, 0.0002, 0.0125, 0.5444);
		testMethod(630, -0.3568, -1.3245, -2.4873, 0.0003, 0.0156, 0.6232);
		testMethod(635, -0.3634, -1.3369, -2.4873, 0.0003, 0.0191, 0.7057);
		testMethod(640, -0.3702, -1.3494, -2.4873, 0.0004, 0.0231, 0.792);
		testMethod(645, -0.3769, -1.3618, -2.4873, 0.0006, 0.0275, 0.8823);
		testMethod(650, -0.3838, -1.3743, -2.4873, 0.0007, 0.0324, 0.9766);
		testMethod(655, -0.3907, -1.3867, -2.4873, 0.0009, 0.0377, 1.0751);
		testMethod(660, -0.3976, -1.3991, -2.4873, 0.0011, 0.0436, 1.1777);
		testMethod(665, -0.4047, -1.4116, -2.4873, 0.0013, 0.05, 1.2846);
		testMethod(670, -0.4118, -1.424, -2.4873, 0.0016, 0.057, 1.3959);
		testMethod(675, -0.4189, -1.4364, -2.4873, 0.0019, 0.0646, 1.5117);
		testMethod(680, -0.4261, -1.4489, -2.4873, 0.0022, 0.0727, 1.632);
		testMethod(685, -0.4334, -1.4613, -2.4873, 0.0026, 0.0815, 1.757);
		testMethod(690, -0.4407, -1.4738, -2.4873, 0.0031, 0.091, 1.8867);
		testMethod(695, -0.4481, -1.4862, -2.4873, 0.0035, 0.1011, 2.0213);
		testMethod(700, -0.4556, -1.4986, -2.4873, 0.0041, 0.1119, 2.1608);
		testMethod(705, -0.4631, -1.5111, -2.4873, 0.0047, 0.1234, 2.3054);
		testMethod(710, -0.4707, -1.5235, -2.4873, 0.0053, 0.1357, 2.4551);
		testMethod(715, -0.4784, -1.5359, -2.4873, 0.006, 0.1487, 2.61);
		testMethod(720, -0.4861, -1.5484, -2.4873, 0.0068, 0.1626, 2.7702);
		testMethod(725, -0.4938, -1.5608, -2.4873, 0.0077, 0.1773, 2.9359);
		testMethod(730, -0.5017, -1.5732, -2.4873, 0.0086, 0.1928, 3.1071);
		testMethod(735, -0.5096, -1.5857, -2.4873, 0.0096, 0.2092, 3.2839);
		testMethod(740, -0.5175, -1.5981, -2.4873, 0.0107, 0.2265, 3.4665);
		testMethod(745, -0.5256, -1.6106, -2.4873, 0.0118, 0.2448, 3.6549);
		testMethod(750, -0.5336, -1.623, -2.4873, 0.0131, 0.2641, 3.8492);
		testMethod(755, -0.5418, -1.6354, -2.4873, 0.0145, 0.2843, 4.0496);
		testMethod(760, -0.55, -1.6479, -2.4873, 0.016, 0.3056, 4.2561);
		testMethod(765, -0.5583, -1.6603, -2.4873, 0.0175, 0.3279, 4.4688);
		testMethod(770, -0.5666, -1.6727, -2.4873, 0.0192, 0.3514, 4.6879);
		testMethod(775, -0.575, -1.6852, -2.4873, 0.0211, 0.3759, 4.9135);
		testMethod(780, -0.5835, -1.6973, -2.4252, 0.023, 0.4016, 5.1305);
		testMethod(785, -0.592, -1.7091, -2.363, 0.0251, 0.4284, 5.3506);
		testMethod(790, -0.6005, -1.7206, -2.3008, 0.0273, 0.4562, 5.5736);
		testMethod(795, -0.6092, -1.7318, -2.2386, 0.0296, 0.4852, 5.7994);
		testMethod(800, -0.6179, -1.7427, -2.1764, 0.0321, 0.5154, 6.0276);
		testMethod(805, -0.6266, -1.7533, -2.1142, 0.0348, 0.5466, 6.2581);
		testMethod(810, -0.6354, -1.7635, -2.0521, 0.0376, 0.5791, 6.4906);
		testMethod(815, -0.6442, -1.7735, -1.9899, 0.0406, 0.6127, 6.7248);
		testMethod(820, -0.6531, -1.7831, -1.9277, 0.0437, 0.6475, 6.9606);
		testMethod(825, -0.6621, -1.7924, -1.8655, 0.0471, 0.6835, 7.1976);
		testMethod(830, -0.6711, -1.8015, -1.8033, 0.0506, 0.7207, 7.4356);
		testMethod(835, -0.6801, -1.8102, -1.7411, 0.0543, 0.7591, 7.6743);
		testMethod(840, -0.6892, -1.8186, -1.679, 0.0582, 0.7983, 7.8389);
		testMethod(845, -0.6983, -1.8266, -1.6168, 0.0623, 0.8366, 7.6635);
		testMethod(850, -0.7074, -1.8344, -1.5546, 0.0665, 0.8743, 7.5552);
		testMethod(855, -0.7166, -1.8419, -1.4924, 0.071, 0.9115, 7.4383);
		testMethod(860, -0.7258, -1.849, -1.4302, 0.0757, 0.9481, 7.313);
		testMethod(865, -0.7351, -1.8559, -1.368, 0.0805, 0.984, 7.1794);
		testMethod(870, -0.7444, -1.8624, -1.3059, 0.0855, 1.0192, 7.0379);
		testMethod(875, -0.7537, -1.8686, -1.2437, 0.0907, 1.0536, 6.8886);
		testMethod(880, -0.7631, -1.8745, -1.1815, 0.096, 1.0873, 6.7318);
		testMethod(885, -0.7725, -1.8801, -1.1193, 0.1015, 1.1201, 6.5676);
		testMethod(890, -0.7819, -1.8854, -1.0571, 0.1072, 1.1521, 6.3965);
		testMethod(895, -0.7913, -1.8904, -0.9949, 0.1131, 1.1832, 6.2185);
		testMethod(900, -0.8008, -1.895, -0.9328, 0.1191, 1.2134, 6.034);
		testMethod(905, -0.8103, -1.8994, -0.8706, 0.1252, 1.2426, 5.8432);
		testMethod(910, -0.8198, -1.9034, -0.8084, 0.1315, 1.2708, 5.6465);
		testMethod(915, -0.8293, -1.9072, -0.7462, 0.1379, 1.298, 5.444);
		testMethod(920, -0.8388, -1.9106, -0.684, 0.1445, 1.3242, 5.2361);
		testMethod(925, -0.8484, -1.9137, -0.6218, 0.1511, 1.3493, 5.023);
		testMethod(930, -0.858, -1.9165, -0.5597, 0.1579, 1.3734, 4.8052);
		testMethod(935, -0.8676, -1.919, -0.4975, 0.1649, 1.3963, 4.5827);
		testMethod(940, -0.8772, -1.9212, -0.4353, 0.1719, 1.4181, 4.3561);
		testMethod(945, -0.8868, -1.923, -0.3731, 0.1791, 1.4387, 4.1255);
		testMethod(950, -0.8964, -1.9246, -0.3109, 0.1863, 1.4581, 3.8912);
		testMethod(955, -0.906, -1.9258, -0.2487, 0.1936, 1.4764, 3.6537);
		testMethod(960, -0.9157, -1.9268, -0.1866, 0.2011, 1.4935, 3.4131);
		testMethod(965, -0.9253, -1.9274, -0.1244, 0.2086, 1.5093, 3.1699);
		testMethod(970, -0.9349, -1.9277, -0.0622, 0.2161, 1.5239, 2.9242);
		testMethod(975, -0.9446, -1.9277, -0, 0.2238, 1.5373, 2.6766);
		testMethod(980, -0.9542, -1.9277, -0, 0.2315, 1.5497, 2.4774);
		testMethod(985, -0.9638, -1.9277, -0, 0.2393, 1.5611, 2.2782);
		testMethod(990, -0.9735, -1.9277, -0, 0.2471, 1.5715, 2.079);
		testMethod(995, -0.9831, -1.9277, -0, 0.255, 1.5809, 1.8798);
		testMethod(1000, -0.9928, -1.9277, -0, 0.2629, 1.5893, 1.6806);
		testMethod(1005, -1.0024, -1.9277, -0, 0.2709, 1.5967, 1.4814);
		testMethod(1010, -1.012, -1.9277, -0, 0.2789, 1.6031, 1.2822);
		testMethod(1015, -1.0217, -1.9277, -0, 0.2869, 1.6085, 1.083);
		testMethod(1020, -1.0313, -1.9277, -0, 0.295, 1.613, 0.8838);
		testMethod(1025, -1.041, -1.9277, -0, 0.3031, 1.6164, 0.6846);
		testMethod(1030, -1.0506, -1.9277, -0, 0.3111, 1.6188, 0.4854);
		testMethod(1035, -1.0602, -1.9277, -0, 0.3192, 1.6202, 0.2862);
		testMethod(1040, -1.0699, -1.9277, -0, 0.3273, 1.6207, 0.0874);
		testMethod(1045, -1.0795, -1.9277, -0, 0.3355, 1.6207, 0);
		testMethod(1050, -1.0891, -1.9277, -0, 0.3436, 1.6207, 0);
		testMethod(1055, -1.0988, -1.9277, -0, 0.3517, 1.6207, 0);
		testMethod(1060, -1.1084, -1.9277, -0, 0.3598, 1.6207, 0);
		testMethod(1065, -1.1181, -1.9277, -0, 0.3679, 1.6207, 0);
		testMethod(1070, -1.1277, -1.9277, -0, 0.376, 1.6207, 0);
		testMethod(1075, -1.1373, -1.9277, -0, 0.3841, 1.6207, 0);
		testMethod(1080, -1.147, -1.9277, -0, 0.3922, 1.6207, 0);
		testMethod(1085, -1.1566, -1.9277, -0, 0.4003, 1.6207, 0);
		testMethod(1090, -1.1663, -1.9277, -0, 0.4084, 1.6207, 0);
		testMethod(1095, -1.1759, -1.9277, -0, 0.4165, 1.6207, 0);
		testMethod(1100, -1.1855, -1.9277, -0, 0.4246, 1.6207, 0);
		testMethod(1105, -1.1952, -1.9277, -0, 0.4327, 1.6207, 0);
		testMethod(1110, -1.2048, -1.9277, -0, 0.4408, 1.6207, 0);
		testMethod(1115, -1.2144, -1.9277, -0, 0.4489, 1.6207, 0);
		testMethod(1120, -1.2241, -1.9277, -0, 0.457, 1.6207, 0);
		testMethod(1125, -1.2337, -1.9277, -0, 0.4651, 1.6207, 0);
		testMethod(1130, -1.2434, -1.9277, -0, 0.4732, 1.6207, 0);
		testMethod(1135, -1.253, -1.9277, -0, 0.4813, 1.6207, 0);
		testMethod(1140, -1.2626, -1.9277, -0, 0.4894, 1.6207, 0);
		testMethod(1145, -1.2723, -1.9277, -0, 0.4975, 1.6207, 0);
		testMethod(1150, -1.2819, -1.9277, -0, 0.5056, 1.6207, 0);
		testMethod(1155, -1.2916, -1.9277, -0, 0.5137, 1.6207, 0);
		testMethod(1160, -1.3012, -1.9277, -0, 0.5218, 1.6207, 0);
		testMethod(1165, -1.3108, -1.9277, -0, 0.5299, 1.6207, 0);
		testMethod(1170, -1.3205, -1.9277, -0, 0.538, 1.6207, 0);
		testMethod(1175, -1.3301, -1.9277, -0, 0.5461, 1.6207, 0);
		testMethod(1180, -1.3397, -1.9277, -0, 0.5542, 1.6207, 0);
		testMethod(1185, -1.3494, -1.9277, -0, 0.5623, 1.6207, 0);
		testMethod(1190, -1.359, -1.9277, -0, 0.5704, 1.6207, 0);
		testMethod(1195, -1.3687, -1.9277, -0, 0.5786, 1.6207, 0);
		testMethod(1200, -1.3783, -1.9277, -0, 0.5867, 1.6207, 0);
		testMethod(1205, -1.3879, -1.9277, -0, 0.5948, 1.6207, 0);
		testMethod(1210, -1.3976, -1.9277, -0, 0.6029, 1.6207, 0);
		testMethod(1215, -1.4072, -1.9277, -0, 0.611, 1.6207, 0);
		testMethod(1220, -1.4169, -1.9277, -0, 0.6191, 1.6207, 0);
		testMethod(1225, -1.4265, -1.9277, -0, 0.6272, 1.6207, 0);
		testMethod(1230, -1.4361, -1.9277, -0, 0.6353, 1.6207, 0);
		testMethod(1235, -1.4458, -1.9277, -0, 0.6434, 1.6207, 0);
		testMethod(1240, -1.4554, -1.9277, -0, 0.6515, 1.6207, 0);
		testMethod(1245, -1.465, -1.9277, -0, 0.6596, 1.6207, 0);
		testMethod(1250, -1.4747, -1.9277, -0, 0.6677, 1.6207, 0);
		testMethod(1255, -1.4843, -1.9277, -0, 0.6758, 1.6207, 0);
		testMethod(1260, -1.494, -1.9277, -0, 0.6839, 1.6207, 0);
		testMethod(1265, -1.5036, -1.9277, -0, 0.692, 1.6207, 0);
		testMethod(1270, -1.5132, -1.9277, -0, 0.7001, 1.6207, 0);
		testMethod(1275, -1.5229, -1.9277, -0, 0.7082, 1.6207, 0);
		testMethod(1280, -1.5325, -1.9277, -0, 0.7163, 1.6207, 0);
		testMethod(1285, -1.5422, -1.9277, -0, 0.7244, 1.6207, 0);
		testMethod(1290, -1.5518, -1.9277, -0, 0.7325, 1.6207, 0);
		testMethod(1295, -1.5614, -1.9277, -0, 0.7406, 1.6207, 0);
		testMethod(1300, -1.5711, -1.9277, -0, 0.7487, 1.6207, 0);
		testMethod(1305, -1.5807, -1.9277, -0, 0.7568, 1.6207, 0);
		testMethod(1310, -1.5903, -1.9277, -0, 0.7649, 1.6207, 0);
		testMethod(1315, -1.6, -1.9277, -0, 0.773, 1.6207, 0);
		testMethod(1320, -1.6096, -1.9277, -0, 0.7811, 1.6207, 0);
		testMethod(1325, -1.6193, -1.9277, -0, 0.7892, 1.6207, 0);
		testMethod(1330, -1.6289, -1.9277, -0, 0.7973, 1.6207, 0);
		testMethod(1335, -1.6385, -1.9277, -0, 0.8054, 1.6207, 0);
		testMethod(1340, -1.6482, -1.9277, -0, 0.8136, 1.6207, 0);
		testMethod(1345, -1.6578, -1.9277, -0, 0.8217, 1.6207, 0);
		testMethod(1350, -1.6675, -1.9277, -0, 0.8298, 1.6207, 0);
		testMethod(1355, -1.6771, -1.9277, -0, 0.8379, 1.6207, 0);
		testMethod(1360, -1.6867, -1.9277, -0, 0.846, 1.6207, 0);
		testMethod(1365, -1.6964, -1.9277, -0, 0.8541, 1.6207, 0);
		testMethod(1370, -1.706, -1.9277, -0, 0.8622, 1.6207, 0);
		testMethod(1375, -1.7156, -1.9277, -0, 0.8703, 1.6207, 0);
		testMethod(1380, -1.7253, -1.9277, -0, 0.8784, 1.6207, 0);
		testMethod(1385, -1.7349, -1.9277, -0, 0.8865, 1.6207, 0);
		testMethod(1390, -1.7446, -1.9277, -0, 0.8946, 1.6207, 0);
		testMethod(1395, -1.7542, -1.9277, -0, 0.9027, 1.6207, 0);
		testMethod(1400, -1.7638, -1.9277, -0, 0.9108, 1.6207, 0);
		testMethod(1405, -1.7735, -1.9277, -0, 0.9189, 1.6207, 0);
		testMethod(1410, -1.7831, -1.9277, -0, 0.927, 1.6207, 0);
		testMethod(1415, -1.7928, -1.9277, -0, 0.9351, 1.6207, 0);
		testMethod(1420, -1.8024, -1.9277, -0, 0.9432, 1.6207, 0);
		testMethod(1425, -1.812, -1.9277, -0, 0.9513, 1.6207, 0);
		testMethod(1430, -1.8217, -1.9277, -0, 0.9594, 1.6207, 0);
		testMethod(1435, -1.8313, -1.9277, -0, 0.9675, 1.6207, 0);
		testMethod(1440, -1.8409, -1.9277, -0, 0.9756, 1.6207, 0);
		testMethod(1445, -1.8506, -1.9277, -0, 0.9837, 1.6207, 0);
		testMethod(1450, -1.8602, -1.9277, -0, 0.9918, 1.6207, 0);
		testMethod(1455, -1.8699, -1.9277, -0, 0.9999, 1.6207, 0);
		testMethod(1460, -1.8795, -1.9277, -0, 1.008, 1.6207, 0);
		testMethod(1465, -1.8891, -1.9277, -0, 1.0161, 1.6207, 0);
		testMethod(1470, -1.8988, -1.9277, -0, 1.0242, 1.6207, 0);
		testMethod(1475, -1.9084, -1.9277, -0, 1.0323, 1.6207, 0);
		testMethod(1480, -1.9181, -1.9277, -0, 1.0404, 1.6207, 0);
		testMethod(1485, -1.9277, -1.9277, -0, 1.0485, 1.6207, 0);
		testMethod(1490, -1.9373, -1.9277, -0, 1.0567, 1.6207, 0);
		testMethod(1495, -1.947, -1.9277, -0, 1.0648, 1.6207, 0);
		testMethod(1500, -1.9566, -1.9277, -0, 1.0729, 1.6207, 0);
		testMethod(1505, -1.9662, -1.9277, -0, 1.081, 1.6207, 0);
		testMethod(1510, -1.9759, -1.9277, -0, 1.0891, 1.6207, 0);
		testMethod(1515, -1.9855, -1.9277, -0, 1.0972, 1.6207, 0);
		testMethod(1520, -1.9952, -1.9277, -0, 1.1053, 1.6207, 0);
		testMethod(1525, -2.0048, -1.9277, -0, 1.1134, 1.6207, 0);
		testMethod(1530, -2.0144, -1.9277, -0, 1.1215, 1.6207, 0);
		testMethod(1535, -2.0241, -1.9277, -0, 1.1296, 1.6207, 0);
		testMethod(1540, -2.0337, -1.9277, -0, 1.1377, 1.6207, 0);
		testMethod(1545, -2.0434, -1.9277, -0, 1.1458, 1.6207, 0);
		testMethod(1550, -2.053, -1.9277, -0, 1.1539, 1.6207, 0);
		testMethod(1555, -2.0626, -1.9277, -0, 1.162, 1.6207, 0);
		testMethod(1560, -2.0723, -1.9277, -0, 1.1701, 1.6207, 0);
		testMethod(1565, -2.0819, -1.9277, -0, 1.1782, 1.6207, 0);
		testMethod(1570, -2.0915, -1.9277, -0, 1.1863, 1.6207, 0);
		testMethod(1575, -2.1012, -1.9277, -0, 1.1944, 1.6207, 0);
		testMethod(1580, -2.1108, -1.9277, -0, 1.2025, 1.6207, 0);
		testMethod(1585, -2.1205, -1.9277, -0, 1.2106, 1.6207, 0);
		testMethod(1590, -2.1301, -1.9277, -0, 1.2187, 1.6207, 0);
		testMethod(1595, -2.1397, -1.9277, -0, 1.2268, 1.6207, 0);
		testMethod(1600, -2.1494, -1.9277, -0, 1.2349, 1.6207, 0);
		testMethod(1605, -2.159, -1.9277, -0, 1.243, 1.6207, 0);
		testMethod(1610, -2.1687, -1.9277, -0, 1.2511, 1.6207, 0);
		testMethod(1615, -2.1783, -1.9277, -0, 1.2592, 1.6207, 0);
		testMethod(1620, -2.1879, -1.9277, -0, 1.2673, 1.6207, 0);
		testMethod(1625, -2.1976, -1.9277, -0, 1.2754, 1.6207, 0);
		testMethod(1630, -2.2072, -1.9277, -0, 1.2835, 1.6207, 0);
		testMethod(1635, -2.2168, -1.9277, -0, 1.2917, 1.6207, 0);
		testMethod(1640, -2.2265, -1.9277, -0, 1.2998, 1.6207, 0);
		testMethod(1645, -2.2361, -1.9277, -0, 1.3079, 1.6207, 0);
		testMethod(1650, -2.2458, -1.9277, -0, 1.316, 1.6207, 0);
		testMethod(1655, -2.2554, -1.9277, -0, 1.3241, 1.6207, 0);
		testMethod(1660, -2.265, -1.9277, -0, 1.3322, 1.6207, 0);
		testMethod(1665, -2.2747, -1.9277, -0, 1.3403, 1.6207, 0);
		testMethod(1670, -2.2843, -1.9277, -0, 1.3484, 1.6207, 0);
		testMethod(1675, -2.294, -1.9277, -0, 1.3565, 1.6207, 0);
		testMethod(1680, -2.3036, -1.9277, -0, 1.3646, 1.6207, 0);
		testMethod(1685, -2.3132, -1.9277, -0, 1.3727, 1.6207, 0);
		testMethod(1690, -2.3229, -1.9277, -0, 1.3808, 1.6207, 0);
		testMethod(1695, -2.3325, -1.9277, -0, 1.3889, 1.6207, 0);
		testMethod(1700, -2.3421, -1.9277, -0, 1.397, 1.6207, 0);
		testMethod(1705, -2.3518, -1.9277, -0, 1.4051, 1.6207, 0);
		testMethod(1710, -2.3614, -1.9277, -0, 1.4132, 1.6207, 0);
		testMethod(1715, -2.3711, -1.9277, -0, 1.4213, 1.6207, 0);
		testMethod(1720, -2.3807, -1.9277, -0, 1.4294, 1.6207, 0);
		testMethod(1725, -2.3903, -1.9277, -0, 1.4375, 1.6207, 0);
		testMethod(1730, -2.4, -1.9277, -0, 1.4456, 1.6207, 0);
		testMethod(1735, -2.4096, -1.9277, -0, 1.4537, 1.6207, 0);
		testMethod(1740, -2.4193, -1.9277, -0, 1.4618, 1.6207, 0);
		testMethod(1745, -2.4289, -1.9277, -0, 1.4699, 1.6207, 0);
		testMethod(1750, -2.4385, -1.9277, -0, 1.478, 1.6207, 0);
		testMethod(1755, -2.4482, -1.9277, -0, 1.4861, 1.6207, 0);
		testMethod(1760, -2.4578, -1.9277, -0, 1.4942, 1.6207, 0);
		testMethod(1765, -2.4674, -1.9277, -0, 1.5023, 1.6207, 0);
		testMethod(1770, -2.4771, -1.9277, -0, 1.5104, 1.6207, 0);
		testMethod(1775, -2.4867, -1.9277, -0, 1.5185, 1.6207, 0);
		testMethod(1780, -2.4964, -1.9277, -0, 1.5266, 1.6207, 0);
		testMethod(1785, -2.506, -1.9277, -0, 1.5348, 1.6207, 0);
		testMethod(1790, -2.5156, -1.9277, -0, 1.5429, 1.6207, 0);
		testMethod(1795, -2.5253, -1.9277, -0, 1.551, 1.6207, 0);
		testMethod(1800, -2.5349, -1.9277, -0, 1.5591, 1.6207, 0);
		testMethod(1805, -2.5446, -1.9277, -0, 1.5672, 1.6207, 0);
		testMethod(1810, -2.5542, -1.9277, -0, 1.5753, 1.6207, 0);
		testMethod(1815, -2.5638, -1.9277, -0, 1.5834, 1.6207, 0);
		testMethod(1820, -2.5735, -1.9277, -0, 1.5915, 1.6207, 0);
		testMethod(1825, -2.5831, -1.9277, -0, 1.5996, 1.6207, 0);
		testMethod(1830, -2.5927, -1.9277, -0, 1.6077, 1.6207, 0);
		testMethod(1835, -2.6024, -1.9277, -0, 1.6158, 1.6207, 0);
		testMethod(1840, -2.612, -1.9277, -0, 1.6239, 1.6207, 0);
		testMethod(1845, -2.6217, -1.9277, -0, 1.632, 1.6207, 0);
		testMethod(1850, -2.6313, -1.9277, -0, 1.6401, 1.6207, 0);
		testMethod(1855, -2.6409, -1.9277, -0, 1.6482, 1.6207, 0);
		testMethod(1860, -2.6506, -1.9277, -0, 1.6563, 1.6207, 0);
		testMethod(1865, -2.6602, -1.9277, -0, 1.6644, 1.6207, 0);
		testMethod(1870, -2.6699, -1.9277, -0, 1.6725, 1.6207, 0);
		testMethod(1875, -2.6795, -1.9277, -0, 1.6806, 1.6207, 0);
		testMethod(1880, -2.6891, -1.9277, -0, 1.6887, 1.6207, 0);
		testMethod(1885, -2.6988, -1.9277, -0, 1.6968, 1.6207, 0);
		testMethod(1890, -2.7084, -1.9277, -0, 1.7049, 1.6207, 0);
		testMethod(1895, -2.718, -1.9277, -0, 1.713, 1.6207, 0);
		testMethod(1900, -2.7277, -1.9277, -0, 1.7211, 1.6207, 0);
		testMethod(1905, -2.7373, -1.9277, -0, 1.7292, 1.6207, 0);
		testMethod(1910, -2.747, -1.9277, -0, 1.7373, 1.6207, 0);
		testMethod(1915, -2.7566, -1.9277, -0, 1.7454, 1.6207, 0);
		testMethod(1920, -2.7662, -1.9277, -0, 1.7535, 1.6207, 0);
		testMethod(1925, -2.7759, -1.9277, -0, 1.7616, 1.6207, 0);
		testMethod(1930, -2.7855, -1.9277, -0, 1.7697, 1.6207, 0);
		testMethod(1935, -2.7952, -1.9277, -0, 1.7779, 1.6207, 0);
		testMethod(1940, -2.8048, -1.9277, -0, 1.786, 1.6207, 0);
		testMethod(1945, -2.8144, -1.9277, -0, 1.7941, 1.6207, 0);
		testMethod(1950, -2.8241, -1.9277, -0, 1.8022, 1.6207, 0);
		testMethod(1955, -2.8337, -1.9277, -0, 1.8103, 1.6207, 0);
		testMethod(1960, -2.8433, -1.9277, -0, 1.8184, 1.6207, 0);
		testMethod(1965, -2.853, -1.9277, -0, 1.8265, 1.6207, 0);
		testMethod(1970, -2.8626, -1.9277, -0, 1.8346, 1.6207, 0);
		testMethod(1975, -2.8723, -1.9277, -0, 1.8427, 1.6207, 0);
		testMethod(1980, -2.8819, -1.9277, -0, 1.8508, 1.6207, 0);
		testMethod(1985, -2.8915, -1.9277, -0, 1.8589, 1.6207, 0);
		testMethod(1990, -2.9012, -1.9277, -0, 1.867, 1.6207, 0);
		testMethod(1995, -2.9108, -1.9277, -0, 1.8751, 1.6207, 0);
		testMethod(2000, -2.9205, -1.9277, -0, 1.8832, 1.6207, 0);
		testMethod(2005, -2.9301, -1.9277, -0, 1.8913, 1.6207, 0);
		testMethod(2010, -2.9397, -1.9277, -0, 1.8994, 1.6207, 0);
		testMethod(2015, -2.9494, -1.9277, -0, 1.9075, 1.6207, 0);
		testMethod(2020, -2.959, -1.9277, -0, 1.9156, 1.6207, 0);
		testMethod(2025, -2.9686, -1.9277, -0, 1.9237, 1.6207, 0);
		testMethod(2030, -2.9783, -1.9277, -0, 1.9318, 1.6207, 0);
		testMethod(2035, -2.9879, -1.9277, -0, 1.9399, 1.6207, 0);
		testMethod(2040, -2.9976, -1.9277, -0, 1.948, 1.6207, 0);
		testMethod(2045, -3.0072, -1.9277, -0, 1.9561, 1.6207, 0);
		testMethod(2050, -3.0168, -1.9277, -0, 1.9642, 1.6207, 0);
		testMethod(2055, -3.0265, -1.9277, -0, 1.9723, 1.6207, 0);
		testMethod(2060, -3.0361, -1.9277, -0, 1.9804, 1.6207, 0);
		testMethod(2065, -3.0458, -1.9277, -0, 1.9885, 1.6207, 0);
		testMethod(2070, -3.0554, -1.9277, -0, 1.9966, 1.6207, 0);
		testMethod(2075, -3.065, -1.9277, -0, 2.0047, 1.6207, 0);
		testMethod(2080, -3.0747, -1.9277, -0, 2.0129, 1.6207, 0);
		testMethod(2085, -3.0843, -1.9277, -0, 2.021, 1.6207, 0);
		testMethod(2090, -3.0939, -1.9277, -0, 2.0291, 1.6207, 0);
		testMethod(2095, -3.1036, -1.9277, -0, 2.0372, 1.6207, 0);
		testMethod(2100, -3.1132, -1.9277, -0, 2.0453, 1.6207, 0);
		testMethod(2105, -3.1229, -1.9277, -0, 2.0534, 1.6207, 0);
		testMethod(2110, -3.1325, -1.9277, -0, 2.0615, 1.6207, 0);
		testMethod(2115, -3.1421, -1.9277, -0, 2.0696, 1.6207, 0);
		testMethod(2120, -3.1518, -1.9277, -0, 2.0777, 1.6207, 0);
		testMethod(2125, -3.1614, -1.9277, -0, 2.0858, 1.6207, 0);
		testMethod(2130, -3.1711, -1.9277, -0, 2.0939, 1.6207, 0);
		testMethod(2135, -3.1807, -1.9277, -0, 2.102, 1.6207, 0);
		testMethod(2140, -3.1903, -1.9277, -0, 2.1101, 1.6207, 0);
		testMethod(2145, -3.2, -1.9277, -0, 2.1182, 1.6207, 0);
		testMethod(2150, -3.2096, -1.9277, -0, 2.1263, 1.6207, 0);
		testMethod(2155, -3.2192, -1.9277, -0, 2.1344, 1.6207, 0);
		testMethod(2160, -3.2289, -1.9277, -0, 2.1425, 1.6207, 0);
		testMethod(2165, -3.2385, -1.9277, -0, 2.1506, 1.6207, 0);
		testMethod(2170, -3.2482, -1.9277, -0, 2.1587, 1.6207, 0);
		testMethod(2175, -3.2578, -1.9277, -0, 2.1668, 1.6207, 0);
		testMethod(2180, -3.2674, -1.9277, -0, 2.1749, 1.6207, 0);
		testMethod(2185, -3.2771, -1.9277, -0, 2.183, 1.6207, 0);
		testMethod(2190, -3.2867, -1.9277, -0, 2.1911, 1.6207, 0);
		testMethod(2195, -3.2964, -1.9277, -0, 2.1992, 1.6207, 0);
		testMethod(2200, -3.306, -1.9277, -0, 2.2073, 1.6207, 0);
		testMethod(2205, -3.3156, -1.9277, -0, 2.2154, 1.6207, 0);
		testMethod(2210, -3.3253, -1.9277, -0, 2.2235, 1.6207, 0);
		testMethod(2215, -3.3349, -1.9277, -0, 2.2316, 1.6207, 0);
		testMethod(2220, -3.3445, -1.9277, -0, 2.2397, 1.6207, 0);
		testMethod(2225, -3.3542, -1.9277, -0, 2.2478, 1.6207, 0);
		testMethod(2230, -3.3638, -1.9277, -0, 2.256, 1.6207, 0);
		testMethod(2235, -3.3735, -1.9277, -0, 2.2641, 1.6207, 0);
		testMethod(2240, -3.3831, -1.9277, -0, 2.2722, 1.6207, 0);
		testMethod(2245, -3.3927, -1.9277, -0, 2.2803, 1.6207, 0);
		testMethod(2250, -3.4024, -1.9277, -0, 2.2884, 1.6207, 0);
		testMethod(2255, -3.412, -1.9277, -0, 2.2965, 1.6207, 0);
		testMethod(2260, -3.4217, -1.9277, -0, 2.3046, 1.6207, 0);
		testMethod(2265, -3.4313, -1.9277, -0, 2.3127, 1.6207, 0);
		testMethod(2270, -3.4409, -1.9277, -0, 2.3208, 1.6207, 0);
		testMethod(2275, -3.4506, -1.9277, -0, 2.3289, 1.6207, 0);
		testMethod(2280, -3.4602, -1.9277, -0, 2.337, 1.6207, 0);
		testMethod(2285, -3.4699, -1.9277, -0, 2.3451, 1.6207, 0);
		testMethod(2290, -3.4795, -1.9277, -0, 2.3532, 1.6207, 0);
		testMethod(2295, -3.4891, -1.9277, -0, 2.3613, 1.6207, 0);
		testMethod(2300, -3.4988, -1.9277, -0, 2.3694, 1.6207, 0);
		testMethod(2305, -3.5084, -1.9277, -0, 2.3775, 1.6207, 0);
		testMethod(2310, -3.518, -1.9277, -0, 2.3856, 1.6207, 0);
		testMethod(2315, -3.5277, -1.9277, -0, 2.3937, 1.6207, 0);
		testMethod(2320, -3.5373, -1.9277, -0, 2.4018, 1.6207, 0);
		testMethod(2325, -3.547, -1.9277, -0, 2.4099, 1.6207, 0);
		testMethod(2330, -3.5566, -1.9277, -0, 2.418, 1.6207, 0);
		testMethod(2335, -3.5662, -1.9277, -0, 2.4261, 1.6207, 0);
		testMethod(2340, -3.5759, -1.9277, -0, 2.4342, 1.6207, 0);
		testMethod(2345, -3.5855, -1.9277, -0, 2.4423, 1.6207, 0);
		testMethod(2350, -3.5952, -1.9277, -0, 2.4504, 1.6207, 0);
		testMethod(2355, -3.6048, -1.9277, -0, 2.4585, 1.6207, 0);
		testMethod(2360, -3.6144, -1.9277, -0, 2.4666, 1.6207, 0);
		testMethod(2365, -3.6241, -1.9277, -0, 2.4747, 1.6207, 0);
		testMethod(2370, -3.6337, -1.9277, -0, 2.4828, 1.6207, 0);
		testMethod(2375, -3.6433, -1.9277, -0, 2.491, 1.6207, 0);
		testMethod(2380, -3.653, -1.9277, -0, 2.4991, 1.6207, 0);
		testMethod(2385, -3.6626, -1.9277, -0, 2.5072, 1.6207, 0);
		testMethod(2390, -3.6723, -1.9277, -0, 2.5153, 1.6207, 0);
		testMethod(2395, -3.6819, -1.9277, -0, 2.5234, 1.6207, 0);
		testMethod(2400, -3.6915, -1.9277, -0, 2.5315, 1.6207, 0);
		testMethod(2405, -3.7012, -1.9277, -0, 2.5396, 1.6207, 0);
		testMethod(2410, -3.7108, -1.9277, -0, 2.5477, 1.6207, 0);
		testMethod(2415, -3.7205, -1.9277, -0, 2.5558, 1.6207, 0);
		testMethod(2420, -3.7301, -1.9277, -0, 2.5639, 1.6207, 0);
		testMethod(2425, -3.7397, -1.9277, -0, 2.572, 1.6207, 0);
		testMethod(2430, -3.7494, -1.9277, -0, 2.5801, 1.6207, 0);
		testMethod(2435, -3.759, -1.9277, -0, 2.5882, 1.6207, 0);
		testMethod(2440, -3.7686, -1.9277, -0, 2.5963, 1.6207, 0);
		testMethod(2445, -3.7783, -1.9277, -0, 2.6044, 1.6207, 0);
		testMethod(2450, -3.7879, -1.9277, -0, 2.6125, 1.6207, 0);
		testMethod(2455, -3.7976, -1.9277, -0, 2.6206, 1.6207, 0);
		testMethod(2460, -3.8072, -1.9277, -0, 2.6287, 1.6207, 0);
		testMethod(2465, -3.8168, -1.9277, -0, 2.6368, 1.6207, 0);
		testMethod(2470, -3.8265, -1.9277, -0, 2.6449, 1.6207, 0);
		testMethod(2475, -3.8361, -1.9277, -0, 2.653, 1.6207, 0);
		testMethod(2480, -3.8458, -1.9277, -0, 2.6611, 1.6207, 0);
		testMethod(2485, -3.8554, -1.9277, -0, 2.6692, 1.6207, 0);
		testMethod(2490, -3.865, -1.9277, -0, 2.6773, 1.6207, 0);
		testMethod(2495, -3.8747, -1.9277, -0, 2.6854, 1.6207, 0);
		testMethod(2500, -3.8843, -1.9277, -0, 2.6935, 1.6207, 0);
		testMethod(2505, -3.8939, -1.9277, -0, 2.7016, 1.6207, 0);
		testMethod(2510, -3.9036, -1.9277, -0, 2.7097, 1.6207, 0);
		testMethod(2515, -3.9132, -1.9277, -0, 2.7178, 1.6207, 0);
		testMethod(2520, -3.9229, -1.9277, -0, 2.7259, 1.6207, 0);
		testMethod(2525, -3.9325, -1.9277, -0, 2.7341, 1.6207, 0);
		testMethod(2530, -3.9421, -1.9277, -0, 2.7422, 1.6207, 0);
		testMethod(2535, -3.9518, -1.9277, -0, 2.7503, 1.6207, 0);
		testMethod(2540, -3.9614, -1.9277, -0, 2.7584, 1.6207, 0);
		testMethod(2545, -3.9711, -1.9277, -0, 2.7665, 1.6207, 0);
		testMethod(2550, -3.9807, -1.9277, -0, 2.7746, 1.6207, 0);
		testMethod(2555, -3.9903, -1.9277, -0, 2.7827, 1.6207, 0);
		testMethod(2560, -4, -1.9277, -0, 2.7908, 1.6207, 0);
		testMethod(2565, -4.0096, -1.9277, -0, 2.7989, 1.6207, 0);
		testMethod(2570, -4.0192, -1.9277, -0, 2.807, 1.6207, 0);
		testMethod(2575, -4.0289, -1.9277, -0, 2.8151, 1.6207, -0.0004);
		testMethod(2580, -4.0385, -1.9277, -0, 2.8232, 1.6201, -0.1124);
		testMethod(2585, -4.0482, -1.9277, -0, 2.8313, 1.6186, -0.3116);
		testMethod(2590, -4.0578, -1.9277, -0, 2.8394, 1.616, -0.5108);
		testMethod(2595, -4.0674, -1.9277, -0, 2.8474, 1.6124, -0.71);
		testMethod(2600, -4.0771, -1.9277, -0, 2.8555, 1.6079, -0.9092);
		testMethod(2605, -4.0867, -1.9277, -0, 2.8635, 1.6024, -1.1084);
		testMethod(2610, -4.0964, -1.9277, -0, 2.8715, 1.5958, -1.3076);
		testMethod(2615, -4.106, -1.9277, -0, 2.8795, 1.5883, -1.5068);
		testMethod(2620, -4.1156, -1.9277, -0, 2.8874, 1.5798, -1.7061);
		testMethod(2625, -4.1253, -1.9277, -0, 2.8953, 1.5702, -1.9053);
		testMethod(2630, -4.1349, -1.9277, -0, 2.9031, 1.5597, -2.1045);
		testMethod(2635, -4.1445, -1.9277, -0, 2.9109, 1.5482, -2.3037);
		testMethod(2640, -4.1542, -1.9277, -0, 2.9186, 1.5357, -2.5029);
		testMethod(2645, -4.1638, -1.9277, -0, 2.9262, 1.5222, -2.7021);
		testMethod(2650, -4.1735, -1.9277, -0, 2.9338, 1.5077, -2.9013);
		testMethod(2655, -4.1831, -1.9277, -0, 2.9413, 1.4922, -3.1005);
		testMethod(2660, -4.1927, -1.9277, -0, 2.9487, 1.4757, -3.2997);
		testMethod(2665, -4.2024, -1.9277, -0, 2.9561, 1.4582, -3.4989);
		testMethod(2670, -4.212, -1.9277, -0, 2.9633, 1.4397, -3.6981);
		testMethod(2675, -4.2217, -1.9277, -0, 2.9704, 1.4202, -3.8973);
		testMethod(2680, -4.2313, -1.9277, -0, 2.9775, 1.3997, -4.0965);
		testMethod(2685, -4.2409, -1.9277, -0, 2.9844, 1.3782, -4.2957);
		testMethod(2690, -4.2506, -1.9277, -0, 2.9913, 1.3558, -4.4949);
		testMethod(2695, -4.2602, -1.9277, -0, 2.998, 1.3323, -4.6941);
		testMethod(2700, -4.2698, -1.9277, -0, 3.0046, 1.3078, -4.8933);
		testMethod(2705, -4.2795, -1.9277, -0, 3.0111, 1.2824, -5.0925);
		testMethod(2710, -4.2891, -1.9277, -0, 3.0174, 1.2559, -5.2917);
		testMethod(2715, -4.2988, -1.9277, -0, 3.0236, 1.2284, -5.4909);
		testMethod(2720, -4.3084, -1.9277, -0, 3.0297, 1.2, -5.6901);
		testMethod(2725, -4.318, -1.9277, -0, 3.0356, 1.1705, -5.8893);
		testMethod(2730, -4.3277, -1.9277, -0, 3.0414, 1.1401, -6.0885);
		testMethod(2735, -4.3373, -1.9277, -0, 3.047, 1.1087, -6.2877);
		testMethod(2740, -4.347, -1.9277, -0, 3.0525, 1.0762, -6.4869);
		testMethod(2745, -4.3566, -1.9277, -0, 3.0578, 1.0428, -6.6861);
		testMethod(2750, -4.3662, -1.9277, -0, 3.0629, 1.0084, -6.8853);
		testMethod(2755, -4.3759, -1.9277, -0, 3.0679, 0.9729, -7.0845);
		testMethod(2760, -4.3855, -1.9277, -0, 3.0726, 0.9365, -7.2837);
		testMethod(2765, -4.3951, -1.9277, -0, 3.0772, 0.8991, -7.4829);
		testMethod(2770, -4.4048, -1.9277, -0, 3.0816, 0.8607, -7.6821);
		testMethod(2775, -4.4144, -1.9277, -0, 3.0858, 0.8213, -7.8813);
		testMethod(2780, -4.4241, -1.9277, -0, 3.0898, 0.781, -8.0552);
		testMethod(2785, -4.4337, -1.9277, -0, 3.0937, 0.7421, -7.7892);
		testMethod(2790, -4.4433, -1.9277, -0, 3.0973, 0.7041, -7.59);
		testMethod(2795, -4.453, -1.9277, -0, 3.1007, 0.6672, -7.3908);
		testMethod(2800, -4.4626, -1.9277, -0, 3.1039, 0.6312, -7.1916);
		testMethod(2805, -4.4723, -1.9277, -0, 3.107, 0.5963, -6.9924);
		testMethod(2810, -4.4819, -1.9277, -0, 3.1099, 0.5623, -6.7931);
		testMethod(2815, -4.4915, -1.9277, -0, 3.1126, 0.5293, -6.5939);
		testMethod(2820, -4.5012, -1.9277, -0, 3.1152, 0.4973, -6.3947);
		testMethod(2825, -4.5108, -1.9277, -0, 3.1176, 0.4664, -6.1955);
		testMethod(2830, -4.5204, -1.9277, -0, 3.1199, 0.4364, -5.9963);
		testMethod(2835, -4.5301, -1.9277, -0, 3.122, 0.4074, -5.7971);
		testMethod(2840, -4.5397, -1.9277, -0, 3.1239, 0.3794, -5.5979);
		testMethod(2845, -4.5494, -1.9277, -0, 3.1258, 0.3524, -5.3987);
		testMethod(2850, -4.559, -1.9277, -0, 3.1275, 0.3264, -5.1995);
		testMethod(2855, -4.5686, -1.9277, -0, 3.129, 0.3014, -5.0003);
		testMethod(2860, -4.5783, -1.9277, -0, 3.1305, 0.2774, -4.8011);
		testMethod(2865, -4.5879, -1.9277, -0, 3.1318, 0.2544, -4.6019);
		testMethod(2870, -4.5976, -1.9277, -0, 3.133, 0.2324, -4.4027);
		testMethod(2875, -4.6072, -1.9277, -0, 3.1341, 0.2114, -4.2035);
		testMethod(2880, -4.6168, -1.9277, -0, 3.1351, 0.1913, -4.0043);
		testMethod(2885, -4.6265, -1.9277, -0, 3.1361, 0.1723, -3.8051);
		testMethod(2890, -4.6361, -1.9277, -0, 3.1369, 0.1543, -3.6059);
		testMethod(2895, -4.6457, -1.9277, -0, 3.1376, 0.1373, -3.4067);
		testMethod(2900, -4.6554, -1.9277, -0, 3.1382, 0.1212, -3.2075);
		testMethod(2905, -4.665, -1.9277, -0, 3.1388, 0.1062, -3.0083);
		testMethod(2910, -4.6747, -1.9277, -0, 3.1393, 0.0921, -2.8091);
		testMethod(2915, -4.6843, -1.9277, -0, 3.1397, 0.0791, -2.6099);
		testMethod(2920, -4.6939, -1.9277, -0, 3.1401, 0.067, -2.4107);
		testMethod(2925, -4.7036, -1.9277, -0, 3.1404, 0.056, -2.2115);
		testMethod(2930, -4.7132, -1.9277, -0, 3.1407, 0.0459, -2.0123);
		testMethod(2935, -4.7229, -1.9277, -0, 3.1409, 0.0368, -1.8131);
		testMethod(2940, -4.7325, -1.9277, -0, 3.141, 0.0288, -1.6139);
		testMethod(2945, -4.7421, -1.9274, 0.0622, 3.1412, 0.0217, -1.4153);
		testMethod(2950, -4.7518, -1.9268, 0.1244, 3.1413, 0.0156, -1.2159);
		testMethod(2955, -4.7614, -1.9258, 0.1866, 3.1413, 0.0105, -1.0162);
		testMethod(2960, -4.771, -1.9246, 0.2487, 3.1414, 0.0065, -0.8164);
		testMethod(2965, -4.7806, -1.923, 0.3109, 3.1414, 0.0034, -0.6168);
		testMethod(2970, -4.7903, -1.9212, 0.3731, 3.1414, 0.0013, -0.4178);
		testMethod(2975, -4.7999, -1.919, 0.4353, 3.1414, 0.0002, -0.2197);
		testMethod(2980, -4.8094, -1.9165, 0.4975, 3.1414, 0, -0.0373);
		testMethod(2985, -4.819, -1.9137, 0.5597, 3.1414, 0, 0);
		testMethod(2990, -4.8286, -1.9106, 0.6218, 3.1414, 0, 0);
		testMethod(2995, -4.8381, -1.9072, 0.684, 3.1414, 0, 0);
		testMethod(3000, -4.8476, -1.9034, 0.7462, 3.1414, 0, 0);
		testMethod(3005, -4.8572, -1.8994, 0.8084, 3.1414, 0, 0);
		testMethod(3010, -4.8666, -1.895, 0.8706, 3.1414, 0, 0);
		testMethod(3015, -4.8761, -1.8904, 0.9328, 3.1414, 0, 0);
		testMethod(3020, -4.8855, -1.8854, 0.9949, 3.1414, 0, 0);
		testMethod(3025, -4.895, -1.8801, 1.0571, 3.1414, 0, 0);
		testMethod(3030, -4.9043, -1.8745, 1.1193, 3.1414, 0, 0);
		testMethod(3035, -4.9137, -1.8686, 1.1815, 3.1414, 0, 0);
		testMethod(3040, -4.923, -1.8624, 1.2437, 3.1414, 0, 0);
		testMethod(3045, -4.9323, -1.8559, 1.3059, 3.1414, 0, 0);
		testMethod(3050, -4.9416, -1.849, 1.368, 3.1414, 0, 0);
		testMethod(3055, -4.9508, -1.8419, 1.4302, 3.1414, 0, 0);
		testMethod(3060, -4.96, -1.8344, 1.4924, 3.1414, 0, 0);
		testMethod(3065, -4.9692, -1.8266, 1.5546, 3.1414, 0, 0);
		testMethod(3070, -4.9783, -1.8186, 1.6168, 3.1414, 0, 0);
		testMethod(3075, -4.9873, -1.8102, 1.679, 3.1414, 0, 0);
		testMethod(3080, -4.9964, -1.8015, 1.7411, 3.1414, 0, 0);
		testMethod(3085, -5.0054, -1.7924, 1.8033, 3.1414, 0, 0);
		testMethod(3090, -5.0143, -1.7831, 1.8655, 3.1414, 0, 0);
		testMethod(3095, -5.0232, -1.7735, 1.9277, 3.1414, 0, 0);
		testMethod(3100, -5.032, -1.7635, 1.9899, 3.1414, 0, 0);
		testMethod(3105, -5.0408, -1.7533, 2.0521, 3.1414, 0, 0);
		testMethod(3110, -5.0496, -1.7427, 2.1142, 3.1414, 0, 0);
		testMethod(3115, -5.0582, -1.7318, 2.1764, 3.1414, 0, 0);
		testMethod(3120, -5.0669, -1.7206, 2.2386, 3.1414, 0, 0);
		testMethod(3125, -5.0755, -1.7091, 2.3008, 3.1414, 0, 0);
		testMethod(3130, -5.084, -1.6973, 2.363, 3.1414, 0, 0);
		testMethod(3135, -5.0924, -1.6852, 2.4252, 3.1414, 0, 0);
		testMethod(3140, -5.1008, -1.6727, 2.4873, 3.1414, 0, 0);
		testMethod(3145, -5.1092, -1.6603, 2.4873, 3.1414, 0, 0);
		testMethod(3150, -5.1174, -1.6479, 2.4873, 3.1414, 0, 0);
		testMethod(3155, -5.1256, -1.6354, 2.4873, 3.1414, 0, 0);
		testMethod(3160, -5.1338, -1.623, 2.4873, 3.1414, 0, 0);
		testMethod(3165, -5.1419, -1.6106, 2.4873, 3.1414, 0, 0);
		testMethod(3170, -5.1499, -1.5981, 2.4873, 3.1414, 0, 0);
		testMethod(3175, -5.1578, -1.5857, 2.4873, 3.1414, 0, 0);
		testMethod(3180, -5.1657, -1.5732, 2.4873, 3.1414, 0, 0);
		testMethod(3185, -5.1736, -1.5608, 2.4873, 3.1414, 0, 0);
		testMethod(3190, -5.1813, -1.5484, 2.4873, 3.1414, 0, 0);
		testMethod(3195, -5.1891, -1.5359, 2.4873, 3.1414, 0, 0);
		testMethod(3200, -5.1967, -1.5235, 2.4873, 3.1414, 0, 0);
		testMethod(3205, -5.2043, -1.5111, 2.4873, 3.1414, 0, 0);
		testMethod(3210, -5.2118, -1.4986, 2.4873, 3.1414, 0, 0);
		testMethod(3215, -5.2193, -1.4862, 2.4873, 3.1414, 0, 0);
		testMethod(3220, -5.2267, -1.4738, 2.4873, 3.1414, 0, 0);
		testMethod(3225, -5.234, -1.4613, 2.4873, 3.1414, 0, 0);
		testMethod(3230, -5.2413, -1.4489, 2.4873, 3.1414, 0, 0);
		testMethod(3235, -5.2485, -1.4364, 2.4873, 3.1414, 0, 0);
		testMethod(3240, -5.2557, -1.424, 2.4873, 3.1414, 0, 0);
		testMethod(3245, -5.2627, -1.4116, 2.4873, 3.1414, 0, 0);
		testMethod(3250, -5.2698, -1.3991, 2.4873, 3.1414, 0, 0);
		testMethod(3255, -5.2767, -1.3867, 2.4873, 3.1414, 0, 0);
		testMethod(3260, -5.2836, -1.3743, 2.4873, 3.1414, 0, 0);
		testMethod(3265, -5.2905, -1.3618, 2.4873, 3.1414, 0, 0);
		testMethod(3270, -5.2973, -1.3494, 2.4873, 3.1414, 0, 0);
		testMethod(3275, -5.304, -1.3369, 2.4873, 3.1414, 0, 0);
		testMethod(3280, -5.3106, -1.3245, 2.4873, 3.1414, 0, 0);
		testMethod(3285, -5.3172, -1.3121, 2.4873, 3.1414, 0, 0);
		testMethod(3290, -5.3237, -1.2996, 2.4873, 3.1414, 0, 0);
		testMethod(3295, -5.3302, -1.2872, 2.4873, 3.1414, 0, 0);
		testMethod(3300, -5.3366, -1.2748, 2.4873, 3.1414, 0, 0);
		testMethod(3305, -5.343, -1.2623, 2.4873, 3.1414, 0, 0);
		testMethod(3310, -5.3492, -1.2499, 2.4873, 3.1414, 0, 0);
		testMethod(3315, -5.3555, -1.2375, 2.4873, 3.1414, 0, 0);
		testMethod(3320, -5.3616, -1.225, 2.4873, 3.1414, 0, 0);
		testMethod(3325, -5.3677, -1.2126, 2.4873, 3.1414, 0, 0);
		testMethod(3330, -5.3737, -1.2001, 2.4873, 3.1414, 0, 0);
		testMethod(3335, -5.3797, -1.1877, 2.4873, 3.1414, 0, 0);
		testMethod(3340, -5.3856, -1.1753, 2.4873, 3.1414, 0, 0);
		testMethod(3345, -5.3915, -1.1628, 2.4873, 3.1414, 0, 0);
		testMethod(3350, -5.3972, -1.1504, 2.4873, 3.1414, 0, 0);
		testMethod(3355, -5.403, -1.138, 2.4873, 3.1414, 0, 0);
		testMethod(3360, -5.4086, -1.1255, 2.4873, 3.1414, 0, 0);
		testMethod(3365, -5.4142, -1.1131, 2.4873, 3.1414, 0, 0);
		testMethod(3370, -5.4198, -1.1007, 2.4873, 3.1414, 0, 0);
		testMethod(3375, -5.4252, -1.0882, 2.4873, 3.1414, 0, 0);
		testMethod(3380, -5.4306, -1.0758, 2.4873, 3.1414, 0, 0);
		testMethod(3385, -5.436, -1.0633, 2.4873, 3.1414, 0, 0);
		testMethod(3390, -5.4413, -1.0509, 2.4873, 3.1414, 0, 0);
		testMethod(3395, -5.4465, -1.0385, 2.4873, 3.1414, 0, 0);
		testMethod(3400, -5.4517, -1.026, 2.4873, 3.1414, 0, 0);
		testMethod(3405, -5.4568, -1.0136, 2.4873, 3.1414, 0, 0);
		testMethod(3410, -5.4618, -1.0012, 2.4873, 3.1414, 0, 0);
		testMethod(3415, -5.4668, -0.9887, 2.4873, 3.1414, 0, 0);
		testMethod(3420, -5.4717, -0.9763, 2.4873, 3.1414, 0, 0);
		testMethod(3425, -5.4765, -0.9638, 2.4873, 3.1414, 0, 0);
		testMethod(3430, -5.4813, -0.9514, 2.4873, 3.1414, 0, 0);
		testMethod(3435, -5.486, -0.939, 2.4873, 3.1414, 0, 0);
		testMethod(3440, -5.4907, -0.9265, 2.4873, 3.1414, 0, 0);
		testMethod(3445, -5.4953, -0.9141, 2.4873, 3.1414, 0, 0);
		testMethod(3450, -5.4999, -0.9017, 2.4873, 3.1414, 0, 0);
		testMethod(3455, -5.5043, -0.8892, 2.4873, 3.1414, 0, 0);
		testMethod(3460, -5.5087, -0.8768, 2.4873, 3.1414, 0, 0);
		testMethod(3465, -5.5131, -0.8644, 2.4873, 3.1414, 0, 0);
		testMethod(3470, -5.5174, -0.8519, 2.4873, 3.1414, 0, 0);
		testMethod(3475, -5.5216, -0.8395, 2.4873, 3.1414, 0, 0);
		testMethod(3480, -5.5258, -0.827, 2.4873, 3.1414, 0, 0);
		testMethod(3485, -5.5299, -0.8146, 2.4873, 3.1414, 0, 0);
		testMethod(3490, -5.5339, -0.8022, 2.4873, 3.1414, 0, 0);
		testMethod(3495, -5.5379, -0.7897, 2.4873, 3.1414, 0, 0);
		testMethod(3500, -5.5418, -0.7773, 2.4873, 3.1414, 0, 0);
		testMethod(3505, -5.5457, -0.7649, 2.4873, 3.1414, 0, 0);
		testMethod(3510, -5.5495, -0.7524, 2.4873, 3.1414, 0, 0);
		testMethod(3515, -5.5532, -0.74, 2.4873, 3.1414, 0, 0);
		testMethod(3520, -5.5569, -0.7275, 2.4873, 3.1414, 0, 0);
		testMethod(3525, -5.5605, -0.7151, 2.4873, 3.1414, 0, 0);
		testMethod(3530, -5.564, -0.7027, 2.4873, 3.1414, 0, 0);
		testMethod(3535, -5.5675, -0.6902, 2.4873, 3.1414, 0, 0);
		testMethod(3540, -5.5709, -0.6778, 2.4873, 3.1414, 0, 0);
		testMethod(3545, -5.5743, -0.6654, 2.4873, 3.1414, 0, 0);
		testMethod(3550, -5.5776, -0.6529, 2.4873, 3.1414, 0, 0);
		testMethod(3555, -5.5808, -0.6405, 2.4873, 3.1414, 0, 0);
		testMethod(3560, -5.584, -0.6281, 2.4873, 3.1414, 0, 0);
		testMethod(3565, -5.5871, -0.6156, 2.4873, 3.1414, 0, 0);
		testMethod(3570, -5.5901, -0.6032, 2.4873, 3.1414, 0, 0);
		testMethod(3575, -5.5931, -0.5907, 2.4873, 3.1414, 0, 0);
		testMethod(3580, -5.5961, -0.5783, 2.4873, 3.1414, 0, 0);
		testMethod(3585, -5.5989, -0.5659, 2.4873, 3.1414, 0, 0);
		testMethod(3590, -5.6017, -0.5534, 2.4873, 3.1414, 0, 0);
		testMethod(3595, -5.6044, -0.541, 2.4873, 3.1414, 0, 0);
		testMethod(3600, -5.6071, -0.5286, 2.4873, 3.1414, 0, 0);
		testMethod(3605, -5.6097, -0.5161, 2.4873, 3.1414, 0, 0);
		testMethod(3610, -5.6123, -0.5037, 2.4873, 3.1414, 0, 0);
		testMethod(3615, -5.6148, -0.4913, 2.4873, 3.1414, 0, 0);
		testMethod(3620, -5.6172, -0.4788, 2.4873, 3.1414, 0, 0);
		testMethod(3625, -5.6196, -0.4664, 2.4873, 3.1414, 0, 0);
		testMethod(3630, -5.6219, -0.4539, 2.4873, 3.1414, 0, 0);
		testMethod(3635, -5.6241, -0.4415, 2.4873, 3.1414, 0, 0);
		testMethod(3640, -5.6263, -0.4291, 2.4873, 3.1414, 0, 0);
		testMethod(3645, -5.6284, -0.4166, 2.4873, 3.1414, 0, 0);
		testMethod(3650, -5.6304, -0.4042, 2.4873, 3.1414, 0, 0);
		testMethod(3655, -5.6324, -0.3918, 2.4873, 3.1414, 0, 0);
		testMethod(3660, -5.6344, -0.3793, 2.4873, 3.1414, 0, 0);
		testMethod(3665, -5.6362, -0.3669, 2.4873, 3.1414, 0, 0);
		testMethod(3670, -5.638, -0.3544, 2.4873, 3.1414, 0, 0);
		testMethod(3675, -5.6398, -0.342, 2.4873, 3.1414, 0, 0);
		testMethod(3680, -5.6414, -0.3296, 2.4873, 3.1414, 0, 0);
		testMethod(3685, -5.6431, -0.3171, 2.4873, 3.1414, 0, 0);
		testMethod(3690, -5.6446, -0.3047, 2.4873, 3.1414, 0, 0);
		testMethod(3695, -5.6461, -0.2923, 2.4873, 3.1414, 0, 0);
		testMethod(3700, -5.6475, -0.2798, 2.4873, 3.1414, 0, 0);
		testMethod(3705, -5.6489, -0.2674, 2.4873, 3.1414, 0, 0);
		testMethod(3710, -5.6502, -0.255, 2.4873, 3.1414, 0, 0);
		testMethod(3715, -5.6515, -0.2425, 2.4873, 3.1414, 0, 0);
		testMethod(3720, -5.6526, -0.2304, 2.4252, 3.1414, 0, 0);
		testMethod(3725, -5.6538, -0.2186, 2.363, 3.1414, 0, 0);
		testMethod(3730, -5.6548, -0.2071, 2.3008, 3.1414, 0, 0);
		testMethod(3735, -5.6558, -0.1959, 2.2386, 3.1414, 0, 0);
		testMethod(3740, -5.6568, -0.185, 2.1764, 3.1414, 0, 0);
		testMethod(3745, -5.6577, -0.1744, 2.1142, 3.1414, 0, 0);
		testMethod(3750, -5.6585, -0.1642, 2.0521, 3.1414, 0, 0);
		testMethod(3755, -5.6593, -0.1542, 1.9899, 3.1414, 0, 0);
		testMethod(3760, -5.6601, -0.1446, 1.9277, 3.1414, 0, 0);
		testMethod(3765, -5.6608, -0.1352, 1.8655, 3.1414, 0, 0);
		testMethod(3770, -5.6614, -0.1262, 1.8033, 3.1414, 0, 0);
		testMethod(3775, -5.662, -0.1175, 1.7411, 3.1414, 0, 0);
		testMethod(3780, -5.6626, -0.1091, 1.679, 3.1414, 0, 0);
		testMethod(3785, -5.6631, -0.101, 1.6168, 3.1414, 0, 0);
		testMethod(3790, -5.6636, -0.0933, 1.5546, 3.1414, 0, 0);
		testMethod(3795, -5.6641, -0.0858, 1.4924, 3.1414, 0, 0);
		testMethod(3800, -5.6645, -0.0787, 1.4302, 3.1414, 0, 0);
		testMethod(3805, -5.6648, -0.0718, 1.368, 3.1414, 0, 0);
		testMethod(3810, -5.6652, -0.0653, 1.3059, 3.1414, 0, 0);
		testMethod(3815, -5.6655, -0.0591, 1.2437, 3.1414, 0, 0);
		testMethod(3820, -5.6658, -0.0532, 1.1815, 3.1414, 0, 0);
		testMethod(3825, -5.666, -0.0476, 1.1193, 3.1414, 0, 0);
		testMethod(3830, -5.6663, -0.0423, 1.0571, 3.1414, 0, 0);
		testMethod(3835, -5.6665, -0.0373, 0.9949, 3.1414, 0, 0);
		testMethod(3840, -5.6666, -0.0326, 0.9328, 3.1414, 0, 0);
		testMethod(3845, -5.6668, -0.0283, 0.8706, 3.1414, 0, 0);
		testMethod(3850, -5.6669, -0.0243, 0.8084, 3.1414, 0, 0);
		testMethod(3855, -5.667, -0.0205, 0.7462, 3.1414, 0, 0);
		testMethod(3860, -5.6671, -0.0171, 0.684, 3.1414, 0, 0);
		testMethod(3865, -5.6672, -0.014, 0.6218, 3.1414, 0, 0);
		testMethod(3870, -5.6673, -0.0112, 0.5597, 3.1414, 0, 0);
		testMethod(3875, -5.6673, -0.0087, 0.4975, 3.1414, 0, 0);
		testMethod(3880, -5.6674, -0.0065, 0.4353, 3.1414, 0, 0);
		testMethod(3885, -5.6674, -0.0047, 0.3731, 3.1414, 0, 0);
		testMethod(3890, -5.6674, -0.0031, 0.3109, 3.1414, 0, 0);
		testMethod(3895, -5.6674, -0.0019, 0.2487, 3.1414, 0, 0);
		testMethod(3900, -5.6674, -0.0009, 0.1866, 3.1414, 0, 0);
		testMethod(3905, -5.6674, -0.0003, 0.1244, 3.1414, 0, 0);
		testMethod(3910, -5.6674, -0, 0.0622, 3.1414, 0, 0);
		testMethod(3915, -5.6674, -0, -0, 3.1414, 0, 0);
		testMethod(3915, -5.6674, -0, -0, 3.1414, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}