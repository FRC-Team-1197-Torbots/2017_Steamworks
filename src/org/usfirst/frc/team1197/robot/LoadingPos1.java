package org.usfirst.frc.team1197.robot;

public class LoadingPos1 extends TorTrajectory {

	public LoadingPos1() {
		super(3.4542, -1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0625, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.125, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1874, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2499, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3124, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.3749, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4374, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4998, 0, 0, 0);
		testMethod(45, 0.0002, 0.0141, 0.5623, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.6248, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6873, 0, 0, 0);
		testMethod(60, 0.0005, 0.0244, 0.7497, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8122, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.8747, 0, 0, 0);
		testMethod(75, 0.001, 0.0375, 0.9372, 0, 0, 0);
		testMethod(80, 0.0012, 0.0425, 0.9997, 0, 0, 0);
		testMethod(85, 0.0014, 0.0478, 1.0621, 0, 0, 0);
		testMethod(90, 0.0016, 0.0534, 1.1246, 0, 0, 0);
		testMethod(95, 0.0019, 0.0594, 1.1871, 0, 0, 0);
		testMethod(100, 0.0022, 0.0656, 1.2496, 0, 0, 0);
		testMethod(105, 0.0026, 0.0722, 1.3121, 0, 0, 0);
		testMethod(110, 0.003, 0.079, 1.3745, 0, 0, 0);
		testMethod(115, 0.0034, 0.0862, 1.437, 0, 0, 0);
		testMethod(120, 0.0038, 0.0937, 1.4995, 0, 0, 0);
		testMethod(125, 0.0043, 0.1015, 1.562, 0, 0, 0);
		testMethod(130, 0.0048, 0.1097, 1.6245, 0, 0, 0);
		testMethod(135, 0.0054, 0.1181, 1.6869, 0, 0, 0);
		testMethod(140, 0.006, 0.1268, 1.7494, 0, 0, 0);
		testMethod(145, 0.0067, 0.1359, 1.8119, 0, 0, 0);
		testMethod(150, 0.0074, 0.1453, 1.8744, 0, 0, 0);
		testMethod(155, 0.0081, 0.1549, 1.9369, 0, 0, 0);
		testMethod(160, 0.0089, 0.1649, 1.9993, 0, 0, 0);
		testMethod(165, 0.0098, 0.1753, 2.0618, 0, 0, 0);
		testMethod(170, 0.0107, 0.1859, 2.1243, 0, 0, 0);
		testMethod(175, 0.0116, 0.1968, 2.1868, 0, 0, 0);
		testMethod(180, 0.0127, 0.2081, 2.2492, 0, 0, 0);
		testMethod(185, 0.0137, 0.2196, 2.3117, 0, 0, 0);
		testMethod(190, 0.0149, 0.2315, 2.3742, 0, 0, 0);
		testMethod(195, 0.016, 0.2437, 2.4367, 0, 0, 0);
		testMethod(200, 0.0173, 0.2562, 2.4992, 0, 0, 0);
		testMethod(205, 0.0186, 0.2687, 2.4992, 0, 0, 0);
		testMethod(210, 0.02, 0.2812, 2.4992, 0, 0, 0);
		testMethod(215, 0.0214, 0.2937, 2.4992, 0, 0, 0);
		testMethod(220, 0.0229, 0.3061, 2.4992, 0, 0, 0);
		testMethod(225, 0.0245, 0.3186, 2.4992, 0, 0, 0);
		testMethod(230, 0.0261, 0.3311, 2.4992, 0, 0, 0);
		testMethod(235, 0.0278, 0.3436, 2.4992, 0, 0, 0);
		testMethod(240, 0.0295, 0.3561, 2.4992, 0, 0, 0);
		testMethod(245, 0.0313, 0.3686, 2.4992, 0, 0, 0);
		testMethod(250, 0.0332, 0.3811, 2.4992, 0, 0, 0);
		testMethod(255, 0.0352, 0.3936, 2.4992, 0, 0, 0);
		testMethod(260, 0.0372, 0.4061, 2.4992, 0, 0, 0);
		testMethod(265, 0.0392, 0.4186, 2.4992, 0, 0, 0);
		testMethod(270, 0.0413, 0.4311, 2.4992, 0, 0, 0);
		testMethod(275, 0.0435, 0.4436, 2.4992, 0, 0, 0);
		testMethod(280, 0.0458, 0.4561, 2.4992, 0, 0, 0);
		testMethod(285, 0.0481, 0.4686, 2.4992, 0, 0, 0);
		testMethod(290, 0.0505, 0.4811, 2.4992, 0, 0, 0);
		testMethod(295, 0.0529, 0.4936, 2.4992, 0, 0, 0);
		testMethod(300, 0.0554, 0.5061, 2.4992, 0, 0, 0);
		testMethod(305, 0.058, 0.5186, 2.4992, 0, 0, 0);
		testMethod(310, 0.0606, 0.5311, 2.4992, 0, 0, 0);
		testMethod(315, 0.0633, 0.5436, 2.4992, 0, 0, 0);
		testMethod(320, 0.066, 0.5561, 2.4992, 0, 0, 0);
		testMethod(325, 0.0688, 0.5686, 2.4992, 0, 0, 0);
		testMethod(330, 0.0717, 0.5811, 2.4992, 0, 0, 0);
		testMethod(335, 0.0746, 0.5936, 2.4992, 0, 0, 0);
		testMethod(340, 0.0776, 0.606, 2.4992, 0, 0, 0);
		testMethod(345, 0.0807, 0.6185, 2.4992, 0, 0, 0);
		testMethod(350, 0.0838, 0.631, 2.4992, 0, 0, 0);
		testMethod(355, 0.087, 0.6435, 2.4992, 0, 0, 0);
		testMethod(360, 0.0903, 0.656, 2.4992, 0, 0, 0);
		testMethod(365, 0.0936, 0.6685, 2.4992, 0, 0, 0);
		testMethod(370, 0.097, 0.681, 2.4992, 0, 0, 0);
		testMethod(375, 0.1004, 0.6935, 2.4992, 0, 0, 0);
		testMethod(380, 0.1039, 0.706, 2.4992, 0, 0, 0);
		testMethod(385, 0.1074, 0.7185, 2.4992, 0, 0, 0);
		testMethod(390, 0.1111, 0.731, 2.4992, 0, 0, 0);
		testMethod(395, 0.1148, 0.7435, 2.4992, 0, 0, 0);
		testMethod(400, 0.1185, 0.756, 2.4992, 0, 0, 0);
		testMethod(405, 0.1223, 0.7685, 2.4992, 0, 0, 0);
		testMethod(410, 0.1262, 0.781, 2.4992, 0, 0, 0);
		testMethod(415, 0.1301, 0.7935, 2.4992, 0, 0, 0);
		testMethod(420, 0.1341, 0.806, 2.4992, 0, 0, 0);
		testMethod(425, 0.1382, 0.8185, 2.4992, 0, 0, 0);
		testMethod(430, 0.1423, 0.831, 2.4992, 0, 0, 0);
		testMethod(435, 0.1465, 0.8435, 2.4992, 0, 0, 0);
		testMethod(440, 0.1507, 0.856, 2.4992, 0, 0, 0);
		testMethod(445, 0.1551, 0.8685, 2.4992, 0, 0, 0);
		testMethod(450, 0.1594, 0.881, 2.4992, 0, 0, 0);
		testMethod(455, 0.1639, 0.8935, 2.4992, 0, 0, 0);
		testMethod(460, 0.1684, 0.9059, 2.4992, 0, 0, 0);
		testMethod(465, 0.1729, 0.9184, 2.4992, 0, 0, 0);
		testMethod(470, 0.1775, 0.9309, 2.4992, 0, 0, 0);
		testMethod(475, 0.1822, 0.9434, 2.4992, 0, 0, 0);
		testMethod(480, 0.187, 0.9559, 2.4992, 0, 0, 0);
		testMethod(485, 0.1918, 0.9684, 2.4992, 0, 0, 0);
		testMethod(490, 0.1967, 0.9809, 2.4992, 0, 0, 0);
		testMethod(495, 0.2016, 0.9934, 2.4992, 0, 0, 0);
		testMethod(500, 0.2066, 1.0059, 2.4992, 0, 0, 0);
		testMethod(505, 0.2117, 1.0184, 2.4992, 0, 0, 0);
		testMethod(510, 0.2168, 1.0309, 2.4992, 0, 0, 0);
		testMethod(515, 0.222, 1.0434, 2.4992, 0, 0, 0);
		testMethod(520, 0.2272, 1.0559, 2.4992, 0, 0, 0);
		testMethod(525, 0.2325, 1.0684, 2.4992, 0, 0, 0);
		testMethod(530, 0.2379, 1.0809, 2.4992, 0, 0, 0);
		testMethod(535, 0.2433, 1.0934, 2.4992, 0, 0, 0);
		testMethod(540, 0.2488, 1.1059, 2.4992, 0, 0, 0);
		testMethod(545, 0.2544, 1.1184, 2.4992, 0, 0, 0);
		testMethod(550, 0.26, 1.1309, 2.4992, 0, 0, 0);
		testMethod(555, 0.2657, 1.1434, 2.4992, 0, 0, 0);
		testMethod(560, 0.2715, 1.1559, 2.4992, 0, 0, 0);
		testMethod(565, 0.2773, 1.1684, 2.4992, 0, 0, 0);
		testMethod(570, 0.2831, 1.1809, 2.4992, 0, 0, 0);
		testMethod(575, 0.2891, 1.1933, 2.4992, 0, 0, 0);
		testMethod(580, 0.2951, 1.2058, 2.4992, 0, 0, 0);
		testMethod(585, 0.3011, 1.2183, 2.4992, 0, 0, 0);
		testMethod(590, 0.3073, 1.2308, 2.4992, 0, 0, 0);
		testMethod(595, 0.3134, 1.2433, 2.4992, 0, 0, 0);
		testMethod(600, 0.3197, 1.2558, 2.4992, 0, 0, 0);
		testMethod(605, 0.326, 1.2683, 2.4992, 0, 0, 0);
		testMethod(610, 0.3324, 1.2808, 2.4992, 0, 0, 0);
		testMethod(615, 0.3388, 1.2933, 2.4992, 0, 0, 0);
		testMethod(620, 0.3453, 1.3058, 2.4992, 0, 0, 0);
		testMethod(625, 0.3519, 1.3183, 2.4992, 0, 0, 0);
		testMethod(630, 0.3585, 1.3308, 2.4992, 0, 0, 0);
		testMethod(635, 0.3652, 1.3433, 2.4992, 0, 0, 0);
		testMethod(640, 0.3719, 1.3558, 2.4992, 0, 0, 0);
		testMethod(645, 0.3787, 1.3683, 2.4992, 0, 0, 0);
		testMethod(650, 0.3856, 1.3808, 2.4992, 0, 0, 0);
		testMethod(655, 0.3925, 1.3933, 2.4992, 0, 0, 0);
		testMethod(660, 0.3995, 1.4058, 2.4992, 0, 0, 0);
		testMethod(665, 0.4066, 1.4183, 2.4992, 0, 0, 0);
		testMethod(670, 0.4137, 1.4308, 2.4992, 0, 0, 0);
		testMethod(675, 0.4209, 1.4433, 2.4992, 0, 0, 0);
		testMethod(680, 0.4282, 1.4558, 2.4992, -0, -0.0001, -0.0175);
		testMethod(685, 0.4355, 1.4683, 2.4992, -0, -0.0006, -0.0992);
		testMethod(690, 0.4428, 1.4808, 2.4992, -0, -0.0015, -0.1909);
		testMethod(695, 0.4503, 1.4932, 2.4992, -0, -0.003, -0.2872);
		testMethod(700, 0.4578, 1.5057, 2.4992, -0, -0.0049, -0.3881);
		testMethod(705, 0.4653, 1.5182, 2.4992, -0.0001, -0.0074, -0.4938);
		testMethod(710, 0.473, 1.5307, 2.4992, -0.0001, -0.0104, -0.6044);
		testMethod(715, 0.4806, 1.5432, 2.4992, -0.0002, -0.014, -0.7199);
		testMethod(720, 0.4884, 1.5557, 2.4992, -0.0003, -0.0182, -0.8405);
		testMethod(725, 0.4962, 1.5682, 2.4992, -0.0004, -0.023, -0.9663);
		testMethod(730, 0.5041, 1.5807, 2.4992, -0.0005, -0.0285, -1.0973);
		testMethod(735, 0.512, 1.5932, 2.4992, -0.0006, -0.0347, -1.2337);
		testMethod(740, 0.52, 1.6057, 2.4992, -0.0008, -0.0416, -1.3756);
		testMethod(745, 0.5281, 1.6182, 2.4992, -0.0011, -0.0492, -1.523);
		testMethod(750, 0.5362, 1.6307, 2.4992, -0.0013, -0.0576, -1.6761);
		testMethod(755, 0.5444, 1.6432, 2.4992, -0.0016, -0.0667, -1.835);
		testMethod(760, 0.5526, 1.6557, 2.4992, -0.002, -0.0767, -1.9998);
		testMethod(765, 0.5609, 1.6682, 2.4992, -0.0024, -0.0876, -2.1706);
		testMethod(770, 0.5693, 1.6807, 2.4992, -0.0029, -0.0993, -2.3475);
		testMethod(775, 0.5777, 1.6929, 2.4367, -0.0034, -0.112, -2.5263);
		testMethod(780, 0.5862, 1.7047, 2.3742, -0.004, -0.1255, -2.7094);
		testMethod(785, 0.5948, 1.7163, 2.3117, -0.0047, -0.14, -2.8968);
		testMethod(790, 0.6034, 1.7275, 2.2492, -0.0054, -0.1554, -3.0882);
		testMethod(795, 0.612, 1.7385, 2.1868, -0.0062, -0.1719, -3.2834);
		testMethod(800, 0.6208, 1.7491, 2.1243, -0.0071, -0.1893, -3.4823);
		testMethod(805, 0.6295, 1.7594, 2.0618, -0.0081, -0.2077, -3.6846);
		testMethod(810, 0.6384, 1.7694, 1.9993, -0.0092, -0.2271, -3.89);
		testMethod(815, 0.6472, 1.7791, 1.9369, -0.0104, -0.2476, -4.0984);
		testMethod(820, 0.6562, 1.7885, 1.8744, -0.0117, -0.2692, -4.3096);
		testMethod(825, 0.6651, 1.7975, 1.8119, -0.0131, -0.2918, -4.5232);
		testMethod(830, 0.6741, 1.8063, 1.7494, -0.0146, -0.3155, -4.7391);
		testMethod(835, 0.6832, 1.8147, 1.6869, -0.0162, -0.3403, -4.9569);
		testMethod(840, 0.6923, 1.8228, 1.6245, -0.018, -0.3662, -5.1764);
		testMethod(845, 0.7014, 1.8306, 1.562, -0.0199, -0.3931, -5.3974);
		testMethod(850, 0.7106, 1.8381, 1.4995, -0.0219, -0.4212, -5.6195);
		testMethod(855, 0.7198, 1.8453, 1.437, -0.0241, -0.4505, -5.8425);
		testMethod(860, 0.729, 1.8522, 1.3745, -0.0264, -0.4808, -6.0661);
		testMethod(865, 0.7383, 1.8588, 1.3121, -0.0289, -0.5122, -6.29);
		testMethod(870, 0.7476, 1.865, 1.2496, -0.0316, -0.5448, -6.5138);
		testMethod(875, 0.757, 1.8709, 1.1871, -0.0344, -0.5783, -6.699);
		testMethod(880, 0.7663, 1.8766, 1.1246, -0.0373, -0.6109, -6.5108);
		testMethod(885, 0.7757, 1.8819, 1.0621, -0.0405, -0.6427, -6.3599);
		testMethod(890, 0.7851, 1.8869, 0.9997, -0.0438, -0.6737, -6.202);
		testMethod(895, 0.7946, 1.8916, 0.9372, -0.0472, -0.7038, -6.0373);
		testMethod(900, 0.8041, 1.8959, 0.8747, -0.0508, -0.7332, -5.8662);
		testMethod(905, 0.8135, 1.9, 0.8122, -0.0545, -0.7616, -5.689);
		testMethod(910, 0.8231, 1.9037, 0.7497, -0.0584, -0.7892, -5.5058);
		testMethod(915, 0.8326, 1.9072, 0.6873, -0.0624, -0.8157, -5.317);
		testMethod(920, 0.8421, 1.9103, 0.6248, -0.0666, -0.8414, -5.1229);
		testMethod(925, 0.8517, 1.9131, 0.5623, -0.0708, -0.866, -4.9238);
		testMethod(930, 0.8613, 1.9156, 0.4998, -0.0752, -0.8896, -4.7199);
		testMethod(935, 0.8708, 1.9178, 0.4374, -0.0797, -0.9121, -4.5116);
		testMethod(940, 0.8804, 1.9197, 0.3749, -0.0844, -0.9336, -4.2991);
		testMethod(945, 0.89, 1.9212, 0.3124, -0.0891, -0.954, -4.0828);
		testMethod(950, 0.8996, 1.9225, 0.2499, -0.0939, -0.9734, -3.863);
		testMethod(955, 0.9093, 1.9234, 0.1874, -0.0988, -0.9916, -3.6401);
		testMethod(960, 0.9189, 1.924, 0.125, -0.1038, -1.0086, -3.4142);
		testMethod(965, 0.9285, 1.9244, 0.0625, -0.1089, -1.0246, -3.1858);
		testMethod(970, 0.9381, 1.9244, 0, -0.114, -1.0393, -2.9551);
		testMethod(975, 0.9477, 1.9244, 0, -0.1193, -1.0531, -2.757);
		testMethod(980, 0.9574, 1.9244, 0, -0.1246, -1.0659, -2.5588);
		testMethod(985, 0.967, 1.9244, 0, -0.1299, -1.0777, -2.3606);
		testMethod(990, 0.9766, 1.9244, 0, -0.1354, -1.0885, -2.1625);
		testMethod(995, 0.9862, 1.9244, 0, -0.1408, -1.0983, -1.9643);
		testMethod(1000, 0.9959, 1.9244, 0, -0.1463, -1.1072, -1.7661);
		testMethod(1005, 1.0055, 1.9244, 0, -0.1519, -1.115, -1.5679);
		testMethod(1010, 1.0151, 1.9244, 0, -0.1575, -1.1219, -1.3698);
		testMethod(1015, 1.0247, 1.9244, 0, -0.1631, -1.1277, -1.1716);
		testMethod(1020, 1.0343, 1.9244, 0, -0.1688, -1.1326, -0.9734);
		testMethod(1025, 1.044, 1.9244, 0, -0.1744, -1.1365, -0.7753);
		testMethod(1030, 1.0536, 1.9244, 0, -0.1801, -1.1394, -0.5771);
		testMethod(1035, 1.0632, 1.9244, 0, -0.1858, -1.1412, -0.3789);
		testMethod(1040, 1.0728, 1.9244, 0, -0.1915, -1.1422, -0.1808);
		testMethod(1045, 1.0824, 1.9244, 0, -0.1972, -1.1422, -0.0168);
		testMethod(1050, 1.0921, 1.9244, 0, -0.203, -1.1422, 0);
		testMethod(1055, 1.1017, 1.9244, 0, -0.2087, -1.1422, 0);
		testMethod(1060, 1.1113, 1.9244, 0, -0.2144, -1.1422, 0);
		testMethod(1065, 1.1209, 1.9244, 0, -0.2201, -1.1422, 0);
		testMethod(1070, 1.1306, 1.9244, 0, -0.2258, -1.1422, 0);
		testMethod(1075, 1.1402, 1.9244, 0, -0.2315, -1.1422, 0);
		testMethod(1080, 1.1498, 1.9244, 0, -0.2372, -1.1422, 0);
		testMethod(1085, 1.1594, 1.9244, 0, -0.2429, -1.1422, 0);
		testMethod(1090, 1.169, 1.9244, 0, -0.2486, -1.1422, 0);
		testMethod(1095, 1.1787, 1.9244, 0, -0.2544, -1.1422, 0);
		testMethod(1100, 1.1883, 1.9244, 0, -0.2601, -1.1422, 0);
		testMethod(1105, 1.1979, 1.9244, 0, -0.2658, -1.1422, 0);
		testMethod(1110, 1.2075, 1.9244, 0, -0.2715, -1.1422, 0);
		testMethod(1115, 1.2172, 1.9244, 0, -0.2772, -1.1422, 0);
		testMethod(1120, 1.2268, 1.9244, 0, -0.2829, -1.1422, 0);
		testMethod(1125, 1.2364, 1.9244, 0, -0.2886, -1.1422, 0);
		testMethod(1130, 1.246, 1.9244, 0, -0.2943, -1.1422, 0);
		testMethod(1135, 1.2556, 1.9244, 0, -0.3, -1.1422, 0);
		testMethod(1140, 1.2653, 1.9244, 0, -0.3058, -1.1422, 0);
		testMethod(1145, 1.2749, 1.9244, 0, -0.3115, -1.1422, 0);
		testMethod(1150, 1.2845, 1.9244, 0, -0.3172, -1.1422, 0);
		testMethod(1155, 1.2941, 1.9244, 0, -0.3229, -1.1422, 0);
		testMethod(1160, 1.3038, 1.9244, 0, -0.3286, -1.1422, 0);
		testMethod(1165, 1.3134, 1.9244, 0, -0.3343, -1.1422, 0);
		testMethod(1170, 1.323, 1.9244, 0, -0.34, -1.1422, 0);
		testMethod(1175, 1.3326, 1.9244, 0, -0.3457, -1.1422, 0);
		testMethod(1180, 1.3422, 1.9244, 0, -0.3514, -1.1422, 0);
		testMethod(1185, 1.3519, 1.9244, 0, -0.3572, -1.1422, 0);
		testMethod(1190, 1.3615, 1.9244, 0, -0.3629, -1.1422, 0);
		testMethod(1195, 1.3711, 1.9244, 0, -0.3686, -1.1422, 0);
		testMethod(1200, 1.3807, 1.9244, 0, -0.3743, -1.1422, 0);
		testMethod(1205, 1.3903, 1.9244, 0, -0.38, -1.1422, 0);
		testMethod(1210, 1.4, 1.9244, 0, -0.3857, -1.1422, 0);
		testMethod(1215, 1.4096, 1.9244, 0, -0.3914, -1.1422, 0);
		testMethod(1220, 1.4192, 1.9244, 0, -0.3971, -1.1422, 0);
		testMethod(1225, 1.4288, 1.9244, 0, -0.4028, -1.1422, 0);
		testMethod(1230, 1.4385, 1.9244, 0, -0.4086, -1.1422, 0);
		testMethod(1235, 1.4481, 1.9244, 0, -0.4143, -1.1422, 0);
		testMethod(1240, 1.4577, 1.9244, 0, -0.42, -1.1422, 0);
		testMethod(1245, 1.4673, 1.9244, 0, -0.4257, -1.1422, 0);
		testMethod(1250, 1.4769, 1.9244, 0, -0.4314, -1.1422, 0);
		testMethod(1255, 1.4866, 1.9244, 0, -0.4371, -1.1422, 0);
		testMethod(1260, 1.4962, 1.9244, 0, -0.4428, -1.1422, 0);
		testMethod(1265, 1.5058, 1.9244, 0, -0.4485, -1.1422, 0);
		testMethod(1270, 1.5154, 1.9244, 0, -0.4542, -1.1422, 0);
		testMethod(1275, 1.5251, 1.9244, 0, -0.46, -1.1422, 0);
		testMethod(1280, 1.5347, 1.9244, 0, -0.4657, -1.1422, 0);
		testMethod(1285, 1.5443, 1.9244, 0, -0.4714, -1.1422, 0);
		testMethod(1290, 1.5539, 1.9244, 0, -0.4771, -1.1422, 0);
		testMethod(1295, 1.5635, 1.9244, 0, -0.4828, -1.1422, 0);
		testMethod(1300, 1.5732, 1.9244, 0, -0.4885, -1.1422, 0);
		testMethod(1305, 1.5828, 1.9244, 0, -0.4942, -1.1422, 0);
		testMethod(1310, 1.5924, 1.9244, 0, -0.4999, -1.1422, 0);
		testMethod(1315, 1.602, 1.9244, 0, -0.5056, -1.1422, 0);
		testMethod(1320, 1.6116, 1.9244, 0, -0.5114, -1.1422, 0);
		testMethod(1325, 1.6213, 1.9244, 0, -0.5171, -1.1422, 0);
		testMethod(1330, 1.6309, 1.9244, 0, -0.5228, -1.1422, 0);
		testMethod(1335, 1.6405, 1.9244, 0, -0.5285, -1.1422, 0);
		testMethod(1340, 1.6501, 1.9244, 0, -0.5342, -1.1422, 0);
		testMethod(1345, 1.6598, 1.9244, 0, -0.5399, -1.1422, 0);
		testMethod(1350, 1.6694, 1.9244, 0, -0.5456, -1.1422, 0);
		testMethod(1355, 1.679, 1.9244, 0, -0.5513, -1.1422, 0);
		testMethod(1360, 1.6886, 1.9244, 0, -0.557, -1.1422, 0);
		testMethod(1365, 1.6982, 1.9244, 0, -0.5628, -1.1422, 0);
		testMethod(1370, 1.7079, 1.9244, 0, -0.5685, -1.1422, 0);
		testMethod(1375, 1.7175, 1.9244, 0, -0.5742, -1.1422, 0);
		testMethod(1380, 1.7271, 1.9244, 0, -0.5799, -1.1422, 0);
		testMethod(1385, 1.7367, 1.9244, 0, -0.5856, -1.1422, 0);
		testMethod(1390, 1.7464, 1.9244, 0, -0.5913, -1.1422, 0);
		testMethod(1395, 1.756, 1.9244, 0, -0.597, -1.1422, 0);
		testMethod(1400, 1.7656, 1.9244, 0, -0.6027, -1.1422, 0);
		testMethod(1405, 1.7752, 1.9244, 0, -0.6084, -1.1422, 0);
		testMethod(1410, 1.7848, 1.9244, 0, -0.6142, -1.1422, 0);
		testMethod(1415, 1.7945, 1.9244, 0, -0.6199, -1.1422, 0);
		testMethod(1420, 1.8041, 1.9244, 0, -0.6256, -1.1422, 0);
		testMethod(1425, 1.8137, 1.9244, 0, -0.6313, -1.1422, 0);
		testMethod(1430, 1.8233, 1.9244, 0, -0.637, -1.1422, 0);
		testMethod(1435, 1.8329, 1.9244, 0, -0.6427, -1.1422, 0);
		testMethod(1440, 1.8426, 1.9244, 0, -0.6484, -1.1422, 0);
		testMethod(1445, 1.8522, 1.9244, 0, -0.6541, -1.1422, 0);
		testMethod(1450, 1.8618, 1.9244, 0, -0.6598, -1.1422, 0);
		testMethod(1455, 1.8714, 1.9244, 0, -0.6656, -1.1422, 0);
		testMethod(1460, 1.8811, 1.9244, 0, -0.6713, -1.1422, 0);
		testMethod(1465, 1.8907, 1.9244, 0, -0.677, -1.1422, 0);
		testMethod(1470, 1.9003, 1.9244, 0, -0.6827, -1.1422, 0);
		testMethod(1475, 1.9099, 1.9244, 0, -0.6884, -1.1422, 0);
		testMethod(1480, 1.9195, 1.9244, 0, -0.6941, -1.1422, 0);
		testMethod(1485, 1.9292, 1.9244, 0, -0.6998, -1.1422, 0);
		testMethod(1490, 1.9388, 1.9244, 0, -0.7055, -1.1422, 0);
		testMethod(1495, 1.9484, 1.9244, 0, -0.7112, -1.1422, 0);
		testMethod(1500, 1.958, 1.9244, 0, -0.717, -1.1422, 0);
		testMethod(1505, 1.9677, 1.9244, 0, -0.7227, -1.1422, 0);
		testMethod(1510, 1.9773, 1.9244, 0, -0.7284, -1.1422, 0);
		testMethod(1515, 1.9869, 1.9244, 0, -0.7341, -1.1422, 0);
		testMethod(1520, 1.9965, 1.9244, 0, -0.7398, -1.1422, 0);
		testMethod(1525, 2.0061, 1.9244, 0, -0.7455, -1.1422, 0);
		testMethod(1530, 2.0158, 1.9244, 0, -0.7512, -1.1422, 0);
		testMethod(1535, 2.0254, 1.9244, 0, -0.7569, -1.1422, 0);
		testMethod(1540, 2.035, 1.9244, 0, -0.7626, -1.1422, 0);
		testMethod(1545, 2.0446, 1.9244, 0, -0.7684, -1.1422, 0);
		testMethod(1550, 2.0542, 1.9244, 0, -0.7741, -1.1422, 0);
		testMethod(1555, 2.0639, 1.9244, 0, -0.7798, -1.1422, 0);
		testMethod(1560, 2.0735, 1.9244, 0, -0.7855, -1.1422, 0);
		testMethod(1565, 2.0831, 1.9244, 0, -0.7912, -1.1422, 0);
		testMethod(1570, 2.0927, 1.9244, 0, -0.7969, -1.1422, 0);
		testMethod(1575, 2.1024, 1.9244, 0, -0.8026, -1.1422, 0);
		testMethod(1580, 2.112, 1.9244, 0, -0.8083, -1.1422, 0);
		testMethod(1585, 2.1216, 1.9244, 0, -0.814, -1.1422, 0);
		testMethod(1590, 2.1312, 1.9244, 0, -0.8198, -1.1422, 0);
		testMethod(1595, 2.1408, 1.9244, 0, -0.8255, -1.1422, 0);
		testMethod(1600, 2.1505, 1.9244, 0, -0.8312, -1.1422, 0);
		testMethod(1605, 2.1601, 1.9244, 0, -0.8369, -1.1422, 0);
		testMethod(1610, 2.1697, 1.9244, 0, -0.8426, -1.1422, 0);
		testMethod(1615, 2.1793, 1.9244, 0, -0.8483, -1.1422, 0);
		testMethod(1620, 2.189, 1.9244, 0, -0.854, -1.1422, 0.0022);
		testMethod(1625, 2.1986, 1.9244, 0, -0.8597, -1.1416, 0.1288);
		testMethod(1630, 2.2082, 1.9244, 0, -0.8654, -1.1399, 0.327);
		testMethod(1635, 2.2178, 1.9244, 0, -0.8711, -1.1373, 0.5252);
		testMethod(1640, 2.2274, 1.9244, 0, -0.8768, -1.1337, 0.7234);
		testMethod(1645, 2.2371, 1.9244, 0, -0.8825, -1.1291, 0.9215);
		testMethod(1650, 2.2467, 1.9244, 0, -0.8881, -1.1235, 1.1197);
		testMethod(1655, 2.2563, 1.9244, 0, -0.8937, -1.1169, 1.3179);
		testMethod(1660, 2.2659, 1.9244, 0, -0.8993, -1.1093, 1.516);
		testMethod(1665, 2.2755, 1.9244, 0, -0.9048, -1.1008, 1.7142);
		testMethod(1670, 2.2852, 1.9244, 0, -0.9103, -1.0912, 1.9124);
		testMethod(1675, 2.2948, 1.9244, 0, -0.9157, -1.0806, 2.1105);
		testMethod(1680, 2.3044, 1.9244, 0, -0.9211, -1.0691, 2.3087);
		testMethod(1685, 2.314, 1.9244, 0, -0.9264, -1.0566, 2.5069);
		testMethod(1690, 2.3237, 1.9244, 0, -0.9316, -1.043, 2.705);
		testMethod(1695, 2.3333, 1.9244, 0, -0.9368, -1.0285, 2.9032);
		testMethod(1700, 2.3429, 1.9244, 0, -0.9419, -1.013, 3.1014);
		testMethod(1705, 2.3525, 1.9244, 0, -0.947, -0.9965, 3.2996);
		testMethod(1710, 2.3621, 1.9244, 0, -0.9519, -0.979, 3.4977);
		testMethod(1715, 2.3718, 1.9244, 0, -0.9567, -0.9605, 3.6959);
		testMethod(1720, 2.3814, 1.9244, 0, -0.9615, -0.9411, 3.8941);
		testMethod(1725, 2.391, 1.9244, 0, -0.9661, -0.9206, 4.0922);
		testMethod(1730, 2.4006, 1.9244, 0, -0.9707, -0.8992, 4.2904);
		testMethod(1735, 2.4103, 1.9244, 0, -0.9751, -0.8767, 4.4886);
		testMethod(1740, 2.4199, 1.9244, 0, -0.9795, -0.8533, 4.6867);
		testMethod(1745, 2.4295, 1.9244, 0, -0.9837, -0.8289, 4.8849);
		testMethod(1750, 2.4391, 1.9244, 0, -0.9878, -0.8034, 5.0831);
		testMethod(1755, 2.4487, 1.9244, 0, -0.9917, -0.777, 5.2813);
		testMethod(1760, 2.4584, 1.9244, 0, -0.9955, -0.7496, 5.4794);
		testMethod(1765, 2.468, 1.9244, 0, -0.9992, -0.7213, 5.6776);
		testMethod(1770, 2.4776, 1.9244, 0, -1.0027, -0.6919, 5.8758);
		testMethod(1775, 2.4872, 1.9244, 0, -1.0061, -0.6615, 6.0739);
		testMethod(1780, 2.4969, 1.9244, 0, -1.0093, -0.6301, 6.2721);
		testMethod(1785, 2.5065, 1.9244, 0, -1.0124, -0.5978, 6.4703);
		testMethod(1790, 2.5161, 1.9244, 0, -1.0153, -0.5642, 6.72);
		testMethod(1795, 2.5257, 1.9244, 0, -1.0181, -0.5313, 6.5884);
		testMethod(1800, 2.5353, 1.924, -0.0625, -1.0206, -0.4992, 6.4059);
		testMethod(1805, 2.545, 1.9234, -0.125, -1.0231, -0.4681, 6.2195);
		testMethod(1810, 2.5546, 1.9225, -0.1874, -1.0253, -0.438, 6.0295);
		testMethod(1815, 2.5642, 1.9212, -0.2499, -1.0274, -0.4088, 5.8361);
		testMethod(1820, 2.5738, 1.9197, -0.3124, -1.0294, -0.3806, 5.6398);
		testMethod(1825, 2.5834, 1.9178, -0.3749, -1.0312, -0.3534, 5.4408);
		testMethod(1830, 2.593, 1.9156, -0.4374, -1.0329, -0.3272, 5.2394);
		testMethod(1835, 2.6025, 1.9131, -0.4998, -1.0345, -0.302, 5.0361);
		testMethod(1840, 2.6121, 1.9103, -0.5623, -1.036, -0.2779, 4.8311);
		testMethod(1845, 2.6216, 1.9072, -0.6248, -1.0373, -0.2547, 4.6247);
		testMethod(1850, 2.6312, 1.9037, -0.6873, -1.0385, -0.2327, 4.4173);
		testMethod(1855, 2.6407, 1.9, -0.7497, -1.0396, -0.2116, 4.2092);
		testMethod(1860, 2.6502, 1.8959, -0.8122, -1.0406, -0.1916, 4.0007);
		testMethod(1865, 2.6596, 1.8916, -0.8747, -1.0415, -0.1726, 3.7921);
		testMethod(1870, 2.6691, 1.8869, -0.9372, -1.0424, -0.1547, 3.5837);
		testMethod(1875, 2.6785, 1.8819, -0.9997, -1.0431, -0.1378, 3.3758);
		testMethod(1880, 2.6879, 1.8766, -1.0621, -1.0437, -0.122, 3.1688);
		testMethod(1885, 2.6973, 1.8709, -1.1246, -1.0443, -0.1072, 2.963);
		testMethod(1890, 2.7066, 1.865, -1.1871, -1.0448, -0.0934, 2.7586);
		testMethod(1895, 2.7159, 1.8588, -1.2496, -1.0452, -0.0806, 2.5559);
		testMethod(1900, 2.7252, 1.8522, -1.3121, -1.0456, -0.0688, 2.3553);
		testMethod(1905, 2.7344, 1.8453, -1.3745, -1.0459, -0.0581, 2.1569);
		testMethod(1910, 2.7436, 1.8381, -1.437, -1.0462, -0.0482, 1.9612);
		testMethod(1915, 2.7528, 1.8306, -1.4995, -1.0464, -0.0394, 1.7682);
		testMethod(1920, 2.7619, 1.8228, -1.562, -1.0466, -0.0315, 1.5784);
		testMethod(1925, 2.771, 1.8147, -1.6245, -1.0467, -0.0246, 1.392);
		testMethod(1930, 2.7801, 1.8063, -1.6869, -1.0468, -0.0185, 1.2092);
		testMethod(1935, 2.7891, 1.7975, -1.7494, -1.0469, -0.0134, 1.0303);
		testMethod(1940, 2.7981, 1.7885, -1.8119, -1.047, -0.0091, 0.8555);
		testMethod(1945, 2.807, 1.7791, -1.8744, -1.047, -0.0057, 0.685);
		testMethod(1950, 2.8159, 1.7694, -1.9369, -1.047, -0.0031, 0.519);
		testMethod(1955, 2.8247, 1.7594, -1.9993, -1.047, -0.0013, 0.3579);
		testMethod(1960, 2.8334, 1.7491, -2.0618, -1.0471, -0.0003, 0.2017);
		testMethod(1965, 2.8422, 1.7385, -2.1243, -1.0471, 0, 0.0525);
		testMethod(1970, 2.8508, 1.7275, -2.1868, -1.0471, 0, 0);
		testMethod(1975, 2.8594, 1.7163, -2.2492, -1.0471, 0, 0);
		testMethod(1980, 2.868, 1.7047, -2.3117, -1.0471, 0, 0);
		testMethod(1985, 2.8765, 1.6929, -2.3742, -1.0471, 0, 0);
		testMethod(1990, 2.8849, 1.6807, -2.4367, -1.0471, 0, 0);
		testMethod(1995, 2.8933, 1.6682, -2.4992, -1.0471, 0, 0);
		testMethod(2000, 2.9016, 1.6557, -2.4992, -1.0471, 0, 0);
		testMethod(2005, 2.9099, 1.6432, -2.4992, -1.0471, 0, 0);
		testMethod(2010, 2.918, 1.6307, -2.4992, -1.0471, 0, 0);
		testMethod(2015, 2.9262, 1.6182, -2.4992, -1.0471, 0, 0);
		testMethod(2020, 2.9342, 1.6057, -2.4992, -1.0471, 0, 0);
		testMethod(2025, 2.9422, 1.5932, -2.4992, -1.0471, 0, 0);
		testMethod(2030, 2.9502, 1.5807, -2.4992, -1.0471, 0, 0);
		testMethod(2035, 2.958, 1.5682, -2.4992, -1.0471, 0, 0);
		testMethod(2040, 2.9658, 1.5557, -2.4992, -1.0471, 0, 0);
		testMethod(2045, 2.9736, 1.5432, -2.4992, -1.0471, 0, 0);
		testMethod(2050, 2.9813, 1.5307, -2.4992, -1.0471, 0, 0);
		testMethod(2055, 2.9889, 1.5182, -2.4992, -1.0471, 0, 0);
		testMethod(2060, 2.9964, 1.5057, -2.4992, -1.0471, 0, 0);
		testMethod(2065, 3.0039, 1.4932, -2.4992, -1.0471, 0, 0);
		testMethod(2070, 3.0114, 1.4808, -2.4992, -1.0471, 0, 0);
		testMethod(2075, 3.0188, 1.4683, -2.4992, -1.0471, 0, 0);
		testMethod(2080, 3.0261, 1.4558, -2.4992, -1.0471, 0, 0);
		testMethod(2085, 3.0333, 1.4433, -2.4992, -1.0471, 0, 0);
		testMethod(2090, 3.0405, 1.4308, -2.4992, -1.0471, 0, 0);
		testMethod(2095, 3.0476, 1.4183, -2.4992, -1.0471, 0, 0);
		testMethod(2100, 3.0547, 1.4058, -2.4992, -1.0471, 0, 0);
		testMethod(2105, 3.0617, 1.3933, -2.4992, -1.0471, 0, 0);
		testMethod(2110, 3.0686, 1.3808, -2.4992, -1.0471, 0, 0);
		testMethod(2115, 3.0755, 1.3683, -2.4992, -1.0471, 0, 0);
		testMethod(2120, 3.0823, 1.3558, -2.4992, -1.0471, 0, 0);
		testMethod(2125, 3.089, 1.3433, -2.4992, -1.0471, 0, 0);
		testMethod(2130, 3.0957, 1.3308, -2.4992, -1.0471, 0, 0);
		testMethod(2135, 3.1024, 1.3183, -2.4992, -1.0471, 0, 0);
		testMethod(2140, 3.1089, 1.3058, -2.4992, -1.0471, 0, 0);
		testMethod(2145, 3.1154, 1.2933, -2.4992, -1.0471, 0, 0);
		testMethod(2150, 3.1218, 1.2808, -2.4992, -1.0471, 0, 0);
		testMethod(2155, 3.1282, 1.2683, -2.4992, -1.0471, 0, 0);
		testMethod(2160, 3.1345, 1.2558, -2.4992, -1.0471, 0, 0);
		testMethod(2165, 3.1408, 1.2433, -2.4992, -1.0471, 0, 0);
		testMethod(2170, 3.147, 1.2308, -2.4992, -1.0471, 0, 0);
		testMethod(2175, 3.1531, 1.2183, -2.4992, -1.0471, 0, 0);
		testMethod(2180, 3.1591, 1.2058, -2.4992, -1.0471, 0, 0);
		testMethod(2185, 3.1651, 1.1933, -2.4992, -1.0471, 0, 0);
		testMethod(2190, 3.1711, 1.1809, -2.4992, -1.0471, 0, 0);
		testMethod(2195, 3.177, 1.1684, -2.4992, -1.0471, 0, 0);
		testMethod(2200, 3.1828, 1.1559, -2.4992, -1.0471, 0, 0);
		testMethod(2205, 3.1885, 1.1434, -2.4992, -1.0471, 0, 0);
		testMethod(2210, 3.1942, 1.1309, -2.4992, -1.0471, 0, 0);
		testMethod(2215, 3.1998, 1.1184, -2.4992, -1.0471, 0, 0);
		testMethod(2220, 3.2054, 1.1059, -2.4992, -1.0471, 0, 0);
		testMethod(2225, 3.2109, 1.0934, -2.4992, -1.0471, 0, 0);
		testMethod(2230, 3.2163, 1.0809, -2.4992, -1.0471, 0, 0);
		testMethod(2235, 3.2217, 1.0684, -2.4992, -1.0471, 0, 0);
		testMethod(2240, 3.227, 1.0559, -2.4992, -1.0471, 0, 0);
		testMethod(2245, 3.2322, 1.0434, -2.4992, -1.0471, 0, 0);
		testMethod(2250, 3.2374, 1.0309, -2.4992, -1.0471, 0, 0);
		testMethod(2255, 3.2426, 1.0184, -2.4992, -1.0471, 0, 0);
		testMethod(2260, 3.2476, 1.0059, -2.4992, -1.0471, 0, 0);
		testMethod(2265, 3.2526, 0.9934, -2.4992, -1.0471, 0, 0);
		testMethod(2270, 3.2575, 0.9809, -2.4992, -1.0471, 0, 0);
		testMethod(2275, 3.2624, 0.9684, -2.4992, -1.0471, 0, 0);
		testMethod(2280, 3.2672, 0.9559, -2.4992, -1.0471, 0, 0);
		testMethod(2285, 3.272, 0.9434, -2.4992, -1.0471, 0, 0);
		testMethod(2290, 3.2767, 0.9309, -2.4992, -1.0471, 0, 0);
		testMethod(2295, 3.2813, 0.9184, -2.4992, -1.0471, 0, 0);
		testMethod(2300, 3.2859, 0.9059, -2.4992, -1.0471, 0, 0);
		testMethod(2305, 3.2903, 0.8935, -2.4992, -1.0471, 0, 0);
		testMethod(2310, 3.2948, 0.881, -2.4992, -1.0471, 0, 0);
		testMethod(2315, 3.2992, 0.8685, -2.4992, -1.0471, 0, 0);
		testMethod(2320, 3.3035, 0.856, -2.4992, -1.0471, 0, 0);
		testMethod(2325, 3.3077, 0.8435, -2.4992, -1.0471, 0, 0);
		testMethod(2330, 3.3119, 0.831, -2.4992, -1.0471, 0, 0);
		testMethod(2335, 3.316, 0.8185, -2.4992, -1.0471, 0, 0);
		testMethod(2340, 3.3201, 0.806, -2.4992, -1.0471, 0, 0);
		testMethod(2345, 3.3241, 0.7935, -2.4992, -1.0471, 0, 0);
		testMethod(2350, 3.328, 0.781, -2.4992, -1.0471, 0, 0);
		testMethod(2355, 3.3319, 0.7685, -2.4992, -1.0471, 0, 0);
		testMethod(2360, 3.3357, 0.756, -2.4992, -1.0471, 0, 0);
		testMethod(2365, 3.3395, 0.7435, -2.4992, -1.0471, 0, 0);
		testMethod(2370, 3.3431, 0.731, -2.4992, -1.0471, 0, 0);
		testMethod(2375, 3.3468, 0.7185, -2.4992, -1.0471, 0, 0);
		testMethod(2380, 3.3503, 0.706, -2.4992, -1.0471, 0, 0);
		testMethod(2385, 3.3538, 0.6935, -2.4992, -1.0471, 0, 0);
		testMethod(2390, 3.3573, 0.681, -2.4992, -1.0471, 0, 0);
		testMethod(2395, 3.3606, 0.6685, -2.4992, -1.0471, 0, 0);
		testMethod(2400, 3.3639, 0.656, -2.4992, -1.0471, 0, 0);
		testMethod(2405, 3.3672, 0.6435, -2.4992, -1.0471, 0, 0);
		testMethod(2410, 3.3704, 0.631, -2.4992, -1.0471, 0, 0);
		testMethod(2415, 3.3735, 0.6185, -2.4992, -1.0471, 0, 0);
		testMethod(2420, 3.3766, 0.606, -2.4992, -1.0471, 0, 0);
		testMethod(2425, 3.3796, 0.5936, -2.4992, -1.0471, 0, 0);
		testMethod(2430, 3.3825, 0.5811, -2.4992, -1.0471, 0, 0);
		testMethod(2435, 3.3854, 0.5686, -2.4992, -1.0471, 0, 0);
		testMethod(2440, 3.3882, 0.5561, -2.4992, -1.0471, 0, 0);
		testMethod(2445, 3.3909, 0.5436, -2.4992, -1.0471, 0, 0);
		testMethod(2450, 3.3936, 0.5311, -2.4992, -1.0471, 0, 0);
		testMethod(2455, 3.3963, 0.5186, -2.4992, -1.0471, 0, 0);
		testMethod(2460, 3.3988, 0.5061, -2.4992, -1.0471, 0, 0);
		testMethod(2465, 3.4013, 0.4936, -2.4992, -1.0471, 0, 0);
		testMethod(2470, 3.4037, 0.4811, -2.4992, -1.0471, 0, 0);
		testMethod(2475, 3.4061, 0.4686, -2.4992, -1.0471, 0, 0);
		testMethod(2480, 3.4084, 0.4561, -2.4992, -1.0471, 0, 0);
		testMethod(2485, 3.4107, 0.4436, -2.4992, -1.0471, 0, 0);
		testMethod(2490, 3.4129, 0.4311, -2.4992, -1.0471, 0, 0);
		testMethod(2495, 3.415, 0.4186, -2.4992, -1.0471, 0, 0);
		testMethod(2500, 3.4171, 0.4061, -2.4992, -1.0471, 0, 0);
		testMethod(2505, 3.4191, 0.3936, -2.4992, -1.0471, 0, 0);
		testMethod(2510, 3.421, 0.3811, -2.4992, -1.0471, 0, 0);
		testMethod(2515, 3.4229, 0.3686, -2.4992, -1.0471, 0, 0);
		testMethod(2520, 3.4247, 0.3561, -2.4992, -1.0471, 0, 0);
		testMethod(2525, 3.4264, 0.3436, -2.4992, -1.0471, 0, 0);
		testMethod(2530, 3.4281, 0.3311, -2.4992, -1.0471, 0, 0);
		testMethod(2535, 3.4297, 0.3186, -2.4992, -1.0471, 0, 0);
		testMethod(2540, 3.4313, 0.3061, -2.4992, -1.0471, 0, 0);
		testMethod(2545, 3.4328, 0.2937, -2.4992, -1.0471, 0, 0);
		testMethod(2550, 3.4342, 0.2812, -2.4992, -1.0471, 0, 0);
		testMethod(2555, 3.4356, 0.2687, -2.4992, -1.0471, 0, 0);
		testMethod(2560, 3.4369, 0.2562, -2.4992, -1.0471, 0, 0);
		testMethod(2565, 3.4382, 0.2437, -2.4992, -1.0471, 0, 0);
		testMethod(2570, 3.4394, 0.2315, -2.4367, -1.0471, 0, 0);
		testMethod(2575, 3.4405, 0.2196, -2.3742, -1.0471, 0, 0);
		testMethod(2580, 3.4416, 0.2081, -2.3117, -1.0471, 0, 0);
		testMethod(2585, 3.4426, 0.1968, -2.2492, -1.0471, 0, 0);
		testMethod(2590, 3.4435, 0.1859, -2.1868, -1.0471, 0, 0);
		testMethod(2595, 3.4444, 0.1753, -2.1243, -1.0471, 0, 0);
		testMethod(2600, 3.4453, 0.1649, -2.0618, -1.0471, 0, 0);
		testMethod(2605, 3.4461, 0.1549, -1.9993, -1.0471, 0, 0);
		testMethod(2610, 3.4468, 0.1453, -1.9369, -1.0471, 0, 0);
		testMethod(2615, 3.4475, 0.1359, -1.8744, -1.0471, 0, 0);
		testMethod(2620, 3.4482, 0.1268, -1.8119, -1.0471, 0, 0);
		testMethod(2625, 3.4488, 0.1181, -1.7494, -1.0471, 0, 0);
		testMethod(2630, 3.4494, 0.1097, -1.6869, -1.0471, 0, 0);
		testMethod(2635, 3.4499, 0.1015, -1.6245, -1.0471, 0, 0);
		testMethod(2640, 3.4504, 0.0937, -1.562, -1.0471, 0, 0);
		testMethod(2645, 3.4508, 0.0862, -1.4995, -1.0471, 0, 0);
		testMethod(2650, 3.4513, 0.079, -1.437, -1.0471, 0, 0);
		testMethod(2655, 3.4516, 0.0722, -1.3745, -1.0471, 0, 0);
		testMethod(2660, 3.452, 0.0656, -1.3121, -1.0471, 0, 0);
		testMethod(2665, 3.4523, 0.0594, -1.2496, -1.0471, 0, 0);
		testMethod(2670, 3.4526, 0.0534, -1.1871, -1.0471, 0, 0);
		testMethod(2675, 3.4528, 0.0478, -1.1246, -1.0471, 0, 0);
		testMethod(2680, 3.453, 0.0425, -1.0621, -1.0471, 0, 0);
		testMethod(2685, 3.4532, 0.0375, -0.9997, -1.0471, 0, 0);
		testMethod(2690, 3.4534, 0.0328, -0.9372, -1.0471, 0, 0);
		testMethod(2695, 3.4536, 0.0284, -0.8747, -1.0471, 0, 0);
		testMethod(2700, 3.4537, 0.0244, -0.8122, -1.0471, 0, 0);
		testMethod(2705, 3.4538, 0.0206, -0.7497, -1.0471, 0, 0);
		testMethod(2710, 3.4539, 0.0172, -0.6873, -1.0471, 0, 0);
		testMethod(2715, 3.454, 0.0141, -0.6248, -1.0471, 0, 0);
		testMethod(2720, 3.4541, 0.0112, -0.5623, -1.0471, 0, 0);
		testMethod(2725, 3.4541, 0.0087, -0.4998, -1.0471, 0, 0);
		testMethod(2730, 3.4541, 0.0066, -0.4374, -1.0471, 0, 0);
		testMethod(2735, 3.4542, 0.0047, -0.3749, -1.0471, 0, 0);
		testMethod(2740, 3.4542, 0.0031, -0.3124, -1.0471, 0, 0);
		testMethod(2745, 3.4542, 0.0019, -0.2499, -1.0471, 0, 0);
		testMethod(2750, 3.4542, 0.0009, -0.1874, -1.0471, 0, 0);
		testMethod(2755, 3.4542, 0.0003, -0.125, -1.0471, 0, 0);
		testMethod(2760, 3.4542, 0, -0.0625, -1.0471, 0, 0);
		testMethod(2765, 3.4542, 0, 0, -1.0471, 0, 0);
		testMethod(2765, 3.4542, 0, 0, -1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}