package org.usfirst.frc.team1197.robot;

public class BoilerPos1 extends TorTrajectory {

	public BoilerPos1() {
		super(3.3783, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0625, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.125, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1875, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.25, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3125, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.375, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4375, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.5, 0, 0, 0);
		testMethod(45, 0.0002, 0.0141, 0.5625, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.625, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6875, 0, 0, 0);
		testMethod(60, 0.0005, 0.0244, 0.75, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8125, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.875, 0, 0, 0);
		testMethod(75, 0.001, 0.0375, 0.9375, 0, 0, 0);
		testMethod(80, 0.0012, 0.0425, 1, 0, 0, 0);
		testMethod(85, 0.0014, 0.0478, 1.0625, 0, 0, 0);
		testMethod(90, 0.0016, 0.0534, 1.125, 0, 0, 0);
		testMethod(95, 0.0019, 0.0594, 1.1875, 0, 0, 0);
		testMethod(100, 0.0022, 0.0656, 1.25, 0, 0, 0);
		testMethod(105, 0.0026, 0.0722, 1.3125, 0, 0, 0);
		testMethod(110, 0.003, 0.0791, 1.375, 0, 0, 0);
		testMethod(115, 0.0034, 0.0862, 1.4375, 0, 0, 0);
		testMethod(120, 0.0038, 0.0937, 1.5, 0, 0, 0);
		testMethod(125, 0.0043, 0.1016, 1.5625, 0, 0, 0);
		testMethod(130, 0.0048, 0.1097, 1.625, 0, 0, 0);
		testMethod(135, 0.0054, 0.1181, 1.6875, 0, 0, 0);
		testMethod(140, 0.006, 0.1269, 1.75, 0, 0, 0);
		testMethod(145, 0.0067, 0.1359, 1.8125, 0, 0, 0);
		testMethod(150, 0.0074, 0.1453, 1.875, 0, 0, 0);
		testMethod(155, 0.0081, 0.155, 1.9375, 0, 0, 0);
		testMethod(160, 0.0089, 0.165, 2, 0, 0, 0);
		testMethod(165, 0.0098, 0.1753, 2.0625, 0, 0, 0);
		testMethod(170, 0.0107, 0.1859, 2.125, 0, 0, 0);
		testMethod(175, 0.0116, 0.1969, 2.1875, 0, 0, 0);
		testMethod(180, 0.0127, 0.2081, 2.25, 0, 0, 0);
		testMethod(185, 0.0137, 0.2197, 2.3125, 0, 0, 0);
		testMethod(190, 0.0149, 0.2316, 2.375, 0, 0, 0);
		testMethod(195, 0.016, 0.2437, 2.4375, 0, 0, 0);
		testMethod(200, 0.0173, 0.2562, 2.5, 0, 0, 0);
		testMethod(205, 0.0186, 0.2687, 2.5, 0, 0, 0);
		testMethod(210, 0.02, 0.2812, 2.5, 0, 0, 0);
		testMethod(215, 0.0214, 0.2937, 2.5, 0, 0, 0);
		testMethod(220, 0.0229, 0.3062, 2.5, 0, 0, 0);
		testMethod(225, 0.0245, 0.3187, 2.5, 0, 0, 0);
		testMethod(230, 0.0261, 0.3312, 2.5, 0, 0, 0);
		testMethod(235, 0.0278, 0.3437, 2.5, 0, 0, 0);
		testMethod(240, 0.0295, 0.3562, 2.5, 0, 0, 0);
		testMethod(245, 0.0314, 0.3687, 2.5, 0, 0, 0);
		testMethod(250, 0.0332, 0.3812, 2.5, 0, 0, 0);
		testMethod(255, 0.0352, 0.3937, 2.5, 0, 0, 0);
		testMethod(260, 0.0372, 0.4062, 2.5, 0, 0, 0);
		testMethod(265, 0.0392, 0.4187, 2.5, 0, 0, 0);
		testMethod(270, 0.0414, 0.4312, 2.5, 0, 0, 0);
		testMethod(275, 0.0435, 0.4437, 2.5, 0, 0, 0);
		testMethod(280, 0.0458, 0.4562, 2.5, 0, 0, 0);
		testMethod(285, 0.0481, 0.4687, 2.5, 0, 0, 0);
		testMethod(290, 0.0505, 0.4812, 2.5, 0, 0, 0);
		testMethod(295, 0.0529, 0.4937, 2.5, 0, 0, 0);
		testMethod(300, 0.0554, 0.5062, 2.5, 0, 0, 0);
		testMethod(305, 0.058, 0.5187, 2.5, 0, 0, 0);
		testMethod(310, 0.0606, 0.5312, 2.5, 0, 0, 0);
		testMethod(315, 0.0633, 0.5437, 2.5, 0, 0, 0);
		testMethod(320, 0.066, 0.5562, 2.5, 0, 0, 0);
		testMethod(325, 0.0689, 0.5687, 2.5, 0, 0, 0);
		testMethod(330, 0.0717, 0.5812, 2.5, 0, 0, 0);
		testMethod(335, 0.0747, 0.5937, 2.5, 0, 0, 0);
		testMethod(340, 0.0777, 0.6062, 2.5, 0, 0, 0);
		testMethod(345, 0.0807, 0.6187, 2.5, 0, 0, 0);
		testMethod(350, 0.0839, 0.6312, 2.5, 0, 0, 0);
		testMethod(355, 0.087, 0.6437, 2.5, 0, 0, 0);
		testMethod(360, 0.0903, 0.6562, 2.5, 0, 0, 0);
		testMethod(365, 0.0936, 0.6687, 2.5, 0, 0, 0);
		testMethod(370, 0.097, 0.6812, 2.5, 0, 0, 0);
		testMethod(375, 0.1004, 0.6937, 2.5, 0, 0, 0);
		testMethod(380, 0.1039, 0.7062, 2.5, 0, 0, 0);
		testMethod(385, 0.1075, 0.7187, 2.5, 0, 0, 0);
		testMethod(390, 0.1111, 0.7312, 2.5, 0, 0, 0);
		testMethod(395, 0.1148, 0.7437, 2.5, 0, 0, 0);
		testMethod(400, 0.1185, 0.7562, 2.5, 0, 0, 0);
		testMethod(405, 0.1224, 0.7687, 2.5, 0, 0, 0);
		testMethod(410, 0.1262, 0.7812, 2.5, 0, 0, 0);
		testMethod(415, 0.1302, 0.7937, 2.5, 0, 0, 0);
		testMethod(420, 0.1342, 0.8062, 2.5, 0, 0, 0);
		testMethod(425, 0.1382, 0.8187, 2.5, 0, 0, 0);
		testMethod(430, 0.1424, 0.8312, 2.5, 0, 0, 0);
		testMethod(435, 0.1465, 0.8437, 2.5, 0, 0, 0);
		testMethod(440, 0.1508, 0.8562, 2.5, 0, 0, 0);
		testMethod(445, 0.1551, 0.8687, 2.5, 0, 0, 0);
		testMethod(450, 0.1595, 0.8812, 2.5, 0, 0, 0);
		testMethod(455, 0.1639, 0.8937, 2.5, 0, 0, 0);
		testMethod(460, 0.1684, 0.9062, 2.5, 0, 0, 0);
		testMethod(465, 0.173, 0.9187, 2.5, 0, 0, 0);
		testMethod(470, 0.1776, 0.9312, 2.5, 0, 0, 0);
		testMethod(475, 0.1823, 0.9437, 2.5, 0, 0, 0);
		testMethod(480, 0.187, 0.9562, 2.5, 0, 0, 0);
		testMethod(485, 0.1919, 0.9687, 2.5, 0, 0, 0);
		testMethod(490, 0.1967, 0.9812, 2.5, 0, 0, 0);
		testMethod(495, 0.2017, 0.9937, 2.5, 0, 0, 0);
		testMethod(500, 0.2067, 1.0062, 2.5, 0, 0, 0);
		testMethod(505, 0.2117, 1.0187, 2.5, 0, 0, 0);
		testMethod(510, 0.2169, 1.0312, 2.5, 0, 0, 0);
		testMethod(515, 0.222, 1.0437, 2.5, 0, 0, 0);
		testMethod(520, 0.2273, 1.0562, 2.5, 0, 0, 0);
		testMethod(525, 0.2326, 1.0687, 2.5, 0, 0, 0);
		testMethod(530, 0.238, 1.0812, 2.5, 0, 0, 0);
		testMethod(535, 0.2434, 1.0937, 2.5, 0, 0, 0);
		testMethod(540, 0.2489, 1.1062, 2.5, 0, 0, 0);
		testMethod(545, 0.2545, 1.1187, 2.5, 0, 0, 0);
		testMethod(550, 0.2601, 1.1312, 2.5, 0, 0, 0);
		testMethod(555, 0.2658, 1.1437, 2.5, 0, 0, 0);
		testMethod(560, 0.2715, 1.1562, 2.5, 0, 0, 0);
		testMethod(565, 0.2774, 1.1687, 2.5, 0, 0, 0);
		testMethod(570, 0.2832, 1.1812, 2.5, 0, 0, 0);
		testMethod(575, 0.2892, 1.1937, 2.5, 0, 0, 0);
		testMethod(580, 0.2952, 1.2062, 2.5, 0, 0, 0);
		testMethod(585, 0.3012, 1.2187, 2.5, 0, 0, 0);
		testMethod(590, 0.3074, 1.2312, 2.5, 0, 0, 0);
		testMethod(595, 0.3135, 1.2437, 2.5, 0, 0, 0);
		testMethod(600, 0.3198, 1.2562, 2.5, 0, 0, 0);
		testMethod(605, 0.3261, 1.2687, 2.5, 0, 0, 0);
		testMethod(610, 0.3325, 1.2812, 2.5, 0, 0, 0);
		testMethod(615, 0.3389, 1.2937, 2.5, 0, 0, 0);
		testMethod(620, 0.3454, 1.3062, 2.5, 0, 0, 0);
		testMethod(625, 0.352, 1.3187, 2.5, 0, 0, 0);
		testMethod(630, 0.3586, 1.3312, 2.5, 0, 0, 0);
		testMethod(635, 0.3653, 1.3437, 2.5, 0, 0, 0);
		testMethod(640, 0.372, 1.3562, 2.5, 0, 0, 0);
		testMethod(645, 0.3789, 1.3687, 2.5, 0, 0, 0);
		testMethod(650, 0.3857, 1.3812, 2.5, 0, 0, 0);
		testMethod(655, 0.3927, 1.3937, 2.5, 0, 0, 0);
		testMethod(660, 0.3997, 1.4062, 2.5, 0, 0, 0);
		testMethod(665, 0.4067, 1.4187, 2.5, 0, 0, 0);
		testMethod(670, 0.4139, 1.4312, 2.5, 0, 0, 0);
		testMethod(675, 0.421, 1.4437, 2.5, 0, 0, 0);
		testMethod(680, 0.4283, 1.4562, 2.5, 0, 0, 0);
		testMethod(685, 0.4356, 1.4687, 2.5, 0, 0, 0);
		testMethod(690, 0.443, 1.4812, 2.5, 0, 0, 0);
		testMethod(695, 0.4504, 1.4937, 2.5, 0, 0, 0);
		testMethod(700, 0.4579, 1.5062, 2.5, 0, 0, 0);
		testMethod(705, 0.4655, 1.5187, 2.5, 0, 0, 0);
		testMethod(710, 0.4731, 1.5312, 2.5, 0, 0, 0);
		testMethod(715, 0.4808, 1.5437, 2.5, 0, 0, 0);
		testMethod(720, 0.4885, 1.5562, 2.5, 0, 0.0002, 0.0497);
		testMethod(725, 0.4964, 1.5687, 2.5, 0, 0.001, 0.1569);
		testMethod(730, 0.5042, 1.5812, 2.5, 0, 0.0024, 0.2693);
		testMethod(735, 0.5122, 1.5937, 2.5, 0, 0.0043, 0.387);
		testMethod(740, 0.5202, 1.6062, 2.5, 0.0001, 0.0069, 0.5099);
		testMethod(745, 0.5282, 1.6187, 2.5, 0.0001, 0.0101, 0.6383);
		testMethod(750, 0.5364, 1.6312, 2.5, 0.0002, 0.0139, 0.7722);
		testMethod(755, 0.5445, 1.6437, 2.5, 0.0002, 0.0185, 0.9118);
		testMethod(760, 0.5528, 1.6562, 2.5, 0.0003, 0.0238, 1.0571);
		testMethod(765, 0.5611, 1.6687, 2.5, 0.0005, 0.0298, 1.2082);
		testMethod(770, 0.5695, 1.6812, 2.5, 0.0006, 0.0366, 1.3653);
		testMethod(775, 0.5779, 1.6934, 2.4375, 0.0008, 0.0443, 1.5268);
		testMethod(780, 0.5864, 1.7053, 2.375, 0.0011, 0.0527, 1.6931);
		testMethod(785, 0.595, 1.7169, 2.3125, 0.0014, 0.062, 1.8642);
		testMethod(790, 0.6036, 1.7281, 2.25, 0.0017, 0.0722, 2.0399);
		testMethod(795, 0.6122, 1.739, 2.1875, 0.0021, 0.0833, 2.22);
		testMethod(800, 0.621, 1.7497, 2.125, 0.0025, 0.0954, 2.4043);
		testMethod(805, 0.6297, 1.76, 2.0625, 0.0031, 0.1083, 2.5926);
		testMethod(810, 0.6386, 1.77, 2, 0.0036, 0.1223, 2.7847);
		testMethod(815, 0.6474, 1.7797, 1.9375, 0.0043, 0.1372, 2.9804);
		testMethod(820, 0.6564, 1.789, 1.875, 0.005, 0.1531, 3.1794);
		testMethod(825, 0.6653, 1.7981, 1.8125, 0.0058, 0.17, 3.3816);
		testMethod(830, 0.6743, 1.8068, 1.75, 0.0067, 0.1879, 3.5866);
		testMethod(835, 0.6834, 1.8153, 1.6875, 0.0077, 0.2069, 3.7942);
		testMethod(840, 0.6925, 1.8234, 1.625, 0.0088, 0.2269, 4.0041);
		testMethod(845, 0.7016, 1.8312, 1.5625, 0.01, 0.248, 4.2162);
		testMethod(850, 0.7108, 1.8387, 1.5, 0.0113, 0.2701, 4.4301);
		testMethod(855, 0.72, 1.8459, 1.4375, 0.0127, 0.2933, 4.6456);
		testMethod(860, 0.7293, 1.8528, 1.375, 0.0142, 0.3177, 4.8623);
		testMethod(865, 0.7385, 1.8593, 1.3125, 0.0158, 0.3431, 5.08);
		testMethod(870, 0.7479, 1.8656, 1.25, 0.0176, 0.3696, 5.2984);
		testMethod(875, 0.7572, 1.8715, 1.1875, 0.0195, 0.3971, 5.5171);
		testMethod(880, 0.7666, 1.8772, 1.125, 0.0216, 0.4258, 5.736);
		testMethod(885, 0.776, 1.8825, 1.0625, 0.0238, 0.4556, 5.9547);
		testMethod(890, 0.7854, 1.8875, 1, 0.0262, 0.4865, 6.1728);
		testMethod(895, 0.7948, 1.8922, 0.9375, 0.0287, 0.5184, 6.3901);
		testMethod(900, 0.8043, 1.8965, 0.875, 0.0313, 0.5514, 6.6062);
		testMethod(905, 0.8138, 1.9006, 0.8125, 0.0342, 0.5855, 6.8209);
		testMethod(910, 0.8233, 1.9043, 0.75, 0.0372, 0.6207, 7.0337);
		testMethod(915, 0.8329, 1.9078, 0.6875, 0.0404, 0.6569, 7.2445);
		testMethod(920, 0.8424, 1.9109, 0.625, 0.0438, 0.6944, 7.4897);
		testMethod(925, 0.852, 1.9137, 0.5625, 0.0473, 0.7313, 7.3781);
		testMethod(930, 0.8615, 1.9162, 0.5, 0.0511, 0.7672, 7.1888);
		testMethod(935, 0.8711, 1.9184, 0.4375, 0.055, 0.8022, 6.9935);
		testMethod(940, 0.8807, 1.9203, 0.375, 0.0591, 0.8361, 6.7924);
		testMethod(945, 0.8903, 1.9218, 0.3125, 0.0634, 0.8691, 6.5859);
		testMethod(950, 0.8999, 1.9231, 0.25, 0.0678, 0.9009, 6.3742);
		testMethod(955, 0.9096, 1.924, 0.1875, 0.0724, 0.9317, 6.1577);
		testMethod(960, 0.9192, 1.9247, 0.125, 0.0771, 0.9614, 5.9366);
		testMethod(965, 0.9288, 1.925, 0.0625, 0.082, 0.99, 5.7114);
		testMethod(970, 0.9384, 1.925, 0, 0.087, 1.0174, 5.4823);
		testMethod(975, 0.948, 1.925, 0, 0.0922, 1.0438, 5.2839);
		testMethod(980, 0.9577, 1.925, 0, 0.0974, 1.0692, 5.0856);
		testMethod(985, 0.9673, 1.925, 0, 0.1028, 1.0937, 4.8872);
		testMethod(990, 0.9769, 1.925, 0, 0.1084, 1.1171, 4.6889);
		testMethod(995, 0.9865, 1.925, 0, 0.114, 1.1396, 4.4905);
		testMethod(1000, 0.9962, 1.925, 0, 0.1198, 1.161, 4.2921);
		testMethod(1005, 1.0058, 1.925, 0, 0.1256, 1.1815, 4.0938);
		testMethod(1010, 1.0154, 1.925, 0, 0.1316, 1.201, 3.8954);
		testMethod(1015, 1.025, 1.925, 0, 0.1376, 1.2195, 3.6971);
		testMethod(1020, 1.0347, 1.925, 0, 0.1438, 1.2369, 3.4987);
		testMethod(1025, 1.0443, 1.925, 0, 0.15, 1.2534, 3.3003);
		testMethod(1030, 1.0539, 1.925, 0, 0.1563, 1.269, 3.102);
		testMethod(1035, 1.0635, 1.925, 0, 0.1627, 1.2835, 2.9036);
		testMethod(1040, 1.0732, 1.925, 0, 0.1691, 1.297, 2.7052);
		testMethod(1045, 1.0828, 1.925, 0, 0.1757, 1.3095, 2.5069);
		testMethod(1050, 1.0924, 1.925, 0, 0.1822, 1.3211, 2.3085);
		testMethod(1055, 1.102, 1.925, 0, 0.1889, 1.3316, 2.1102);
		testMethod(1060, 1.1117, 1.925, 0, 0.1955, 1.3412, 1.9118);
		testMethod(1065, 1.1213, 1.925, 0, 0.2023, 1.3498, 1.7134);
		testMethod(1070, 1.1309, 1.925, 0, 0.209, 1.3573, 1.5151);
		testMethod(1075, 1.1405, 1.925, 0, 0.2158, 1.3639, 1.3167);
		testMethod(1080, 1.1502, 1.925, 0, 0.2227, 1.3695, 1.1184);
		testMethod(1085, 1.1598, 1.925, 0, 0.2295, 1.3741, 0.92);
		testMethod(1090, 1.1694, 1.925, 0, 0.2364, 1.3777, 0.7216);
		testMethod(1095, 1.179, 1.925, 0, 0.2433, 1.3803, 0.5233);
		testMethod(1100, 1.1887, 1.925, 0, 0.2502, 1.382, 0.3249);
		testMethod(1105, 1.1983, 1.925, 0, 0.2571, 1.3826, 0.1266);
		testMethod(1110, 1.2079, 1.925, 0, 0.264, 1.3826, 0.0019);
		testMethod(1115, 1.2175, 1.925, 0, 0.271, 1.3826, 0);
		testMethod(1120, 1.2272, 1.925, 0, 0.2779, 1.3826, 0);
		testMethod(1125, 1.2368, 1.925, 0, 0.2848, 1.3826, 0);
		testMethod(1130, 1.2464, 1.925, 0, 0.2917, 1.3826, 0);
		testMethod(1135, 1.256, 1.925, 0, 0.2986, 1.3826, 0);
		testMethod(1140, 1.2657, 1.925, 0, 0.3055, 1.3826, 0);
		testMethod(1145, 1.2753, 1.925, 0, 0.3124, 1.3826, 0);
		testMethod(1150, 1.2849, 1.925, 0, 0.3193, 1.3826, 0);
		testMethod(1155, 1.2945, 1.925, 0, 0.3263, 1.3826, 0);
		testMethod(1160, 1.3042, 1.925, 0, 0.3332, 1.3826, 0);
		testMethod(1165, 1.3138, 1.925, 0, 0.3401, 1.3826, 0);
		testMethod(1170, 1.3234, 1.925, 0, 0.347, 1.3826, 0);
		testMethod(1175, 1.333, 1.925, 0, 0.3539, 1.3826, 0);
		testMethod(1180, 1.3427, 1.925, 0, 0.3608, 1.3826, 0);
		testMethod(1185, 1.3523, 1.925, 0, 0.3677, 1.3826, 0);
		testMethod(1190, 1.3619, 1.925, 0, 0.3747, 1.3826, 0);
		testMethod(1195, 1.3715, 1.925, 0, 0.3816, 1.3826, 0);
		testMethod(1200, 1.3812, 1.925, 0, 0.3885, 1.3826, 0);
		testMethod(1205, 1.3908, 1.925, 0, 0.3954, 1.3826, 0);
		testMethod(1210, 1.4004, 1.925, 0, 0.4023, 1.3826, 0);
		testMethod(1215, 1.41, 1.925, 0, 0.4092, 1.3826, 0);
		testMethod(1220, 1.4197, 1.925, 0, 0.4161, 1.3826, 0);
		testMethod(1225, 1.4293, 1.925, 0, 0.423, 1.3826, 0);
		testMethod(1230, 1.4389, 1.925, 0, 0.43, 1.3826, 0);
		testMethod(1235, 1.4485, 1.925, 0, 0.4369, 1.3826, 0);
		testMethod(1240, 1.4582, 1.925, 0, 0.4438, 1.3826, 0);
		testMethod(1245, 1.4678, 1.925, 0, 0.4507, 1.3826, 0);
		testMethod(1250, 1.4774, 1.925, 0, 0.4576, 1.3826, 0);
		testMethod(1255, 1.487, 1.925, 0, 0.4645, 1.3826, 0);
		testMethod(1260, 1.4967, 1.925, 0, 0.4714, 1.3826, 0);
		testMethod(1265, 1.5063, 1.925, 0, 0.4783, 1.3826, 0);
		testMethod(1270, 1.5159, 1.925, 0, 0.4853, 1.3826, 0);
		testMethod(1275, 1.5255, 1.925, 0, 0.4922, 1.3826, 0);
		testMethod(1280, 1.5352, 1.925, 0, 0.4991, 1.3826, 0);
		testMethod(1285, 1.5448, 1.925, 0, 0.506, 1.3826, 0);
		testMethod(1290, 1.5544, 1.925, 0, 0.5129, 1.3826, 0);
		testMethod(1295, 1.564, 1.925, 0, 0.5198, 1.3826, 0);
		testMethod(1300, 1.5737, 1.925, 0, 0.5267, 1.3826, 0);
		testMethod(1305, 1.5833, 1.925, 0, 0.5337, 1.3826, 0);
		testMethod(1310, 1.5929, 1.925, 0, 0.5406, 1.3826, 0);
		testMethod(1315, 1.6025, 1.925, 0, 0.5475, 1.3826, 0);
		testMethod(1320, 1.6122, 1.925, 0, 0.5544, 1.3826, 0);
		testMethod(1325, 1.6218, 1.925, 0, 0.5613, 1.3826, 0);
		testMethod(1330, 1.6314, 1.925, 0, 0.5682, 1.3826, 0);
		testMethod(1335, 1.641, 1.925, 0, 0.5751, 1.3826, 0);
		testMethod(1340, 1.6507, 1.925, 0, 0.582, 1.3826, 0);
		testMethod(1345, 1.6603, 1.925, 0, 0.589, 1.3826, 0);
		testMethod(1350, 1.6699, 1.925, 0, 0.5959, 1.3826, 0);
		testMethod(1355, 1.6795, 1.925, 0, 0.6028, 1.3826, 0);
		testMethod(1360, 1.6892, 1.925, 0, 0.6097, 1.3826, 0);
		testMethod(1365, 1.6988, 1.925, 0, 0.6166, 1.3826, 0);
		testMethod(1370, 1.7084, 1.925, 0, 0.6235, 1.3826, 0);
		testMethod(1375, 1.718, 1.925, 0, 0.6304, 1.3826, 0);
		testMethod(1380, 1.7277, 1.925, 0, 0.6373, 1.3826, 0);
		testMethod(1385, 1.7373, 1.925, 0, 0.6443, 1.3826, 0);
		testMethod(1390, 1.7469, 1.925, 0, 0.6512, 1.3826, 0);
		testMethod(1395, 1.7565, 1.925, 0, 0.6581, 1.3826, 0);
		testMethod(1400, 1.7662, 1.925, 0, 0.665, 1.3826, 0);
		testMethod(1405, 1.7758, 1.925, 0, 0.6719, 1.3826, 0);
		testMethod(1410, 1.7854, 1.925, 0, 0.6788, 1.3826, 0);
		testMethod(1415, 1.795, 1.925, 0, 0.6857, 1.3826, 0);
		testMethod(1420, 1.8047, 1.925, 0, 0.6927, 1.3826, 0);
		testMethod(1425, 1.8143, 1.925, 0, 0.6996, 1.3826, 0);
		testMethod(1430, 1.8239, 1.925, 0, 0.7065, 1.3826, 0);
		testMethod(1435, 1.8335, 1.925, 0, 0.7134, 1.3826, 0);
		testMethod(1440, 1.8432, 1.925, 0, 0.7203, 1.3826, 0);
		testMethod(1445, 1.8528, 1.925, 0, 0.7272, 1.3826, 0);
		testMethod(1450, 1.8624, 1.925, 0, 0.7341, 1.3826, 0);
		testMethod(1455, 1.872, 1.925, 0, 0.741, 1.3826, 0);
		testMethod(1460, 1.8817, 1.925, 0, 0.748, 1.3826, 0);
		testMethod(1465, 1.8913, 1.925, 0, 0.7549, 1.3826, 0);
		testMethod(1470, 1.9009, 1.925, 0, 0.7618, 1.3826, 0);
		testMethod(1475, 1.9105, 1.925, 0, 0.7687, 1.3826, 0);
		testMethod(1480, 1.9202, 1.925, 0, 0.7756, 1.3826, 0);
		testMethod(1485, 1.9298, 1.925, 0, 0.7825, 1.3826, 0);
		testMethod(1490, 1.9394, 1.925, 0, 0.7894, 1.3826, -0.0004);
		testMethod(1495, 1.949, 1.925, 0, 0.7963, 1.382, -0.1125);
		testMethod(1500, 1.9587, 1.925, 0, 0.8033, 1.3805, -0.3109);
		testMethod(1505, 1.9683, 1.925, 0, 0.8101, 1.3779, -0.5092);
		testMethod(1510, 1.9779, 1.925, 0, 0.817, 1.3744, -0.7076);
		testMethod(1515, 1.9875, 1.925, 0, 0.8239, 1.3699, -0.9059);
		testMethod(1520, 1.9972, 1.925, 0, 0.8307, 1.3643, -1.1043);
		testMethod(1525, 2.0068, 1.925, 0, 0.8375, 1.3578, -1.3027);
		testMethod(1530, 2.0164, 1.925, 0, 0.8443, 1.3503, -1.501);
		testMethod(1535, 2.026, 1.925, 0, 0.851, 1.3418, -1.6994);
		testMethod(1540, 2.0357, 1.925, 0, 0.8577, 1.3323, -1.8977);
		testMethod(1545, 2.0453, 1.925, 0, 0.8644, 1.3219, -2.0961);
		testMethod(1550, 2.0549, 1.925, 0, 0.8709, 1.3104, -2.2945);
		testMethod(1555, 2.0645, 1.925, 0, 0.8775, 1.2979, -2.4928);
		testMethod(1560, 2.0742, 1.925, 0, 0.8839, 1.2845, -2.6912);
		testMethod(1565, 2.0838, 1.925, 0, 0.8903, 1.27, -2.8895);
		testMethod(1570, 2.0934, 1.925, 0, 0.8966, 1.2546, -3.0879);
		testMethod(1575, 2.103, 1.925, 0, 0.9028, 1.2382, -3.2863);
		testMethod(1580, 2.1127, 1.925, 0, 0.909, 1.2207, -3.4846);
		testMethod(1585, 2.1223, 1.925, 0, 0.9151, 1.2023, -3.683);
		testMethod(1590, 2.1319, 1.925, 0, 0.921, 1.1829, -3.8814);
		testMethod(1595, 2.1415, 1.925, 0, 0.9269, 1.1625, -4.0797);
		testMethod(1600, 2.1512, 1.925, 0, 0.9326, 1.1411, -4.2781);
		testMethod(1605, 2.1608, 1.925, 0, 0.9383, 1.1187, -4.4764);
		testMethod(1610, 2.1704, 1.925, 0, 0.9438, 1.0954, -4.6748);
		testMethod(1615, 2.18, 1.925, 0, 0.9492, 1.071, -4.8732);
		testMethod(1620, 2.1897, 1.925, 0, 0.9545, 1.0456, -5.0715);
		testMethod(1625, 2.1993, 1.925, 0, 0.9597, 1.0193, -5.2699);
		testMethod(1630, 2.2089, 1.925, 0, 0.9647, 0.9919, -5.4682);
		testMethod(1635, 2.2185, 1.925, 0, 0.9696, 0.9636, -5.6666);
		testMethod(1640, 2.2282, 1.925, 0, 0.9744, 0.9343, -5.865);
		testMethod(1645, 2.2378, 1.925, 0, 0.979, 0.904, -6.0633);
		testMethod(1650, 2.2474, 1.925, 0, 0.9834, 0.8727, -6.2617);
		testMethod(1655, 2.257, 1.925, 0, 0.9877, 0.8404, -6.46);
		testMethod(1660, 2.2667, 1.925, 0, 0.9918, 0.8071, -6.6584);
		testMethod(1665, 2.2763, 1.925, 0, 0.9957, 0.7728, -6.8568);
		testMethod(1670, 2.2859, 1.925, 0, 0.9995, 0.7375, -7.0551);
		testMethod(1675, 2.2955, 1.925, 0, 1.0031, 0.7012, -7.2535);
		testMethod(1680, 2.3052, 1.925, 0, 1.0065, 0.6643, -7.3917);
		testMethod(1685, 2.3148, 1.925, 0, 1.0098, 0.6285, -7.1608);
		testMethod(1690, 2.3244, 1.925, 0, 1.0128, 0.5937, -6.9624);
		testMethod(1695, 2.334, 1.925, 0, 1.0157, 0.5598, -6.7641);
		testMethod(1700, 2.3437, 1.925, 0, 1.0184, 0.527, -6.5657);
		testMethod(1705, 2.3533, 1.925, 0, 1.021, 0.4952, -6.3674);
		testMethod(1710, 2.3629, 1.925, 0, 1.0234, 0.4643, -6.169);
		testMethod(1715, 2.3725, 1.925, 0, 1.0256, 0.4345, -5.9706);
		testMethod(1720, 2.3822, 1.925, 0, 1.0277, 0.4056, -5.7723);
		testMethod(1725, 2.3918, 1.925, 0, 1.0297, 0.3778, -5.5739);
		testMethod(1730, 2.4014, 1.925, 0, 1.0315, 0.3509, -5.3756);
		testMethod(1735, 2.411, 1.925, 0, 1.0332, 0.325, -5.1772);
		testMethod(1740, 2.4207, 1.925, 0, 1.0348, 0.3001, -4.9788);
		testMethod(1745, 2.4303, 1.925, 0, 1.0362, 0.2762, -4.7805);
		testMethod(1750, 2.4399, 1.925, 0, 1.0375, 0.2533, -4.5821);
		testMethod(1755, 2.4495, 1.925, 0, 1.0387, 0.2314, -4.3837);
		testMethod(1760, 2.4592, 1.9247, -0.0625, 1.0398, 0.2104, -4.1919);
		testMethod(1765, 2.4688, 1.924, -0.125, 1.0408, 0.1904, -3.9975);
		testMethod(1770, 2.4784, 1.9231, -0.1875, 1.0417, 0.1714, -3.8009);
		testMethod(1775, 2.488, 1.9218, -0.25, 1.0425, 0.1534, -3.6025);
		testMethod(1780, 2.4976, 1.9203, -0.3125, 1.0433, 0.1364, -3.4024);
		testMethod(1785, 2.5072, 1.9184, -0.375, 1.0439, 0.1204, -3.2012);
		testMethod(1790, 2.5168, 1.9162, -0.4375, 1.0445, 0.1054, -2.9991);
		testMethod(1795, 2.5264, 1.9137, -0.5, 1.045, 0.0914, -2.7963);
		testMethod(1800, 2.5359, 1.9109, -0.5625, 1.0454, 0.0784, -2.5933);
		testMethod(1805, 2.5455, 1.9078, -0.625, 1.0458, 0.0665, -2.3904);
		testMethod(1810, 2.555, 1.9043, -0.6875, 1.0461, 0.0555, -2.1878);
		testMethod(1815, 2.5645, 1.9006, -0.75, 1.0463, 0.0456, -1.9859);
		testMethod(1820, 2.574, 1.8965, -0.8125, 1.0465, 0.0367, -1.785);
		testMethod(1825, 2.5835, 1.8922, -0.875, 1.0467, 0.0288, -1.5854);
		testMethod(1830, 2.5929, 1.8875, -0.9375, 1.0468, 0.0218, -1.3874);
		testMethod(1835, 2.6024, 1.8825, -1, 1.0469, 0.0159, -1.1913);
		testMethod(1840, 2.6118, 1.8772, -1.0625, 1.047, 0.0109, -0.9975);
		testMethod(1845, 2.6211, 1.8715, -1.125, 1.047, 0.0069, -0.8061);
		testMethod(1850, 2.6305, 1.8656, -1.1875, 1.047, 0.0038, -0.6175);
		testMethod(1855, 2.6398, 1.8593, -1.25, 1.0471, 0.0016, -0.432);
		testMethod(1860, 2.6491, 1.8528, -1.3125, 1.0471, 0.0004, -0.2498);
		testMethod(1865, 2.6583, 1.8459, -1.375, 1.0471, 0, -0.072);
		testMethod(1870, 2.6675, 1.8387, -1.4375, 1.0471, 0, 0);
		testMethod(1875, 2.6767, 1.8312, -1.5, 1.0471, 0, 0);
		testMethod(1880, 2.6858, 1.8234, -1.5625, 1.0471, 0, 0);
		testMethod(1885, 2.6949, 1.8153, -1.625, 1.0471, 0, 0);
		testMethod(1890, 2.704, 1.8068, -1.6875, 1.0471, 0, 0);
		testMethod(1895, 2.713, 1.7981, -1.75, 1.0471, 0, 0);
		testMethod(1900, 2.722, 1.789, -1.8125, 1.0471, 0, 0);
		testMethod(1905, 2.7309, 1.7797, -1.875, 1.0471, 0, 0);
		testMethod(1910, 2.7398, 1.77, -1.9375, 1.0471, 0, 0);
		testMethod(1915, 2.7486, 1.76, -2, 1.0471, 0, 0);
		testMethod(1920, 2.7574, 1.7497, -2.0625, 1.0471, 0, 0);
		testMethod(1925, 2.7661, 1.739, -2.125, 1.0471, 0, 0);
		testMethod(1930, 2.7747, 1.7281, -2.1875, 1.0471, 0, 0);
		testMethod(1935, 2.7834, 1.7169, -2.25, 1.0471, 0, 0);
		testMethod(1940, 2.7919, 1.7053, -2.3125, 1.0471, 0, 0);
		testMethod(1945, 2.8004, 1.6934, -2.375, 1.0471, 0, 0);
		testMethod(1950, 2.8089, 1.6812, -2.4375, 1.0471, 0, 0);
		testMethod(1955, 2.8172, 1.6687, -2.5, 1.0471, 0, 0);
		testMethod(1960, 2.8255, 1.6562, -2.5, 1.0471, 0, 0);
		testMethod(1965, 2.8338, 1.6437, -2.5, 1.0471, 0, 0);
		testMethod(1970, 2.842, 1.6312, -2.5, 1.0471, 0, 0);
		testMethod(1975, 2.8501, 1.6187, -2.5, 1.0471, 0, 0);
		testMethod(1980, 2.8582, 1.6062, -2.5, 1.0471, 0, 0);
		testMethod(1985, 2.8662, 1.5937, -2.5, 1.0471, 0, 0);
		testMethod(1990, 2.8741, 1.5812, -2.5, 1.0471, 0, 0);
		testMethod(1995, 2.882, 1.5687, -2.5, 1.0471, 0, 0);
		testMethod(2000, 2.8898, 1.5562, -2.5, 1.0471, 0, 0);
		testMethod(2005, 2.8975, 1.5437, -2.5, 1.0471, 0, 0);
		testMethod(2010, 2.9052, 1.5312, -2.5, 1.0471, 0, 0);
		testMethod(2015, 2.9128, 1.5187, -2.5, 1.0471, 0, 0);
		testMethod(2020, 2.9204, 1.5062, -2.5, 1.0471, 0, 0);
		testMethod(2025, 2.9279, 1.4937, -2.5, 1.0471, 0, 0);
		testMethod(2030, 2.9353, 1.4812, -2.5, 1.0471, 0, 0);
		testMethod(2035, 2.9427, 1.4687, -2.5, 1.0471, 0, 0);
		testMethod(2040, 2.95, 1.4562, -2.5, 1.0471, 0, 0);
		testMethod(2045, 2.9573, 1.4437, -2.5, 1.0471, 0, 0);
		testMethod(2050, 2.9645, 1.4312, -2.5, 1.0471, 0, 0);
		testMethod(2055, 2.9716, 1.4187, -2.5, 1.0471, 0, 0);
		testMethod(2060, 2.9787, 1.4062, -2.5, 1.0471, 0, 0);
		testMethod(2065, 2.9857, 1.3937, -2.5, 1.0471, 0, 0);
		testMethod(2070, 2.9926, 1.3812, -2.5, 1.0471, 0, 0);
		testMethod(2075, 2.9995, 1.3687, -2.5, 1.0471, 0, 0);
		testMethod(2080, 3.0063, 1.3562, -2.5, 1.0471, 0, 0);
		testMethod(2085, 3.013, 1.3437, -2.5, 1.0471, 0, 0);
		testMethod(2090, 3.0197, 1.3312, -2.5, 1.0471, 0, 0);
		testMethod(2095, 3.0263, 1.3187, -2.5, 1.0471, 0, 0);
		testMethod(2100, 3.0329, 1.3062, -2.5, 1.0471, 0, 0);
		testMethod(2105, 3.0394, 1.2937, -2.5, 1.0471, 0, 0);
		testMethod(2110, 3.0458, 1.2812, -2.5, 1.0471, 0, 0);
		testMethod(2115, 3.0522, 1.2687, -2.5, 1.0471, 0, 0);
		testMethod(2120, 3.0585, 1.2562, -2.5, 1.0471, 0, 0);
		testMethod(2125, 3.0648, 1.2437, -2.5, 1.0471, 0, 0);
		testMethod(2130, 3.071, 1.2312, -2.5, 1.0471, 0, 0);
		testMethod(2135, 3.0771, 1.2187, -2.5, 1.0471, 0, 0);
		testMethod(2140, 3.0832, 1.2062, -2.5, 1.0471, 0, 0);
		testMethod(2145, 3.0892, 1.1937, -2.5, 1.0471, 0, 0);
		testMethod(2150, 3.0951, 1.1812, -2.5, 1.0471, 0, 0);
		testMethod(2155, 3.101, 1.1687, -2.5, 1.0471, 0, 0);
		testMethod(2160, 3.1068, 1.1562, -2.5, 1.0471, 0, 0);
		testMethod(2165, 3.1125, 1.1437, -2.5, 1.0471, 0, 0);
		testMethod(2170, 3.1182, 1.1312, -2.5, 1.0471, 0, 0);
		testMethod(2175, 3.1238, 1.1187, -2.5, 1.0471, 0, 0);
		testMethod(2180, 3.1294, 1.1062, -2.5, 1.0471, 0, 0);
		testMethod(2185, 3.1349, 1.0937, -2.5, 1.0471, 0, 0);
		testMethod(2190, 3.1403, 1.0812, -2.5, 1.0471, 0, 0);
		testMethod(2195, 3.1457, 1.0687, -2.5, 1.0471, 0, 0);
		testMethod(2200, 3.151, 1.0562, -2.5, 1.0471, 0, 0);
		testMethod(2205, 3.1563, 1.0437, -2.5, 1.0471, 0, 0);
		testMethod(2210, 3.1615, 1.0312, -2.5, 1.0471, 0, 0);
		testMethod(2215, 3.1666, 1.0187, -2.5, 1.0471, 0, 0);
		testMethod(2220, 3.1717, 1.0062, -2.5, 1.0471, 0, 0);
		testMethod(2225, 3.1767, 0.9937, -2.5, 1.0471, 0, 0);
		testMethod(2230, 3.1816, 0.9812, -2.5, 1.0471, 0, 0);
		testMethod(2235, 3.1865, 0.9687, -2.5, 1.0471, 0, 0);
		testMethod(2240, 3.1913, 0.9562, -2.5, 1.0471, 0, 0);
		testMethod(2245, 3.196, 0.9437, -2.5, 1.0471, 0, 0);
		testMethod(2250, 3.2007, 0.9312, -2.5, 1.0471, 0, 0);
		testMethod(2255, 3.2053, 0.9187, -2.5, 1.0471, 0, 0);
		testMethod(2260, 3.2099, 0.9062, -2.5, 1.0471, 0, 0);
		testMethod(2265, 3.2144, 0.8937, -2.5, 1.0471, 0, 0);
		testMethod(2270, 3.2188, 0.8812, -2.5, 1.0471, 0, 0);
		testMethod(2275, 3.2232, 0.8687, -2.5, 1.0471, 0, 0);
		testMethod(2280, 3.2275, 0.8562, -2.5, 1.0471, 0, 0);
		testMethod(2285, 3.2318, 0.8437, -2.5, 1.0471, 0, 0);
		testMethod(2290, 3.236, 0.8312, -2.5, 1.0471, 0, 0);
		testMethod(2295, 3.2401, 0.8187, -2.5, 1.0471, 0, 0);
		testMethod(2300, 3.2442, 0.8062, -2.5, 1.0471, 0, 0);
		testMethod(2305, 3.2482, 0.7937, -2.5, 1.0471, 0, 0);
		testMethod(2310, 3.2521, 0.7812, -2.5, 1.0471, 0, 0);
		testMethod(2315, 3.256, 0.7687, -2.5, 1.0471, 0, 0);
		testMethod(2320, 3.2598, 0.7562, -2.5, 1.0471, 0, 0);
		testMethod(2325, 3.2635, 0.7437, -2.5, 1.0471, 0, 0);
		testMethod(2330, 3.2672, 0.7312, -2.5, 1.0471, 0, 0);
		testMethod(2335, 3.2708, 0.7187, -2.5, 1.0471, 0, 0);
		testMethod(2340, 3.2744, 0.7062, -2.5, 1.0471, 0, 0);
		testMethod(2345, 3.2779, 0.6937, -2.5, 1.0471, 0, 0);
		testMethod(2350, 3.2813, 0.6812, -2.5, 1.0471, 0, 0);
		testMethod(2355, 3.2847, 0.6687, -2.5, 1.0471, 0, 0);
		testMethod(2360, 3.288, 0.6562, -2.5, 1.0471, 0, 0);
		testMethod(2365, 3.2913, 0.6437, -2.5, 1.0471, 0, 0);
		testMethod(2370, 3.2945, 0.6312, -2.5, 1.0471, 0, 0);
		testMethod(2375, 3.2976, 0.6187, -2.5, 1.0471, 0, 0);
		testMethod(2380, 3.3007, 0.6062, -2.5, 1.0471, 0, 0);
		testMethod(2385, 3.3037, 0.5937, -2.5, 1.0471, 0, 0);
		testMethod(2390, 3.3066, 0.5812, -2.5, 1.0471, 0, 0);
		testMethod(2395, 3.3095, 0.5687, -2.5, 1.0471, 0, 0);
		testMethod(2400, 3.3123, 0.5562, -2.5, 1.0471, 0, 0);
		testMethod(2405, 3.315, 0.5437, -2.5, 1.0471, 0, 0);
		testMethod(2410, 3.3177, 0.5312, -2.5, 1.0471, 0, 0);
		testMethod(2415, 3.3203, 0.5187, -2.5, 1.0471, 0, 0);
		testMethod(2420, 3.3229, 0.5062, -2.5, 1.0471, 0, 0);
		testMethod(2425, 3.3254, 0.4937, -2.5, 1.0471, 0, 0);
		testMethod(2430, 3.3278, 0.4812, -2.5, 1.0471, 0, 0);
		testMethod(2435, 3.3302, 0.4687, -2.5, 1.0471, 0, 0);
		testMethod(2440, 3.3325, 0.4562, -2.5, 1.0471, 0, 0);
		testMethod(2445, 3.3348, 0.4437, -2.5, 1.0471, 0, 0);
		testMethod(2450, 3.337, 0.4312, -2.5, 1.0471, 0, 0);
		testMethod(2455, 3.3391, 0.4187, -2.5, 1.0471, 0, 0);
		testMethod(2460, 3.3412, 0.4062, -2.5, 1.0471, 0, 0);
		testMethod(2465, 3.3432, 0.3937, -2.5, 1.0471, 0, 0);
		testMethod(2470, 3.3451, 0.3812, -2.5, 1.0471, 0, 0);
		testMethod(2475, 3.347, 0.3687, -2.5, 1.0471, 0, 0);
		testMethod(2480, 3.3488, 0.3562, -2.5, 1.0471, 0, 0);
		testMethod(2485, 3.3505, 0.3437, -2.5, 1.0471, 0, 0);
		testMethod(2490, 3.3522, 0.3312, -2.5, 1.0471, 0, 0);
		testMethod(2495, 3.3538, 0.3187, -2.5, 1.0471, 0, 0);
		testMethod(2500, 3.3554, 0.3062, -2.5, 1.0471, 0, 0);
		testMethod(2505, 3.3569, 0.2937, -2.5, 1.0471, 0, 0);
		testMethod(2510, 3.3583, 0.2812, -2.5, 1.0471, 0, 0);
		testMethod(2515, 3.3597, 0.2687, -2.5, 1.0471, 0, 0);
		testMethod(2520, 3.361, 0.2562, -2.5, 1.0471, 0, 0);
		testMethod(2525, 3.3623, 0.2437, -2.5, 1.0471, 0, 0);
		testMethod(2530, 3.3635, 0.2316, -2.4375, 1.0471, 0, 0);
		testMethod(2535, 3.3646, 0.2197, -2.375, 1.0471, 0, 0);
		testMethod(2540, 3.3657, 0.2081, -2.3125, 1.0471, 0, 0);
		testMethod(2545, 3.3667, 0.1969, -2.25, 1.0471, 0, 0);
		testMethod(2550, 3.3676, 0.1859, -2.1875, 1.0471, 0, 0);
		testMethod(2555, 3.3685, 0.1753, -2.125, 1.0471, 0, 0);
		testMethod(2560, 3.3694, 0.165, -2.0625, 1.0471, 0, 0);
		testMethod(2565, 3.3702, 0.155, -2, 1.0471, 0, 0);
		testMethod(2570, 3.3709, 0.1453, -1.9375, 1.0471, 0, 0);
		testMethod(2575, 3.3716, 0.1359, -1.875, 1.0471, 0, 0);
		testMethod(2580, 3.3723, 0.1269, -1.8125, 1.0471, 0, 0);
		testMethod(2585, 3.3729, 0.1181, -1.75, 1.0471, 0, 0);
		testMethod(2590, 3.3735, 0.1097, -1.6875, 1.0471, 0, 0);
		testMethod(2595, 3.374, 0.1016, -1.625, 1.0471, 0, 0);
		testMethod(2600, 3.3745, 0.0937, -1.5625, 1.0471, 0, 0);
		testMethod(2605, 3.3749, 0.0862, -1.5, 1.0471, 0, 0);
		testMethod(2610, 3.3754, 0.0791, -1.4375, 1.0471, 0, 0);
		testMethod(2615, 3.3757, 0.0722, -1.375, 1.0471, 0, 0);
		testMethod(2620, 3.3761, 0.0656, -1.3125, 1.0471, 0, 0);
		testMethod(2625, 3.3764, 0.0594, -1.25, 1.0471, 0, 0);
		testMethod(2630, 3.3767, 0.0534, -1.1875, 1.0471, 0, 0);
		testMethod(2635, 3.3769, 0.0478, -1.125, 1.0471, 0, 0);
		testMethod(2640, 3.3772, 0.0425, -1.0625, 1.0471, 0, 0);
		testMethod(2645, 3.3774, 0.0375, -1, 1.0471, 0, 0);
		testMethod(2650, 3.3775, 0.0328, -0.9375, 1.0471, 0, 0);
		testMethod(2655, 3.3777, 0.0284, -0.875, 1.0471, 0, 0);
		testMethod(2660, 3.3778, 0.0244, -0.8125, 1.0471, 0, 0);
		testMethod(2665, 3.3779, 0.0206, -0.75, 1.0471, 0, 0);
		testMethod(2670, 3.378, 0.0172, -0.6875, 1.0471, 0, 0);
		testMethod(2675, 3.3781, 0.0141, -0.625, 1.0471, 0, 0);
		testMethod(2680, 3.3782, 0.0112, -0.5625, 1.0471, 0, 0);
		testMethod(2685, 3.3782, 0.0087, -0.5, 1.0471, 0, 0);
		testMethod(2690, 3.3783, 0.0066, -0.4375, 1.0471, 0, 0);
		testMethod(2695, 3.3783, 0.0047, -0.375, 1.0471, 0, 0);
		testMethod(2700, 3.3783, 0.0031, -0.3125, 1.0471, 0, 0);
		testMethod(2705, 3.3783, 0.0019, -0.25, 1.0471, 0, 0);
		testMethod(2710, 3.3783, 0.0009, -0.1875, 1.0471, 0, 0);
		testMethod(2715, 3.3783, 0.0003, -0.125, 1.0471, 0, 0);
		testMethod(2720, 3.3783, 0, -0.0625, 1.0471, 0, 0);
		testMethod(2725, 3.3783, 0, 0, 1.0471, 0, 0);
		testMethod(2725, 3.3783, 0, 0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}