package org.usfirst.frc.team1197.robot;

public class BoilerPos2 extends TorTrajectory {

	public BoilerPos2() {
		super(-3.1384, -0.3228);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0005, -0.0991, 0, 0, 0);
		testMethod(10, -0, -0.0015, -0.1982, 0, 0, 0);
		testMethod(15, -0, -0.003, -0.2974, 0, 0, 0);
		testMethod(20, -0, -0.005, -0.3965, 0, 0, 0);
		testMethod(25, -0.0001, -0.0074, -0.4956, 0, 0, 0);
		testMethod(30, -0.0001, -0.0104, -0.5947, 0, 0, 0);
		testMethod(35, -0.0002, -0.0139, -0.6938, 0, 0, 0);
		testMethod(40, -0.0003, -0.0178, -0.793, 0, 0, 0);
		testMethod(45, -0.0004, -0.0223, -0.8921, 0, 0, 0);
		testMethod(50, -0.0005, -0.0273, -0.9912, 0, 0, 0);
		testMethod(55, -0.0006, -0.0327, -1.0903, 0, 0, 0);
		testMethod(60, -0.0008, -0.0387, -1.1894, 0, 0, 0);
		testMethod(65, -0.001, -0.0451, -1.2886, 0, 0, 0);
		testMethod(70, -0.0013, -0.052, -1.3877, 0, 0, 0);
		testMethod(75, -0.0015, -0.0595, -1.4868, 0, 0, 0);
		testMethod(80, -0.0019, -0.0674, -1.5859, 0, 0, 0);
		testMethod(85, -0.0022, -0.0758, -1.685, 0, 0, 0);
		testMethod(90, -0.0026, -0.0847, -1.7841, 0, 0, 0);
		testMethod(95, -0.0031, -0.0942, -1.8833, 0, 0, 0);
		testMethod(100, -0.0036, -0.1041, -1.9824, 0, 0, 0);
		testMethod(105, -0.0041, -0.1145, -2.0815, 0, 0, 0);
		testMethod(110, -0.0047, -0.1254, -2.1806, 0, 0, 0);
		testMethod(115, -0.0054, -0.1368, -2.2797, 0, 0, 0);
		testMethod(120, -0.0061, -0.1487, -2.3789, 0, 0, 0);
		testMethod(125, -0.0068, -0.1611, -2.478, 0, 0, 0);
		testMethod(130, -0.0077, -0.174, -2.5771, 0, 0, 0);
		testMethod(135, -0.0086, -0.1873, -2.6762, 0, 0, 0);
		testMethod(140, -0.0096, -0.2012, -2.7753, 0, 0, 0);
		testMethod(145, -0.0106, -0.2156, -2.8745, 0, 0, 0);
		testMethod(150, -0.0117, -0.2305, -2.9736, 0, 0, 0);
		testMethod(155, -0.0129, -0.2458, -3.0727, 0, 0, 0);
		testMethod(160, -0.0142, -0.2617, -3.1718, 0, 0, 0);
		testMethod(165, -0.0155, -0.278, -3.2709, 0, 0, 0);
		testMethod(170, -0.017, -0.2949, -3.3701, 0, 0, 0);
		testMethod(175, -0.0185, -0.3122, -3.4692, 0, 0, 0);
		testMethod(180, -0.0201, -0.3296, -3.4692, 0, 0, 0);
		testMethod(185, -0.0218, -0.3469, -3.4692, 0, 0, 0);
		testMethod(190, -0.0235, -0.3643, -3.4692, 0, 0, 0);
		testMethod(195, -0.0254, -0.3816, -3.4692, 0, 0, 0);
		testMethod(200, -0.0274, -0.399, -3.4692, 0, 0, 0);
		testMethod(205, -0.0294, -0.4163, -3.4692, 0, 0, 0);
		testMethod(210, -0.0315, -0.4336, -3.4692, 0, 0, 0);
		testMethod(215, -0.0337, -0.451, -3.4692, 0, 0, 0);
		testMethod(220, -0.036, -0.4683, -3.4692, 0, 0, 0);
		testMethod(225, -0.0384, -0.4857, -3.4692, 0, 0, 0);
		testMethod(230, -0.0409, -0.503, -3.4692, 0, 0, 0);
		testMethod(235, -0.0435, -0.5204, -3.4692, 0, 0, 0);
		testMethod(240, -0.0461, -0.5377, -3.4692, 0, 0, 0);
		testMethod(245, -0.0488, -0.5551, -3.4692, 0, 0, 0);
		testMethod(250, -0.0516, -0.5724, -3.4692, 0, 0, 0);
		testMethod(255, -0.0546, -0.5898, -3.4692, 0, 0, 0);
		testMethod(260, -0.0575, -0.6071, -3.4692, 0, 0, 0);
		testMethod(265, -0.0606, -0.6245, -3.4692, 0, 0, 0);
		testMethod(270, -0.0638, -0.6418, -3.4692, 0, 0, 0);
		testMethod(275, -0.067, -0.6591, -3.4692, 0, 0, 0);
		testMethod(280, -0.0704, -0.6765, -3.4692, 0, 0, 0);
		testMethod(285, -0.0738, -0.6938, -3.4692, 0, 0, 0);
		testMethod(290, -0.0773, -0.7112, -3.4692, 0, 0, 0);
		testMethod(295, -0.0809, -0.7285, -3.4692, 0, 0, 0);
		testMethod(300, -0.0846, -0.7459, -3.4692, 0, 0, 0);
		testMethod(305, -0.0884, -0.7632, -3.4692, 0, 0, 0);
		testMethod(310, -0.0922, -0.7806, -3.4692, 0, 0, 0);
		testMethod(315, -0.0962, -0.7979, -3.4692, 0, 0, 0);
		testMethod(320, -0.1002, -0.8153, -3.4692, 0, 0, 0);
		testMethod(325, -0.1043, -0.8326, -3.4692, 0, 0, 0);
		testMethod(330, -0.1085, -0.8499, -3.4692, 0, 0, 0);
		testMethod(335, -0.1128, -0.8673, -3.4692, 0, 0, 0);
		testMethod(340, -0.1172, -0.8846, -3.4692, 0, 0, 0);
		testMethod(345, -0.1217, -0.902, -3.4692, 0, 0, 0);
		testMethod(350, -0.1262, -0.9193, -3.4692, 0, 0, 0);
		testMethod(355, -0.1309, -0.9367, -3.4692, 0, 0, 0);
		testMethod(360, -0.1356, -0.954, -3.4692, 0, 0, 0);
		testMethod(365, -0.1404, -0.9714, -3.4692, 0, 0, 0);
		testMethod(370, -0.1453, -0.9887, -3.4692, 0, 0, 0);
		testMethod(375, -0.1503, -1.0061, -3.4692, 0, 0, 0);
		testMethod(380, -0.1554, -1.0234, -3.4692, 0, 0, 0);
		testMethod(385, -0.1605, -1.0408, -3.4692, 0, 0, 0);
		testMethod(390, -0.1658, -1.0581, -3.4692, 0, 0, 0);
		testMethod(395, -0.1711, -1.0754, -3.4692, 0, 0, 0);
		testMethod(400, -0.1765, -1.0928, -3.4692, 0, 0, 0);
		testMethod(405, -0.182, -1.1101, -3.4692, 0, 0, 0);
		testMethod(410, -0.1876, -1.1275, -3.4692, 0, 0, 0);
		testMethod(415, -0.1933, -1.1448, -3.4692, 0, 0, 0);
		testMethod(420, -0.1991, -1.1622, -3.4692, 0, 0, 0);
		testMethod(425, -0.2049, -1.1795, -3.4692, 0, 0, 0);
		testMethod(430, -0.2109, -1.1969, -3.4692, 0, 0, 0);
		testMethod(435, -0.2169, -1.2142, -3.4692, 0, 0, 0);
		testMethod(440, -0.223, -1.2316, -3.4692, 0, 0, 0);
		testMethod(445, -0.2292, -1.2489, -3.4692, 0, 0, 0);
		testMethod(450, -0.2355, -1.2663, -3.4692, 0, 0, 0);
		testMethod(455, -0.2419, -1.2836, -3.4692, 0, 0, 0);
		testMethod(460, -0.2483, -1.3009, -3.4692, 0, 0, 0);
		testMethod(465, -0.2549, -1.3183, -3.4692, 0, 0, 0);
		testMethod(470, -0.2615, -1.3356, -3.4692, 0, 0, 0);
		testMethod(475, -0.2683, -1.353, -3.4692, 0, 0, 0);
		testMethod(480, -0.2751, -1.3703, -3.4692, 0, 0, 0);
		testMethod(485, -0.282, -1.3877, -3.4692, 0, 0, 0);
		testMethod(490, -0.2889, -1.405, -3.4692, -0, -0.0002, -0.0317);
		testMethod(495, -0.296, -1.4224, -3.4692, -0, -0.0007, -0.1111);
		testMethod(500, -0.3032, -1.4397, -3.4692, -0, -0.0017, -0.1967);
		testMethod(505, -0.3104, -1.4571, -3.4692, -0, -0.0031, -0.2883);
		testMethod(510, -0.3177, -1.4744, -3.4692, -0, -0.0051, -0.386);
		testMethod(515, -0.3251, -1.4917, -3.4692, -0.0001, -0.0075, -0.4902);
		testMethod(520, -0.3327, -1.5091, -3.4692, -0.0001, -0.0105, -0.6009);
		testMethod(525, -0.3402, -1.5264, -3.4692, -0.0002, -0.0141, -0.7184);
		testMethod(530, -0.3479, -1.5438, -3.4692, -0.0003, -0.0183, -0.8428);
		testMethod(535, -0.3557, -1.5611, -3.4692, -0.0004, -0.0232, -0.9743);
		testMethod(540, -0.3635, -1.5785, -3.4692, -0.0005, -0.0288, -1.1131);
		testMethod(545, -0.3715, -1.5958, -3.4692, -0.0007, -0.0351, -1.2595);
		testMethod(550, -0.3795, -1.6132, -3.4692, -0.0008, -0.0421, -1.4136);
		testMethod(555, -0.3876, -1.6305, -3.4692, -0.0011, -0.05, -1.5756);
		testMethod(560, -0.3958, -1.6474, -3.3701, -0.0013, -0.0587, -1.7419);
		testMethod(565, -0.4041, -1.6637, -3.2709, -0.0017, -0.0683, -1.9144);
		testMethod(570, -0.4124, -1.6796, -3.1718, -0.002, -0.0788, -2.0926);
		testMethod(575, -0.4209, -1.6949, -3.0727, -0.0025, -0.0901, -2.2765);
		testMethod(580, -0.4294, -1.7098, -2.9736, -0.0029, -0.1025, -2.4658);
		testMethod(585, -0.438, -1.7242, -2.8745, -0.0035, -0.1158, -2.66);
		testMethod(590, -0.4466, -1.7381, -2.7753, -0.0041, -0.1301, -2.859);
		testMethod(595, -0.4553, -1.7514, -2.6762, -0.0048, -0.1454, -3.0624);
		testMethod(600, -0.4641, -1.7643, -2.5771, -0.0055, -0.1617, -3.2698);
		testMethod(605, -0.473, -1.7767, -2.478, -0.0064, -0.1791, -3.481);
		testMethod(610, -0.4819, -1.7886, -2.3789, -0.0073, -0.1976, -3.6955);
		testMethod(615, -0.4909, -1.8, -2.2797, -0.0084, -0.2172, -3.9129);
		testMethod(620, -0.4999, -1.8109, -2.1806, -0.0095, -0.2378, -4.1328);
		testMethod(625, -0.509, -1.8213, -2.0815, -0.0108, -0.2596, -4.3549);
		testMethod(630, -0.5181, -1.8312, -1.9824, -0.0121, -0.2825, -4.5786);
		testMethod(635, -0.5273, -1.8406, -1.8833, -0.0136, -0.3065, -4.8036);
		testMethod(640, -0.5365, -1.8496, -1.7841, -0.0152, -0.3317, -5.0293);
		testMethod(645, -0.5458, -1.858, -1.685, -0.0169, -0.3579, -5.2554);
		testMethod(650, -0.5551, -1.8659, -1.5859, -0.0188, -0.3853, -5.4814);
		testMethod(655, -0.5644, -1.8734, -1.4868, -0.0208, -0.4139, -5.7067);
		testMethod(660, -0.5738, -1.8803, -1.3877, -0.0229, -0.4435, -5.9309);
		testMethod(665, -0.5832, -1.8867, -1.2886, -0.0252, -0.4743, -6.1535);
		testMethod(670, -0.5927, -1.8927, -1.1894, -0.0276, -0.5062, -6.3739);
		testMethod(675, -0.6022, -1.8981, -1.0903, -0.0303, -0.5391, -6.5917);
		testMethod(680, -0.6117, -1.9031, -0.9912, -0.033, -0.5732, -6.8063);
		testMethod(685, -0.6212, -1.9076, -0.8921, -0.036, -0.6083, -7.0173);
		testMethod(690, -0.6307, -1.9115, -0.793, -0.0391, -0.6444, -7.2241);
		testMethod(695, -0.6403, -1.915, -0.6938, -0.0424, -0.6815, -7.4279);
		testMethod(700, -0.6499, -1.918, -0.5947, -0.0459, -0.7179, -7.2833);
		testMethod(705, -0.6595, -1.9204, -0.4956, -0.0496, -0.7533, -7.0798);
		testMethod(710, -0.6691, -1.9224, -0.3965, -0.0535, -0.7877, -6.8677);
		testMethod(715, -0.6787, -1.9239, -0.2974, -0.0575, -0.8209, -6.6475);
		testMethod(720, -0.6883, -1.9249, -0.1982, -0.0617, -0.853, -6.4196);
		testMethod(725, -0.698, -1.9254, -0.0991, -0.066, -0.8839, -6.1846);
		testMethod(730, -0.7076, -1.9254, -0, -0.0705, -0.9136, -5.943);
		testMethod(735, -0.7172, -1.9254, -0, -0.0752, -0.9424, -5.7445);
		testMethod(740, -0.7268, -1.9254, -0, -0.0799, -0.9701, -5.546);
		testMethod(745, -0.7365, -1.9254, -0, -0.0849, -0.9968, -5.3475);
		testMethod(750, -0.7461, -1.9254, -0, -0.0899, -1.0226, -5.149);
		testMethod(755, -0.7557, -1.9254, -0, -0.0951, -1.0473, -4.9506);
		testMethod(760, -0.7653, -1.9254, -0, -0.1004, -1.0711, -4.7521);
		testMethod(765, -0.775, -1.9254, -0, -0.1058, -1.0939, -4.5536);
		testMethod(770, -0.7846, -1.9254, -0, -0.1113, -1.1156, -4.3551);
		testMethod(775, -0.7942, -1.9254, -0, -0.1169, -1.1364, -4.1566);
		testMethod(780, -0.8039, -1.9254, -0, -0.1227, -1.1562, -3.9581);
		testMethod(785, -0.8135, -1.9254, -0, -0.1285, -1.175, -3.7596);
		testMethod(790, -0.8231, -1.9254, -0, -0.1344, -1.1928, -3.5611);
		testMethod(795, -0.8327, -1.9254, -0, -0.1404, -1.2096, -3.3626);
		testMethod(800, -0.8424, -1.9254, -0, -0.1465, -1.2254, -3.1641);
		testMethod(805, -0.852, -1.9254, -0, -0.1527, -1.2403, -2.9656);
		testMethod(810, -0.8616, -1.9254, -0, -0.1589, -1.2541, -2.7672);
		testMethod(815, -0.8712, -1.9254, -0, -0.1652, -1.2669, -2.5687);
		testMethod(820, -0.8809, -1.9254, -0, -0.1716, -1.2788, -2.3702);
		testMethod(825, -0.8905, -1.9254, -0, -0.178, -1.2897, -2.1717);
		testMethod(830, -0.9001, -1.9254, -0, -0.1845, -1.2995, -1.9732);
		testMethod(835, -0.9097, -1.9254, -0, -0.191, -1.3084, -1.7747);
		testMethod(840, -0.9194, -1.9254, -0, -0.1976, -1.3163, -1.5762);
		testMethod(845, -0.929, -1.9254, -0, -0.2042, -1.3232, -1.3777);
		testMethod(850, -0.9386, -1.9254, -0, -0.2108, -1.3291, -1.1792);
		testMethod(855, -0.9483, -1.9254, -0, -0.2174, -1.334, -0.9807);
		testMethod(860, -0.9579, -1.9254, -0, -0.2241, -1.3379, -0.7822);
		testMethod(865, -0.9675, -1.9254, -0, -0.2308, -1.3408, -0.5838);
		testMethod(870, -0.9771, -1.9254, -0, -0.2375, -1.3427, -0.3853);
		testMethod(875, -0.9868, -1.9254, -0, -0.2443, -1.3437, -0.1868);
		testMethod(880, -0.9964, -1.9254, -0, -0.251, -1.3436, 0.0121);
		testMethod(885, -1.006, -1.9254, -0, -0.2577, -1.3425, 0.211);
		testMethod(890, -1.0156, -1.9254, -0, -0.2644, -1.3405, 0.4095);
		testMethod(895, -1.0253, -1.9254, -0, -0.2711, -1.3375, 0.608);
		testMethod(900, -1.0349, -1.9254, -0, -0.2778, -1.3334, 0.8065);
		testMethod(905, -1.0445, -1.9254, -0, -0.2844, -1.3284, 1.0049);
		testMethod(910, -1.0542, -1.9254, -0, -0.291, -1.3224, 1.2034);
		testMethod(915, -1.0638, -1.9254, -0, -0.2976, -1.3154, 1.4019);
		testMethod(920, -1.0734, -1.9254, -0, -0.3042, -1.3074, 1.6004);
		testMethod(925, -1.083, -1.9254, -0, -0.3107, -1.2984, 1.7989);
		testMethod(930, -1.0927, -1.9254, -0, -0.3172, -1.2884, 1.9974);
		testMethod(935, -1.1023, -1.9254, -0, -0.3236, -1.2774, 2.1959);
		testMethod(940, -1.1119, -1.9254, -0, -0.33, -1.2654, 2.3944);
		testMethod(945, -1.1215, -1.9254, -0, -0.3362, -1.2525, 2.5929);
		testMethod(950, -1.1312, -1.9254, -0, -0.3425, -1.2385, 2.7914);
		testMethod(955, -1.1408, -1.9254, -0, -0.3486, -1.2236, 2.9899);
		testMethod(960, -1.1504, -1.9254, -0, -0.3547, -1.2076, 3.1883);
		testMethod(965, -1.1601, -1.9254, -0, -0.3607, -1.1907, 3.3868);
		testMethod(970, -1.1697, -1.9254, -0, -0.3666, -1.1728, 3.5853);
		testMethod(975, -1.1793, -1.9254, -0, -0.3724, -1.1538, 3.7838);
		testMethod(980, -1.1889, -1.9254, -0, -0.3782, -1.1339, 3.9823);
		testMethod(985, -1.1986, -1.9254, -0, -0.3838, -1.113, 4.1808);
		testMethod(990, -1.2082, -1.9254, -0, -0.3893, -1.0911, 4.3793);
		testMethod(995, -1.2178, -1.9254, -0, -0.3947, -1.0682, 4.5778);
		testMethod(1000, -1.2274, -1.9254, -0, -0.4, -1.0444, 4.7763);
		testMethod(1005, -1.2371, -1.9254, -0, -0.4051, -1.0195, 4.9748);
		testMethod(1010, -1.2467, -1.9254, -0, -0.4102, -0.9936, 5.1733);
		testMethod(1015, -1.2563, -1.9254, -0, -0.4151, -0.9668, 5.3717);
		testMethod(1020, -1.2659, -1.9254, -0, -0.4198, -0.9389, 5.5702);
		testMethod(1025, -1.2756, -1.9254, -0, -0.4244, -0.9101, 5.7687);
		testMethod(1030, -1.2852, -1.9254, -0, -0.4289, -0.8802, 5.9672);
		testMethod(1035, -1.2948, -1.9254, -0, -0.4332, -0.8494, 6.1657);
		testMethod(1040, -1.3045, -1.9254, -0, -0.4374, -0.8176, 6.3642);
		testMethod(1045, -1.3141, -1.9254, -0, -0.4414, -0.7848, 6.5627);
		testMethod(1050, -1.3237, -1.9254, -0, -0.4453, -0.751, 6.7612);
		testMethod(1055, -1.3333, -1.9254, -0, -0.4489, -0.7162, 6.9597);
		testMethod(1060, -1.343, -1.9254, -0, -0.4524, -0.6804, 7.1582);
		testMethod(1065, -1.3526, -1.9254, -0, -0.4557, -0.644, 7.2677);
		testMethod(1070, -1.3622, -1.9254, -0, -0.4589, -0.6088, 7.0516);
		testMethod(1075, -1.3718, -1.9254, -0, -0.4618, -0.5745, 6.8531);
		testMethod(1080, -1.3815, -1.9254, -0, -0.4646, -0.5412, 6.6546);
		testMethod(1085, -1.3911, -1.9254, -0, -0.4672, -0.509, 6.4561);
		testMethod(1090, -1.4007, -1.9254, -0, -0.4697, -0.4777, 6.2576);
		testMethod(1095, -1.4104, -1.9254, -0, -0.472, -0.4474, 6.0591);
		testMethod(1100, -1.42, -1.9254, -0, -0.4742, -0.4181, 5.8606);
		testMethod(1105, -1.4296, -1.9254, -0, -0.4762, -0.3898, 5.6621);
		testMethod(1110, -1.4392, -1.9254, -0, -0.4781, -0.3624, 5.4636);
		testMethod(1115, -1.4489, -1.9254, -0, -0.4798, -0.3361, 5.2651);
		testMethod(1120, -1.4585, -1.9254, -0, -0.4814, -0.3108, 5.0667);
		testMethod(1125, -1.4681, -1.9254, -0, -0.4829, -0.2864, 4.8682);
		testMethod(1130, -1.4777, -1.9254, -0, -0.4843, -0.2631, 4.6697);
		testMethod(1135, -1.4874, -1.9254, -0, -0.4856, -0.2407, 4.4712);
		testMethod(1140, -1.497, -1.9254, -0, -0.4867, -0.2194, 4.2727);
		testMethod(1145, -1.5066, -1.9254, -0, -0.4878, -0.199, 4.0742);
		testMethod(1150, -1.5162, -1.9254, -0, -0.4887, -0.1796, 3.8757);
		testMethod(1155, -1.5259, -1.9254, -0, -0.4896, -0.1612, 3.6772);
		testMethod(1160, -1.5355, -1.9254, -0, -0.4903, -0.1438, 3.4787);
		testMethod(1165, -1.5451, -1.9254, -0, -0.491, -0.1274, 3.2802);
		testMethod(1170, -1.5548, -1.9254, -0, -0.4916, -0.112, 3.0817);
		testMethod(1175, -1.5644, -1.9254, -0, -0.4921, -0.0976, 2.8833);
		testMethod(1180, -1.574, -1.9254, -0, -0.4926, -0.0842, 2.6848);
		testMethod(1185, -1.5836, -1.9254, -0, -0.493, -0.0718, 2.4863);
		testMethod(1190, -1.5933, -1.9254, -0, -0.4933, -0.0603, 2.2878);
		testMethod(1195, -1.6029, -1.9254, -0, -0.4936, -0.0499, 2.0893);
		testMethod(1200, -1.6125, -1.9254, -0, -0.4938, -0.0404, 1.8908);
		testMethod(1205, -1.6221, -1.9254, -0, -0.494, -0.032, 1.6923);
		testMethod(1210, -1.6318, -1.9254, -0, -0.4941, -0.0245, 1.4938);
		testMethod(1215, -1.6414, -1.9254, -0, -0.4942, -0.018, 1.2953);
		testMethod(1220, -1.651, -1.9254, -0, -0.4943, -0.0125, 1.0968);
		testMethod(1225, -1.6607, -1.9254, -0, -0.4943, -0.008, 0.8983);
		testMethod(1230, -1.6703, -1.9254, -0, -0.4944, -0.0045, 0.6999);
		testMethod(1235, -1.6799, -1.9254, -0, -0.4944, -0.002, 0.5014);
		testMethod(1240, -1.6895, -1.9254, -0, -0.4944, -0.0005, 0.3029);
		testMethod(1245, -1.6992, -1.9254, -0, -0.4944, -0, 0.1044);
		testMethod(1250, -1.7088, -1.9254, -0, -0.4944, 0, 0.0001);
		testMethod(1255, -1.7184, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1260, -1.728, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1265, -1.7377, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1270, -1.7473, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1275, -1.7569, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1280, -1.7666, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1285, -1.7762, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1290, -1.7858, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1295, -1.7954, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1300, -1.8051, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1305, -1.8147, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1310, -1.8243, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1315, -1.8339, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1320, -1.8436, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1325, -1.8532, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1330, -1.8628, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1335, -1.8724, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1340, -1.8821, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1345, -1.8917, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1350, -1.9013, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1355, -1.911, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1360, -1.9206, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1365, -1.9302, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1370, -1.9398, -1.9254, -0, -0.4944, 0, 0);
		testMethod(1375, -1.9495, -1.9254, -0, -0.4944, 0.0004, 0.0701);
		testMethod(1380, -1.9591, -1.9254, -0, -0.4944, 0.0017, 0.2661);
		testMethod(1385, -1.9687, -1.9254, -0, -0.4944, 0.004, 0.4646);
		testMethod(1390, -1.9783, -1.9254, -0, -0.4944, 0.0073, 0.6631);
		testMethod(1395, -1.988, -1.9254, -0, -0.4943, 0.0116, 0.8616);
		testMethod(1400, -1.9976, -1.9254, -0, -0.4942, 0.0169, 1.0601);
		testMethod(1405, -2.0072, -1.9254, -0, -0.4941, 0.0232, 1.2586);
		testMethod(1410, -2.0169, -1.9254, -0, -0.494, 0.0305, 1.457);
		testMethod(1415, -2.0265, -1.9254, -0, -0.4938, 0.0388, 1.6555);
		testMethod(1420, -2.0361, -1.9254, -0, -0.4936, 0.0481, 1.854);
		testMethod(1425, -2.0457, -1.9254, -0, -0.4933, 0.0583, 2.0525);
		testMethod(1430, -2.0554, -1.9254, -0, -0.493, 0.0696, 2.251);
		testMethod(1435, -2.065, -1.9254, -0, -0.4926, 0.0818, 2.4495);
		testMethod(1440, -2.0746, -1.9254, -0, -0.4922, 0.0951, 2.648);
		testMethod(1445, -2.0842, -1.9254, -0, -0.4917, 0.1093, 2.8465);
		testMethod(1450, -2.0939, -1.9254, -0, -0.4911, 0.1245, 3.045);
		testMethod(1455, -2.1035, -1.9254, -0, -0.4904, 0.1407, 3.2435);
		testMethod(1460, -2.1131, -1.9254, -0, -0.4897, 0.1579, 3.442);
		testMethod(1465, -2.1227, -1.9254, -0, -0.4889, 0.1761, 3.6404);
		testMethod(1470, -2.1324, -1.9254, -0, -0.4879, 0.1953, 3.8389);
		testMethod(1475, -2.142, -1.9254, -0, -0.4869, 0.2155, 4.0374);
		testMethod(1480, -2.1516, -1.9254, -0, -0.4858, 0.2367, 4.2359);
		testMethod(1485, -2.1613, -1.9254, -0, -0.4845, 0.2589, 4.4344);
		testMethod(1490, -2.1709, -1.9254, -0, -0.4832, 0.282, 4.6329);
		testMethod(1495, -2.1805, -1.9254, -0, -0.4817, 0.3062, 4.8314);
		testMethod(1500, -2.1901, -1.9254, -0, -0.4801, 0.3313, 5.0299);
		testMethod(1505, -2.1998, -1.9254, -0, -0.4784, 0.3566, 5.0475);
		testMethod(1510, -2.2094, -1.9254, -0, -0.4766, 0.3808, 4.8373);
		testMethod(1515, -2.219, -1.9254, -0, -0.4746, 0.404, 4.6388);
		testMethod(1520, -2.2286, -1.9254, -0, -0.4725, 0.4262, 4.4403);
		testMethod(1525, -2.2383, -1.9254, -0, -0.4703, 0.4474, 4.2419);
		testMethod(1530, -2.2479, -1.9254, -0, -0.4681, 0.4676, 4.0434);
		testMethod(1535, -2.2575, -1.9254, -0, -0.4657, 0.4868, 3.8449);
		testMethod(1540, -2.2672, -1.9254, -0, -0.4632, 0.5051, 3.6464);
		testMethod(1545, -2.2768, -1.9254, -0, -0.4606, 0.5223, 3.4479);
		testMethod(1550, -2.2864, -1.9254, -0, -0.458, 0.5385, 3.2494);
		testMethod(1555, -2.296, -1.9254, -0, -0.4552, 0.5538, 3.0509);
		testMethod(1560, -2.3057, -1.9254, -0, -0.4524, 0.5681, 2.8524);
		testMethod(1565, -2.3153, -1.9254, -0, -0.4496, 0.5813, 2.6539);
		testMethod(1570, -2.3249, -1.9254, -0, -0.4466, 0.5936, 2.4554);
		testMethod(1575, -2.3345, -1.9254, -0, -0.4436, 0.6049, 2.2569);
		testMethod(1580, -2.3442, -1.9254, -0, -0.4406, 0.6152, 2.0585);
		testMethod(1585, -2.3538, -1.9254, -0, -0.4375, 0.6245, 1.86);
		testMethod(1590, -2.3634, -1.9254, -0, -0.4343, 0.6328, 1.6615);
		testMethod(1595, -2.373, -1.9254, -0, -0.4311, 0.6401, 1.463);
		testMethod(1600, -2.3827, -1.9254, -0, -0.4279, 0.6464, 1.2645);
		testMethod(1605, -2.3923, -1.9254, -0, -0.4247, 0.6518, 1.066);
		testMethod(1610, -2.4019, -1.9254, -0, -0.4214, 0.6561, 0.8675);
		testMethod(1615, -2.4116, -1.9254, -0, -0.4181, 0.6594, 0.669);
		testMethod(1620, -2.4212, -1.9254, -0, -0.4148, 0.6618, 0.4705);
		testMethod(1625, -2.4308, -1.9254, -0, -0.4115, 0.6631, 0.272);
		testMethod(1630, -2.4404, -1.9254, -0, -0.4082, 0.6635, 0.0735);
		testMethod(1635, -2.4501, -1.9249, 0.0991, -0.4049, 0.6627, -0.1595);
		testMethod(1640, -2.4597, -1.9239, 0.1982, -0.4016, 0.6608, -0.3916);
		testMethod(1645, -2.4693, -1.9224, 0.2974, -0.3983, 0.6576, -0.6229);
		testMethod(1650, -2.4789, -1.9204, 0.3965, -0.395, 0.6534, -0.8526);
		testMethod(1655, -2.4885, -1.918, 0.4956, -0.3917, 0.648, -1.0804);
		testMethod(1660, -2.4981, -1.915, 0.5947, -0.3885, 0.6415, -1.3057);
		testMethod(1665, -2.5077, -1.9115, 0.6938, -0.3853, 0.6338, -1.5281);
		testMethod(1670, -2.5172, -1.9076, 0.793, -0.3822, 0.6251, -1.747);
		testMethod(1675, -2.5267, -1.9031, 0.8921, -0.3791, 0.6153, -1.962);
		testMethod(1680, -2.5362, -1.8981, 0.9912, -0.376, 0.6044, -2.1726);
		testMethod(1685, -2.5457, -1.8927, 1.0903, -0.373, 0.5925, -2.3783);
		testMethod(1690, -2.5552, -1.8867, 1.1894, -0.3701, 0.5796, -2.5787);
		testMethod(1695, -2.5646, -1.8803, 1.2886, -0.3672, 0.5658, -2.7732);
		testMethod(1700, -2.574, -1.8734, 1.3877, -0.3644, 0.5509, -2.9616);
		testMethod(1705, -2.5833, -1.8659, 1.4868, -0.3617, 0.5352, -3.1432);
		testMethod(1710, -2.5926, -1.858, 1.5859, -0.3591, 0.5186, -3.3178);
		testMethod(1715, -2.6019, -1.8496, 1.685, -0.3565, 0.5012, -3.4849);
		testMethod(1720, -2.6111, -1.8406, 1.7841, -0.3541, 0.483, -3.6441);
		testMethod(1725, -2.6203, -1.8312, 1.8833, -0.3517, 0.464, -3.7951);
		testMethod(1730, -2.6294, -1.8213, 1.9824, -0.3494, 0.4443, -3.9375);
		testMethod(1735, -2.6385, -1.8109, 2.0815, -0.3473, 0.424, -4.0709);
		testMethod(1740, -2.6475, -1.8, 2.1806, -0.3452, 0.403, -4.195);
		testMethod(1745, -2.6565, -1.7886, 2.2797, -0.3432, 0.3815, -4.3096);
		testMethod(1750, -2.6654, -1.7767, 2.3789, -0.3414, 0.3594, -4.4143);
		testMethod(1755, -2.6743, -1.7643, 2.478, -0.3397, 0.3368, -4.5088);
		testMethod(1760, -2.6831, -1.7514, 2.5771, -0.338, 0.3139, -4.593);
		testMethod(1765, -2.6918, -1.7381, 2.6762, -0.3365, 0.2906, -4.6507);
		testMethod(1770, -2.7004, -1.7242, 2.7753, -0.3351, 0.2683, -4.4629);
		testMethod(1775, -2.709, -1.7098, 2.8745, -0.3338, 0.2471, -4.2397);
		testMethod(1780, -2.7175, -1.6949, 2.9736, -0.3326, 0.227, -4.0199);
		testMethod(1785, -2.726, -1.6796, 3.0727, -0.3316, 0.208, -3.804);
		testMethod(1790, -2.7343, -1.6637, 3.1718, -0.3306, 0.19, -3.5923);
		testMethod(1795, -2.7426, -1.6474, 3.2709, -0.3297, 0.1731, -3.3849);
		testMethod(1800, -2.7508, -1.6305, 3.3701, -0.3288, 0.1572, -3.1823);
		testMethod(1805, -2.7589, -1.6132, 3.4692, -0.3281, 0.1423, -2.9848);
		testMethod(1810, -2.7669, -1.5958, 3.4692, -0.3274, 0.1283, -2.7849);
		testMethod(1815, -2.7749, -1.5785, 3.4692, -0.3268, 0.1154, -2.5933);
		testMethod(1820, -2.7827, -1.5611, 3.4692, -0.3263, 0.1033, -2.4098);
		testMethod(1825, -2.7905, -1.5438, 3.4692, -0.3258, 0.0922, -2.2343);
		testMethod(1830, -2.7982, -1.5264, 3.4692, -0.3253, 0.0818, -2.0665);
		testMethod(1835, -2.8057, -1.5091, 3.4692, -0.3249, 0.0723, -1.9063);
		testMethod(1840, -2.8132, -1.4917, 3.4692, -0.3246, 0.0635, -1.7534);
		testMethod(1845, -2.8207, -1.4744, 3.4692, -0.3243, 0.0555, -1.6076);
		testMethod(1850, -2.828, -1.4571, 3.4692, -0.324, 0.0481, -1.4688);
		testMethod(1855, -2.8352, -1.4397, 3.4692, -0.3238, 0.0415, -1.3368);
		testMethod(1860, -2.8424, -1.4224, 3.4692, -0.3236, 0.0354, -1.2114);
		testMethod(1865, -2.8495, -1.405, 3.4692, -0.3235, 0.0299, -1.0924);
		testMethod(1870, -2.8564, -1.3877, 3.4692, -0.3233, 0.025, -0.9797);
		testMethod(1875, -2.8633, -1.3703, 3.4692, -0.3232, 0.0207, -0.873);
		testMethod(1880, -2.8701, -1.353, 3.4692, -0.3231, 0.0168, -0.7722);
		testMethod(1885, -2.8769, -1.3356, 3.4692, -0.3231, 0.0134, -0.6771);
		testMethod(1890, -2.8835, -1.3183, 3.4692, -0.323, 0.0105, -0.5876);
		testMethod(1895, -2.89, -1.3009, 3.4692, -0.3229, 0.008, -0.5035);
		testMethod(1900, -2.8965, -1.2836, 3.4692, -0.3229, 0.0059, -0.4246);
		testMethod(1905, -2.9029, -1.2663, 3.4692, -0.3229, 0.0041, -0.3507);
		testMethod(1910, -2.9092, -1.2489, 3.4692, -0.3229, 0.0027, -0.2817);
		testMethod(1915, -2.9154, -1.2316, 3.4692, -0.3229, 0.0016, -0.2175);
		testMethod(1920, -2.9215, -1.2142, 3.4692, -0.3229, 0.0008, -0.1578);
		testMethod(1925, -2.9275, -1.1969, 3.4692, -0.3228, 0.0003, -0.1026);
		testMethod(1930, -2.9335, -1.1795, 3.4692, -0.3228, 0, -0.0516);
		testMethod(1935, -2.9393, -1.1622, 3.4692, -0.3228, 0, -0.0082);
		testMethod(1940, -2.9451, -1.1448, 3.4692, -0.3228, 0, 0);
		testMethod(1945, -2.9508, -1.1275, 3.4692, -0.3228, 0, 0);
		testMethod(1950, -2.9563, -1.1101, 3.4692, -0.3228, 0, 0);
		testMethod(1955, -2.9619, -1.0928, 3.4692, -0.3228, 0, 0);
		testMethod(1960, -2.9673, -1.0754, 3.4692, -0.3228, 0, 0);
		testMethod(1965, -2.9726, -1.0581, 3.4692, -0.3228, 0, 0);
		testMethod(1970, -2.9779, -1.0408, 3.4692, -0.3228, 0, 0);
		testMethod(1975, -2.983, -1.0234, 3.4692, -0.3228, 0, 0);
		testMethod(1980, -2.9881, -1.0061, 3.4692, -0.3228, 0, 0);
		testMethod(1985, -2.9931, -0.9887, 3.4692, -0.3228, 0, 0);
		testMethod(1990, -2.998, -0.9714, 3.4692, -0.3228, 0, 0);
		testMethod(1995, -3.0028, -0.954, 3.4692, -0.3228, 0, 0);
		testMethod(2000, -3.0075, -0.9367, 3.4692, -0.3228, 0, 0);
		testMethod(2005, -3.0122, -0.9193, 3.4692, -0.3228, 0, 0);
		testMethod(2010, -3.0167, -0.902, 3.4692, -0.3228, 0, 0);
		testMethod(2015, -3.0212, -0.8846, 3.4692, -0.3228, 0, 0);
		testMethod(2020, -3.0256, -0.8673, 3.4692, -0.3228, 0, 0);
		testMethod(2025, -3.0299, -0.8499, 3.4692, -0.3228, 0, 0);
		testMethod(2030, -3.0341, -0.8326, 3.4692, -0.3228, 0, 0);
		testMethod(2035, -3.0382, -0.8153, 3.4692, -0.3228, 0, 0);
		testMethod(2040, -3.0422, -0.7979, 3.4692, -0.3228, 0, 0);
		testMethod(2045, -3.0462, -0.7806, 3.4692, -0.3228, 0, 0);
		testMethod(2050, -3.05, -0.7632, 3.4692, -0.3228, 0, 0);
		testMethod(2055, -3.0538, -0.7459, 3.4692, -0.3228, 0, 0);
		testMethod(2060, -3.0575, -0.7285, 3.4692, -0.3228, 0, 0);
		testMethod(2065, -3.0611, -0.7112, 3.4692, -0.3228, 0, 0);
		testMethod(2070, -3.0646, -0.6938, 3.4692, -0.3228, 0, 0);
		testMethod(2075, -3.068, -0.6765, 3.4692, -0.3228, 0, 0);
		testMethod(2080, -3.0714, -0.6591, 3.4692, -0.3228, 0, 0);
		testMethod(2085, -3.0746, -0.6418, 3.4692, -0.3228, 0, 0);
		testMethod(2090, -3.0778, -0.6245, 3.4692, -0.3228, 0, 0);
		testMethod(2095, -3.0808, -0.6071, 3.4692, -0.3228, 0, 0);
		testMethod(2100, -3.0838, -0.5898, 3.4692, -0.3228, 0, 0);
		testMethod(2105, -3.0867, -0.5724, 3.4692, -0.3228, 0, 0);
		testMethod(2110, -3.0896, -0.5551, 3.4692, -0.3228, 0, 0);
		testMethod(2115, -3.0923, -0.5377, 3.4692, -0.3228, 0, 0);
		testMethod(2120, -3.0949, -0.5204, 3.4692, -0.3228, 0, 0);
		testMethod(2125, -3.0975, -0.503, 3.4692, -0.3228, 0, 0);
		testMethod(2130, -3.1, -0.4857, 3.4692, -0.3228, 0, 0);
		testMethod(2135, -3.1024, -0.4683, 3.4692, -0.3228, 0, 0);
		testMethod(2140, -3.1047, -0.451, 3.4692, -0.3228, 0, 0);
		testMethod(2145, -3.1069, -0.4336, 3.4692, -0.3228, 0, 0);
		testMethod(2150, -3.109, -0.4163, 3.4692, -0.3228, 0, 0);
		testMethod(2155, -3.111, -0.399, 3.4692, -0.3228, 0, 0);
		testMethod(2160, -3.113, -0.3816, 3.4692, -0.3228, 0, 0);
		testMethod(2165, -3.1148, -0.3643, 3.4692, -0.3228, 0, 0);
		testMethod(2170, -3.1166, -0.3469, 3.4692, -0.3228, 0, 0);
		testMethod(2175, -3.1183, -0.3296, 3.4692, -0.3228, 0, 0);
		testMethod(2180, -3.1199, -0.3122, 3.4692, -0.3228, 0, 0);
		testMethod(2185, -3.1214, -0.2949, 3.4692, -0.3228, 0, 0);
		testMethod(2190, -3.1229, -0.278, 3.3701, -0.3228, 0, 0);
		testMethod(2195, -3.1242, -0.2617, 3.2709, -0.3228, 0, 0);
		testMethod(2200, -3.1255, -0.2458, 3.1718, -0.3228, 0, 0);
		testMethod(2205, -3.1267, -0.2305, 3.0727, -0.3228, 0, 0);
		testMethod(2210, -3.1278, -0.2156, 2.9736, -0.3228, 0, 0);
		testMethod(2215, -3.1288, -0.2012, 2.8745, -0.3228, 0, 0);
		testMethod(2220, -3.1298, -0.1873, 2.7753, -0.3228, 0, 0);
		testMethod(2225, -3.1307, -0.174, 2.6762, -0.3228, 0, 0);
		testMethod(2230, -3.1315, -0.1611, 2.5771, -0.3228, 0, 0);
		testMethod(2235, -3.1323, -0.1487, 2.478, -0.3228, 0, 0);
		testMethod(2240, -3.133, -0.1368, 2.3789, -0.3228, 0, 0);
		testMethod(2245, -3.1337, -0.1254, 2.2797, -0.3228, 0, 0);
		testMethod(2250, -3.1343, -0.1145, 2.1806, -0.3228, 0, 0);
		testMethod(2255, -3.1348, -0.1041, 2.0815, -0.3228, 0, 0);
		testMethod(2260, -3.1353, -0.0942, 1.9824, -0.3228, 0, 0);
		testMethod(2265, -3.1358, -0.0847, 1.8833, -0.3228, 0, 0);
		testMethod(2270, -3.1362, -0.0758, 1.7841, -0.3228, 0, 0);
		testMethod(2275, -3.1365, -0.0674, 1.685, -0.3228, 0, 0);
		testMethod(2280, -3.1369, -0.0595, 1.5859, -0.3228, 0, 0);
		testMethod(2285, -3.1371, -0.052, 1.4868, -0.3228, 0, 0);
		testMethod(2290, -3.1374, -0.0451, 1.3877, -0.3228, 0, 0);
		testMethod(2295, -3.1376, -0.0387, 1.2886, -0.3228, 0, 0);
		testMethod(2300, -3.1378, -0.0327, 1.1894, -0.3228, 0, 0);
		testMethod(2305, -3.1379, -0.0273, 1.0903, -0.3228, 0, 0);
		testMethod(2310, -3.138, -0.0223, 0.9912, -0.3228, 0, 0);
		testMethod(2315, -3.1381, -0.0178, 0.8921, -0.3228, 0, 0);
		testMethod(2320, -3.1382, -0.0139, 0.793, -0.3228, 0, 0);
		testMethod(2325, -3.1383, -0.0104, 0.6938, -0.3228, 0, 0);
		testMethod(2330, -3.1383, -0.0074, 0.5947, -0.3228, 0, 0);
		testMethod(2335, -3.1384, -0.005, 0.4956, -0.3228, 0, 0);
		testMethod(2340, -3.1384, -0.003, 0.3965, -0.3228, 0, 0);
		testMethod(2345, -3.1384, -0.0015, 0.2974, -0.3228, 0, 0);
		testMethod(2350, -3.1384, -0.0005, 0.1982, -0.3228, 0, 0);
		testMethod(2355, -3.1384, -0, 0.0991, -0.3228, 0, 0);
		testMethod(2360, -3.1384, -0, -0, -0.3228, 0, 0);
		testMethod(2360, -3.1384, -0, -0, -0.3228, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}