package org.usfirst.frc.team1197.robot;

public class BoilerPos3 extends TorTrajectory {

	public BoilerPos3() {
		super(2.3867, 1.0471);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0625, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.125, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1875, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.25, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3125, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.3749, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.4374, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4999, 0, 0, 0);
		testMethod(45, 0.0002, 0.0141, 0.5624, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.6249, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6874, 0, 0, 0);
		testMethod(60, 0.0005, 0.0244, 0.7499, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8124, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.8749, 0, 0, 0);
		testMethod(75, 0.001, 0.0375, 0.9374, 0, 0, 0);
		testMethod(80, 0.0012, 0.0425, 0.9999, 0, 0, 0);
		testMethod(85, 0.0014, 0.0478, 1.0624, 0, 0, 0);
		testMethod(90, 0.0016, 0.0534, 1.1248, 0, 0, 0);
		testMethod(95, 0.0019, 0.0594, 1.1873, 0, 0, 0);
		testMethod(100, 0.0022, 0.0656, 1.2498, 0, 0, 0);
		testMethod(105, 0.0026, 0.0722, 1.3123, 0, 0, 0);
		testMethod(110, 0.003, 0.0791, 1.3748, 0, 0, 0);
		testMethod(115, 0.0034, 0.0862, 1.4373, 0, 0, 0);
		testMethod(120, 0.0038, 0.0937, 1.4998, 0, 0, 0);
		testMethod(125, 0.0043, 0.1015, 1.5623, 0, 0, 0);
		testMethod(130, 0.0048, 0.1097, 1.6248, 0, 0, 0);
		testMethod(135, 0.0054, 0.1181, 1.6873, 0, 0, 0);
		testMethod(140, 0.006, 0.1269, 1.7498, 0, 0, 0);
		testMethod(145, 0.0067, 0.1359, 1.8122, 0, 0, 0);
		testMethod(150, 0.0074, 0.1453, 1.8747, 0, 0, 0);
		testMethod(155, 0.0081, 0.155, 1.9372, 0, 0, 0);
		testMethod(160, 0.0089, 0.165, 1.9997, 0, 0, 0);
		testMethod(165, 0.0098, 0.1753, 2.0622, 0, 0, 0);
		testMethod(170, 0.0107, 0.1859, 2.1247, 0, 0, 0);
		testMethod(175, 0.0116, 0.1968, 2.1872, 0, 0, 0);
		testMethod(180, 0.0127, 0.2081, 2.2497, 0, 0, 0);
		testMethod(185, 0.0137, 0.2197, 2.3122, 0, 0, 0);
		testMethod(190, 0.0149, 0.2315, 2.3747, 0, 0, 0);
		testMethod(195, 0.016, 0.2437, 2.4372, 0, 0, 0);
		testMethod(200, 0.0173, 0.2562, 2.4997, 0, 0, 0);
		testMethod(205, 0.0186, 0.2687, 2.4997, 0, 0, 0);
		testMethod(210, 0.02, 0.2812, 2.4997, 0, 0, 0);
		testMethod(215, 0.0214, 0.2937, 2.4997, 0, 0, 0);
		testMethod(220, 0.0229, 0.3062, 2.4997, 0, 0, 0);
		testMethod(225, 0.0245, 0.3187, 2.4997, 0, 0, 0);
		testMethod(230, 0.0261, 0.3312, 2.4997, 0, 0, 0);
		testMethod(235, 0.0278, 0.3437, 2.4997, 0, 0, 0);
		testMethod(240, 0.0295, 0.3562, 2.4997, 0, 0, 0);
		testMethod(245, 0.0314, 0.3687, 2.4997, 0, 0, 0);
		testMethod(250, 0.0332, 0.3812, 2.4997, 0, 0, 0);
		testMethod(255, 0.0352, 0.3937, 2.4997, 0, 0, 0);
		testMethod(260, 0.0372, 0.4062, 2.4997, 0, 0, 0);
		testMethod(265, 0.0392, 0.4187, 2.4997, 0, 0, 0);
		testMethod(270, 0.0414, 0.4312, 2.4997, 0, 0, 0);
		testMethod(275, 0.0435, 0.4437, 2.4997, 0, 0, 0);
		testMethod(280, 0.0458, 0.4562, 2.4997, 0, 0, 0);
		testMethod(285, 0.0481, 0.4687, 2.4997, 0, 0, 0);
		testMethod(290, 0.0505, 0.4812, 2.4997, 0, 0, 0);
		testMethod(295, 0.0529, 0.4937, 2.4997, 0, 0, 0);
		testMethod(300, 0.0554, 0.5062, 2.4997, 0, 0, 0);
		testMethod(305, 0.058, 0.5187, 2.4997, 0, 0, 0);
		testMethod(310, 0.0606, 0.5312, 2.4997, 0, 0, 0);
		testMethod(315, 0.0633, 0.5437, 2.4997, 0, 0, 0);
		testMethod(320, 0.066, 0.5562, 2.4997, 0, 0, 0);
		testMethod(325, 0.0688, 0.5687, 2.4997, 0, 0, 0);
		testMethod(330, 0.0717, 0.5812, 2.4997, 0, 0, 0);
		testMethod(335, 0.0747, 0.5937, 2.4997, 0, 0, 0);
		testMethod(340, 0.0777, 0.6062, 2.4997, 0, 0, 0);
		testMethod(345, 0.0807, 0.6187, 2.4997, 0, 0, 0);
		testMethod(350, 0.0838, 0.6312, 2.4997, 0, 0, 0);
		testMethod(355, 0.087, 0.6437, 2.4997, 0, 0, 0);
		testMethod(360, 0.0903, 0.6562, 2.4997, 0, 0, 0);
		testMethod(365, 0.0936, 0.6687, 2.4997, 0, 0, 0);
		testMethod(370, 0.097, 0.6812, 2.4997, 0, 0, 0);
		testMethod(375, 0.1004, 0.6937, 2.4997, 0, 0, 0);
		testMethod(380, 0.1039, 0.7062, 2.4997, 0, 0, 0);
		testMethod(385, 0.1075, 0.7187, 2.4997, 0, 0, 0);
		testMethod(390, 0.1111, 0.7311, 2.4997, 0, 0, 0);
		testMethod(395, 0.1148, 0.7436, 2.4997, 0, 0, 0);
		testMethod(400, 0.1185, 0.7561, 2.4997, 0, 0, 0);
		testMethod(405, 0.1223, 0.7686, 2.4997, 0, 0, 0);
		testMethod(410, 0.1262, 0.7811, 2.4997, 0, 0, 0);
		testMethod(415, 0.1302, 0.7936, 2.4997, 0, 0, 0);
		testMethod(420, 0.1342, 0.8061, 2.4997, 0, 0, 0);
		testMethod(425, 0.1382, 0.8186, 2.4997, 0, 0, 0);
		testMethod(430, 0.1423, 0.8311, 2.4997, 0, 0, 0);
		testMethod(435, 0.1465, 0.8436, 2.4997, 0, 0, 0);
		testMethod(440, 0.1508, 0.8561, 2.4997, 0, 0, 0);
		testMethod(445, 0.1551, 0.8686, 2.4997, 0, 0, 0);
		testMethod(450, 0.1595, 0.8811, 2.4997, 0, 0, 0);
		testMethod(455, 0.1639, 0.8936, 2.4997, 0, 0, 0);
		testMethod(460, 0.1684, 0.9061, 2.4997, 0, 0, 0);
		testMethod(465, 0.173, 0.9186, 2.4997, 0, 0, 0);
		testMethod(470, 0.1776, 0.9311, 2.4997, 0, 0, 0);
		testMethod(475, 0.1823, 0.9436, 2.4997, 0, 0, 0);
		testMethod(480, 0.187, 0.9561, 2.4997, 0, 0, 0);
		testMethod(485, 0.1918, 0.9686, 2.4997, 0, 0, 0);
		testMethod(490, 0.1967, 0.9811, 2.4997, 0, 0, 0);
		testMethod(495, 0.2016, 0.9936, 2.4997, 0, 0, 0);
		testMethod(500, 0.2066, 1.0061, 2.4997, 0, 0, 0);
		testMethod(505, 0.2117, 1.0186, 2.4997, 0, 0, 0);
		testMethod(510, 0.2168, 1.0311, 2.4997, 0, 0, 0);
		testMethod(515, 0.222, 1.0436, 2.4997, 0, 0, 0);
		testMethod(520, 0.2273, 1.0561, 2.4997, 0, 0, 0);
		testMethod(525, 0.2326, 1.0686, 2.4997, 0, 0, 0);
		testMethod(530, 0.238, 1.0811, 2.4997, 0, 0.0001, 0.0151);
		testMethod(535, 0.2434, 1.0936, 2.4997, 0, 0.0003, 0.0513);
		testMethod(540, 0.2489, 1.1061, 2.4997, 0, 0.0008, 0.0901);
		testMethod(545, 0.2544, 1.1186, 2.4997, 0, 0.0014, 0.1314);
		testMethod(550, 0.2601, 1.1311, 2.4997, 0, 0.0023, 0.1754);
		testMethod(555, 0.2658, 1.1436, 2.4997, 0, 0.0034, 0.222);
		testMethod(560, 0.2715, 1.1561, 2.4997, 0.0001, 0.0048, 0.2714);
		testMethod(565, 0.2773, 1.1686, 2.4997, 0.0001, 0.0064, 0.3237);
		testMethod(570, 0.2832, 1.1811, 2.4997, 0.0001, 0.0083, 0.3789);
		testMethod(575, 0.2891, 1.1936, 2.4997, 0.0002, 0.0105, 0.4371);
		testMethod(580, 0.2951, 1.2061, 2.4997, 0.0002, 0.013, 0.4984);
		testMethod(585, 0.3012, 1.2186, 2.4997, 0.0003, 0.0158, 0.5628);
		testMethod(590, 0.3073, 1.2311, 2.4997, 0.0004, 0.0189, 0.6305);
		testMethod(595, 0.3135, 1.2436, 2.4997, 0.0005, 0.0224, 0.7015);
		testMethod(600, 0.3198, 1.2561, 2.4997, 0.0006, 0.0263, 0.7759);
		testMethod(605, 0.3261, 1.2686, 2.4997, 0.0007, 0.0306, 0.8537);
		testMethod(610, 0.3324, 1.2811, 2.4997, 0.0009, 0.0353, 0.9351);
		testMethod(615, 0.3389, 1.2936, 2.4997, 0.0011, 0.0404, 1.0202);
		testMethod(620, 0.3454, 1.3061, 2.4997, 0.0013, 0.0459, 1.109);
		testMethod(625, 0.3519, 1.3186, 2.4997, 0.0016, 0.0519, 1.2016);
		testMethod(630, 0.3586, 1.3311, 2.4997, 0.0018, 0.0584, 1.298);
		testMethod(635, 0.3652, 1.3436, 2.4997, 0.0021, 0.0654, 1.3985);
		testMethod(640, 0.372, 1.3561, 2.4997, 0.0025, 0.0729, 1.503);
		testMethod(645, 0.3788, 1.3686, 2.4997, 0.0029, 0.081, 1.6117);
		testMethod(650, 0.3857, 1.3811, 2.4997, 0.0033, 0.0896, 1.7246);
		testMethod(655, 0.3926, 1.3936, 2.4997, 0.0038, 0.0988, 1.8419);
		testMethod(660, 0.3996, 1.4061, 2.4997, 0.0043, 0.1086, 1.9635);
		testMethod(665, 0.4067, 1.4186, 2.4997, 0.0049, 0.1191, 2.0897);
		testMethod(670, 0.4138, 1.4311, 2.4997, 0.0055, 0.1302, 2.2205);
		testMethod(675, 0.421, 1.4435, 2.4997, 0.0062, 0.142, 2.356);
		testMethod(680, 0.4282, 1.456, 2.4997, 0.0069, 0.1544, 2.4963);
		testMethod(685, 0.4355, 1.4685, 2.4997, 0.0077, 0.1677, 2.6414);
		testMethod(690, 0.4429, 1.481, 2.4997, 0.0086, 0.1816, 2.7916);
		testMethod(695, 0.4504, 1.4935, 2.4997, 0.0095, 0.1963, 2.9468);
		testMethod(700, 0.4579, 1.506, 2.4997, 0.0105, 0.2119, 3.1071);
		testMethod(705, 0.4654, 1.5185, 2.4997, 0.0116, 0.2282, 3.2728);
		testMethod(710, 0.473, 1.531, 2.4997, 0.0128, 0.2455, 3.4438);
		testMethod(715, 0.4807, 1.5435, 2.4997, 0.0141, 0.2636, 3.6203);
		testMethod(720, 0.4885, 1.556, 2.4997, 0.0155, 0.2826, 3.8023);
		testMethod(725, 0.4963, 1.5685, 2.4997, 0.0169, 0.3025, 3.99);
		testMethod(730, 0.5042, 1.581, 2.4997, 0.0185, 0.3234, 4.1835);
		testMethod(735, 0.5121, 1.5935, 2.4997, 0.0202, 0.3454, 4.3828);
		testMethod(740, 0.5201, 1.606, 2.4997, 0.022, 0.3683, 4.5881);
		testMethod(745, 0.5282, 1.6185, 2.4997, 0.0239, 0.3923, 4.7995);
		testMethod(750, 0.5363, 1.631, 2.4997, 0.0259, 0.4174, 5.017);
		testMethod(755, 0.5445, 1.6435, 2.4997, 0.028, 0.4436, 5.2409);
		testMethod(760, 0.5527, 1.656, 2.4997, 0.0303, 0.4709, 5.4711);
		testMethod(765, 0.561, 1.6685, 2.4997, 0.0327, 0.4995, 5.7079);
		testMethod(770, 0.5694, 1.681, 2.4997, 0.0353, 0.5292, 5.9512);
		testMethod(775, 0.5778, 1.6932, 2.4372, 0.038, 0.5601, 6.1801);
		testMethod(780, 0.5863, 1.7051, 2.3747, 0.0409, 0.5922, 6.4116);
		testMethod(785, 0.5949, 1.7166, 2.3122, 0.044, 0.6254, 6.6455);
		testMethod(790, 0.6035, 1.7279, 2.2497, 0.0472, 0.6598, 6.8816);
		testMethod(795, 0.6122, 1.7388, 2.1872, 0.0506, 0.6954, 7.1197);
		testMethod(800, 0.6209, 1.7494, 2.1247, 0.0541, 0.7322, 7.3595);
		testMethod(805, 0.6297, 1.7598, 2.0622, 0.0579, 0.7702, 7.6007);
		testMethod(810, 0.6385, 1.7698, 1.9997, 0.0618, 0.8094, 7.8432);
		testMethod(815, 0.6474, 1.7794, 1.9372, 0.066, 0.8499, 8.0866);
		testMethod(820, 0.6563, 1.7888, 1.8747, 0.0703, 0.8915, 8.3307);
		testMethod(825, 0.6652, 1.7979, 1.8122, 0.0749, 0.9344, 8.5751);
		testMethod(830, 0.6743, 1.8066, 1.7498, 0.0797, 0.9783, 8.7781);
		testMethod(835, 0.6833, 1.8151, 1.6873, 0.0847, 1.0226, 8.853);
		testMethod(840, 0.6924, 1.8232, 1.6248, 0.0899, 1.0672, 8.9267);
		testMethod(845, 0.7015, 1.831, 1.5623, 0.0954, 1.1122, 8.9953);
		testMethod(850, 0.7107, 1.8385, 1.4998, 0.101, 1.1577, 9.1018);
		testMethod(855, 0.7199, 1.8457, 1.4373, 0.1069, 1.2027, 8.9987);
		testMethod(860, 0.7292, 1.8526, 1.3748, 0.1131, 1.247, 8.8748);
		testMethod(865, 0.7385, 1.8591, 1.3123, 0.1194, 1.2908, 8.742);
		testMethod(870, 0.7478, 1.8654, 1.2498, 0.126, 1.3338, 8.6004);
		testMethod(875, 0.7571, 1.8713, 1.1873, 0.1327, 1.376, 8.4502);
		testMethod(880, 0.7665, 1.8769, 1.1248, 0.1397, 1.4175, 8.2918);
		testMethod(885, 0.7759, 1.8822, 1.0624, 0.1469, 1.4581, 8.1253);
		testMethod(890, 0.7853, 1.8872, 0.9999, 0.1543, 1.4979, 7.9509);
		testMethod(895, 0.7947, 1.8919, 0.9374, 0.1619, 1.5367, 7.7691);
		testMethod(900, 0.8042, 1.8963, 0.8749, 0.1697, 1.5746, 7.5799);
		testMethod(905, 0.8137, 1.9004, 0.8124, 0.1776, 1.6115, 7.3836);
		testMethod(910, 0.8232, 1.9041, 0.7499, 0.1858, 1.6474, 7.1806);
		testMethod(915, 0.8327, 1.9075, 0.6874, 0.1941, 1.6823, 6.9712);
		testMethod(920, 0.8423, 1.9107, 0.6249, 0.2026, 1.7161, 6.7555);
		testMethod(925, 0.8519, 1.9135, 0.5624, 0.2113, 1.7487, 6.5339);
		testMethod(930, 0.8614, 1.916, 0.4999, 0.2201, 1.7803, 6.3067);
		testMethod(935, 0.871, 1.9182, 0.4374, 0.2291, 1.8106, 6.0742);
		testMethod(940, 0.8806, 1.92, 0.3749, 0.2382, 1.8398, 5.8367);
		testMethod(945, 0.8902, 1.9216, 0.3125, 0.2475, 1.8678, 5.5945);
		testMethod(950, 0.8998, 1.9229, 0.25, 0.2569, 1.8945, 5.3478);
		testMethod(955, 0.9094, 1.9238, 0.1875, 0.2664, 1.92, 5.0971);
		testMethod(960, 0.9191, 1.9244, 0.125, 0.2761, 1.9442, 4.8427);
		testMethod(965, 0.9287, 1.9247, 0.0625, 0.2858, 1.9671, 4.5848);
		testMethod(970, 0.9383, 1.9247, 0, 0.2957, 1.9888, 4.3237);
		testMethod(975, 0.9479, 1.9247, 0, 0.3057, 2.0094, 4.1254);
		testMethod(980, 0.9576, 1.9247, 0, 0.3158, 2.029, 3.9271);
		testMethod(985, 0.9672, 1.9247, 0, 0.326, 2.0477, 3.7289);
		testMethod(990, 0.9768, 1.9247, 0, 0.3363, 2.0653, 3.5306);
		testMethod(995, 0.9864, 1.9247, 0, 0.3467, 2.082, 3.3323);
		testMethod(1000, 0.996, 1.9247, 0, 0.3571, 2.0977, 3.134);
		testMethod(1005, 1.0057, 1.9247, 0, 0.3676, 2.1123, 2.9357);
		testMethod(1010, 1.0153, 1.9247, 0, 0.3782, 2.126, 2.7374);
		testMethod(1015, 1.0249, 1.9247, 0, 0.3889, 2.1387, 2.5391);
		testMethod(1020, 1.0345, 1.9247, 0, 0.3996, 2.1504, 2.3409);
		testMethod(1025, 1.0442, 1.9247, 0, 0.4104, 2.1611, 2.1426);
		testMethod(1030, 1.0538, 1.9247, 0, 0.4212, 2.1709, 1.9443);
		testMethod(1035, 1.0634, 1.9247, 0, 0.4321, 2.1796, 1.746);
		testMethod(1040, 1.073, 1.9247, 0, 0.443, 2.1873, 1.5477);
		testMethod(1045, 1.0827, 1.9247, 0, 0.454, 2.1941, 1.3494);
		testMethod(1050, 1.0923, 1.9247, 0, 0.465, 2.1998, 1.1511);
		testMethod(1055, 1.1019, 1.9247, 0, 0.476, 2.2046, 0.9528);
		testMethod(1060, 1.1115, 1.9247, 0, 0.487, 2.2084, 0.7546);
		testMethod(1065, 1.1212, 1.9247, 0, 0.4981, 2.2111, 0.5563);
		testMethod(1070, 1.1308, 1.9247, 0, 0.5091, 2.2129, 0.358);
		testMethod(1075, 1.1404, 1.9247, 0, 0.5202, 2.2137, 0.1597);
		testMethod(1080, 1.15, 1.9247, 0, 0.5312, 2.2135, -0.0387);
		testMethod(1085, 1.1597, 1.9247, 0, 0.5423, 2.2124, -0.2371);
		testMethod(1090, 1.1693, 1.9247, 0, 0.5534, 2.2102, -0.4353);
		testMethod(1095, 1.1789, 1.9247, 0, 0.5644, 2.207, -0.6336);
		testMethod(1100, 1.1885, 1.9247, 0, 0.5754, 2.2028, -0.8319);
		testMethod(1105, 1.1981, 1.9247, 0, 0.5864, 2.1977, -1.0302);
		testMethod(1110, 1.2078, 1.9247, 0, 0.5974, 2.1916, -1.2285);
		testMethod(1115, 1.2174, 1.9247, 0, 0.6084, 2.1844, -1.4268);
		testMethod(1120, 1.227, 1.9247, 0, 0.6193, 2.1763, -1.6251);
		testMethod(1125, 1.2366, 1.9247, 0, 0.6301, 2.1672, -1.8233);
		testMethod(1130, 1.2463, 1.9247, 0, 0.6409, 2.1571, -2.0216);
		testMethod(1135, 1.2559, 1.9247, 0, 0.6517, 2.146, -2.2199);
		testMethod(1140, 1.2655, 1.9247, 0, 0.6624, 2.1339, -2.4182);
		testMethod(1145, 1.2751, 1.9247, 0, 0.673, 2.1208, -2.6165);
		testMethod(1150, 1.2848, 1.9247, 0, 0.6836, 2.1067, -2.8148);
		testMethod(1155, 1.2944, 1.9247, 0, 0.6941, 2.0917, -3.0131);
		testMethod(1160, 1.304, 1.9247, 0, 0.7045, 2.0756, -3.2114);
		testMethod(1165, 1.3136, 1.9247, 0, 0.7148, 2.0586, -3.4096);
		testMethod(1170, 1.3233, 1.9247, 0, 0.7251, 2.0405, -3.6079);
		testMethod(1175, 1.3329, 1.9247, 0, 0.7352, 2.0215, -3.8062);
		testMethod(1180, 1.3425, 1.9247, 0, 0.7453, 2.0015, -4.0045);
		testMethod(1185, 1.3521, 1.9247, 0, 0.7553, 1.9804, -4.2028);
		testMethod(1190, 1.3617, 1.9247, 0, 0.7651, 1.9584, -4.4011);
		testMethod(1195, 1.3714, 1.9247, 0, 0.7748, 1.9354, -4.5994);
		testMethod(1200, 1.381, 1.9247, 0, 0.7845, 1.9115, -4.7976);
		testMethod(1205, 1.3906, 1.9247, 0, 0.794, 1.8865, -4.9959);
		testMethod(1210, 1.4002, 1.9247, 0, 0.8033, 1.8605, -5.1942);
		testMethod(1215, 1.4099, 1.9247, 0, 0.8126, 1.8335, -5.3925);
		testMethod(1220, 1.4195, 1.9247, 0, 0.8217, 1.8056, -5.5908);
		testMethod(1225, 1.4291, 1.9247, 0, 0.8306, 1.7766, -5.7891);
		testMethod(1230, 1.4387, 1.9247, 0, 0.8394, 1.7467, -5.9874);
		testMethod(1235, 1.4484, 1.9247, 0, 0.8481, 1.7158, -6.1856);
		testMethod(1240, 1.458, 1.9247, 0, 0.8566, 1.6839, -6.3839);
		testMethod(1245, 1.4676, 1.9244, -0.0625, 0.8649, 1.6507, -6.6353);
		testMethod(1250, 1.4772, 1.9238, -0.125, 0.8731, 1.6163, -6.8822);
		testMethod(1255, 1.4868, 1.9229, -0.1875, 0.8811, 1.5806, -7.1243);
		testMethod(1260, 1.4965, 1.9216, -0.25, 0.8889, 1.5438, -7.3612);
		testMethod(1265, 1.5061, 1.92, -0.3125, 0.8965, 1.5059, -7.5928);
		testMethod(1270, 1.5157, 1.9182, -0.3749, 0.9039, 1.4668, -7.8187);
		testMethod(1275, 1.5252, 1.916, -0.4374, 0.9112, 1.4266, -8.0385);
		testMethod(1280, 1.5348, 1.9135, -0.4999, 0.9182, 1.3853, -8.252);
		testMethod(1285, 1.5444, 1.9107, -0.5624, 0.925, 1.343, -8.4588);
		testMethod(1290, 1.5539, 1.9075, -0.6249, 0.9316, 1.2997, -8.6587);
		testMethod(1295, 1.5635, 1.9041, -0.6874, 0.938, 1.2555, -8.8514);
		testMethod(1300, 1.573, 1.9004, -0.7499, 0.9442, 1.2103, -9.0366);
		testMethod(1305, 1.5825, 1.8963, -0.8124, 0.9501, 1.1643, -9.1979);
		testMethod(1310, 1.5919, 1.8919, -0.8749, 0.9558, 1.1183, -9.1932);
		testMethod(1315, 1.6014, 1.8872, -0.9374, 0.9613, 1.0725, -9.168);
		testMethod(1320, 1.6108, 1.8822, -0.9999, 0.9666, 1.0268, -9.1373);
		testMethod(1325, 1.6202, 1.8769, -1.0624, 0.9716, 0.9811, -9.1472);
		testMethod(1330, 1.6296, 1.8713, -1.1248, 0.9764, 0.9363, -8.9531);
		testMethod(1335, 1.6389, 1.8654, -1.1873, 0.9809, 0.8927, -8.7256);
		testMethod(1340, 1.6482, 1.8591, -1.2498, 0.9853, 0.8502, -8.4964);
		testMethod(1345, 1.6575, 1.8526, -1.3123, 0.9894, 0.8089, -8.2657);
		testMethod(1350, 1.6667, 1.8457, -1.3748, 0.9934, 0.7687, -8.0339);
		testMethod(1355, 1.676, 1.8385, -1.4373, 0.9971, 0.7297, -7.8014);
		testMethod(1360, 1.6851, 1.831, -1.4998, 1.0007, 0.6919, -7.5683);
		testMethod(1365, 1.6943, 1.8232, -1.5623, 1.0041, 0.6552, -7.335);
		testMethod(1370, 1.7034, 1.8151, -1.6248, 1.0072, 0.6197, -7.1019);
		testMethod(1375, 1.7124, 1.8066, -1.6873, 1.0103, 0.5853, -6.8691);
		testMethod(1380, 1.7214, 1.7979, -1.7498, 1.0131, 0.5521, -6.637);
		testMethod(1385, 1.7304, 1.7888, -1.8122, 1.0158, 0.5201, -6.4058);
		testMethod(1390, 1.7393, 1.7794, -1.8747, 1.0183, 0.4892, -6.1759);
		testMethod(1395, 1.7482, 1.7698, -1.9372, 1.0207, 0.4595, -5.9474);
		testMethod(1400, 1.757, 1.7598, -1.9997, 1.0229, 0.4309, -5.7207);
		testMethod(1405, 1.7658, 1.7494, -2.0622, 1.025, 0.4034, -5.496);
		testMethod(1410, 1.7745, 1.7388, -2.1247, 1.0269, 0.3771, -5.2736);
		testMethod(1415, 1.7832, 1.7279, -2.1872, 1.0288, 0.3518, -5.0536);
		testMethod(1420, 1.7918, 1.7166, -2.2497, 1.0305, 0.3276, -4.8364);
		testMethod(1425, 1.8003, 1.7051, -2.3122, 1.032, 0.3045, -4.6221);
		testMethod(1430, 1.8088, 1.6932, -2.3747, 1.0335, 0.2824, -4.4109);
		testMethod(1435, 1.8173, 1.681, -2.4372, 1.0349, 0.2614, -4.2032);
		testMethod(1440, 1.8256, 1.6685, -2.4997, 1.0361, 0.2414, -3.9989);
		testMethod(1445, 1.8339, 1.656, -2.4997, 1.0373, 0.2225, -3.7904);
		testMethod(1450, 1.8422, 1.6435, -2.4997, 1.0383, 0.2045, -3.5882);
		testMethod(1455, 1.8504, 1.631, -2.4997, 1.0393, 0.1876, -3.3922);
		testMethod(1460, 1.8585, 1.6185, -2.4997, 1.0402, 0.1716, -3.2024);
		testMethod(1465, 1.8666, 1.606, -2.4997, 1.041, 0.1565, -3.0186);
		testMethod(1470, 1.8746, 1.5935, -2.4997, 1.0418, 0.1423, -2.8407);
		testMethod(1475, 1.8825, 1.581, -2.4997, 1.0425, 0.1289, -2.6686);
		testMethod(1480, 1.8904, 1.5685, -2.4997, 1.0431, 0.1164, -2.5022);
		testMethod(1485, 1.8982, 1.556, -2.4997, 1.0436, 0.1047, -2.3415);
		testMethod(1490, 1.9059, 1.5435, -2.4997, 1.0441, 0.0938, -2.1862);
		testMethod(1495, 1.9136, 1.531, -2.4997, 1.0446, 0.0836, -2.0364);
		testMethod(1500, 1.9212, 1.5185, -2.4997, 1.045, 0.0741, -1.8918);
		testMethod(1505, 1.9288, 1.506, -2.4997, 1.0453, 0.0654, -1.7525);
		testMethod(1510, 1.9363, 1.4935, -2.4997, 1.0456, 0.0573, -1.6182);
		testMethod(1515, 1.9437, 1.481, -2.4997, 1.0459, 0.0498, -1.489);
		testMethod(1520, 1.9511, 1.4685, -2.4997, 1.0461, 0.043, -1.3647);
		testMethod(1525, 1.9584, 1.456, -2.4997, 1.0463, 0.0368, -1.2452);
		testMethod(1530, 1.9657, 1.4435, -2.4997, 1.0465, 0.0311, -1.1304);
		testMethod(1535, 1.9729, 1.4311, -2.4997, 1.0466, 0.026, -1.0202);
		testMethod(1540, 1.98, 1.4186, -2.4997, 1.0467, 0.0215, -0.9146);
		testMethod(1545, 1.9871, 1.4061, -2.4997, 1.0468, 0.0174, -0.8134);
		testMethod(1550, 1.9941, 1.3936, -2.4997, 1.0469, 0.0138, -0.7165);
		testMethod(1555, 2.001, 1.3811, -2.4997, 1.047, 0.0107, -0.6239);
		testMethod(1560, 2.0079, 1.3686, -2.4997, 1.047, 0.008, -0.5354);
		testMethod(1565, 2.0147, 1.3561, -2.4997, 1.0471, 0.0058, -0.4511);
		testMethod(1570, 2.0214, 1.3436, -2.4997, 1.0471, 0.0039, -0.3707);
		testMethod(1575, 2.0281, 1.3311, -2.4997, 1.0471, 0.0024, -0.2941);
		testMethod(1580, 2.0347, 1.3186, -2.4997, 1.0471, 0.0013, -0.2214);
		testMethod(1585, 2.0413, 1.3061, -2.4997, 1.0471, 0.0006, -0.1525);
		testMethod(1590, 2.0478, 1.2936, -2.4997, 1.0471, 0.0001, -0.0871);
		testMethod(1595, 2.0542, 1.2811, -2.4997, 1.0471, 0, -0.0255);
		testMethod(1600, 2.0606, 1.2686, -2.4997, 1.0471, 0, 0);
		testMethod(1605, 2.0669, 1.2561, -2.4997, 1.0471, 0, 0);
		testMethod(1610, 2.0732, 1.2436, -2.4997, 1.0471, 0, 0);
		testMethod(1615, 2.0794, 1.2311, -2.4997, 1.0471, 0, 0);
		testMethod(1620, 2.0855, 1.2186, -2.4997, 1.0471, 0, 0);
		testMethod(1625, 2.0915, 1.2061, -2.4997, 1.0471, 0, 0);
		testMethod(1630, 2.0975, 1.1936, -2.4997, 1.0471, 0, 0);
		testMethod(1635, 2.1035, 1.1811, -2.4997, 1.0471, 0, 0);
		testMethod(1640, 2.1093, 1.1686, -2.4997, 1.0471, 0, 0);
		testMethod(1645, 2.1152, 1.1561, -2.4997, 1.0471, 0, 0);
		testMethod(1650, 2.1209, 1.1436, -2.4997, 1.0471, 0, 0);
		testMethod(1655, 2.1266, 1.1311, -2.4997, 1.0471, 0, 0);
		testMethod(1660, 2.1322, 1.1186, -2.4997, 1.0471, 0, 0);
		testMethod(1665, 2.1378, 1.1061, -2.4997, 1.0471, 0, 0);
		testMethod(1670, 2.1433, 1.0936, -2.4997, 1.0471, 0, 0);
		testMethod(1675, 2.1487, 1.0811, -2.4997, 1.0471, 0, 0);
		testMethod(1680, 2.1541, 1.0686, -2.4997, 1.0471, 0, 0);
		testMethod(1685, 2.1594, 1.0561, -2.4997, 1.0471, 0, 0);
		testMethod(1690, 2.1647, 1.0436, -2.4997, 1.0471, 0, 0);
		testMethod(1695, 2.1698, 1.0311, -2.4997, 1.0471, 0, 0);
		testMethod(1700, 2.175, 1.0186, -2.4997, 1.0471, 0, 0);
		testMethod(1705, 2.18, 1.0061, -2.4997, 1.0471, 0, 0);
		testMethod(1710, 2.185, 0.9936, -2.4997, 1.0471, 0, 0);
		testMethod(1715, 2.19, 0.9811, -2.4997, 1.0471, 0, 0);
		testMethod(1720, 2.1948, 0.9686, -2.4997, 1.0471, 0, 0);
		testMethod(1725, 2.1996, 0.9561, -2.4997, 1.0471, 0, 0);
		testMethod(1730, 2.2044, 0.9436, -2.4997, 1.0471, 0, 0);
		testMethod(1735, 2.2091, 0.9311, -2.4997, 1.0471, 0, 0);
		testMethod(1740, 2.2137, 0.9186, -2.4997, 1.0471, 0, 0);
		testMethod(1745, 2.2183, 0.9061, -2.4997, 1.0471, 0, 0);
		testMethod(1750, 2.2228, 0.8936, -2.4997, 1.0471, 0, 0);
		testMethod(1755, 2.2272, 0.8811, -2.4997, 1.0471, 0, 0);
		testMethod(1760, 2.2316, 0.8686, -2.4997, 1.0471, 0, 0);
		testMethod(1765, 2.2359, 0.8561, -2.4997, 1.0471, 0, 0);
		testMethod(1770, 2.2401, 0.8436, -2.4997, 1.0471, 0, 0);
		testMethod(1775, 2.2443, 0.8311, -2.4997, 1.0471, 0, 0);
		testMethod(1780, 2.2485, 0.8186, -2.4997, 1.0471, 0, 0);
		testMethod(1785, 2.2525, 0.8061, -2.4997, 1.0471, 0, 0);
		testMethod(1790, 2.2565, 0.7936, -2.4997, 1.0471, 0, 0);
		testMethod(1795, 2.2605, 0.7811, -2.4997, 1.0471, 0, 0);
		testMethod(1800, 2.2643, 0.7686, -2.4997, 1.0471, 0, 0);
		testMethod(1805, 2.2681, 0.7561, -2.4997, 1.0471, 0, 0);
		testMethod(1810, 2.2719, 0.7436, -2.4997, 1.0471, 0, 0);
		testMethod(1815, 2.2756, 0.7311, -2.4997, 1.0471, 0, 0);
		testMethod(1820, 2.2792, 0.7187, -2.4997, 1.0471, 0, 0);
		testMethod(1825, 2.2828, 0.7062, -2.4997, 1.0471, 0, 0);
		testMethod(1830, 2.2863, 0.6937, -2.4997, 1.0471, 0, 0);
		testMethod(1835, 2.2897, 0.6812, -2.4997, 1.0471, 0, 0);
		testMethod(1840, 2.2931, 0.6687, -2.4997, 1.0471, 0, 0);
		testMethod(1845, 2.2964, 0.6562, -2.4997, 1.0471, 0, 0);
		testMethod(1850, 2.2996, 0.6437, -2.4997, 1.0471, 0, 0);
		testMethod(1855, 2.3028, 0.6312, -2.4997, 1.0471, 0, 0);
		testMethod(1860, 2.3059, 0.6187, -2.4997, 1.0471, 0, 0);
		testMethod(1865, 2.309, 0.6062, -2.4997, 1.0471, 0, 0);
		testMethod(1870, 2.312, 0.5937, -2.4997, 1.0471, 0, 0);
		testMethod(1875, 2.3149, 0.5812, -2.4997, 1.0471, 0, 0);
		testMethod(1880, 2.3178, 0.5687, -2.4997, 1.0471, 0, 0);
		testMethod(1885, 2.3206, 0.5562, -2.4997, 1.0471, 0, 0);
		testMethod(1890, 2.3234, 0.5437, -2.4997, 1.0471, 0, 0);
		testMethod(1895, 2.3261, 0.5312, -2.4997, 1.0471, 0, 0);
		testMethod(1900, 2.3287, 0.5187, -2.4997, 1.0471, 0, 0);
		testMethod(1905, 2.3313, 0.5062, -2.4997, 1.0471, 0, 0);
		testMethod(1910, 2.3338, 0.4937, -2.4997, 1.0471, 0, 0);
		testMethod(1915, 2.3362, 0.4812, -2.4997, 1.0471, 0, 0);
		testMethod(1920, 2.3386, 0.4687, -2.4997, 1.0471, 0, 0);
		testMethod(1925, 2.3409, 0.4562, -2.4997, 1.0471, 0, 0);
		testMethod(1930, 2.3431, 0.4437, -2.4997, 1.0471, 0, 0);
		testMethod(1935, 2.3453, 0.4312, -2.4997, 1.0471, 0, 0);
		testMethod(1940, 2.3474, 0.4187, -2.4997, 1.0471, 0, 0);
		testMethod(1945, 2.3495, 0.4062, -2.4997, 1.0471, 0, 0);
		testMethod(1950, 2.3515, 0.3937, -2.4997, 1.0471, 0, 0);
		testMethod(1955, 2.3534, 0.3812, -2.4997, 1.0471, 0, 0);
		testMethod(1960, 2.3553, 0.3687, -2.4997, 1.0471, 0, 0);
		testMethod(1965, 2.3571, 0.3562, -2.4997, 1.0471, 0, 0);
		testMethod(1970, 2.3589, 0.3437, -2.4997, 1.0471, 0, 0);
		testMethod(1975, 2.3606, 0.3312, -2.4997, 1.0471, 0, 0);
		testMethod(1980, 2.3622, 0.3187, -2.4997, 1.0471, 0, 0);
		testMethod(1985, 2.3638, 0.3062, -2.4997, 1.0471, 0, 0);
		testMethod(1990, 2.3653, 0.2937, -2.4997, 1.0471, 0, 0);
		testMethod(1995, 2.3667, 0.2812, -2.4997, 1.0471, 0, 0);
		testMethod(2000, 2.3681, 0.2687, -2.4997, 1.0471, 0, 0);
		testMethod(2005, 2.3694, 0.2562, -2.4997, 1.0471, 0, 0);
		testMethod(2010, 2.3706, 0.2437, -2.4997, 1.0471, 0, 0);
		testMethod(2015, 2.3718, 0.2315, -2.4372, 1.0471, 0, 0);
		testMethod(2020, 2.3729, 0.2197, -2.3747, 1.0471, 0, 0);
		testMethod(2025, 2.374, 0.2081, -2.3122, 1.0471, 0, 0);
		testMethod(2030, 2.375, 0.1968, -2.2497, 1.0471, 0, 0);
		testMethod(2035, 2.376, 0.1859, -2.1872, 1.0471, 0, 0);
		testMethod(2040, 2.3769, 0.1753, -2.1247, 1.0471, 0, 0);
		testMethod(2045, 2.3777, 0.165, -2.0622, 1.0471, 0, 0);
		testMethod(2050, 2.3785, 0.155, -1.9997, 1.0471, 0, 0);
		testMethod(2055, 2.3793, 0.1453, -1.9372, 1.0471, 0, 0);
		testMethod(2060, 2.38, 0.1359, -1.8747, 1.0471, 0, 0);
		testMethod(2065, 2.3806, 0.1269, -1.8122, 1.0471, 0, 0);
		testMethod(2070, 2.3813, 0.1181, -1.7498, 1.0471, 0, 0);
		testMethod(2075, 2.3818, 0.1097, -1.6873, 1.0471, 0, 0);
		testMethod(2080, 2.3824, 0.1015, -1.6248, 1.0471, 0, 0);
		testMethod(2085, 2.3828, 0.0937, -1.5623, 1.0471, 0, 0);
		testMethod(2090, 2.3833, 0.0862, -1.4998, 1.0471, 0, 0);
		testMethod(2095, 2.3837, 0.0791, -1.4373, 1.0471, 0, 0);
		testMethod(2100, 2.3841, 0.0722, -1.3748, 1.0471, 0, 0);
		testMethod(2105, 2.3844, 0.0656, -1.3123, 1.0471, 0, 0);
		testMethod(2110, 2.3847, 0.0594, -1.2498, 1.0471, 0, 0);
		testMethod(2115, 2.385, 0.0534, -1.1873, 1.0471, 0, 0);
		testMethod(2120, 2.3853, 0.0478, -1.1248, 1.0471, 0, 0);
		testMethod(2125, 2.3855, 0.0425, -1.0624, 1.0471, 0, 0);
		testMethod(2130, 2.3857, 0.0375, -0.9999, 1.0471, 0, 0);
		testMethod(2135, 2.3859, 0.0328, -0.9374, 1.0471, 0, 0);
		testMethod(2140, 2.386, 0.0284, -0.8749, 1.0471, 0, 0);
		testMethod(2145, 2.3862, 0.0244, -0.8124, 1.0471, 0, 0);
		testMethod(2150, 2.3863, 0.0206, -0.7499, 1.0471, 0, 0);
		testMethod(2155, 2.3864, 0.0172, -0.6874, 1.0471, 0, 0);
		testMethod(2160, 2.3864, 0.0141, -0.6249, 1.0471, 0, 0);
		testMethod(2165, 2.3865, 0.0112, -0.5624, 1.0471, 0, 0);
		testMethod(2170, 2.3866, 0.0087, -0.4999, 1.0471, 0, 0);
		testMethod(2175, 2.3866, 0.0066, -0.4374, 1.0471, 0, 0);
		testMethod(2180, 2.3866, 0.0047, -0.3749, 1.0471, 0, 0);
		testMethod(2185, 2.3866, 0.0031, -0.3125, 1.0471, 0, 0);
		testMethod(2190, 2.3867, 0.0019, -0.25, 1.0471, 0, 0);
		testMethod(2195, 2.3867, 0.0009, -0.1875, 1.0471, 0, 0);
		testMethod(2200, 2.3867, 0.0003, -0.125, 1.0471, 0, 0);
		testMethod(2205, 2.3867, 0, -0.0625, 1.0471, 0, 0);
		testMethod(2210, 2.3867, 0, 0, 1.0471, 0, 0);
		testMethod(2210, 2.3867, 0, 0, 1.0471, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}