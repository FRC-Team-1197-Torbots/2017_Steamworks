package org.usfirst.frc.team1197.robot;

public class BoilerPos3 extends TorTrajectory {

	public BoilerPos3() {
		super(-3.8921, -0.7854);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0622, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1243, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.1865, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2486, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3108, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.3729, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.4351, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4972, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5594, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6215, 0, 0, 0);
		testMethod(55, -0.0004, -0.0205, -0.6837, 0, 0, 0);
		testMethod(60, -0.0005, -0.0242, -0.7458, 0, 0, 0);
		testMethod(65, -0.0006, -0.0283, -0.808, 0, 0, 0);
		testMethod(70, -0.0008, -0.0326, -0.8702, 0, 0, 0);
		testMethod(75, -0.001, -0.0373, -0.9323, 0, 0, 0);
		testMethod(80, -0.0012, -0.0423, -0.9945, 0, 0, 0);
		testMethod(85, -0.0014, -0.0475, -1.0566, 0, 0, 0);
		testMethod(90, -0.0016, -0.0531, -1.1188, 0, 0, 0);
		testMethod(95, -0.0019, -0.059, -1.1809, 0, 0, 0);
		testMethod(100, -0.0022, -0.0653, -1.2431, 0, 0, 0);
		testMethod(105, -0.0026, -0.0718, -1.3052, 0, 0, 0);
		testMethod(110, -0.0029, -0.0786, -1.3674, 0, 0, 0);
		testMethod(115, -0.0034, -0.0858, -1.4295, 0, 0, 0);
		testMethod(120, -0.0038, -0.0932, -1.4917, 0, 0, 0);
		testMethod(125, -0.0043, -0.101, -1.5538, 0, 0, 0);
		testMethod(130, -0.0048, -0.1091, -1.616, 0, 0, 0);
		testMethod(135, -0.0054, -0.1175, -1.6781, 0, 0, 0);
		testMethod(140, -0.006, -0.1262, -1.7403, 0, 0, 0);
		testMethod(145, -0.0066, -0.1352, -1.8025, 0, 0, 0);
		testMethod(150, -0.0073, -0.1445, -1.8646, 0, 0, 0);
		testMethod(155, -0.0081, -0.1541, -1.9268, 0, 0, 0);
		testMethod(160, -0.0089, -0.1641, -1.9889, 0, 0, 0);
		testMethod(165, -0.0097, -0.1743, -2.0511, 0, 0, 0);
		testMethod(170, -0.0106, -0.1849, -2.1132, 0, 0, 0);
		testMethod(175, -0.0116, -0.1958, -2.1754, 0, 0, 0);
		testMethod(180, -0.0126, -0.207, -2.2375, 0, 0, 0);
		testMethod(185, -0.0137, -0.2185, -2.2997, 0, 0, 0);
		testMethod(190, -0.0148, -0.2303, -2.3618, 0, 0, 0);
		testMethod(195, -0.016, -0.2424, -2.424, 0, 0, 0);
		testMethod(200, -0.0172, -0.2548, -2.4861, 0, 0, 0);
		testMethod(205, -0.0185, -0.2673, -2.4861, 0, 0, 0);
		testMethod(210, -0.0199, -0.2797, -2.4861, 0, 0, 0);
		testMethod(215, -0.0213, -0.2921, -2.4861, 0, 0, 0);
		testMethod(220, -0.0228, -0.3046, -2.4861, 0, 0, 0);
		testMethod(225, -0.0243, -0.317, -2.4861, 0, 0, 0);
		testMethod(230, -0.026, -0.3294, -2.4861, 0, 0, 0);
		testMethod(235, -0.0276, -0.3418, -2.4861, 0, 0, 0);
		testMethod(240, -0.0294, -0.3543, -2.4861, 0, 0, 0);
		testMethod(245, -0.0312, -0.3667, -2.4861, 0, 0, 0);
		testMethod(250, -0.0331, -0.3791, -2.4861, 0, 0, 0);
		testMethod(255, -0.035, -0.3916, -2.4861, 0, 0, 0);
		testMethod(260, -0.037, -0.404, -2.4861, 0, 0, 0);
		testMethod(265, -0.039, -0.4164, -2.4861, 0, 0, 0);
		testMethod(270, -0.0411, -0.4289, -2.4861, 0, 0, 0);
		testMethod(275, -0.0433, -0.4413, -2.4861, 0, 0, 0);
		testMethod(280, -0.0455, -0.4537, -2.4861, 0, 0, 0);
		testMethod(285, -0.0478, -0.4662, -2.4861, 0, 0, 0);
		testMethod(290, -0.0502, -0.4786, -2.4861, 0, 0, 0);
		testMethod(295, -0.0526, -0.491, -2.4861, 0, 0, 0);
		testMethod(300, -0.0551, -0.5034, -2.4861, 0, 0, 0);
		testMethod(305, -0.0577, -0.5159, -2.4861, 0, 0, 0);
		testMethod(310, -0.0603, -0.5283, -2.4861, 0, 0, 0);
		testMethod(315, -0.0629, -0.5407, -2.4861, 0, 0, 0);
		testMethod(320, -0.0657, -0.5532, -2.4861, 0, 0, 0);
		testMethod(325, -0.0685, -0.5656, -2.4861, 0, 0, 0);
		testMethod(330, -0.0713, -0.578, -2.4861, 0, 0, 0);
		testMethod(335, -0.0743, -0.5905, -2.4861, 0, 0, 0);
		testMethod(340, -0.0772, -0.6029, -2.4861, 0, 0, 0);
		testMethod(345, -0.0803, -0.6153, -2.4861, 0, 0, 0);
		testMethod(350, -0.0834, -0.6278, -2.4861, 0, 0, 0);
		testMethod(355, -0.0866, -0.6402, -2.4861, 0, 0, 0);
		testMethod(360, -0.0898, -0.6526, -2.4861, 0, 0, 0);
		testMethod(365, -0.0931, -0.665, -2.4861, 0, 0, 0);
		testMethod(370, -0.0964, -0.6775, -2.4861, 0, 0, 0);
		testMethod(375, -0.0999, -0.6899, -2.4861, 0, 0, 0);
		testMethod(380, -0.1033, -0.7023, -2.4861, 0, 0, 0);
		testMethod(385, -0.1069, -0.7148, -2.4861, 0, 0, 0);
		testMethod(390, -0.1105, -0.7272, -2.4861, 0, 0, 0);
		testMethod(395, -0.1142, -0.7396, -2.4861, 0, 0, 0);
		testMethod(400, -0.1179, -0.7521, -2.4861, 0, 0, 0);
		testMethod(405, -0.1217, -0.7645, -2.4861, 0, 0, 0);
		testMethod(410, -0.1255, -0.7769, -2.4861, 0, 0, 0);
		testMethod(415, -0.1295, -0.7894, -2.4861, 0, 0, 0);
		testMethod(420, -0.1334, -0.8018, -2.4861, 0, 0, 0);
		testMethod(425, -0.1375, -0.8142, -2.4861, 0, 0, 0);
		testMethod(430, -0.1416, -0.8266, -2.4861, 0, 0, 0);
		testMethod(435, -0.1457, -0.8391, -2.4861, 0, 0, 0);
		testMethod(440, -0.15, -0.8515, -2.4861, 0, 0, 0);
		testMethod(445, -0.1542, -0.8639, -2.4861, 0, 0, 0);
		testMethod(450, -0.1586, -0.8764, -2.4861, 0, 0, 0);
		testMethod(455, -0.163, -0.8888, -2.4861, 0, 0, 0);
		testMethod(460, -0.1675, -0.9012, -2.4861, 0, 0, 0);
		testMethod(465, -0.172, -0.9137, -2.4861, 0, 0, 0);
		testMethod(470, -0.1766, -0.9261, -2.4861, 0, 0, 0);
		testMethod(475, -0.1813, -0.9385, -2.4861, 0, 0, 0);
		testMethod(480, -0.186, -0.9509, -2.4861, 0, 0, 0);
		testMethod(485, -0.1908, -0.9634, -2.4861, 0, 0, 0);
		testMethod(490, -0.1956, -0.9758, -2.4861, 0, 0, 0);
		testMethod(495, -0.2006, -0.9882, -2.4861, 0, 0, 0);
		testMethod(500, -0.2055, -1.0007, -2.4861, 0, 0, 0);
		testMethod(505, -0.2106, -1.0131, -2.4861, 0, 0, 0);
		testMethod(510, -0.2157, -1.0255, -2.4861, 0, 0, 0);
		testMethod(515, -0.2208, -1.038, -2.4861, 0, 0, 0);
		testMethod(520, -0.226, -1.0504, -2.4861, 0, 0, 0);
		testMethod(525, -0.2313, -1.0628, -2.4861, 0, 0, 0);
		testMethod(530, -0.2367, -1.0753, -2.4861, 0, 0, 0);
		testMethod(535, -0.2421, -1.0877, -2.4861, 0, 0, 0);
		testMethod(540, -0.2475, -1.1001, -2.4861, 0, 0, 0);
		testMethod(545, -0.2531, -1.1125, -2.4861, 0, 0, 0);
		testMethod(550, -0.2587, -1.125, -2.4861, 0, 0, 0);
		testMethod(555, -0.2643, -1.1374, -2.4861, 0, 0, 0);
		testMethod(560, -0.27, -1.1498, -2.4861, 0, 0, 0);
		testMethod(565, -0.2758, -1.1623, -2.4861, 0, 0, 0);
		testMethod(570, -0.2817, -1.1747, -2.4861, 0, 0, 0);
		testMethod(575, -0.2876, -1.1871, -2.4861, 0, 0, 0);
		testMethod(580, -0.2935, -1.1996, -2.4861, 0, 0, 0);
		testMethod(585, -0.2996, -1.212, -2.4861, 0, 0, 0);
		testMethod(590, -0.3057, -1.2244, -2.4861, 0, 0, 0);
		testMethod(595, -0.3118, -1.2369, -2.4861, 0, 0, 0);
		testMethod(600, -0.318, -1.2493, -2.4861, 0, 0, 0);
		testMethod(605, -0.3243, -1.2617, -2.4861, 0, 0, 0);
		testMethod(610, -0.3306, -1.2741, -2.4861, 0, 0, 0);
		testMethod(615, -0.337, -1.2866, -2.4861, 0, 0, 0);
		testMethod(620, -0.3435, -1.299, -2.4861, 0, 0, 0);
		testMethod(625, -0.35, -1.3114, -2.4861, 0, 0, 0);
		testMethod(630, -0.3566, -1.3239, -2.4861, 0, 0, 0);
		testMethod(635, -0.3633, -1.3363, -2.4861, 0, 0, 0);
		testMethod(640, -0.37, -1.3487, -2.4861, 0, 0, 0);
		testMethod(645, -0.3768, -1.3612, -2.4861, 0, 0, 0);
		testMethod(650, -0.3836, -1.3736, -2.4861, 0, 0, 0);
		testMethod(655, -0.3905, -1.386, -2.4861, 0, 0, 0);
		testMethod(660, -0.3975, -1.3985, -2.4861, 0, 0, 0);
		testMethod(665, -0.4045, -1.4109, -2.4861, 0, 0, 0);
		testMethod(670, -0.4116, -1.4233, -2.4861, 0, 0, 0);
		testMethod(675, -0.4187, -1.4357, -2.4861, 0, 0, 0);
		testMethod(680, -0.4259, -1.4482, -2.4861, 0, 0, 0);
		testMethod(685, -0.4332, -1.4606, -2.4861, 0, 0, 0);
		testMethod(690, -0.4405, -1.473, -2.4861, 0, 0, 0);
		testMethod(695, -0.4479, -1.4855, -2.4861, 0, 0, 0);
		testMethod(700, -0.4554, -1.4979, -2.4861, 0, 0, 0);
		testMethod(705, -0.4629, -1.5103, -2.4861, 0, 0, 0);
		testMethod(710, -0.4705, -1.5228, -2.4861, 0, 0, 0);
		testMethod(715, -0.4781, -1.5352, -2.4861, 0, 0, 0);
		testMethod(720, -0.4858, -1.5476, -2.4861, 0, 0, 0);
		testMethod(725, -0.4936, -1.5601, -2.4861, 0, 0, 0);
		testMethod(730, -0.5014, -1.5725, -2.4861, 0, 0, 0);
		testMethod(735, -0.5093, -1.5849, -2.4861, 0, 0, 0);
		testMethod(740, -0.5173, -1.5973, -2.4861, 0, 0, 0);
		testMethod(745, -0.5253, -1.6098, -2.4861, 0, 0, 0);
		testMethod(750, -0.5334, -1.6222, -2.4861, 0, 0, 0);
		testMethod(755, -0.5415, -1.6346, -2.4861, 0, 0, 0);
		testMethod(760, -0.5497, -1.6471, -2.4861, 0, 0, 0);
		testMethod(765, -0.558, -1.6595, -2.4861, 0, 0, 0);
		testMethod(770, -0.5663, -1.6719, -2.4861, 0, 0, 0);
		testMethod(775, -0.5747, -1.6844, -2.4861, 0, 0, 0);
		testMethod(780, -0.5832, -1.6965, -2.424, 0, 0, 0);
		testMethod(785, -0.5917, -1.7083, -2.3618, 0, 0, 0);
		testMethod(790, -0.6003, -1.7198, -2.2997, -0, -0.0003, -0.0513);
		testMethod(795, -0.6089, -1.731, -2.2375, -0, -0.0012, -0.1936);
		testMethod(800, -0.6176, -1.7419, -2.1754, -0, -0.0029, -0.3429);
		testMethod(805, -0.6263, -1.7524, -2.1132, -0, -0.0054, -0.4974);
		testMethod(810, -0.6351, -1.7627, -2.0511, -0.0001, -0.0087, -0.657);
		testMethod(815, -0.6439, -1.7726, -1.9889, -0.0001, -0.0128, -0.8215);
		testMethod(820, -0.6528, -1.7823, -1.9268, -0.0002, -0.0178, -0.9907);
		testMethod(825, -0.6617, -1.7916, -1.8646, -0.0003, -0.0236, -1.1644);
		testMethod(830, -0.6707, -1.8006, -1.8025, -0.0004, -0.0303, -1.3423);
		testMethod(835, -0.6798, -1.8093, -1.7403, -0.0006, -0.0379, -1.5243);
		testMethod(840, -0.6888, -1.8177, -1.6781, -0.0008, -0.0465, -1.71);
		testMethod(845, -0.6979, -1.8258, -1.616, -0.0011, -0.056, -1.8994);
		testMethod(850, -0.7071, -1.8335, -1.5538, -0.0014, -0.0664, -2.092);
		testMethod(855, -0.7163, -1.841, -1.4917, -0.0017, -0.0779, -2.2878);
		testMethod(860, -0.7255, -1.8481, -1.4295, -0.0022, -0.0903, -2.4863);
		testMethod(865, -0.7347, -1.855, -1.3674, -0.0026, -0.1037, -2.6873);
		testMethod(870, -0.744, -1.8615, -1.3052, -0.0032, -0.1182, -2.8907);
		testMethod(875, -0.7534, -1.8677, -1.2431, -0.0038, -0.1337, -3.096);
		testMethod(880, -0.7627, -1.8736, -1.1809, -0.0045, -0.1502, -3.303);
		testMethod(885, -0.7721, -1.8792, -1.1188, -0.0053, -0.1677, -3.5114);
		testMethod(890, -0.7815, -1.8845, -1.0566, -0.0062, -0.1863, -3.7209);
		testMethod(895, -0.7909, -1.8895, -0.9945, -0.0072, -0.206, -3.9312);
		testMethod(900, -0.8004, -1.8941, -0.9323, -0.0083, -0.2267, -4.1421);
		testMethod(905, -0.8099, -1.8985, -0.8702, -0.0095, -0.2485, -4.3531);
		testMethod(910, -0.8194, -1.9025, -0.808, -0.0108, -0.2713, -4.5641);
		testMethod(915, -0.8289, -1.9063, -0.7458, -0.0122, -0.2952, -4.7746);
		testMethod(920, -0.8384, -1.9097, -0.6837, -0.0137, -0.3201, -4.9844);
		testMethod(925, -0.848, -1.9128, -0.6215, -0.0154, -0.3461, -5.1931);
		testMethod(930, -0.8576, -1.9156, -0.5594, -0.0172, -0.3731, -5.4005);
		testMethod(935, -0.8672, -1.9181, -0.4972, -0.0191, -0.4011, -5.6062);
		testMethod(940, -0.8767, -1.9202, -0.4351, -0.0212, -0.4301, -5.8098);
		testMethod(945, -0.8864, -1.9221, -0.3729, -0.0234, -0.4602, -6.0112);
		testMethod(950, -0.896, -1.9237, -0.3108, -0.0258, -0.4913, -6.2098);
		testMethod(955, -0.9056, -1.9249, -0.2486, -0.0283, -0.5233, -6.4055);
		testMethod(960, -0.9152, -1.9258, -0.1865, -0.031, -0.5563, -6.5978);
		testMethod(965, -0.9248, -1.9265, -0.1243, -0.0339, -0.5902, -6.7865);
		testMethod(970, -0.9345, -1.9268, -0.0622, -0.0369, -0.6251, -6.9712);
		testMethod(975, -0.9441, -1.9268, -0, -0.0401, -0.6608, -7.1516);
		testMethod(980, -0.9537, -1.9268, -0, -0.0435, -0.6976, -7.3505);
		testMethod(985, -0.9634, -1.9268, -0, -0.0471, -0.7353, -7.5494);
		testMethod(990, -0.973, -1.9268, -0, -0.0509, -0.7741, -7.7483);
		testMethod(995, -0.9826, -1.9268, -0, -0.0549, -0.8138, -7.9473);
		testMethod(1000, -0.9923, -1.9268, -0, -0.059, -0.8545, -8.1462);
		testMethod(1005, -1.0019, -1.9268, -0, -0.0634, -0.8962, -8.3451);
		testMethod(1010, -1.0115, -1.9268, -0, -0.068, -0.9387, -8.4983);
		testMethod(1015, -1.0212, -1.9268, -0, -0.0728, -0.9804, -8.3246);
		testMethod(1020, -1.0308, -1.9268, -0, -0.0778, -1.021, -8.1257);
		testMethod(1025, -1.0405, -1.9268, -0, -0.083, -1.0606, -7.9268);
		testMethod(1030, -1.0501, -1.9268, -0, -0.0884, -1.0993, -7.7279);
		testMethod(1035, -1.0597, -1.9268, -0, -0.094, -1.1369, -7.529);
		testMethod(1040, -1.0694, -1.9268, -0, -0.0998, -1.1736, -7.3301);
		testMethod(1045, -1.079, -1.9268, -0, -0.1057, -1.2092, -7.1311);
		testMethod(1050, -1.0886, -1.9268, -0, -0.1119, -1.2439, -6.9322);
		testMethod(1055, -1.0983, -1.9268, -0, -0.1182, -1.2775, -6.7333);
		testMethod(1060, -1.1079, -1.9268, -0, -0.1246, -1.3102, -6.5344);
		testMethod(1065, -1.1175, -1.9268, -0, -0.1313, -1.3419, -6.3355);
		testMethod(1070, -1.1272, -1.9268, -0, -0.1381, -1.3726, -6.1366);
		testMethod(1075, -1.1368, -1.9268, -0, -0.145, -1.4023, -5.9377);
		testMethod(1080, -1.1464, -1.9268, -0, -0.1521, -1.431, -5.7388);
		testMethod(1085, -1.1561, -1.9268, -0, -0.1593, -1.4587, -5.5398);
		testMethod(1090, -1.1657, -1.9268, -0, -0.1667, -1.4854, -5.3409);
		testMethod(1095, -1.1753, -1.9268, -0, -0.1742, -1.5111, -5.142);
		testMethod(1100, -1.185, -1.9268, -0, -0.1818, -1.5358, -4.9431);
		testMethod(1105, -1.1946, -1.9268, -0, -0.1895, -1.5595, -4.7442);
		testMethod(1110, -1.2042, -1.9268, -0, -0.1974, -1.5822, -4.5453);
		testMethod(1115, -1.2139, -1.9268, -0, -0.2053, -1.604, -4.3464);
		testMethod(1120, -1.2235, -1.9268, -0, -0.2134, -1.6247, -4.1474);
		testMethod(1125, -1.2331, -1.9268, -0, -0.2216, -1.6444, -3.9485);
		testMethod(1130, -1.2428, -1.9268, -0, -0.2298, -1.6632, -3.7496);
		testMethod(1135, -1.2524, -1.9268, -0, -0.2382, -1.6809, -3.5507);
		testMethod(1140, -1.262, -1.9268, -0, -0.2467, -1.6977, -3.3518);
		testMethod(1145, -1.2717, -1.9268, -0, -0.2552, -1.7135, -3.1529);
		testMethod(1150, -1.2813, -1.9268, -0, -0.2638, -1.7282, -2.954);
		testMethod(1155, -1.2909, -1.9268, -0, -0.2725, -1.742, -2.755);
		testMethod(1160, -1.3006, -1.9268, -0, -0.2812, -1.7548, -2.5561);
		testMethod(1165, -1.3102, -1.9268, -0, -0.29, -1.7666, -2.3572);
		testMethod(1170, -1.3198, -1.9268, -0, -0.2989, -1.7774, -2.1583);
		testMethod(1175, -1.3295, -1.9268, -0, -0.3078, -1.7872, -1.9594);
		testMethod(1180, -1.3391, -1.9268, -0, -0.3167, -1.796, -1.7605);
		testMethod(1185, -1.3487, -1.9268, -0, -0.3257, -1.8038, -1.5616);
		testMethod(1190, -1.3584, -1.9268, -0, -0.3348, -1.8106, -1.3626);
		testMethod(1195, -1.368, -1.9268, -0, -0.3438, -1.8164, -1.1637);
		testMethod(1200, -1.3776, -1.9268, -0, -0.3529, -1.8212, -0.9648);
		testMethod(1205, -1.3873, -1.9268, -0, -0.3621, -1.8251, -0.7659);
		testMethod(1210, -1.3969, -1.9268, -0, -0.3712, -1.8279, -0.567);
		testMethod(1215, -1.4065, -1.9268, -0, -0.3803, -1.8297, -0.3681);
		testMethod(1220, -1.4162, -1.9268, -0, -0.3895, -1.8306, -0.1692);
		testMethod(1225, -1.4258, -1.9268, -0, -0.3986, -1.8304, 0.03);
		testMethod(1230, -1.4354, -1.9268, -0, -0.4078, -1.8293, 0.229);
		testMethod(1235, -1.4451, -1.9268, -0, -0.4169, -1.8272, 0.4279);
		testMethod(1240, -1.4547, -1.9268, -0, -0.4261, -1.824, 0.6268);
		testMethod(1245, -1.4643, -1.9268, -0, -0.4352, -1.8199, 0.8257);
		testMethod(1250, -1.474, -1.9268, -0, -0.4443, -1.8148, 1.0247);
		testMethod(1255, -1.4836, -1.9268, -0, -0.4533, -1.8086, 1.2236);
		testMethod(1260, -1.4932, -1.9268, -0, -0.4623, -1.8015, 1.4225);
		testMethod(1265, -1.5029, -1.9268, -0, -0.4713, -1.7934, 1.6214);
		testMethod(1270, -1.5125, -1.9268, -0, -0.4803, -1.7843, 1.8203);
		testMethod(1275, -1.5221, -1.9268, -0, -0.4892, -1.7742, 2.0192);
		testMethod(1280, -1.5318, -1.9268, -0, -0.498, -1.7631, 2.2181);
		testMethod(1285, -1.5414, -1.9268, -0, -0.5068, -1.7511, 2.4171);
		testMethod(1290, -1.551, -1.9268, -0, -0.5155, -1.738, 2.616);
		testMethod(1295, -1.5607, -1.9268, -0, -0.5242, -1.7239, 2.8149);
		testMethod(1300, -1.5703, -1.9268, -0, -0.5328, -1.7088, 3.0138);
		testMethod(1305, -1.5799, -1.9268, -0, -0.5413, -1.6928, 3.2127);
		testMethod(1310, -1.5896, -1.9268, -0, -0.5497, -1.6757, 3.4116);
		testMethod(1315, -1.5992, -1.9268, -0, -0.558, -1.6577, 3.6105);
		testMethod(1320, -1.6088, -1.9268, -0, -0.5663, -1.6386, 3.8095);
		testMethod(1325, -1.6185, -1.9268, -0, -0.5744, -1.6186, 4.0084);
		testMethod(1330, -1.6281, -1.9268, -0, -0.5824, -1.5975, 4.2073);
		testMethod(1335, -1.6377, -1.9268, -0, -0.5904, -1.5755, 4.4062);
		testMethod(1340, -1.6474, -1.9268, -0, -0.5982, -1.5525, 4.6051);
		testMethod(1345, -1.657, -1.9268, -0, -0.6059, -1.5285, 4.804);
		testMethod(1350, -1.6666, -1.9268, -0, -0.6135, -1.5034, 5.0029);
		testMethod(1355, -1.6763, -1.9268, -0, -0.6209, -1.4774, 5.2019);
		testMethod(1360, -1.6859, -1.9268, -0, -0.6283, -1.4504, 5.4008);
		testMethod(1365, -1.6956, -1.9268, -0, -0.6354, -1.4224, 5.5997);
		testMethod(1370, -1.7052, -1.9268, -0, -0.6425, -1.3934, 5.7986);
		testMethod(1375, -1.7148, -1.9268, -0, -0.6494, -1.3634, 5.9975);
		testMethod(1380, -1.7245, -1.9268, -0, -0.6561, -1.3325, 6.1964);
		testMethod(1385, -1.7341, -1.9268, -0, -0.6627, -1.3005, 6.3953);
		testMethod(1390, -1.7437, -1.9268, -0, -0.6691, -1.2675, 6.5942);
		testMethod(1395, -1.7534, -1.9268, -0, -0.6754, -1.2336, 6.7932);
		testMethod(1400, -1.763, -1.9268, -0, -0.6814, -1.1986, 6.9921);
		testMethod(1405, -1.7726, -1.9268, -0, -0.6873, -1.1626, 7.191);
		testMethod(1410, -1.7823, -1.9268, -0, -0.6931, -1.1257, 7.3899);
		testMethod(1415, -1.7919, -1.9268, -0, -0.6986, -1.0877, 7.5888);
		testMethod(1420, -1.8015, -1.9268, -0, -0.7039, -1.0488, 7.7877);
		testMethod(1425, -1.8112, -1.9268, -0, -0.7091, -1.0089, 7.9866);
		testMethod(1430, -1.8208, -1.9268, -0, -0.714, -0.9679, 8.1856);
		testMethod(1435, -1.8304, -1.9268, -0, -0.7188, -0.926, 8.3845);
		testMethod(1440, -1.8401, -1.9268, -0, -0.7233, -0.8836, 8.4864);
		testMethod(1445, -1.8497, -1.9268, -0, -0.7276, -0.8422, 8.2852);
		testMethod(1450, -1.8593, -1.9268, -0, -0.7317, -0.8017, 8.0863);
		testMethod(1455, -1.869, -1.9268, -0, -0.7356, -0.7623, 7.8874);
		testMethod(1460, -1.8786, -1.9268, -0, -0.7393, -0.7239, 7.6885);
		testMethod(1465, -1.8882, -1.9268, -0, -0.7429, -0.6864, 7.4896);
		testMethod(1470, -1.8979, -1.9268, -0, -0.7462, -0.65, 7.2907);
		testMethod(1475, -1.9075, -1.9268, -0, -0.7494, -0.6145, 7.0918);
		testMethod(1480, -1.9171, -1.9268, -0, -0.7524, -0.58, 6.8929);
		testMethod(1485, -1.9268, -1.9268, -0, -0.7552, -0.5466, 6.6939);
		testMethod(1490, -1.9364, -1.9268, -0, -0.7578, -0.5141, 6.495);
		testMethod(1495, -1.946, -1.9268, -0, -0.7603, -0.4826, 6.2961);
		testMethod(1500, -1.9557, -1.9268, -0, -0.7626, -0.4521, 6.0972);
		testMethod(1505, -1.9653, -1.9268, -0, -0.7648, -0.4226, 5.8983);
		testMethod(1510, -1.9749, -1.9268, -0, -0.7669, -0.3941, 5.6994);
		testMethod(1515, -1.9846, -1.9268, -0, -0.7688, -0.3666, 5.5005);
		testMethod(1520, -1.9942, -1.9268, -0, -0.7705, -0.3401, 5.3015);
		testMethod(1525, -2.0038, -1.9268, -0, -0.7722, -0.3146, 5.1026);
		testMethod(1530, -2.0135, -1.9268, -0, -0.7737, -0.2901, 4.9037);
		testMethod(1535, -2.0231, -1.9268, -0, -0.7751, -0.2666, 4.7048);
		testMethod(1540, -2.0327, -1.9268, -0, -0.7764, -0.244, 4.5059);
		testMethod(1545, -2.0424, -1.9268, -0, -0.7775, -0.2225, 4.307);
		testMethod(1550, -2.052, -1.9268, -0, -0.7786, -0.202, 4.1081);
		testMethod(1555, -2.0616, -1.9268, -0, -0.7795, -0.1824, 3.9091);
		testMethod(1560, -2.0713, -1.9268, -0, -0.7804, -0.1639, 3.7102);
		testMethod(1565, -2.0809, -1.9268, -0, -0.7812, -0.1463, 3.5113);
		testMethod(1570, -2.0905, -1.9268, -0, -0.7819, -0.1297, 3.3124);
		testMethod(1575, -2.1002, -1.9268, -0, -0.7825, -0.1142, 3.1135);
		testMethod(1580, -2.1098, -1.9268, -0, -0.783, -0.0996, 2.9146);
		testMethod(1585, -2.1194, -1.9268, -0, -0.7835, -0.086, 2.7157);
		testMethod(1590, -2.1291, -1.9268, -0, -0.7839, -0.0734, 2.5167);
		testMethod(1595, -2.1387, -1.9268, -0, -0.7842, -0.0619, 2.3178);
		testMethod(1600, -2.1483, -1.9268, -0, -0.7845, -0.0513, 2.1189);
		testMethod(1605, -2.158, -1.9268, -0, -0.7847, -0.0417, 1.92);
		testMethod(1610, -2.1676, -1.9268, -0, -0.7849, -0.0331, 1.7211);
		testMethod(1615, -2.1772, -1.9268, -0, -0.7851, -0.0254, 1.5222);
		testMethod(1620, -2.1869, -1.9268, -0, -0.7852, -0.0188, 1.3233);
		testMethod(1625, -2.1965, -1.9268, -0, -0.7853, -0.0132, 1.1243);
		testMethod(1630, -2.2061, -1.9268, -0, -0.7853, -0.0086, 0.9254);
		testMethod(1635, -2.2158, -1.9268, -0, -0.7853, -0.0049, 0.7265);
		testMethod(1640, -2.2254, -1.9268, -0, -0.7854, -0.0023, 0.5276);
		testMethod(1645, -2.235, -1.9268, -0, -0.7854, -0.0007, 0.3287);
		testMethod(1650, -2.2447, -1.9268, -0, -0.7854, -0, 0.1298);
		testMethod(1655, -2.2543, -1.9268, -0, -0.7854, 0, 0.0023);
		testMethod(1660, -2.2639, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1665, -2.2736, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1670, -2.2832, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1675, -2.2928, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1680, -2.3025, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1685, -2.3121, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1690, -2.3217, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1695, -2.3314, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1700, -2.341, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1705, -2.3506, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1710, -2.3603, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1715, -2.3699, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1720, -2.3796, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1725, -2.3892, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1730, -2.3988, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1735, -2.4085, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1740, -2.4181, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1745, -2.4277, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1750, -2.4374, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1755, -2.447, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1760, -2.4566, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1765, -2.4663, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1770, -2.4759, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1775, -2.4855, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1780, -2.4952, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1785, -2.5048, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1790, -2.5144, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1795, -2.5241, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1800, -2.5337, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1805, -2.5433, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1810, -2.553, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1815, -2.5626, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1820, -2.5722, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1825, -2.5819, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1830, -2.5915, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1835, -2.6011, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1840, -2.6108, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1845, -2.6204, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1850, -2.63, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1855, -2.6397, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1860, -2.6493, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1865, -2.6589, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1870, -2.6686, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1875, -2.6782, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1880, -2.6878, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1885, -2.6975, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1890, -2.7071, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1895, -2.7167, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1900, -2.7264, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1905, -2.736, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1910, -2.7456, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1915, -2.7553, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1920, -2.7649, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1925, -2.7745, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1930, -2.7842, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1935, -2.7938, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1940, -2.8034, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1945, -2.8131, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1950, -2.8227, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1955, -2.8323, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1960, -2.842, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1965, -2.8516, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1970, -2.8612, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1975, -2.8709, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1980, -2.8805, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1985, -2.8901, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1990, -2.8998, -1.9268, -0, -0.7854, 0, 0);
		testMethod(1995, -2.9094, -1.9268, -0, -0.7854, 0, 0);
		testMethod(2000, -2.919, -1.9268, -0, -0.7854, 0, 0);
		testMethod(2005, -2.9287, -1.9268, -0, -0.7854, 0, 0);
		testMethod(2010, -2.9383, -1.9268, -0, -0.7854, 0, 0);
		testMethod(2015, -2.9479, -1.9268, -0, -0.7854, 0, 0);
		testMethod(2020, -2.9576, -1.9268, -0, -0.7854, 0, 0);
		testMethod(2025, -2.9672, -1.9265, 0.0622, -0.7854, 0, 0);
		testMethod(2030, -2.9768, -1.9258, 0.1243, -0.7854, 0, 0);
		testMethod(2035, -2.9865, -1.9249, 0.1865, -0.7854, 0, 0);
		testMethod(2040, -2.9961, -1.9237, 0.2486, -0.7854, 0, 0);
		testMethod(2045, -3.0057, -1.9221, 0.3108, -0.7854, 0, 0);
		testMethod(2050, -3.0153, -1.9202, 0.3729, -0.7854, 0, 0);
		testMethod(2055, -3.0249, -1.9181, 0.4351, -0.7854, 0, 0);
		testMethod(2060, -3.0345, -1.9156, 0.4972, -0.7854, 0, 0);
		testMethod(2065, -3.0441, -1.9128, 0.5594, -0.7854, 0, 0);
		testMethod(2070, -3.0536, -1.9097, 0.6215, -0.7854, 0, 0);
		testMethod(2075, -3.0632, -1.9063, 0.6837, -0.7854, 0, 0);
		testMethod(2080, -3.0727, -1.9025, 0.7458, -0.7854, 0, 0);
		testMethod(2085, -3.0822, -1.8985, 0.808, -0.7854, 0, 0);
		testMethod(2090, -3.0917, -1.8941, 0.8702, -0.7854, 0, 0);
		testMethod(2095, -3.1011, -1.8895, 0.9323, -0.7854, 0, 0);
		testMethod(2100, -3.1106, -1.8845, 0.9945, -0.7854, 0, 0);
		testMethod(2105, -3.12, -1.8792, 1.0566, -0.7854, 0, 0);
		testMethod(2110, -3.1293, -1.8736, 1.1188, -0.7854, 0, 0);
		testMethod(2115, -3.1387, -1.8677, 1.1809, -0.7854, 0, 0);
		testMethod(2120, -3.148, -1.8615, 1.2431, -0.7854, 0, 0);
		testMethod(2125, -3.1573, -1.855, 1.3052, -0.7854, 0, 0);
		testMethod(2130, -3.1666, -1.8481, 1.3674, -0.7854, 0, 0);
		testMethod(2135, -3.1758, -1.841, 1.4295, -0.7854, 0, 0);
		testMethod(2140, -3.185, -1.8335, 1.4917, -0.7854, 0, 0);
		testMethod(2145, -3.1941, -1.8258, 1.5538, -0.7854, 0, 0);
		testMethod(2150, -3.2032, -1.8177, 1.616, -0.7854, 0, 0);
		testMethod(2155, -3.2123, -1.8093, 1.6781, -0.7854, 0, 0);
		testMethod(2160, -3.2213, -1.8006, 1.7403, -0.7854, 0, 0);
		testMethod(2165, -3.2303, -1.7916, 1.8025, -0.7854, 0, 0);
		testMethod(2170, -3.2392, -1.7823, 1.8646, -0.7854, 0, 0);
		testMethod(2175, -3.2481, -1.7726, 1.9268, -0.7854, 0, 0);
		testMethod(2180, -3.257, -1.7627, 1.9889, -0.7854, 0, 0);
		testMethod(2185, -3.2658, -1.7524, 2.0511, -0.7854, 0, 0);
		testMethod(2190, -3.2745, -1.7419, 2.1132, -0.7854, 0, 0);
		testMethod(2195, -3.2832, -1.731, 2.1754, -0.7854, 0, 0);
		testMethod(2200, -3.2918, -1.7198, 2.2375, -0.7854, 0, 0);
		testMethod(2205, -3.3004, -1.7083, 2.2997, -0.7854, 0, 0);
		testMethod(2210, -3.3089, -1.6965, 2.3618, -0.7854, 0, 0);
		testMethod(2215, -3.3173, -1.6844, 2.424, -0.7854, 0, 0);
		testMethod(2220, -3.3257, -1.6719, 2.4861, -0.7854, 0, 0);
		testMethod(2225, -3.3341, -1.6595, 2.4861, -0.7854, 0, 0);
		testMethod(2230, -3.3423, -1.6471, 2.4861, -0.7854, 0, 0);
		testMethod(2235, -3.3505, -1.6346, 2.4861, -0.7854, 0, 0);
		testMethod(2240, -3.3587, -1.6222, 2.4861, -0.7854, 0, 0);
		testMethod(2245, -3.3668, -1.6098, 2.4861, -0.7854, 0, 0);
		testMethod(2250, -3.3748, -1.5973, 2.4861, -0.7854, 0, 0);
		testMethod(2255, -3.3827, -1.5849, 2.4861, -0.7854, 0, 0);
		testMethod(2260, -3.3906, -1.5725, 2.4861, -0.7854, 0, 0);
		testMethod(2265, -3.3984, -1.5601, 2.4861, -0.7854, 0, 0);
		testMethod(2270, -3.4062, -1.5476, 2.4861, -0.7854, 0, 0);
		testMethod(2275, -3.4139, -1.5352, 2.4861, -0.7854, 0, 0);
		testMethod(2280, -3.4216, -1.5228, 2.4861, -0.7854, 0, 0);
		testMethod(2285, -3.4292, -1.5103, 2.4861, -0.7854, 0, 0);
		testMethod(2290, -3.4367, -1.4979, 2.4861, -0.7854, 0, 0);
		testMethod(2295, -3.4441, -1.4855, 2.4861, -0.7854, 0, 0);
		testMethod(2300, -3.4515, -1.473, 2.4861, -0.7854, 0, 0);
		testMethod(2305, -3.4589, -1.4606, 2.4861, -0.7854, 0, 0);
		testMethod(2310, -3.4661, -1.4482, 2.4861, -0.7854, 0, 0);
		testMethod(2315, -3.4733, -1.4357, 2.4861, -0.7854, 0, 0);
		testMethod(2320, -3.4805, -1.4233, 2.4861, -0.7854, 0, 0);
		testMethod(2325, -3.4876, -1.4109, 2.4861, -0.7854, 0, 0);
		testMethod(2330, -3.4946, -1.3985, 2.4861, -0.7854, 0, 0);
		testMethod(2335, -3.5016, -1.386, 2.4861, -0.7854, 0, 0);
		testMethod(2340, -3.5085, -1.3736, 2.4861, -0.7854, 0, 0);
		testMethod(2345, -3.5153, -1.3612, 2.4861, -0.7854, 0, 0);
		testMethod(2350, -3.5221, -1.3487, 2.4861, -0.7854, 0, 0);
		testMethod(2355, -3.5288, -1.3363, 2.4861, -0.7854, 0, 0);
		testMethod(2360, -3.5354, -1.3239, 2.4861, -0.7854, 0, 0);
		testMethod(2365, -3.542, -1.3114, 2.4861, -0.7854, 0, 0);
		testMethod(2370, -3.5486, -1.299, 2.4861, -0.7854, 0, 0);
		testMethod(2375, -3.555, -1.2866, 2.4861, -0.7854, 0, 0);
		testMethod(2380, -3.5614, -1.2741, 2.4861, -0.7854, 0, 0);
		testMethod(2385, -3.5678, -1.2617, 2.4861, -0.7854, 0, 0);
		testMethod(2390, -3.574, -1.2493, 2.4861, -0.7854, 0, 0);
		testMethod(2395, -3.5802, -1.2369, 2.4861, -0.7854, 0, 0);
		testMethod(2400, -3.5864, -1.2244, 2.4861, -0.7854, 0, 0);
		testMethod(2405, -3.5925, -1.212, 2.4861, -0.7854, 0, 0);
		testMethod(2410, -3.5985, -1.1996, 2.4861, -0.7854, 0, 0);
		testMethod(2415, -3.6045, -1.1871, 2.4861, -0.7854, 0, 0);
		testMethod(2420, -3.6104, -1.1747, 2.4861, -0.7854, 0, 0);
		testMethod(2425, -3.6162, -1.1623, 2.4861, -0.7854, 0, 0);
		testMethod(2430, -3.622, -1.1498, 2.4861, -0.7854, 0, 0);
		testMethod(2435, -3.6277, -1.1374, 2.4861, -0.7854, 0, 0);
		testMethod(2440, -3.6334, -1.125, 2.4861, -0.7854, 0, 0);
		testMethod(2445, -3.639, -1.1125, 2.4861, -0.7854, 0, 0);
		testMethod(2450, -3.6445, -1.1001, 2.4861, -0.7854, 0, 0);
		testMethod(2455, -3.65, -1.0877, 2.4861, -0.7854, 0, 0);
		testMethod(2460, -3.6554, -1.0753, 2.4861, -0.7854, 0, 0);
		testMethod(2465, -3.6607, -1.0628, 2.4861, -0.7854, 0, 0);
		testMethod(2470, -3.666, -1.0504, 2.4861, -0.7854, 0, 0);
		testMethod(2475, -3.6712, -1.038, 2.4861, -0.7854, 0, 0);
		testMethod(2480, -3.6764, -1.0255, 2.4861, -0.7854, 0, 0);
		testMethod(2485, -3.6815, -1.0131, 2.4861, -0.7854, 0, 0);
		testMethod(2490, -3.6865, -1.0007, 2.4861, -0.7854, 0, 0);
		testMethod(2495, -3.6915, -0.9882, 2.4861, -0.7854, 0, 0);
		testMethod(2500, -3.6964, -0.9758, 2.4861, -0.7854, 0, 0);
		testMethod(2505, -3.7013, -0.9634, 2.4861, -0.7854, 0, 0);
		testMethod(2510, -3.706, -0.9509, 2.4861, -0.7854, 0, 0);
		testMethod(2515, -3.7108, -0.9385, 2.4861, -0.7854, 0, 0);
		testMethod(2520, -3.7154, -0.9261, 2.4861, -0.7854, 0, 0);
		testMethod(2525, -3.72, -0.9137, 2.4861, -0.7854, 0, 0);
		testMethod(2530, -3.7246, -0.9012, 2.4861, -0.7854, 0, 0);
		testMethod(2535, -3.729, -0.8888, 2.4861, -0.7854, 0, 0);
		testMethod(2540, -3.7335, -0.8764, 2.4861, -0.7854, 0, 0);
		testMethod(2545, -3.7378, -0.8639, 2.4861, -0.7854, 0, 0);
		testMethod(2550, -3.7421, -0.8515, 2.4861, -0.7854, 0, 0);
		testMethod(2555, -3.7463, -0.8391, 2.4861, -0.7854, 0, 0);
		testMethod(2560, -3.7505, -0.8266, 2.4861, -0.7854, 0, 0);
		testMethod(2565, -3.7546, -0.8142, 2.4861, -0.7854, 0, 0);
		testMethod(2570, -3.7586, -0.8018, 2.4861, -0.7854, 0, 0);
		testMethod(2575, -3.7626, -0.7894, 2.4861, -0.7854, 0, 0);
		testMethod(2580, -3.7665, -0.7769, 2.4861, -0.7854, 0, 0);
		testMethod(2585, -3.7704, -0.7645, 2.4861, -0.7854, 0, 0);
		testMethod(2590, -3.7742, -0.7521, 2.4861, -0.7854, 0, 0);
		testMethod(2595, -3.7779, -0.7396, 2.4861, -0.7854, 0, 0);
		testMethod(2600, -3.7816, -0.7272, 2.4861, -0.7854, 0, 0);
		testMethod(2605, -3.7852, -0.7148, 2.4861, -0.7854, 0, 0);
		testMethod(2610, -3.7887, -0.7023, 2.4861, -0.7854, 0, 0);
		testMethod(2615, -3.7922, -0.6899, 2.4861, -0.7854, 0, 0);
		testMethod(2620, -3.7956, -0.6775, 2.4861, -0.7854, 0, 0);
		testMethod(2625, -3.799, -0.665, 2.4861, -0.7854, 0, 0);
		testMethod(2630, -3.8023, -0.6526, 2.4861, -0.7854, 0, 0);
		testMethod(2635, -3.8055, -0.6402, 2.4861, -0.7854, 0, 0);
		testMethod(2640, -3.8087, -0.6278, 2.4861, -0.7854, 0, 0);
		testMethod(2645, -3.8118, -0.6153, 2.4861, -0.7854, 0, 0);
		testMethod(2650, -3.8148, -0.6029, 2.4861, -0.7854, 0, 0);
		testMethod(2655, -3.8178, -0.5905, 2.4861, -0.7854, 0, 0);
		testMethod(2660, -3.8207, -0.578, 2.4861, -0.7854, 0, 0);
		testMethod(2665, -3.8236, -0.5656, 2.4861, -0.7854, 0, 0);
		testMethod(2670, -3.8264, -0.5532, 2.4861, -0.7854, 0, 0);
		testMethod(2675, -3.8291, -0.5407, 2.4861, -0.7854, 0, 0);
		testMethod(2680, -3.8318, -0.5283, 2.4861, -0.7854, 0, 0);
		testMethod(2685, -3.8344, -0.5159, 2.4861, -0.7854, 0, 0);
		testMethod(2690, -3.8369, -0.5034, 2.4861, -0.7854, 0, 0);
		testMethod(2695, -3.8394, -0.491, 2.4861, -0.7854, 0, 0);
		testMethod(2700, -3.8419, -0.4786, 2.4861, -0.7854, 0, 0);
		testMethod(2705, -3.8442, -0.4662, 2.4861, -0.7854, 0, 0);
		testMethod(2710, -3.8465, -0.4537, 2.4861, -0.7854, 0, 0);
		testMethod(2715, -3.8488, -0.4413, 2.4861, -0.7854, 0, 0);
		testMethod(2720, -3.8509, -0.4289, 2.4861, -0.7854, 0, 0);
		testMethod(2725, -3.853, -0.4164, 2.4861, -0.7854, 0, 0);
		testMethod(2730, -3.8551, -0.404, 2.4861, -0.7854, 0, 0);
		testMethod(2735, -3.8571, -0.3916, 2.4861, -0.7854, 0, 0);
		testMethod(2740, -3.859, -0.3791, 2.4861, -0.7854, 0, 0);
		testMethod(2745, -3.8609, -0.3667, 2.4861, -0.7854, 0, 0);
		testMethod(2750, -3.8627, -0.3543, 2.4861, -0.7854, 0, 0);
		testMethod(2755, -3.8644, -0.3418, 2.4861, -0.7854, 0, 0);
		testMethod(2760, -3.8661, -0.3294, 2.4861, -0.7854, 0, 0);
		testMethod(2765, -3.8677, -0.317, 2.4861, -0.7854, 0, 0);
		testMethod(2770, -3.8693, -0.3046, 2.4861, -0.7854, 0, 0);
		testMethod(2775, -3.8708, -0.2921, 2.4861, -0.7854, 0, 0);
		testMethod(2780, -3.8722, -0.2797, 2.4861, -0.7854, 0, 0);
		testMethod(2785, -3.8736, -0.2673, 2.4861, -0.7854, 0, 0);
		testMethod(2790, -3.8749, -0.2548, 2.4861, -0.7854, 0, 0);
		testMethod(2795, -3.8761, -0.2424, 2.4861, -0.7854, 0, 0);
		testMethod(2800, -3.8773, -0.2303, 2.424, -0.7854, 0, 0);
		testMethod(2805, -3.8784, -0.2185, 2.3618, -0.7854, 0, 0);
		testMethod(2810, -3.8795, -0.207, 2.2997, -0.7854, 0, 0);
		testMethod(2815, -3.8805, -0.1958, 2.2375, -0.7854, 0, 0);
		testMethod(2820, -3.8814, -0.1849, 2.1754, -0.7854, 0, 0);
		testMethod(2825, -3.8823, -0.1743, 2.1132, -0.7854, 0, 0);
		testMethod(2830, -3.8832, -0.1641, 2.0511, -0.7854, 0, 0);
		testMethod(2835, -3.884, -0.1541, 1.9889, -0.7854, 0, 0);
		testMethod(2840, -3.8847, -0.1445, 1.9268, -0.7854, 0, 0);
		testMethod(2845, -3.8854, -0.1352, 1.8646, -0.7854, 0, 0);
		testMethod(2850, -3.8861, -0.1262, 1.8025, -0.7854, 0, 0);
		testMethod(2855, -3.8867, -0.1175, 1.7403, -0.7854, 0, 0);
		testMethod(2860, -3.8872, -0.1091, 1.6781, -0.7854, 0, 0);
		testMethod(2865, -3.8878, -0.101, 1.616, -0.7854, 0, 0);
		testMethod(2870, -3.8883, -0.0932, 1.5538, -0.7854, 0, 0);
		testMethod(2875, -3.8887, -0.0858, 1.4917, -0.7854, 0, 0);
		testMethod(2880, -3.8891, -0.0786, 1.4295, -0.7854, 0, 0);
		testMethod(2885, -3.8895, -0.0718, 1.3674, -0.7854, 0, 0);
		testMethod(2890, -3.8898, -0.0653, 1.3052, -0.7854, 0, 0);
		testMethod(2895, -3.8901, -0.059, 1.2431, -0.7854, 0, 0);
		testMethod(2900, -3.8904, -0.0531, 1.1809, -0.7854, 0, 0);
		testMethod(2905, -3.8907, -0.0475, 1.1188, -0.7854, 0, 0);
		testMethod(2910, -3.8909, -0.0423, 1.0566, -0.7854, 0, 0);
		testMethod(2915, -3.8911, -0.0373, 0.9945, -0.7854, 0, 0);
		testMethod(2920, -3.8913, -0.0326, 0.9323, -0.7854, 0, 0);
		testMethod(2925, -3.8914, -0.0283, 0.8702, -0.7854, 0, 0);
		testMethod(2930, -3.8916, -0.0242, 0.808, -0.7854, 0, 0);
		testMethod(2935, -3.8917, -0.0205, 0.7458, -0.7854, 0, 0);
		testMethod(2940, -3.8918, -0.0171, 0.6837, -0.7854, 0, 0);
		testMethod(2945, -3.8918, -0.014, 0.6215, -0.7854, 0, 0);
		testMethod(2950, -3.8919, -0.0112, 0.5594, -0.7854, 0, 0);
		testMethod(2955, -3.8919, -0.0087, 0.4972, -0.7854, 0, 0);
		testMethod(2960, -3.892, -0.0065, 0.4351, -0.7854, 0, 0);
		testMethod(2965, -3.892, -0.0047, 0.3729, -0.7854, 0, 0);
		testMethod(2970, -3.892, -0.0031, 0.3108, -0.7854, 0, 0);
		testMethod(2975, -3.892, -0.0019, 0.2486, -0.7854, 0, 0);
		testMethod(2980, -3.8921, -0.0009, 0.1865, -0.7854, 0, 0);
		testMethod(2985, -3.8921, -0.0003, 0.1243, -0.7854, 0, 0);
		testMethod(2990, -3.8921, -0, 0.0622, -0.7854, 0, 0);
		testMethod(2995, -3.8921, -0, -0, -0.7854, 0, 0);
		testMethod(2995, -3.8921, -0, -0, -0.7854, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}