package org.usfirst.frc.team1197.robot;

public class BoilerPos3 extends TorTrajectory {

	public BoilerPos3() {
		super(2.6921, -0.7854);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, 0, 0.0003, 0.0624, 0, 0, 0);
		testMethod(10, 0, 0.0009, 0.1249, 0, 0, 0);
		testMethod(15, 0, 0.0019, 0.1873, 0, 0, 0);
		testMethod(20, 0, 0.0031, 0.2497, 0, 0, 0);
		testMethod(25, 0, 0.0047, 0.3122, 0, 0, 0);
		testMethod(30, 0.0001, 0.0066, 0.3746, 0, 0, 0);
		testMethod(35, 0.0001, 0.0087, 0.437, 0, 0, 0);
		testMethod(40, 0.0002, 0.0112, 0.4995, 0, 0, 0);
		testMethod(45, 0.0002, 0.014, 0.5619, 0, 0, 0);
		testMethod(50, 0.0003, 0.0172, 0.6243, 0, 0, 0);
		testMethod(55, 0.0004, 0.0206, 0.6867, 0, 0, 0);
		testMethod(60, 0.0005, 0.0243, 0.7492, 0, 0, 0);
		testMethod(65, 0.0006, 0.0284, 0.8116, 0, 0, 0);
		testMethod(70, 0.0008, 0.0328, 0.874, 0, 0, 0);
		testMethod(75, 0.001, 0.0375, 0.9365, 0, 0, 0);
		testMethod(80, 0.0012, 0.0425, 0.9989, 0, 0, 0);
		testMethod(85, 0.0014, 0.0478, 1.0613, 0, 0, 0);
		testMethod(90, 0.0016, 0.0534, 1.1238, 0, 0, 0);
		testMethod(95, 0.0019, 0.0593, 1.1862, 0, 0, 0);
		testMethod(100, 0.0022, 0.0656, 1.2486, 0, 0, 0);
		testMethod(105, 0.0026, 0.0721, 1.3111, 0, 0, 0);
		testMethod(110, 0.003, 0.079, 1.3735, 0, 0, 0);
		testMethod(115, 0.0034, 0.0862, 1.4359, 0, 0, 0);
		testMethod(120, 0.0038, 0.0936, 1.4984, 0, 0, 0);
		testMethod(125, 0.0043, 0.1015, 1.5608, 0, 0, 0);
		testMethod(130, 0.0048, 0.1096, 1.6232, 0, 0, 0);
		testMethod(135, 0.0054, 0.118, 1.6857, 0, 0, 0);
		testMethod(140, 0.006, 0.1267, 1.7481, 0, 0, 0);
		testMethod(145, 0.0067, 0.1358, 1.8105, 0, 0, 0);
		testMethod(150, 0.0074, 0.1452, 1.873, 0, 0, 0);
		testMethod(155, 0.0081, 0.1548, 1.9354, 0, 0, 0);
		testMethod(160, 0.0089, 0.1648, 1.9978, 0, 0, 0);
		testMethod(165, 0.0098, 0.1751, 2.0602, 0, 0, 0);
		testMethod(170, 0.0107, 0.1857, 2.1227, 0, 0, 0);
		testMethod(175, 0.0116, 0.1967, 2.1851, 0, 0, 0);
		testMethod(180, 0.0126, 0.2079, 2.2475, 0, 0, 0);
		testMethod(185, 0.0137, 0.2194, 2.31, 0, 0, 0);
		testMethod(190, 0.0148, 0.2313, 2.3724, 0, 0, 0);
		testMethod(195, 0.016, 0.2435, 2.4348, 0, 0, 0);
		testMethod(200, 0.0173, 0.256, 2.4973, 0, 0, 0);
		testMethod(205, 0.0186, 0.2685, 2.4973, 0, 0, 0);
		testMethod(210, 0.02, 0.2809, 2.4973, 0, 0, 0);
		testMethod(215, 0.0214, 0.2934, 2.4973, 0, 0, 0);
		testMethod(220, 0.0229, 0.3059, 2.4973, 0, 0, 0);
		testMethod(225, 0.0245, 0.3184, 2.4973, 0, 0, 0);
		testMethod(230, 0.0261, 0.3309, 2.4973, 0, 0, 0);
		testMethod(235, 0.0278, 0.3434, 2.4973, 0, 0, 0);
		testMethod(240, 0.0295, 0.3559, 2.4973, 0, 0, 0);
		testMethod(245, 0.0313, 0.3683, 2.4973, 0, 0, 0);
		testMethod(250, 0.0332, 0.3808, 2.4973, 0, 0, 0);
		testMethod(255, 0.0351, 0.3933, 2.4973, 0, 0, 0);
		testMethod(260, 0.0371, 0.4058, 2.4973, 0, 0, 0);
		testMethod(265, 0.0392, 0.4183, 2.4973, 0, 0, 0);
		testMethod(270, 0.0413, 0.4308, 2.4973, 0, 0, 0);
		testMethod(275, 0.0435, 0.4433, 2.4973, 0, 0, 0);
		testMethod(280, 0.0457, 0.4558, 2.4973, 0, 0, 0);
		testMethod(285, 0.0481, 0.4682, 2.4973, 0, 0, 0);
		testMethod(290, 0.0504, 0.4807, 2.4973, 0, 0, 0);
		testMethod(295, 0.0529, 0.4932, 2.4973, 0, 0, 0);
		testMethod(300, 0.0554, 0.5057, 2.4973, 0, 0, 0);
		testMethod(305, 0.0579, 0.5182, 2.4973, 0, 0, 0);
		testMethod(310, 0.0605, 0.5307, 2.4973, 0, 0, 0);
		testMethod(315, 0.0632, 0.5432, 2.4973, 0, 0, 0);
		testMethod(320, 0.066, 0.5556, 2.4973, 0, 0, 0);
		testMethod(325, 0.0688, 0.5681, 2.4973, 0, 0, 0);
		testMethod(330, 0.0717, 0.5806, 2.4973, 0, 0, 0);
		testMethod(335, 0.0746, 0.5931, 2.4973, 0, 0, 0);
		testMethod(340, 0.0776, 0.6056, 2.4973, 0, 0, 0);
		testMethod(345, 0.0806, 0.6181, 2.4973, 0, 0, 0);
		testMethod(350, 0.0838, 0.6306, 2.4973, 0, 0, 0);
		testMethod(355, 0.087, 0.643, 2.4973, 0, 0, 0);
		testMethod(360, 0.0902, 0.6555, 2.4973, 0, 0, 0);
		testMethod(365, 0.0935, 0.668, 2.4973, 0, 0, 0);
		testMethod(370, 0.0969, 0.6805, 2.4973, 0, 0, 0);
		testMethod(375, 0.1003, 0.693, 2.4973, 0, 0, 0);
		testMethod(380, 0.1038, 0.7055, 2.4973, 0, 0, 0);
		testMethod(385, 0.1074, 0.718, 2.4973, 0, 0, 0);
		testMethod(390, 0.111, 0.7305, 2.4973, 0, 0, 0);
		testMethod(395, 0.1147, 0.7429, 2.4973, 0, 0, 0);
		testMethod(400, 0.1184, 0.7554, 2.4973, 0, 0, 0);
		testMethod(405, 0.1222, 0.7679, 2.4973, 0, 0, 0);
		testMethod(410, 0.1261, 0.7804, 2.4973, 0, 0, 0);
		testMethod(415, 0.13, 0.7929, 2.4973, 0, 0, 0);
		testMethod(420, 0.134, 0.8054, 2.4973, 0, 0, 0);
		testMethod(425, 0.1381, 0.8179, 2.4973, 0, 0, 0);
		testMethod(430, 0.1422, 0.8303, 2.4973, 0, 0, 0);
		testMethod(435, 0.1464, 0.8428, 2.4973, 0, 0, 0);
		testMethod(440, 0.1506, 0.8553, 2.4973, 0, 0, 0);
		testMethod(445, 0.1549, 0.8678, 2.4973, 0, 0, 0);
		testMethod(450, 0.1593, 0.8803, 2.4973, 0, 0, 0);
		testMethod(455, 0.1637, 0.8928, 2.4973, 0, 0, 0);
		testMethod(460, 0.1682, 0.9053, 2.4973, 0, 0, 0);
		testMethod(465, 0.1728, 0.9177, 2.4973, 0, 0, 0);
		testMethod(470, 0.1774, 0.9302, 2.4973, 0, 0, 0);
		testMethod(475, 0.1821, 0.9427, 2.4973, 0, 0, 0);
		testMethod(480, 0.1868, 0.9552, 2.4973, 0, 0, 0);
		testMethod(485, 0.1916, 0.9677, 2.4973, 0, 0, 0);
		testMethod(490, 0.1965, 0.9802, 2.4973, 0, 0, 0);
		testMethod(495, 0.2015, 0.9927, 2.4973, 0, 0, 0);
		testMethod(500, 0.2064, 1.0052, 2.4973, 0, 0, 0);
		testMethod(505, 0.2115, 1.0176, 2.4973, 0, 0, 0);
		testMethod(510, 0.2166, 1.0301, 2.4973, 0, 0, 0);
		testMethod(515, 0.2218, 1.0426, 2.4973, 0, 0, 0);
		testMethod(520, 0.227, 1.0551, 2.4973, 0, 0, 0);
		testMethod(525, 0.2324, 1.0676, 2.4973, 0, 0, 0);
		testMethod(530, 0.2377, 1.0801, 2.4973, 0, 0, 0);
		testMethod(535, 0.2432, 1.0926, 2.4973, 0, 0, 0);
		testMethod(540, 0.2487, 1.105, 2.4973, 0, 0, 0);
		testMethod(545, 0.2542, 1.1175, 2.4973, 0, 0, 0);
		testMethod(550, 0.2598, 1.13, 2.4973, 0, 0, 0);
		testMethod(555, 0.2655, 1.1425, 2.4973, 0, 0, 0);
		testMethod(560, 0.2713, 1.155, 2.4973, 0, 0, 0);
		testMethod(565, 0.2771, 1.1675, 2.4973, 0, 0, 0);
		testMethod(570, 0.2829, 1.18, 2.4973, 0, 0, 0);
		testMethod(575, 0.2889, 1.1924, 2.4973, 0, 0, 0);
		testMethod(580, 0.2948, 1.2049, 2.4973, 0, 0, 0);
		testMethod(585, 0.3009, 1.2174, 2.4973, 0, 0, 0);
		testMethod(590, 0.307, 1.2299, 2.4973, 0, 0, 0);
		testMethod(595, 0.3132, 1.2424, 2.4973, 0, 0, 0);
		testMethod(600, 0.3194, 1.2549, 2.4973, 0, 0, 0);
		testMethod(605, 0.3258, 1.2674, 2.4973, 0, 0, 0);
		testMethod(610, 0.3321, 1.2799, 2.4973, 0, 0, 0);
		testMethod(615, 0.3386, 1.2923, 2.4973, 0, 0, 0);
		testMethod(620, 0.345, 1.3048, 2.4973, 0, 0, 0);
		testMethod(625, 0.3516, 1.3173, 2.4973, 0, 0, 0);
		testMethod(630, 0.3582, 1.3298, 2.4973, 0, 0, 0);
		testMethod(635, 0.3649, 1.3423, 2.4973, 0, 0, 0);
		testMethod(640, 0.3716, 1.3548, 2.4973, 0, 0, 0);
		testMethod(645, 0.3784, 1.3673, 2.4973, 0, 0, 0);
		testMethod(650, 0.3853, 1.3797, 2.4973, 0, 0, 0);
		testMethod(655, 0.3922, 1.3922, 2.4973, 0, 0, 0);
		testMethod(660, 0.3992, 1.4047, 2.4973, 0, 0, 0);
		testMethod(665, 0.4063, 1.4172, 2.4973, 0, 0, 0);
		testMethod(670, 0.4134, 1.4297, 2.4973, 0, 0, 0);
		testMethod(675, 0.4206, 1.4422, 2.4973, 0, 0, 0);
		testMethod(680, 0.4278, 1.4547, 2.4973, 0, 0, 0);
		testMethod(685, 0.4351, 1.4671, 2.4973, 0, 0, 0);
		testMethod(690, 0.4425, 1.4796, 2.4973, 0, 0, 0);
		testMethod(695, 0.4499, 1.4921, 2.4973, 0, 0, 0);
		testMethod(700, 0.4574, 1.5046, 2.4973, 0, 0, 0);
		testMethod(705, 0.465, 1.5171, 2.4973, 0, 0, 0);
		testMethod(710, 0.4726, 1.5296, 2.4973, 0, 0, 0);
		testMethod(715, 0.4803, 1.5421, 2.4973, 0, 0, 0);
		testMethod(720, 0.488, 1.5546, 2.4973, 0, 0, 0);
		testMethod(725, 0.4958, 1.567, 2.4973, 0, 0, 0);
		testMethod(730, 0.5037, 1.5795, 2.4973, 0, 0, 0);
		testMethod(735, 0.5116, 1.592, 2.4973, 0, 0, 0);
		testMethod(740, 0.5196, 1.6045, 2.4973, 0, 0, 0);
		testMethod(745, 0.5277, 1.617, 2.4973, 0, 0, 0);
		testMethod(750, 0.5358, 1.6295, 2.4973, 0, 0, 0);
		testMethod(755, 0.544, 1.642, 2.4973, 0, 0, 0);
		testMethod(760, 0.5522, 1.6544, 2.4973, 0, 0, 0);
		testMethod(765, 0.5605, 1.6669, 2.4973, 0, 0, 0);
		testMethod(770, 0.5689, 1.6794, 2.4973, 0, 0, 0);
		testMethod(775, 0.5773, 1.6916, 2.4348, 0, 0, 0);
		testMethod(780, 0.5858, 1.7035, 2.3724, 0, 0, 0);
		testMethod(785, 0.5943, 1.715, 2.31, -0, -0, -0.0019);
		testMethod(790, 0.6029, 1.7262, 2.2475, -0, -0.0005, -0.0941);
		testMethod(795, 0.6116, 1.7372, 2.1851, -0, -0.0017, -0.2403);
		testMethod(800, 0.6203, 1.7478, 2.1227, -0, -0.0036, -0.3918);
		testMethod(805, 0.6291, 1.7581, 2.0602, -0, -0.0064, -0.5485);
		testMethod(810, 0.6379, 1.7681, 1.9978, -0.0001, -0.0099, -0.7101);
		testMethod(815, 0.6467, 1.7777, 1.9354, -0.0001, -0.0143, -0.8765);
		testMethod(820, 0.6557, 1.7871, 1.873, -0.0002, -0.0196, -1.0474);
		testMethod(825, 0.6646, 1.7962, 1.8105, -0.0003, -0.0257, -1.2226);
		testMethod(830, 0.6736, 1.8049, 1.7481, -0.0005, -0.0327, -1.402);
		testMethod(835, 0.6827, 1.8133, 1.6857, -0.0007, -0.0406, -1.5852);
		testMethod(840, 0.6917, 1.8214, 1.6232, -0.0009, -0.0495, -1.772);
		testMethod(845, 0.7009, 1.8293, 1.5608, -0.0012, -0.0593, -1.9623);
		testMethod(850, 0.71, 1.8367, 1.4984, -0.0015, -0.0701, -2.1556);
		testMethod(855, 0.7192, 1.8439, 1.4359, -0.0019, -0.0818, -2.3519);
		testMethod(860, 0.7285, 1.8508, 1.3735, -0.0023, -0.0946, -2.5507);
		testMethod(865, 0.7377, 1.8573, 1.3111, -0.0028, -0.1083, -2.7519);
		testMethod(870, 0.7471, 1.8636, 1.2486, -0.0034, -0.1231, -2.9551);
		testMethod(875, 0.7564, 1.8695, 1.1862, -0.004, -0.1389, -3.1601);
		testMethod(880, 0.7657, 1.8751, 1.1238, -0.0048, -0.1557, -3.3666);
		testMethod(885, 0.7751, 1.8804, 1.0613, -0.0056, -0.1736, -3.5743);
		testMethod(890, 0.7845, 1.8854, 0.9989, -0.0065, -0.1925, -3.7828);
		testMethod(895, 0.794, 1.8901, 0.9365, -0.0075, -0.2125, -3.992);
		testMethod(900, 0.8034, 1.8945, 0.874, -0.0086, -0.2335, -4.2014);
		testMethod(905, 0.8129, 1.8986, 0.8116, -0.0099, -0.2555, -4.4108);
		testMethod(910, 0.8224, 1.9023, 0.7492, -0.0112, -0.2786, -4.6199);
		testMethod(915, 0.832, 1.9057, 0.6867, -0.0127, -0.3028, -4.8283);
		testMethod(920, 0.8415, 1.9089, 0.6243, -0.0142, -0.328, -5.0357);
		testMethod(925, 0.851, 1.9117, 0.5619, -0.0159, -0.3542, -5.2419);
		testMethod(930, 0.8606, 1.9142, 0.4995, -0.0178, -0.3814, -5.4464);
		testMethod(935, 0.8702, 1.9163, 0.437, -0.0198, -0.4096, -5.649);
		testMethod(940, 0.8798, 1.9182, 0.3746, -0.0219, -0.4389, -5.8493);
		testMethod(945, 0.8894, 1.9198, 0.3122, -0.0241, -0.4691, -6.047);
		testMethod(950, 0.899, 1.921, 0.2497, -0.0266, -0.5003, -6.2418);
		testMethod(955, 0.9086, 1.922, 0.1873, -0.0292, -0.5325, -6.4334);
		testMethod(960, 0.9182, 1.9226, 0.1249, -0.0319, -0.5656, -6.6214);
		testMethod(965, 0.9278, 1.9229, 0.0624, -0.0348, -0.5996, -6.8055);
		testMethod(970, 0.9374, 1.9229, 0, -0.0379, -0.6346, -6.9854);
		testMethod(975, 0.947, 1.9229, 0, -0.0412, -0.6705, -7.1831);
		testMethod(980, 0.9566, 1.9229, 0, -0.0446, -0.7074, -7.3808);
		testMethod(985, 0.9663, 1.9229, 0, -0.0482, -0.7453, -7.5785);
		testMethod(990, 0.9759, 1.9229, 0, -0.0521, -0.7842, -7.7763);
		testMethod(995, 0.9855, 1.9229, 0, -0.0561, -0.824, -7.974);
		testMethod(1000, 0.9951, 1.9229, 0, -0.0603, -0.8649, -8.1717);
		testMethod(1005, 1.0047, 1.9229, 0, -0.0647, -0.9067, -8.3694);
		testMethod(1010, 1.0143, 1.9229, 0, -0.0694, -0.9489, -8.4418);
		testMethod(1015, 1.0239, 1.9229, 0, -0.0742, -0.9901, -8.2343);
		testMethod(1020, 1.0336, 1.9229, 0, -0.0793, -1.0303, -8.0366);
		testMethod(1025, 1.0432, 1.9229, 0, -0.0845, -1.0695, -7.8389);
		testMethod(1030, 1.0528, 1.9229, 0, -0.09, -1.1077, -7.6412);
		testMethod(1035, 1.0624, 1.9229, 0, -0.0956, -1.1449, -7.4434);
		testMethod(1040, 1.072, 1.9229, 0, -0.1014, -1.1811, -7.2457);
		testMethod(1045, 1.0816, 1.9229, 0, -0.1074, -1.2164, -7.048);
		testMethod(1050, 1.0912, 1.9229, 0, -0.1136, -1.2506, -6.8503);
		testMethod(1055, 1.1009, 1.9229, 0, -0.1199, -1.2839, -6.6526);
		testMethod(1060, 1.1105, 1.9229, 0, -0.1264, -1.3162, -6.4548);
		testMethod(1065, 1.1201, 1.9229, 0, -0.1331, -1.3475, -6.2571);
		testMethod(1070, 1.1297, 1.9229, 0, -0.1399, -1.3778, -6.0594);
		testMethod(1075, 1.1393, 1.9229, 0, -0.1468, -1.4071, -5.8617);
		testMethod(1080, 1.1489, 1.9229, 0, -0.1539, -1.4354, -5.664);
		testMethod(1085, 1.1585, 1.9229, 0, -0.1612, -1.4627, -5.4663);
		testMethod(1090, 1.1682, 1.9229, 0, -0.1686, -1.4891, -5.2685);
		testMethod(1095, 1.1778, 1.9229, 0, -0.1761, -1.5144, -5.0708);
		testMethod(1100, 1.1874, 1.9229, 0, -0.1837, -1.5388, -4.8731);
		testMethod(1105, 1.197, 1.9229, 0, -0.1915, -1.5622, -4.6754);
		testMethod(1110, 1.2066, 1.9229, 0, -0.1993, -1.5845, -4.4777);
		testMethod(1115, 1.2162, 1.9229, 0, -0.2073, -1.6059, -4.2799);
		testMethod(1120, 1.2258, 1.9229, 0, -0.2154, -1.6264, -4.0822);
		testMethod(1125, 1.2355, 1.9229, 0, -0.2236, -1.6458, -3.8845);
		testMethod(1130, 1.2451, 1.9229, 0, -0.2318, -1.6642, -3.6868);
		testMethod(1135, 1.2547, 1.9229, 0, -0.2402, -1.6817, -3.4891);
		testMethod(1140, 1.2643, 1.9229, 0, -0.2487, -1.6981, -3.2913);
		testMethod(1145, 1.2739, 1.9229, 0, -0.2572, -1.7136, -3.0936);
		testMethod(1150, 1.2835, 1.9229, 0, -0.2658, -1.7281, -2.8959);
		testMethod(1155, 1.2931, 1.9229, 0, -0.2745, -1.7415, -2.6982);
		testMethod(1160, 1.3028, 1.9229, 0, -0.2832, -1.7541, -2.5005);
		testMethod(1165, 1.3124, 1.9229, 0, -0.292, -1.7656, -2.3027);
		testMethod(1170, 1.322, 1.9229, 0, -0.3009, -1.7761, -2.105);
		testMethod(1175, 1.3316, 1.9229, 0, -0.3098, -1.7856, -1.9073);
		testMethod(1180, 1.3412, 1.9229, 0, -0.3187, -1.7942, -1.7096);
		testMethod(1185, 1.3508, 1.9229, 0, -0.3277, -1.8017, -1.5119);
		testMethod(1190, 1.3605, 1.9229, 0, -0.3367, -1.8083, -1.3141);
		testMethod(1195, 1.3701, 1.9229, 0, -0.3458, -1.8139, -1.1164);
		testMethod(1200, 1.3797, 1.9229, 0, -0.3549, -1.8185, -0.9187);
		testMethod(1205, 1.3893, 1.9229, 0, -0.364, -1.8221, -0.721);
		testMethod(1210, 1.3989, 1.9229, 0, -0.3731, -1.8247, -0.5233);
		testMethod(1215, 1.4085, 1.9229, 0, -0.3822, -1.8263, -0.3255);
		testMethod(1220, 1.4181, 1.9229, 0, -0.3914, -1.827, -0.1278);
		testMethod(1225, 1.4278, 1.9229, 0, -0.4005, -1.8266, 0.0702);
		testMethod(1230, 1.4374, 1.9229, 0, -0.4096, -1.8253, 0.268);
		testMethod(1235, 1.447, 1.9229, 0, -0.4187, -1.8229, 0.4657);
		testMethod(1240, 1.4566, 1.9229, 0, -0.4278, -1.8196, 0.6634);
		testMethod(1245, 1.4662, 1.9229, 0, -0.4369, -1.8153, 0.8611);
		testMethod(1250, 1.4758, 1.9229, 0, -0.446, -1.81, 1.0588);
		testMethod(1255, 1.4854, 1.9229, 0, -0.455, -1.8037, 1.2566);
		testMethod(1260, 1.4951, 1.9229, 0, -0.464, -1.7965, 1.4543);
		testMethod(1265, 1.5047, 1.9229, 0, -0.473, -1.7882, 1.652);
		testMethod(1270, 1.5143, 1.9229, 0, -0.4819, -1.779, 1.8497);
		testMethod(1275, 1.5239, 1.9229, 0, -0.4908, -1.7687, 2.0474);
		testMethod(1280, 1.5335, 1.9229, 0, -0.4996, -1.7575, 2.2452);
		testMethod(1285, 1.5431, 1.9229, 0, -0.5084, -1.7453, 2.4429);
		testMethod(1290, 1.5527, 1.9229, 0, -0.5171, -1.7321, 2.6406);
		testMethod(1295, 1.5624, 1.9229, 0, -0.5257, -1.7179, 2.8383);
		testMethod(1300, 1.572, 1.9229, 0, -0.5342, -1.7027, 3.036);
		testMethod(1305, 1.5816, 1.9229, 0, -0.5427, -1.6865, 3.2338);
		testMethod(1310, 1.5912, 1.9229, 0, -0.5511, -1.6694, 3.4315);
		testMethod(1315, 1.6008, 1.9229, 0, -0.5594, -1.6512, 3.6292);
		testMethod(1320, 1.6104, 1.9229, 0, -0.5676, -1.6321, 3.8269);
		testMethod(1325, 1.62, 1.9229, 0, -0.5757, -1.612, 4.0246);
		testMethod(1330, 1.6297, 1.9229, 0, -0.5837, -1.5909, 4.2224);
		testMethod(1335, 1.6393, 1.9229, 0, -0.5916, -1.5688, 4.4201);
		testMethod(1340, 1.6489, 1.9229, 0, -0.5994, -1.5457, 4.6178);
		testMethod(1345, 1.6585, 1.9229, 0, -0.6071, -1.5216, 4.8155);
		testMethod(1350, 1.6681, 1.9229, 0, -0.6146, -1.4965, 5.0132);
		testMethod(1355, 1.6777, 1.9229, 0, -0.622, -1.4705, 5.211);
		testMethod(1360, 1.6873, 1.9229, 0, -0.6293, -1.4434, 5.4087);
		testMethod(1365, 1.697, 1.9229, 0, -0.6365, -1.4154, 5.6064);
		testMethod(1370, 1.7066, 1.9229, 0, -0.6435, -1.3864, 5.8041);
		testMethod(1375, 1.7162, 1.9229, 0, -0.6503, -1.3564, 6.0018);
		testMethod(1380, 1.7258, 1.9229, 0, -0.657, -1.3254, 6.1996);
		testMethod(1385, 1.7354, 1.9229, 0, -0.6636, -1.2934, 6.3973);
		testMethod(1390, 1.745, 1.9229, 0, -0.67, -1.2604, 6.595);
		testMethod(1395, 1.7546, 1.9229, 0, -0.6762, -1.2265, 6.7927);
		testMethod(1400, 1.7643, 1.9229, 0, -0.6822, -1.1915, 6.9904);
		testMethod(1405, 1.7739, 1.9226, -0.0624, -0.6881, -1.1554, 7.2251);
		testMethod(1410, 1.7835, 1.922, -0.1249, -0.6938, -1.1181, 7.4549);
		testMethod(1415, 1.7931, 1.921, -0.1873, -0.6993, -1.0797, 7.6795);
		testMethod(1420, 1.8027, 1.9198, -0.2497, -0.7046, -1.0402, 7.8986);
		testMethod(1425, 1.8123, 1.9182, -0.3122, -0.7097, -0.9997, 8.1119);
		testMethod(1430, 1.8219, 1.9163, -0.3746, -0.7146, -0.9581, 8.3191);
		testMethod(1435, 1.8315, 1.9142, -0.437, -0.7193, -0.9155, 8.5199);
		testMethod(1440, 1.841, 1.9117, -0.4995, -0.7237, -0.8725, 8.5864);
		testMethod(1445, 1.8506, 1.9089, -0.5619, -0.728, -0.8306, 8.3758);
		testMethod(1450, 1.8601, 1.9057, -0.6243, -0.732, -0.7898, 8.1722);
		testMethod(1455, 1.8696, 1.9023, -0.6867, -0.7359, -0.75, 7.9654);
		testMethod(1460, 1.8791, 1.8986, -0.7492, -0.7395, -0.7112, 7.7557);
		testMethod(1465, 1.8886, 1.8945, -0.8116, -0.743, -0.6735, 7.5434);
		testMethod(1470, 1.8981, 1.8901, -0.874, -0.7463, -0.6368, 7.329);
		testMethod(1475, 1.9075, 1.8854, -0.9365, -0.7494, -0.6013, 7.1126);
		testMethod(1480, 1.9169, 1.8804, -0.9989, -0.7523, -0.5668, 6.8946);
		testMethod(1485, 1.9263, 1.8751, -1.0613, -0.755, -0.5334, 6.6753);
		testMethod(1490, 1.9357, 1.8695, -1.1238, -0.7576, -0.5011, 6.4551);
		testMethod(1495, 1.945, 1.8636, -1.1862, -0.7601, -0.47, 6.2342);
		testMethod(1500, 1.9543, 1.8573, -1.2486, -0.7623, -0.4399, 6.013);
		testMethod(1505, 1.9636, 1.8508, -1.3111, -0.7645, -0.4109, 5.7918);
		testMethod(1510, 1.9728, 1.8439, -1.3735, -0.7664, -0.3831, 5.5708);
		testMethod(1515, 1.982, 1.8367, -1.4359, -0.7683, -0.3563, 5.3504);
		testMethod(1520, 1.9912, 1.8293, -1.4984, -0.77, -0.3307, 5.1308);
		testMethod(1525, 2.0003, 1.8214, -1.5608, -0.7716, -0.3061, 4.9124);
		testMethod(1530, 2.0094, 1.8133, -1.6232, -0.7731, -0.2826, 4.6954);
		testMethod(1535, 2.0184, 1.8049, -1.6857, -0.7744, -0.2602, 4.4801);
		testMethod(1540, 2.0274, 1.7962, -1.7481, -0.7757, -0.2389, 4.2668);
		testMethod(1545, 2.0364, 1.7871, -1.8105, -0.7768, -0.2186, 4.0556);
		testMethod(1550, 2.0453, 1.7777, -1.873, -0.7779, -0.1994, 3.847);
		testMethod(1555, 2.0542, 1.7681, -1.9354, -0.7788, -0.1812, 3.6411);
		testMethod(1560, 2.063, 1.7581, -1.9978, -0.7797, -0.164, 3.4381);
		testMethod(1565, 2.0718, 1.7478, -2.0602, -0.7805, -0.1478, 3.2383);
		testMethod(1570, 2.0805, 1.7372, -2.1227, -0.7812, -0.1326, 3.042);
		testMethod(1575, 2.0891, 1.7262, -2.1851, -0.7818, -0.1183, 2.8493);
		testMethod(1580, 2.0977, 1.715, -2.2475, -0.7823, -0.105, 2.6604);
		testMethod(1585, 2.1063, 1.7035, -2.31, -0.7828, -0.0927, 2.4756);
		testMethod(1590, 2.1148, 1.6916, -2.3724, -0.7833, -0.0812, 2.295);
		testMethod(1595, 2.1232, 1.6794, -2.4348, -0.7836, -0.0706, 2.1189);
		testMethod(1600, 2.1316, 1.6669, -2.4973, -0.784, -0.0609, 1.9473);
		testMethod(1605, 2.1399, 1.6544, -2.4973, -0.7843, -0.052, 1.7787);
		testMethod(1610, 2.1481, 1.642, -2.4973, -0.7845, -0.0439, 1.6161);
		testMethod(1615, 2.1563, 1.6295, -2.4973, -0.7847, -0.0366, 1.4595);
		testMethod(1620, 2.1644, 1.617, -2.4973, -0.7849, -0.03, 1.3086);
		testMethod(1625, 2.1725, 1.6045, -2.4973, -0.785, -0.0242, 1.1635);
		testMethod(1630, 2.1804, 1.592, -2.4973, -0.7851, -0.0191, 1.024);
		testMethod(1635, 2.1884, 1.5795, -2.4973, -0.7852, -0.0147, 0.89);
		testMethod(1640, 2.1962, 1.567, -2.4973, -0.7853, -0.0109, 0.7614);
		testMethod(1645, 2.204, 1.5546, -2.4973, -0.7853, -0.0077, 0.6381);
		testMethod(1650, 2.2118, 1.5421, -2.4973, -0.7853, -0.0051, 0.52);
		testMethod(1655, 2.2195, 1.5296, -2.4973, -0.7853, -0.003, 0.407);
		testMethod(1660, 2.2271, 1.5171, -2.4973, -0.7854, -0.0015, 0.2989);
		testMethod(1665, 2.2346, 1.5046, -2.4973, -0.7854, -0.0006, 0.1958);
		testMethod(1670, 2.2421, 1.4921, -2.4973, -0.7854, -0.0001, 0.0975);
		testMethod(1675, 2.2496, 1.4796, -2.4973, -0.7854, 0, 0.0134);
		testMethod(1680, 2.2569, 1.4671, -2.4973, -0.7854, 0, 0);
		testMethod(1685, 2.2642, 1.4547, -2.4973, -0.7854, 0, 0);
		testMethod(1690, 2.2715, 1.4422, -2.4973, -0.7854, 0, 0);
		testMethod(1695, 2.2787, 1.4297, -2.4973, -0.7854, 0, 0);
		testMethod(1700, 2.2858, 1.4172, -2.4973, -0.7854, 0, 0);
		testMethod(1705, 2.2928, 1.4047, -2.4973, -0.7854, 0, 0);
		testMethod(1710, 2.2998, 1.3922, -2.4973, -0.7854, 0, 0);
		testMethod(1715, 2.3067, 1.3797, -2.4973, -0.7854, 0, 0);
		testMethod(1720, 2.3136, 1.3673, -2.4973, -0.7854, 0, 0);
		testMethod(1725, 2.3204, 1.3548, -2.4973, -0.7854, 0, 0);
		testMethod(1730, 2.3272, 1.3423, -2.4973, -0.7854, 0, 0);
		testMethod(1735, 2.3338, 1.3298, -2.4973, -0.7854, 0, 0);
		testMethod(1740, 2.3405, 1.3173, -2.4973, -0.7854, 0, 0);
		testMethod(1745, 2.347, 1.3048, -2.4973, -0.7854, 0, 0);
		testMethod(1750, 2.3535, 1.2923, -2.4973, -0.7854, 0, 0);
		testMethod(1755, 2.3599, 1.2799, -2.4973, -0.7854, 0, 0);
		testMethod(1760, 2.3663, 1.2674, -2.4973, -0.7854, 0, 0);
		testMethod(1765, 2.3726, 1.2549, -2.4973, -0.7854, 0, 0);
		testMethod(1770, 2.3789, 1.2424, -2.4973, -0.7854, 0, 0);
		testMethod(1775, 2.385, 1.2299, -2.4973, -0.7854, 0, 0);
		testMethod(1780, 2.3912, 1.2174, -2.4973, -0.7854, 0, 0);
		testMethod(1785, 2.3972, 1.2049, -2.4973, -0.7854, 0, 0);
		testMethod(1790, 2.4032, 1.1924, -2.4973, -0.7854, 0, 0);
		testMethod(1795, 2.4091, 1.18, -2.4973, -0.7854, 0, 0);
		testMethod(1800, 2.415, 1.1675, -2.4973, -0.7854, 0, 0);
		testMethod(1805, 2.4208, 1.155, -2.4973, -0.7854, 0, 0);
		testMethod(1810, 2.4266, 1.1425, -2.4973, -0.7854, 0, 0);
		testMethod(1815, 2.4322, 1.13, -2.4973, -0.7854, 0, 0);
		testMethod(1820, 2.4379, 1.1175, -2.4973, -0.7854, 0, 0);
		testMethod(1825, 2.4434, 1.105, -2.4973, -0.7854, 0, 0);
		testMethod(1830, 2.4489, 1.0926, -2.4973, -0.7854, 0, 0);
		testMethod(1835, 2.4543, 1.0801, -2.4973, -0.7854, 0, 0);
		testMethod(1840, 2.4597, 1.0676, -2.4973, -0.7854, 0, 0);
		testMethod(1845, 2.465, 1.0551, -2.4973, -0.7854, 0, 0);
		testMethod(1850, 2.4703, 1.0426, -2.4973, -0.7854, 0, 0);
		testMethod(1855, 2.4754, 1.0301, -2.4973, -0.7854, 0, 0);
		testMethod(1860, 2.4806, 1.0176, -2.4973, -0.7854, 0, 0);
		testMethod(1865, 2.4856, 1.0052, -2.4973, -0.7854, 0, 0);
		testMethod(1870, 2.4906, 0.9927, -2.4973, -0.7854, 0, 0);
		testMethod(1875, 2.4955, 0.9802, -2.4973, -0.7854, 0, 0);
		testMethod(1880, 2.5004, 0.9677, -2.4973, -0.7854, 0, 0);
		testMethod(1885, 2.5052, 0.9552, -2.4973, -0.7854, 0, 0);
		testMethod(1890, 2.51, 0.9427, -2.4973, -0.7854, 0, 0);
		testMethod(1895, 2.5146, 0.9302, -2.4973, -0.7854, 0, 0);
		testMethod(1900, 2.5193, 0.9177, -2.4973, -0.7854, 0, 0);
		testMethod(1905, 2.5238, 0.9053, -2.4973, -0.7854, 0, 0);
		testMethod(1910, 2.5283, 0.8928, -2.4973, -0.7854, 0, 0);
		testMethod(1915, 2.5327, 0.8803, -2.4973, -0.7854, 0, 0);
		testMethod(1920, 2.5371, 0.8678, -2.4973, -0.7854, 0, 0);
		testMethod(1925, 2.5414, 0.8553, -2.4973, -0.7854, 0, 0);
		testMethod(1930, 2.5457, 0.8428, -2.4973, -0.7854, 0, 0);
		testMethod(1935, 2.5499, 0.8303, -2.4973, -0.7854, 0, 0);
		testMethod(1940, 2.554, 0.8179, -2.4973, -0.7854, 0, 0);
		testMethod(1945, 2.558, 0.8054, -2.4973, -0.7854, 0, 0);
		testMethod(1950, 2.562, 0.7929, -2.4973, -0.7854, 0, 0);
		testMethod(1955, 2.566, 0.7804, -2.4973, -0.7854, 0, 0);
		testMethod(1960, 2.5698, 0.7679, -2.4973, -0.7854, 0, 0);
		testMethod(1965, 2.5736, 0.7554, -2.4973, -0.7854, 0, 0);
		testMethod(1970, 2.5774, 0.7429, -2.4973, -0.7854, 0, 0);
		testMethod(1975, 2.5811, 0.7305, -2.4973, -0.7854, 0, 0);
		testMethod(1980, 2.5847, 0.718, -2.4973, -0.7854, 0, 0);
		testMethod(1985, 2.5882, 0.7055, -2.4973, -0.7854, 0, 0);
		testMethod(1990, 2.5917, 0.693, -2.4973, -0.7854, 0, 0);
		testMethod(1995, 2.5952, 0.6805, -2.4973, -0.7854, 0, 0);
		testMethod(2000, 2.5986, 0.668, -2.4973, -0.7854, 0, 0);
		testMethod(2005, 2.6019, 0.6555, -2.4973, -0.7854, 0, 0);
		testMethod(2010, 2.6051, 0.643, -2.4973, -0.7854, 0, 0);
		testMethod(2015, 2.6083, 0.6306, -2.4973, -0.7854, 0, 0);
		testMethod(2020, 2.6114, 0.6181, -2.4973, -0.7854, 0, 0);
		testMethod(2025, 2.6145, 0.6056, -2.4973, -0.7854, 0, 0);
		testMethod(2030, 2.6175, 0.5931, -2.4973, -0.7854, 0, 0);
		testMethod(2035, 2.6204, 0.5806, -2.4973, -0.7854, 0, 0);
		testMethod(2040, 2.6233, 0.5681, -2.4973, -0.7854, 0, 0);
		testMethod(2045, 2.6261, 0.5556, -2.4973, -0.7854, 0, 0);
		testMethod(2050, 2.6288, 0.5432, -2.4973, -0.7854, 0, 0);
		testMethod(2055, 2.6315, 0.5307, -2.4973, -0.7854, 0, 0);
		testMethod(2060, 2.6341, 0.5182, -2.4973, -0.7854, 0, 0);
		testMethod(2065, 2.6367, 0.5057, -2.4973, -0.7854, 0, 0);
		testMethod(2070, 2.6392, 0.4932, -2.4973, -0.7854, 0, 0);
		testMethod(2075, 2.6416, 0.4807, -2.4973, -0.7854, 0, 0);
		testMethod(2080, 2.644, 0.4682, -2.4973, -0.7854, 0, 0);
		testMethod(2085, 2.6463, 0.4558, -2.4973, -0.7854, 0, 0);
		testMethod(2090, 2.6486, 0.4433, -2.4973, -0.7854, 0, 0);
		testMethod(2095, 2.6507, 0.4308, -2.4973, -0.7854, 0, 0);
		testMethod(2100, 2.6529, 0.4183, -2.4973, -0.7854, 0, 0);
		testMethod(2105, 2.6549, 0.4058, -2.4973, -0.7854, 0, 0);
		testMethod(2110, 2.6569, 0.3933, -2.4973, -0.7854, 0, 0);
		testMethod(2115, 2.6589, 0.3808, -2.4973, -0.7854, 0, 0);
		testMethod(2120, 2.6607, 0.3683, -2.4973, -0.7854, 0, 0);
		testMethod(2125, 2.6625, 0.3559, -2.4973, -0.7854, 0, 0);
		testMethod(2130, 2.6643, 0.3434, -2.4973, -0.7854, 0, 0);
		testMethod(2135, 2.666, 0.3309, -2.4973, -0.7854, 0, 0);
		testMethod(2140, 2.6676, 0.3184, -2.4973, -0.7854, 0, 0);
		testMethod(2145, 2.6692, 0.3059, -2.4973, -0.7854, 0, 0);
		testMethod(2150, 2.6707, 0.2934, -2.4973, -0.7854, 0, 0);
		testMethod(2155, 2.6721, 0.2809, -2.4973, -0.7854, 0, 0);
		testMethod(2160, 2.6735, 0.2685, -2.4973, -0.7854, 0, 0);
		testMethod(2165, 2.6748, 0.256, -2.4973, -0.7854, 0, 0);
		testMethod(2170, 2.676, 0.2435, -2.4973, -0.7854, 0, 0);
		testMethod(2175, 2.6772, 0.2313, -2.4348, -0.7854, 0, 0);
		testMethod(2180, 2.6783, 0.2194, -2.3724, -0.7854, 0, 0);
		testMethod(2185, 2.6794, 0.2079, -2.31, -0.7854, 0, 0);
		testMethod(2190, 2.6804, 0.1967, -2.2475, -0.7854, 0, 0);
		testMethod(2195, 2.6814, 0.1857, -2.1851, -0.7854, 0, 0);
		testMethod(2200, 2.6823, 0.1751, -2.1227, -0.7854, 0, 0);
		testMethod(2205, 2.6831, 0.1648, -2.0602, -0.7854, 0, 0);
		testMethod(2210, 2.6839, 0.1548, -1.9978, -0.7854, 0, 0);
		testMethod(2215, 2.6847, 0.1452, -1.9354, -0.7854, 0, 0);
		testMethod(2220, 2.6854, 0.1358, -1.873, -0.7854, 0, 0);
		testMethod(2225, 2.686, 0.1267, -1.8105, -0.7854, 0, 0);
		testMethod(2230, 2.6866, 0.118, -1.7481, -0.7854, 0, 0);
		testMethod(2235, 2.6872, 0.1096, -1.6857, -0.7854, 0, 0);
		testMethod(2240, 2.6877, 0.1015, -1.6232, -0.7854, 0, 0);
		testMethod(2245, 2.6882, 0.0936, -1.5608, -0.7854, 0, 0);
		testMethod(2250, 2.6887, 0.0862, -1.4984, -0.7854, 0, 0);
		testMethod(2255, 2.6891, 0.079, -1.4359, -0.7854, 0, 0);
		testMethod(2260, 2.6895, 0.0721, -1.3735, -0.7854, 0, 0);
		testMethod(2265, 2.6898, 0.0656, -1.3111, -0.7854, 0, 0);
		testMethod(2270, 2.6901, 0.0593, -1.2486, -0.7854, 0, 0);
		testMethod(2275, 2.6904, 0.0534, -1.1862, -0.7854, 0, 0);
		testMethod(2280, 2.6907, 0.0478, -1.1238, -0.7854, 0, 0);
		testMethod(2285, 2.6909, 0.0425, -1.0613, -0.7854, 0, 0);
		testMethod(2290, 2.6911, 0.0375, -0.9989, -0.7854, 0, 0);
		testMethod(2295, 2.6913, 0.0328, -0.9365, -0.7854, 0, 0);
		testMethod(2300, 2.6914, 0.0284, -0.874, -0.7854, 0, 0);
		testMethod(2305, 2.6916, 0.0243, -0.8116, -0.7854, 0, 0);
		testMethod(2310, 2.6917, 0.0206, -0.7492, -0.7854, 0, 0);
		testMethod(2315, 2.6918, 0.0172, -0.6867, -0.7854, 0, 0);
		testMethod(2320, 2.6918, 0.014, -0.6243, -0.7854, 0, 0);
		testMethod(2325, 2.6919, 0.0112, -0.5619, -0.7854, 0, 0);
		testMethod(2330, 2.6919, 0.0087, -0.4995, -0.7854, 0, 0);
		testMethod(2335, 2.692, 0.0066, -0.437, -0.7854, 0, 0);
		testMethod(2340, 2.692, 0.0047, -0.3746, -0.7854, 0, 0);
		testMethod(2345, 2.692, 0.0031, -0.3122, -0.7854, 0, 0);
		testMethod(2350, 2.692, 0.0019, -0.2497, -0.7854, 0, 0);
		testMethod(2355, 2.6921, 0.0009, -0.1873, -0.7854, 0, 0);
		testMethod(2360, 2.6921, 0.0003, -0.1249, -0.7854, 0, 0);
		testMethod(2365, 2.6921, 0, -0.0624, -0.7854, 0, 0);
		testMethod(2370, 2.6921, 0, 0, -0.7854, 0, 0);
		testMethod(2370, 2.6921, 0, 0, -0.7854, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}