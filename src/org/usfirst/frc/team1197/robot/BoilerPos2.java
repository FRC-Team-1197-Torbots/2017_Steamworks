package org.usfirst.frc.team1197.robot;

public class BoilerPos2 extends TorTrajectory {

	public BoilerPos2() {
		super(-3.1888, -0.3171);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0622, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1243, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.1865, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2486, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3108, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.3729, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.4351, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4972, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5594, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6215, 0, 0, 0);
		testMethod(55, -0.0004, -0.0205, -0.6837, 0, 0, 0);
		testMethod(60, -0.0005, -0.0242, -0.7459, 0, 0, 0);
		testMethod(65, -0.0006, -0.0283, -0.808, 0, 0, 0);
		testMethod(70, -0.0008, -0.0326, -0.8702, 0, 0, 0);
		testMethod(75, -0.001, -0.0373, -0.9323, 0, 0, 0);
		testMethod(80, -0.0012, -0.0423, -0.9945, 0, 0, 0);
		testMethod(85, -0.0014, -0.0475, -1.0566, 0, 0, 0);
		testMethod(90, -0.0016, -0.0531, -1.1188, 0, 0, 0);
		testMethod(95, -0.0019, -0.059, -1.1809, 0, 0, 0);
		testMethod(100, -0.0022, -0.0653, -1.2431, 0, 0, 0);
		testMethod(105, -0.0026, -0.0718, -1.3052, 0, 0, 0);
		testMethod(110, -0.0029, -0.0786, -1.3674, 0, 0, 0);
		testMethod(115, -0.0034, -0.0858, -1.4296, 0, 0, 0);
		testMethod(120, -0.0038, -0.0932, -1.4917, 0, 0, 0);
		testMethod(125, -0.0043, -0.101, -1.5539, 0, 0, 0);
		testMethod(130, -0.0048, -0.1091, -1.616, 0, 0, 0);
		testMethod(135, -0.0054, -0.1175, -1.6782, 0, 0, 0);
		testMethod(140, -0.006, -0.1262, -1.7403, 0, 0, 0);
		testMethod(145, -0.0066, -0.1352, -1.8025, 0, 0, 0);
		testMethod(150, -0.0073, -0.1445, -1.8646, 0, 0, 0);
		testMethod(155, -0.0081, -0.1541, -1.9268, 0, 0, 0);
		testMethod(160, -0.0089, -0.1641, -1.9889, 0, 0, 0);
		testMethod(165, -0.0097, -0.1743, -2.0511, 0, 0, 0);
		testMethod(170, -0.0106, -0.1849, -2.1132, 0, 0, 0);
		testMethod(175, -0.0116, -0.1958, -2.1754, 0, 0, 0);
		testMethod(180, -0.0126, -0.207, -2.2376, 0, 0, 0);
		testMethod(185, -0.0137, -0.2185, -2.2997, 0, 0, 0);
		testMethod(190, -0.0148, -0.2303, -2.3619, 0, 0, 0);
		testMethod(195, -0.016, -0.2424, -2.424, 0, 0, 0);
		testMethod(200, -0.0172, -0.2548, -2.4862, 0, 0, 0);
		testMethod(205, -0.0185, -0.2673, -2.4862, 0, 0, 0);
		testMethod(210, -0.0199, -0.2797, -2.4862, 0, 0, 0);
		testMethod(215, -0.0213, -0.2921, -2.4862, 0, 0, 0);
		testMethod(220, -0.0228, -0.3046, -2.4862, 0, 0, 0);
		testMethod(225, -0.0243, -0.317, -2.4862, 0, 0, 0);
		testMethod(230, -0.026, -0.3294, -2.4862, 0, 0, 0);
		testMethod(235, -0.0276, -0.3418, -2.4862, 0, 0, 0);
		testMethod(240, -0.0294, -0.3543, -2.4862, 0, 0, 0);
		testMethod(245, -0.0312, -0.3667, -2.4862, 0, 0, 0);
		testMethod(250, -0.0331, -0.3791, -2.4862, 0, 0, 0);
		testMethod(255, -0.035, -0.3916, -2.4862, 0, 0, 0);
		testMethod(260, -0.037, -0.404, -2.4862, 0, 0, 0);
		testMethod(265, -0.039, -0.4164, -2.4862, 0, 0, 0);
		testMethod(270, -0.0411, -0.4289, -2.4862, 0, 0, 0);
		testMethod(275, -0.0433, -0.4413, -2.4862, 0, 0, 0);
		testMethod(280, -0.0455, -0.4537, -2.4862, 0, 0, 0);
		testMethod(285, -0.0478, -0.4662, -2.4862, 0, 0, 0);
		testMethod(290, -0.0502, -0.4786, -2.4862, 0, 0, 0);
		testMethod(295, -0.0526, -0.491, -2.4862, 0, 0, 0);
		testMethod(300, -0.0551, -0.5035, -2.4862, 0, 0, 0);
		testMethod(305, -0.0577, -0.5159, -2.4862, 0, 0, 0);
		testMethod(310, -0.0603, -0.5283, -2.4862, 0, 0, 0);
		testMethod(315, -0.0629, -0.5407, -2.4862, 0, 0, 0);
		testMethod(320, -0.0657, -0.5532, -2.4862, 0, 0, 0);
		testMethod(325, -0.0685, -0.5656, -2.4862, 0, 0, 0);
		testMethod(330, -0.0713, -0.578, -2.4862, 0, 0, 0);
		testMethod(335, -0.0743, -0.5905, -2.4862, 0, 0, 0);
		testMethod(340, -0.0772, -0.6029, -2.4862, 0, 0, 0);
		testMethod(345, -0.0803, -0.6153, -2.4862, 0, 0, 0);
		testMethod(350, -0.0834, -0.6278, -2.4862, 0, 0, 0);
		testMethod(355, -0.0866, -0.6402, -2.4862, 0, 0, 0);
		testMethod(360, -0.0898, -0.6526, -2.4862, 0, 0, 0);
		testMethod(365, -0.0931, -0.6651, -2.4862, 0, 0, 0);
		testMethod(370, -0.0964, -0.6775, -2.4862, 0, 0, 0);
		testMethod(375, -0.0999, -0.6899, -2.4862, 0, 0, 0);
		testMethod(380, -0.1033, -0.7023, -2.4862, 0, 0, 0);
		testMethod(385, -0.1069, -0.7148, -2.4862, 0, 0, 0);
		testMethod(390, -0.1105, -0.7272, -2.4862, 0, 0, 0);
		testMethod(395, -0.1142, -0.7396, -2.4862, 0, 0, 0);
		testMethod(400, -0.1179, -0.7521, -2.4862, 0, 0, 0);
		testMethod(405, -0.1217, -0.7645, -2.4862, 0, 0, 0);
		testMethod(410, -0.1255, -0.7769, -2.4862, 0, 0, 0);
		testMethod(415, -0.1295, -0.7894, -2.4862, 0, 0, 0);
		testMethod(420, -0.1334, -0.8018, -2.4862, 0, 0, 0);
		testMethod(425, -0.1375, -0.8142, -2.4862, 0, 0, 0);
		testMethod(430, -0.1416, -0.8267, -2.4862, 0, 0, 0);
		testMethod(435, -0.1457, -0.8391, -2.4862, 0, 0, 0);
		testMethod(440, -0.15, -0.8515, -2.4862, 0, 0, 0);
		testMethod(445, -0.1543, -0.8639, -2.4862, 0, 0, 0);
		testMethod(450, -0.1586, -0.8764, -2.4862, 0, 0, 0);
		testMethod(455, -0.163, -0.8888, -2.4862, 0, 0, 0);
		testMethod(460, -0.1675, -0.9012, -2.4862, 0, 0, 0);
		testMethod(465, -0.172, -0.9137, -2.4862, 0, 0, 0);
		testMethod(470, -0.1766, -0.9261, -2.4862, 0, 0, 0);
		testMethod(475, -0.1813, -0.9385, -2.4862, 0, 0, 0);
		testMethod(480, -0.186, -0.951, -2.4862, 0, 0, 0);
		testMethod(485, -0.1908, -0.9634, -2.4862, 0, 0, 0);
		testMethod(490, -0.1956, -0.9758, -2.4862, 0, 0, 0);
		testMethod(495, -0.2006, -0.9883, -2.4862, 0, 0, 0);
		testMethod(500, -0.2055, -1.0007, -2.4862, 0, 0, 0);
		testMethod(505, -0.2106, -1.0131, -2.4862, 0, 0, 0);
		testMethod(510, -0.2157, -1.0255, -2.4862, 0, 0, 0);
		testMethod(515, -0.2208, -1.038, -2.4862, 0, 0, 0);
		testMethod(520, -0.226, -1.0504, -2.4862, 0, 0, 0);
		testMethod(525, -0.2313, -1.0628, -2.4862, 0, 0, 0);
		testMethod(530, -0.2367, -1.0753, -2.4862, 0, 0, 0);
		testMethod(535, -0.2421, -1.0877, -2.4862, 0, 0, 0);
		testMethod(540, -0.2475, -1.1001, -2.4862, 0, 0, 0);
		testMethod(545, -0.2531, -1.1126, -2.4862, 0, 0, 0);
		testMethod(550, -0.2587, -1.125, -2.4862, 0, 0, 0);
		testMethod(555, -0.2643, -1.1374, -2.4862, 0, 0, 0);
		testMethod(560, -0.27, -1.1499, -2.4862, 0, 0, 0);
		testMethod(565, -0.2758, -1.1623, -2.4862, 0, 0, 0);
		testMethod(570, -0.2817, -1.1747, -2.4862, 0, 0, 0);
		testMethod(575, -0.2876, -1.1871, -2.4862, -0, -0, -0.0026);
		testMethod(580, -0.2935, -1.1996, -2.4862, -0, -0.0002, -0.0396);
		testMethod(585, -0.2996, -1.212, -2.4862, -0, -0.0007, -0.0895);
		testMethod(590, -0.3057, -1.2244, -2.4862, -0, -0.0014, -0.1426);
		testMethod(595, -0.3118, -1.2369, -2.4862, -0, -0.0024, -0.1987);
		testMethod(600, -0.318, -1.2493, -2.4862, -0, -0.0037, -0.2581);
		testMethod(605, -0.3243, -1.2617, -2.4862, -0.0001, -0.0053, -0.3207);
		testMethod(610, -0.3306, -1.2742, -2.4862, -0.0001, -0.0072, -0.3867);
		testMethod(615, -0.337, -1.2866, -2.4862, -0.0001, -0.0095, -0.4562);
		testMethod(620, -0.3435, -1.299, -2.4862, -0.0002, -0.0121, -0.5291);
		testMethod(625, -0.35, -1.3115, -2.4862, -0.0002, -0.0151, -0.6057);
		testMethod(630, -0.3566, -1.3239, -2.4862, -0.0003, -0.0186, -0.686);
		testMethod(635, -0.3633, -1.3363, -2.4862, -0.0004, -0.0224, -0.77);
		testMethod(640, -0.37, -1.3488, -2.4862, -0.0006, -0.0267, -0.8579);
		testMethod(645, -0.3768, -1.3612, -2.4862, -0.0007, -0.0315, -0.9497);
		testMethod(650, -0.3836, -1.3736, -2.4862, -0.0009, -0.0367, -1.0456);
		testMethod(655, -0.3905, -1.386, -2.4862, -0.0011, -0.0424, -1.1456);
		testMethod(660, -0.3975, -1.3985, -2.4862, -0.0013, -0.0487, -1.2498);
		testMethod(665, -0.4045, -1.4109, -2.4862, -0.0016, -0.0555, -1.3584);
		testMethod(670, -0.4116, -1.4233, -2.4862, -0.0019, -0.0628, -1.4713);
		testMethod(675, -0.4187, -1.4358, -2.4862, -0.0022, -0.0708, -1.5886);
		testMethod(680, -0.4259, -1.4482, -2.4862, -0.0026, -0.0793, -1.7106);
		testMethod(685, -0.4332, -1.4606, -2.4862, -0.003, -0.0885, -1.8372);
		testMethod(690, -0.4405, -1.4731, -2.4862, -0.0034, -0.0983, -1.9686);
		testMethod(695, -0.4479, -1.4855, -2.4862, -0.004, -0.1089, -2.1048);
		testMethod(700, -0.4554, -1.4979, -2.4862, -0.0045, -0.1201, -2.246);
		testMethod(705, -0.4629, -1.5104, -2.4862, -0.0052, -0.1321, -2.3923);
		testMethod(710, -0.4705, -1.5228, -2.4862, -0.0059, -0.1448, -2.5436);
		testMethod(715, -0.4781, -1.5352, -2.4862, -0.0066, -0.1583, -2.7002);
		testMethod(720, -0.4858, -1.5476, -2.4862, -0.0074, -0.1726, -2.8622);
		testMethod(725, -0.4936, -1.5601, -2.4862, -0.0083, -0.1877, -3.0295);
		testMethod(730, -0.5014, -1.5725, -2.4862, -0.0093, -0.2037, -3.2024);
		testMethod(735, -0.5093, -1.5849, -2.4862, -0.0104, -0.2207, -3.381);
		testMethod(740, -0.5173, -1.5974, -2.4862, -0.0115, -0.2385, -3.5653);
		testMethod(745, -0.5253, -1.6098, -2.4862, -0.0128, -0.2573, -3.7554);
		testMethod(750, -0.5334, -1.6222, -2.4862, -0.0141, -0.277, -3.9515);
		testMethod(755, -0.5415, -1.6347, -2.4862, -0.0155, -0.2978, -4.1536);
		testMethod(760, -0.5497, -1.6471, -2.4862, -0.0171, -0.3196, -4.3618);
		testMethod(765, -0.558, -1.6595, -2.4862, -0.0187, -0.3425, -4.5763);
		testMethod(770, -0.5663, -1.672, -2.4862, -0.0205, -0.3665, -4.7972);
		testMethod(775, -0.5747, -1.6844, -2.4862, -0.0224, -0.3916, -5.0245);
		testMethod(780, -0.5832, -1.6965, -2.424, -0.0244, -0.4178, -5.2427);
		testMethod(785, -0.5917, -1.7083, -2.3619, -0.0266, -0.4451, -5.4639);
		testMethod(790, -0.6003, -1.7198, -2.2997, -0.0289, -0.4736, -5.688);
		testMethod(795, -0.6089, -1.731, -2.2376, -0.0313, -0.5031, -5.9148);
		testMethod(800, -0.6176, -1.7419, -2.1754, -0.0339, -0.5338, -6.1439);
		testMethod(805, -0.6263, -1.7524, -2.1132, -0.0367, -0.5657, -6.3753);
		testMethod(810, -0.6351, -1.7627, -2.0511, -0.0396, -0.5988, -6.6086);
		testMethod(815, -0.6439, -1.7726, -1.9889, -0.0427, -0.6329, -6.8229);
		testMethod(820, -0.6528, -1.7823, -1.9268, -0.0459, -0.6665, -6.729);
		testMethod(825, -0.6618, -1.7916, -1.8646, -0.0493, -0.6997, -6.6438);
		testMethod(830, -0.6707, -1.8006, -1.8025, -0.0529, -0.7325, -6.5499);
		testMethod(835, -0.6798, -1.8093, -1.7403, -0.0566, -0.7647, -6.4476);
		testMethod(840, -0.6888, -1.8177, -1.6782, -0.0605, -0.7964, -6.337);
		testMethod(845, -0.6979, -1.8258, -1.616, -0.0646, -0.8275, -6.2183);
		testMethod(850, -0.7071, -1.8336, -1.5539, -0.0688, -0.858, -6.0917);
		testMethod(855, -0.7163, -1.841, -1.4917, -0.0732, -0.8878, -5.9574);
		testMethod(860, -0.7255, -1.8482, -1.4296, -0.0777, -0.9168, -5.8156);
		testMethod(865, -0.7348, -1.855, -1.3674, -0.0824, -0.9452, -5.6666);
		testMethod(870, -0.744, -1.8615, -1.3052, -0.0871, -0.9727, -5.5105);
		testMethod(875, -0.7534, -1.8677, -1.2431, -0.0921, -0.9995, -5.3475);
		testMethod(880, -0.7627, -1.8736, -1.1809, -0.0971, -1.0253, -5.178);
		testMethod(885, -0.7721, -1.8792, -1.1188, -0.1023, -1.0504, -5.0022);
		testMethod(890, -0.7815, -1.8845, -1.0566, -0.1076, -1.0745, -4.8203);
		testMethod(895, -0.7909, -1.8895, -0.9945, -0.1131, -1.0976, -4.6326);
		testMethod(900, -0.8004, -1.8942, -0.9323, -0.1186, -1.1198, -4.4394);
		testMethod(905, -0.8099, -1.8985, -0.8702, -0.1243, -1.141, -4.2408);
		testMethod(910, -0.8194, -1.9025, -0.808, -0.13, -1.1612, -4.0373);
		testMethod(915, -0.8289, -1.9063, -0.7459, -0.1359, -1.1804, -3.8291);
		testMethod(920, -0.8385, -1.9097, -0.6837, -0.1418, -1.1984, -3.6165);
		testMethod(925, -0.848, -1.9128, -0.6215, -0.1479, -1.2154, -3.3997);
		testMethod(930, -0.8576, -1.9156, -0.5594, -0.154, -1.2313, -3.1791);
		testMethod(935, -0.8672, -1.9181, -0.4972, -0.1602, -1.2461, -2.955);
		testMethod(940, -0.8768, -1.9203, -0.4351, -0.1664, -1.2597, -2.7277);
		testMethod(945, -0.8864, -1.9221, -0.3729, -0.1728, -1.2722, -2.4974);
		testMethod(950, -0.896, -1.9237, -0.3108, -0.1792, -1.2836, -2.2646);
		testMethod(955, -0.9056, -1.9249, -0.2486, -0.1856, -1.2937, -2.0295);
		testMethod(960, -0.9152, -1.9259, -0.1865, -0.1921, -1.3027, -1.7924);
		testMethod(965, -0.9249, -1.9265, -0.1243, -0.1986, -1.3104, -1.5536);
		testMethod(970, -0.9345, -1.9268, -0.0622, -0.2052, -1.317, -1.3135);
		testMethod(975, -0.9441, -1.9268, -0, -0.2118, -1.3224, -1.0724);
		testMethod(980, -0.9538, -1.9268, -0, -0.2184, -1.3267, -0.8735);
		testMethod(985, -0.9634, -1.9268, -0, -0.2251, -1.3301, -0.6746);
		testMethod(990, -0.973, -1.9268, -0, -0.2317, -1.3325, -0.4757);
		testMethod(995, -0.9827, -1.9268, -0, -0.2384, -1.3339, -0.2768);
		testMethod(1000, -0.9923, -1.9268, -0, -0.2451, -1.3343, -0.0777);
		testMethod(1005, -1.0019, -1.9268, -0, -0.2517, -1.3336, 0.1222);
		testMethod(1010, -1.0116, -1.9268, -0, -0.2584, -1.332, 0.3212);
		testMethod(1015, -1.0212, -1.9268, -0, -0.265, -1.3294, 0.5201);
		testMethod(1020, -1.0308, -1.9268, -0, -0.2717, -1.3258, 0.719);
		testMethod(1025, -1.0405, -1.9268, -0, -0.2783, -1.3213, 0.9179);
		testMethod(1030, -1.0501, -1.9268, -0, -0.2849, -1.3157, 1.1169);
		testMethod(1035, -1.0597, -1.9268, -0, -0.2915, -1.3091, 1.3158);
		testMethod(1040, -1.0694, -1.9268, -0, -0.298, -1.3015, 1.5147);
		testMethod(1045, -1.079, -1.9268, -0, -0.3045, -1.2929, 1.7136);
		testMethod(1050, -1.0886, -1.9268, -0, -0.3109, -1.2834, 1.9125);
		testMethod(1055, -1.0983, -1.9268, -0, -0.3173, -1.2728, 2.1115);
		testMethod(1060, -1.1079, -1.9268, -0, -0.3236, -1.2613, 2.3104);
		testMethod(1065, -1.1175, -1.9268, -0, -0.3299, -1.2487, 2.5093);
		testMethod(1070, -1.1272, -1.9268, -0, -0.3361, -1.2352, 2.7082);
		testMethod(1075, -1.1368, -1.9268, -0, -0.3423, -1.2207, 2.9071);
		testMethod(1080, -1.1464, -1.9268, -0, -0.3483, -1.2051, 3.1061);
		testMethod(1085, -1.1561, -1.9268, -0, -0.3543, -1.1886, 3.305);
		testMethod(1090, -1.1657, -1.9268, -0, -0.3602, -1.1711, 3.5039);
		testMethod(1095, -1.1753, -1.9268, -0, -0.366, -1.1526, 3.7028);
		testMethod(1100, -1.185, -1.9268, -0, -0.3717, -1.1331, 3.9018);
		testMethod(1105, -1.1946, -1.9268, -0, -0.3773, -1.1126, 4.1007);
		testMethod(1110, -1.2042, -1.9268, -0, -0.3829, -1.0911, 4.2996);
		testMethod(1115, -1.2139, -1.9268, -0, -0.3883, -1.0686, 4.4985);
		testMethod(1120, -1.2235, -1.9268, -0, -0.3935, -1.0451, 4.6974);
		testMethod(1125, -1.2331, -1.9268, -0, -0.3987, -1.0206, 4.8964);
		testMethod(1130, -1.2428, -1.9268, -0, -0.4037, -0.9951, 5.0953);
		testMethod(1135, -1.2524, -1.9268, -0, -0.4087, -0.9686, 5.2942);
		testMethod(1140, -1.262, -1.9268, -0, -0.4134, -0.9412, 5.4931);
		testMethod(1145, -1.2717, -1.9268, -0, -0.4181, -0.9127, 5.692);
		testMethod(1150, -1.2813, -1.9268, -0, -0.4226, -0.8833, 5.891);
		testMethod(1155, -1.2909, -1.9268, -0, -0.4269, -0.8528, 6.0899);
		testMethod(1160, -1.3006, -1.9268, -0, -0.4311, -0.8214, 6.2888);
		testMethod(1165, -1.3102, -1.9268, -0, -0.4351, -0.7889, 6.4877);
		testMethod(1170, -1.3198, -1.9268, -0, -0.439, -0.7555, 6.6867);
		testMethod(1175, -1.3295, -1.9268, -0, -0.4427, -0.7211, 6.8856);
		testMethod(1180, -1.3391, -1.9268, -0, -0.4462, -0.6856, 7.0845);
		testMethod(1185, -1.3488, -1.9268, -0, -0.4495, -0.6493, 7.2782);
		testMethod(1190, -1.3584, -1.9268, -0, -0.4527, -0.6138, 7.0881);
		testMethod(1195, -1.368, -1.9268, -0, -0.4557, -0.5794, 6.8891);
		testMethod(1200, -1.3777, -1.9268, -0, -0.4585, -0.5459, 6.6902);
		testMethod(1205, -1.3873, -1.9268, -0, -0.4611, -0.5135, 6.4913);
		testMethod(1210, -1.3969, -1.9268, -0, -0.4636, -0.482, 6.2924);
		testMethod(1215, -1.4066, -1.9268, -0, -0.4659, -0.4515, 6.0935);
		testMethod(1220, -1.4162, -1.9268, -0, -0.4681, -0.4221, 5.8945);
		testMethod(1225, -1.4258, -1.9268, -0, -0.4702, -0.3936, 5.6956);
		testMethod(1230, -1.4355, -1.9268, -0, -0.4721, -0.3661, 5.4967);
		testMethod(1235, -1.4451, -1.9268, -0, -0.4738, -0.3396, 5.2978);
		testMethod(1240, -1.4547, -1.9268, -0, -0.4755, -0.3141, 5.0988);
		testMethod(1245, -1.4644, -1.9268, -0, -0.477, -0.2896, 4.8999);
		testMethod(1250, -1.474, -1.9268, -0, -0.4784, -0.2661, 4.701);
		testMethod(1255, -1.4836, -1.9268, -0, -0.4796, -0.2436, 4.5021);
		testMethod(1260, -1.4933, -1.9268, -0, -0.4808, -0.2221, 4.3032);
		testMethod(1265, -1.5029, -1.9268, -0, -0.4819, -0.2016, 4.1042);
		testMethod(1270, -1.5125, -1.9268, -0, -0.4828, -0.182, 3.9053);
		testMethod(1275, -1.5222, -1.9268, -0, -0.4837, -0.1635, 3.7064);
		testMethod(1280, -1.5318, -1.9268, -0, -0.4844, -0.146, 3.5075);
		testMethod(1285, -1.5414, -1.9268, -0, -0.4851, -0.1294, 3.3086);
		testMethod(1290, -1.5511, -1.9268, -0, -0.4857, -0.1139, 3.1096);
		testMethod(1295, -1.5607, -1.9268, -0, -0.4863, -0.0993, 2.9107);
		testMethod(1300, -1.5703, -1.9268, -0, -0.4867, -0.0858, 2.7118);
		testMethod(1305, -1.58, -1.9268, -0, -0.4871, -0.0732, 2.5129);
		testMethod(1310, -1.5896, -1.9268, -0, -0.4875, -0.0616, 2.3139);
		testMethod(1315, -1.5992, -1.9268, -0, -0.4878, -0.0511, 2.115);
		testMethod(1320, -1.6089, -1.9268, -0, -0.488, -0.0415, 1.9161);
		testMethod(1325, -1.6185, -1.9268, -0, -0.4882, -0.0329, 1.7172);
		testMethod(1330, -1.6281, -1.9268, -0, -0.4883, -0.0253, 1.5183);
		testMethod(1335, -1.6378, -1.9268, -0, -0.4884, -0.0187, 1.3193);
		testMethod(1340, -1.6474, -1.9268, -0, -0.4885, -0.0131, 1.1204);
		testMethod(1345, -1.657, -1.9268, -0, -0.4886, -0.0085, 0.9215);
		testMethod(1350, -1.6667, -1.9268, -0, -0.4886, -0.0049, 0.7226);
		testMethod(1355, -1.6763, -1.9268, -0, -0.4886, -0.0023, 0.5237);
		testMethod(1360, -1.6859, -1.9268, -0, -0.4886, -0.0006, 0.3247);
		testMethod(1365, -1.6956, -1.9268, -0, -0.4886, -0, 0.1258);
		testMethod(1370, -1.7052, -1.9268, -0, -0.4886, 0, 0.0017);
		testMethod(1375, -1.7148, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1380, -1.7245, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1385, -1.7341, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1390, -1.7437, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1395, -1.7534, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1400, -1.763, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1405, -1.7726, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1410, -1.7823, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1415, -1.7919, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1420, -1.8015, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1425, -1.8112, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1430, -1.8208, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1435, -1.8304, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1440, -1.8401, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1445, -1.8497, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1450, -1.8593, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1455, -1.869, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1460, -1.8786, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1465, -1.8883, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1470, -1.8979, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1475, -1.9075, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1480, -1.9172, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1485, -1.9268, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1490, -1.9364, -1.9268, -0, -0.4886, 0, 0);
		testMethod(1495, -1.9461, -1.9268, -0, -0.4886, 0.0001, 0.0193);
		testMethod(1500, -1.9557, -1.9268, -0, -0.4886, 0.001, 0.1872);
		testMethod(1505, -1.9653, -1.9268, -0, -0.4886, 0.003, 0.3861);
		testMethod(1510, -1.975, -1.9268, -0, -0.4886, 0.0059, 0.585);
		testMethod(1515, -1.9846, -1.9268, -0, -0.4885, 0.0098, 0.7839);
		testMethod(1520, -1.9942, -1.9268, -0, -0.4885, 0.0147, 0.9828);
		testMethod(1525, -2.0039, -1.9268, -0, -0.4884, 0.0206, 1.1818);
		testMethod(1530, -2.0135, -1.9268, -0, -0.4883, 0.0275, 1.3807);
		testMethod(1535, -2.0231, -1.9268, -0, -0.4881, 0.0354, 1.5796);
		testMethod(1540, -2.0328, -1.9268, -0, -0.4879, 0.0443, 1.7785);
		testMethod(1545, -2.0424, -1.9268, -0, -0.4877, 0.0542, 1.9775);
		testMethod(1550, -2.052, -1.9268, -0, -0.4874, 0.0651, 2.1764);
		testMethod(1555, -2.0617, -1.9268, -0, -0.487, 0.077, 2.3753);
		testMethod(1560, -2.0713, -1.9268, -0, -0.4866, 0.0898, 2.5742);
		testMethod(1565, -2.0809, -1.9268, -0, -0.4861, 0.1037, 2.7731);
		testMethod(1570, -2.0906, -1.9268, -0, -0.4856, 0.1186, 2.9721);
		testMethod(1575, -2.1002, -1.9268, -0, -0.4849, 0.1344, 3.171);
		testMethod(1580, -2.1098, -1.9268, -0, -0.4842, 0.1513, 3.3699);
		testMethod(1585, -2.1195, -1.9268, -0, -0.4834, 0.1691, 3.5688);
		testMethod(1590, -2.1291, -1.9268, -0, -0.4825, 0.188, 3.7677);
		testMethod(1595, -2.1387, -1.9268, -0, -0.4815, 0.2078, 3.9667);
		testMethod(1600, -2.1484, -1.9268, -0, -0.4804, 0.2286, 4.1656);
		testMethod(1605, -2.158, -1.9268, -0, -0.4792, 0.2504, 4.3645);
		testMethod(1610, -2.1676, -1.9268, -0, -0.4779, 0.2733, 4.5634);
		testMethod(1615, -2.1773, -1.9268, -0, -0.4765, 0.2971, 4.7624);
		testMethod(1620, -2.1869, -1.9268, -0, -0.475, 0.3219, 4.9613);
		testMethod(1625, -2.1965, -1.9268, -0, -0.4733, 0.3474, 5.0994);
		testMethod(1630, -2.2062, -1.9268, -0, -0.4715, 0.372, 4.9199);
		testMethod(1635, -2.2158, -1.9268, -0, -0.4696, 0.3956, 4.721);
		testMethod(1640, -2.2254, -1.9268, -0, -0.4675, 0.4182, 4.5221);
		testMethod(1645, -2.2351, -1.9268, -0, -0.4654, 0.4398, 4.3232);
		testMethod(1650, -2.2447, -1.9268, -0, -0.4631, 0.4604, 4.1242);
		testMethod(1655, -2.2543, -1.9268, -0, -0.4608, 0.48, 3.9253);
		testMethod(1660, -2.264, -1.9265, 0.0622, -0.4583, 0.4986, 3.71);
		testMethod(1665, -2.2736, -1.9259, 0.1243, -0.4558, 0.5161, 3.4925);
		testMethod(1670, -2.2832, -1.9249, 0.1865, -0.4532, 0.5324, 3.2731);
		testMethod(1675, -2.2929, -1.9237, 0.2486, -0.4505, 0.5477, 3.0521);
		testMethod(1680, -2.3025, -1.9221, 0.3108, -0.4477, 0.5618, 2.8299);
		testMethod(1685, -2.3121, -1.9203, 0.3729, -0.4449, 0.5749, 2.6068);
		testMethod(1690, -2.3217, -1.9181, 0.4351, -0.442, 0.5868, 2.383);
		testMethod(1695, -2.3313, -1.9156, 0.4972, -0.439, 0.5976, 2.159);
		testMethod(1700, -2.3408, -1.9128, 0.5594, -0.436, 0.6073, 1.935);
		testMethod(1705, -2.3504, -1.9097, 0.6215, -0.4329, 0.6158, 1.7114);
		testMethod(1710, -2.3599, -1.9063, 0.6837, -0.4298, 0.6233, 1.4884);
		testMethod(1715, -2.3694, -1.9025, 0.7459, -0.4267, 0.6296, 1.2665);
		testMethod(1720, -2.3789, -1.8985, 0.808, -0.4235, 0.6348, 1.0458);
		testMethod(1725, -2.3884, -1.8942, 0.8702, -0.4204, 0.6389, 0.8266);
		testMethod(1730, -2.3979, -1.8895, 0.9323, -0.4172, 0.642, 0.6094);
		testMethod(1735, -2.4073, -1.8845, 0.9945, -0.4139, 0.644, 0.3944);
		testMethod(1740, -2.4167, -1.8792, 1.0566, -0.4107, 0.6449, 0.1819);
		testMethod(1745, -2.4261, -1.8736, 1.1188, -0.4075, 0.6447, -0.0279);
		testMethod(1750, -2.4355, -1.8677, 1.1809, -0.4043, 0.6436, -0.2346);
		testMethod(1755, -2.4448, -1.8615, 1.2431, -0.4011, 0.6414, -0.4382);
		testMethod(1760, -2.4541, -1.855, 1.3052, -0.3979, 0.6382, -0.6381);
		testMethod(1765, -2.4633, -1.8482, 1.3674, -0.3947, 0.634, -0.834);
		testMethod(1770, -2.4726, -1.841, 1.4296, -0.3915, 0.6289, -1.0257);
		testMethod(1775, -2.4817, -1.8336, 1.4917, -0.3884, 0.6228, -1.2131);
		testMethod(1780, -2.4909, -1.8258, 1.5539, -0.3853, 0.6158, -1.3957);
		testMethod(1785, -2.5, -1.8177, 1.616, -0.3822, 0.608, -1.5736);
		testMethod(1790, -2.5091, -1.8093, 1.6782, -0.3792, 0.5992, -1.7462);
		testMethod(1795, -2.5181, -1.8006, 1.7403, -0.3762, 0.5897, -1.9136);
		testMethod(1800, -2.5271, -1.7916, 1.8025, -0.3733, 0.5793, -2.0754);
		testMethod(1805, -2.536, -1.7823, 1.8646, -0.3705, 0.5681, -2.2314);
		testMethod(1810, -2.5449, -1.7726, 1.9268, -0.3676, 0.5562, -2.3815);
		testMethod(1815, -2.5537, -1.7627, 1.9889, -0.3649, 0.5436, -2.5254);
		testMethod(1820, -2.5625, -1.7524, 2.0511, -0.3622, 0.5303, -2.6629);
		testMethod(1825, -2.5713, -1.7419, 2.1132, -0.3596, 0.5163, -2.794);
		testMethod(1830, -2.5799, -1.731, 2.1754, -0.357, 0.5017, -2.9183);
		testMethod(1835, -2.5886, -1.7198, 2.2376, -0.3546, 0.4866, -3.0358);
		testMethod(1840, -2.5971, -1.7083, 2.2997, -0.3522, 0.4708, -3.1464);
		testMethod(1845, -2.6057, -1.6965, 2.3619, -0.3499, 0.4546, -3.2498);
		testMethod(1850, -2.6141, -1.6844, 2.424, -0.3476, 0.4378, -3.346);
		testMethod(1855, -2.6225, -1.672, 2.4862, -0.3455, 0.4207, -3.4348);
		testMethod(1860, -2.6308, -1.6595, 2.4862, -0.3434, 0.4032, -3.5014);
		testMethod(1865, -2.6391, -1.6471, 2.4862, -0.3415, 0.3853, -3.5627);
		testMethod(1870, -2.6473, -1.6347, 2.4862, -0.3396, 0.3673, -3.6188);
		testMethod(1875, -2.6554, -1.6222, 2.4862, -0.3378, 0.3489, -3.6698);
		testMethod(1880, -2.6635, -1.6098, 2.4862, -0.3361, 0.3303, -3.716);
		testMethod(1885, -2.6715, -1.5974, 2.4862, -0.3345, 0.3115, -3.7572);
		testMethod(1890, -2.6795, -1.5849, 2.4862, -0.333, 0.2926, -3.7937);
		testMethod(1895, -2.6874, -1.5725, 2.4862, -0.3316, 0.2734, -3.8256);
		testMethod(1900, -2.6952, -1.5601, 2.4862, -0.3302, 0.2545, -3.7845);
		testMethod(1905, -2.703, -1.5476, 2.4862, -0.329, 0.2366, -3.5932);
		testMethod(1910, -2.7107, -1.5352, 2.4862, -0.3279, 0.2195, -3.4149);
		testMethod(1915, -2.7183, -1.5228, 2.4862, -0.3268, 0.2033, -3.2421);
		testMethod(1920, -2.7259, -1.5104, 2.4862, -0.3258, 0.1879, -3.0747);
		testMethod(1925, -2.7334, -1.4979, 2.4862, -0.3249, 0.1733, -2.9126);
		testMethod(1930, -2.7409, -1.4855, 2.4862, -0.3241, 0.1596, -2.7557);
		testMethod(1935, -2.7483, -1.4731, 2.4862, -0.3233, 0.1465, -2.604);
		testMethod(1940, -2.7556, -1.4606, 2.4862, -0.3226, 0.1342, -2.4573);
		testMethod(1945, -2.7629, -1.4482, 2.4862, -0.322, 0.1227, -2.3156);
		testMethod(1950, -2.7701, -1.4358, 2.4862, -0.3214, 0.1118, -2.1787);
		testMethod(1955, -2.7773, -1.4233, 2.4862, -0.3209, 0.1015, -2.0466);
		testMethod(1960, -2.7843, -1.4109, 2.4862, -0.3204, 0.0919, -1.9191);
		testMethod(1965, -2.7914, -1.3985, 2.4862, -0.32, 0.083, -1.7962);
		testMethod(1970, -2.7983, -1.386, 2.4862, -0.3196, 0.0746, -1.6777);
		testMethod(1975, -2.8052, -1.3736, 2.4862, -0.3192, 0.0668, -1.5637);
		testMethod(1980, -2.8121, -1.3612, 2.4862, -0.3189, 0.0595, -1.454);
		testMethod(1985, -2.8188, -1.3488, 2.4862, -0.3186, 0.0527, -1.3484);
		testMethod(1990, -2.8256, -1.3363, 2.4862, -0.3184, 0.0465, -1.247);
		testMethod(1995, -2.8322, -1.3239, 2.4862, -0.3181, 0.0408, -1.1496);
		testMethod(2000, -2.8388, -1.3115, 2.4862, -0.318, 0.0355, -1.0562);
		testMethod(2005, -2.8453, -1.299, 2.4862, -0.3178, 0.0306, -0.9666);
		testMethod(2010, -2.8518, -1.2866, 2.4862, -0.3176, 0.0262, -0.8809);
		testMethod(2015, -2.8582, -1.2742, 2.4862, -0.3175, 0.0223, -0.7988);
		testMethod(2020, -2.8645, -1.2617, 2.4862, -0.3174, 0.0186, -0.7203);
		testMethod(2025, -2.8708, -1.2493, 2.4862, -0.3173, 0.0154, -0.6454);
		testMethod(2030, -2.877, -1.2369, 2.4862, -0.3173, 0.0126, -0.5739);
		testMethod(2035, -2.8832, -1.2244, 2.4862, -0.3172, 0.01, -0.5057);
		testMethod(2040, -2.8893, -1.212, 2.4862, -0.3172, 0.0078, -0.4409);
		testMethod(2045, -2.8953, -1.1996, 2.4862, -0.3171, 0.0059, -0.3793);
		testMethod(2050, -2.9013, -1.1871, 2.4862, -0.3171, 0.0043, -0.3208);
		testMethod(2055, -2.9072, -1.1747, 2.4862, -0.3171, 0.003, -0.2653);
		testMethod(2060, -2.913, -1.1623, 2.4862, -0.3171, 0.0019, -0.2129);
		testMethod(2065, -2.9188, -1.1499, 2.4862, -0.3171, 0.0011, -0.1633);
		testMethod(2070, -2.9245, -1.1374, 2.4862, -0.3171, 0.0005, -0.1166);
		testMethod(2075, -2.9302, -1.125, 2.4862, -0.3171, 0.0002, -0.0726);
		testMethod(2080, -2.9358, -1.1126, 2.4862, -0.3171, 0, -0.0313);
		testMethod(2085, -2.9413, -1.1001, 2.4862, -0.3171, 0, -0.0017);
		testMethod(2090, -2.9468, -1.0877, 2.4862, -0.3171, 0, 0);
		testMethod(2095, -2.9522, -1.0753, 2.4862, -0.3171, 0, 0);
		testMethod(2100, -2.9575, -1.0628, 2.4862, -0.3171, 0, 0);
		testMethod(2105, -2.9628, -1.0504, 2.4862, -0.3171, 0, 0);
		testMethod(2110, -2.968, -1.038, 2.4862, -0.3171, 0, 0);
		testMethod(2115, -2.9732, -1.0255, 2.4862, -0.3171, 0, 0);
		testMethod(2120, -2.9783, -1.0131, 2.4862, -0.3171, 0, 0);
		testMethod(2125, -2.9833, -1.0007, 2.4862, -0.3171, 0, 0);
		testMethod(2130, -2.9883, -0.9883, 2.4862, -0.3171, 0, 0);
		testMethod(2135, -2.9932, -0.9758, 2.4862, -0.3171, 0, 0);
		testMethod(2140, -2.998, -0.9634, 2.4862, -0.3171, 0, 0);
		testMethod(2145, -3.0028, -0.951, 2.4862, -0.3171, 0, 0);
		testMethod(2150, -3.0075, -0.9385, 2.4862, -0.3171, 0, 0);
		testMethod(2155, -3.0122, -0.9261, 2.4862, -0.3171, 0, 0);
		testMethod(2160, -3.0168, -0.9137, 2.4862, -0.3171, 0, 0);
		testMethod(2165, -3.0213, -0.9012, 2.4862, -0.3171, 0, 0);
		testMethod(2170, -3.0258, -0.8888, 2.4862, -0.3171, 0, 0);
		testMethod(2175, -3.0302, -0.8764, 2.4862, -0.3171, 0, 0);
		testMethod(2180, -3.0346, -0.8639, 2.4862, -0.3171, 0, 0);
		testMethod(2185, -3.0389, -0.8515, 2.4862, -0.3171, 0, 0);
		testMethod(2190, -3.0431, -0.8391, 2.4862, -0.3171, 0, 0);
		testMethod(2195, -3.0473, -0.8267, 2.4862, -0.3171, 0, 0);
		testMethod(2200, -3.0514, -0.8142, 2.4862, -0.3171, 0, 0);
		testMethod(2205, -3.0554, -0.8018, 2.4862, -0.3171, 0, 0);
		testMethod(2210, -3.0594, -0.7894, 2.4862, -0.3171, 0, 0);
		testMethod(2215, -3.0633, -0.7769, 2.4862, -0.3171, 0, 0);
		testMethod(2220, -3.0671, -0.7645, 2.4862, -0.3171, 0, 0);
		testMethod(2225, -3.0709, -0.7521, 2.4862, -0.3171, 0, 0);
		testMethod(2230, -3.0747, -0.7396, 2.4862, -0.3171, 0, 0);
		testMethod(2235, -3.0783, -0.7272, 2.4862, -0.3171, 0, 0);
		testMethod(2240, -3.0819, -0.7148, 2.4862, -0.3171, 0, 0);
		testMethod(2245, -3.0855, -0.7023, 2.4862, -0.3171, 0, 0);
		testMethod(2250, -3.089, -0.6899, 2.4862, -0.3171, 0, 0);
		testMethod(2255, -3.0924, -0.6775, 2.4862, -0.3171, 0, 0);
		testMethod(2260, -3.0957, -0.6651, 2.4862, -0.3171, 0, 0);
		testMethod(2265, -3.099, -0.6526, 2.4862, -0.3171, 0, 0);
		testMethod(2270, -3.1023, -0.6402, 2.4862, -0.3171, 0, 0);
		testMethod(2275, -3.1054, -0.6278, 2.4862, -0.3171, 0, 0);
		testMethod(2280, -3.1085, -0.6153, 2.4862, -0.3171, 0, 0);
		testMethod(2285, -3.1116, -0.6029, 2.4862, -0.3171, 0, 0);
		testMethod(2290, -3.1146, -0.5905, 2.4862, -0.3171, 0, 0);
		testMethod(2295, -3.1175, -0.578, 2.4862, -0.3171, 0, 0);
		testMethod(2300, -3.1204, -0.5656, 2.4862, -0.3171, 0, 0);
		testMethod(2305, -3.1231, -0.5532, 2.4862, -0.3171, 0, 0);
		testMethod(2310, -3.1259, -0.5407, 2.4862, -0.3171, 0, 0);
		testMethod(2315, -3.1286, -0.5283, 2.4862, -0.3171, 0, 0);
		testMethod(2320, -3.1312, -0.5159, 2.4862, -0.3171, 0, 0);
		testMethod(2325, -3.1337, -0.5035, 2.4862, -0.3171, 0, 0);
		testMethod(2330, -3.1362, -0.491, 2.4862, -0.3171, 0, 0);
		testMethod(2335, -3.1386, -0.4786, 2.4862, -0.3171, 0, 0);
		testMethod(2340, -3.141, -0.4662, 2.4862, -0.3171, 0, 0);
		testMethod(2345, -3.1433, -0.4537, 2.4862, -0.3171, 0, 0);
		testMethod(2350, -3.1455, -0.4413, 2.4862, -0.3171, 0, 0);
		testMethod(2355, -3.1477, -0.4289, 2.4862, -0.3171, 0, 0);
		testMethod(2360, -3.1498, -0.4164, 2.4862, -0.3171, 0, 0);
		testMethod(2365, -3.1519, -0.404, 2.4862, -0.3171, 0, 0);
		testMethod(2370, -3.1539, -0.3916, 2.4862, -0.3171, 0, 0);
		testMethod(2375, -3.1558, -0.3791, 2.4862, -0.3171, 0, 0);
		testMethod(2380, -3.1576, -0.3667, 2.4862, -0.3171, 0, 0);
		testMethod(2385, -3.1594, -0.3543, 2.4862, -0.3171, 0, 0);
		testMethod(2390, -3.1612, -0.3418, 2.4862, -0.3171, 0, 0);
		testMethod(2395, -3.1629, -0.3294, 2.4862, -0.3171, 0, 0);
		testMethod(2400, -3.1645, -0.317, 2.4862, -0.3171, 0, 0);
		testMethod(2405, -3.166, -0.3046, 2.4862, -0.3171, 0, 0);
		testMethod(2410, -3.1675, -0.2921, 2.4862, -0.3171, 0, 0);
		testMethod(2415, -3.169, -0.2797, 2.4862, -0.3171, 0, 0);
		testMethod(2420, -3.1703, -0.2673, 2.4862, -0.3171, 0, 0);
		testMethod(2425, -3.1716, -0.2548, 2.4862, -0.3171, 0, 0);
		testMethod(2430, -3.1729, -0.2424, 2.4862, -0.3171, 0, 0);
		testMethod(2435, -3.1741, -0.2303, 2.424, -0.3171, 0, 0);
		testMethod(2440, -3.1752, -0.2185, 2.3619, -0.3171, 0, 0);
		testMethod(2445, -3.1762, -0.207, 2.2997, -0.3171, 0, 0);
		testMethod(2450, -3.1772, -0.1958, 2.2376, -0.3171, 0, 0);
		testMethod(2455, -3.1782, -0.1849, 2.1754, -0.3171, 0, 0);
		testMethod(2460, -3.1791, -0.1743, 2.1132, -0.3171, 0, 0);
		testMethod(2465, -3.1799, -0.1641, 2.0511, -0.3171, 0, 0);
		testMethod(2470, -3.1807, -0.1541, 1.9889, -0.3171, 0, 0);
		testMethod(2475, -3.1815, -0.1445, 1.9268, -0.3171, 0, 0);
		testMethod(2480, -3.1822, -0.1352, 1.8646, -0.3171, 0, 0);
		testMethod(2485, -3.1828, -0.1262, 1.8025, -0.3171, 0, 0);
		testMethod(2490, -3.1834, -0.1175, 1.7403, -0.3171, 0, 0);
		testMethod(2495, -3.184, -0.1091, 1.6782, -0.3171, 0, 0);
		testMethod(2500, -3.1845, -0.101, 1.616, -0.3171, 0, 0);
		testMethod(2505, -3.185, -0.0932, 1.5539, -0.3171, 0, 0);
		testMethod(2510, -3.1855, -0.0858, 1.4917, -0.3171, 0, 0);
		testMethod(2515, -3.1859, -0.0786, 1.4296, -0.3171, 0, 0);
		testMethod(2520, -3.1863, -0.0718, 1.3674, -0.3171, 0, 0);
		testMethod(2525, -3.1866, -0.0653, 1.3052, -0.3171, 0, 0);
		testMethod(2530, -3.1869, -0.059, 1.2431, -0.3171, 0, 0);
		testMethod(2535, -3.1872, -0.0531, 1.1809, -0.3171, 0, 0);
		testMethod(2540, -3.1874, -0.0475, 1.1188, -0.3171, 0, 0);
		testMethod(2545, -3.1877, -0.0423, 1.0566, -0.3171, 0, 0);
		testMethod(2550, -3.1879, -0.0373, 0.9945, -0.3171, 0, 0);
		testMethod(2555, -3.188, -0.0326, 0.9323, -0.3171, 0, 0);
		testMethod(2560, -3.1882, -0.0283, 0.8702, -0.3171, 0, 0);
		testMethod(2565, -3.1883, -0.0242, 0.808, -0.3171, 0, 0);
		testMethod(2570, -3.1884, -0.0205, 0.7459, -0.3171, 0, 0);
		testMethod(2575, -3.1885, -0.0171, 0.6837, -0.3171, 0, 0);
		testMethod(2580, -3.1886, -0.014, 0.6215, -0.3171, 0, 0);
		testMethod(2585, -3.1887, -0.0112, 0.5594, -0.3171, 0, 0);
		testMethod(2590, -3.1887, -0.0087, 0.4972, -0.3171, 0, 0);
		testMethod(2595, -3.1888, -0.0065, 0.4351, -0.3171, 0, 0);
		testMethod(2600, -3.1888, -0.0047, 0.3729, -0.3171, 0, 0);
		testMethod(2605, -3.1888, -0.0031, 0.3108, -0.3171, 0, 0);
		testMethod(2610, -3.1888, -0.0019, 0.2486, -0.3171, 0, 0);
		testMethod(2615, -3.1888, -0.0009, 0.1865, -0.3171, 0, 0);
		testMethod(2620, -3.1888, -0.0003, 0.1243, -0.3171, 0, 0);
		testMethod(2625, -3.1888, -0, 0.0622, -0.3171, 0, 0);
		testMethod(2630, -3.1888, -0, -0, -0.3171, 0, 0);
		testMethod(2630, -3.1888, -0, -0, -0.3171, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}