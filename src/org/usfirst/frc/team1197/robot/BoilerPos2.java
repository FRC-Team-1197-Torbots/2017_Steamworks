package org.usfirst.frc.team1197.robot;

public class BoilerPos2 extends TorTrajectory {

	public BoilerPos2() {
		super(-3.1881, -0.3258);
		time.clear();
		translation.clear();
		rotation.clear();
		testMethod(0, 0, 0, 0, 0, 0, 0);
		testMethod(5, -0, -0.0003, -0.0621, 0, 0, 0);
		testMethod(10, -0, -0.0009, -0.1243, 0, 0, 0);
		testMethod(15, -0, -0.0019, -0.1864, 0, 0, 0);
		testMethod(20, -0, -0.0031, -0.2486, 0, 0, 0);
		testMethod(25, -0, -0.0047, -0.3107, 0, 0, 0);
		testMethod(30, -0.0001, -0.0065, -0.3728, 0, 0, 0);
		testMethod(35, -0.0001, -0.0087, -0.435, 0, 0, 0);
		testMethod(40, -0.0002, -0.0112, -0.4971, 0, 0, 0);
		testMethod(45, -0.0002, -0.014, -0.5593, 0, 0, 0);
		testMethod(50, -0.0003, -0.0171, -0.6214, 0, 0, 0);
		testMethod(55, -0.0004, -0.0205, -0.6835, 0, 0, 0);
		testMethod(60, -0.0005, -0.0242, -0.7457, 0, 0, 0);
		testMethod(65, -0.0006, -0.0283, -0.8078, 0, 0, 0);
		testMethod(70, -0.0008, -0.0326, -0.87, 0, 0, 0);
		testMethod(75, -0.001, -0.0373, -0.9321, 0, 0, 0);
		testMethod(80, -0.0012, -0.0423, -0.9942, 0, 0, 0);
		testMethod(85, -0.0014, -0.0475, -1.0564, 0, 0, 0);
		testMethod(90, -0.0016, -0.0531, -1.1185, 0, 0, 0);
		testMethod(95, -0.0019, -0.059, -1.1807, 0, 0, 0);
		testMethod(100, -0.0022, -0.0652, -1.2428, 0, 0, 0);
		testMethod(105, -0.0026, -0.0718, -1.3049, 0, 0, 0);
		testMethod(110, -0.0029, -0.0786, -1.3671, 0, 0, 0);
		testMethod(115, -0.0034, -0.0858, -1.4292, 0, 0, 0);
		testMethod(120, -0.0038, -0.0932, -1.4914, 0, 0, 0);
		testMethod(125, -0.0043, -0.101, -1.5535, 0, 0, 0);
		testMethod(130, -0.0048, -0.1091, -1.6157, 0, 0, 0);
		testMethod(135, -0.0054, -0.1174, -1.6778, 0, 0, 0);
		testMethod(140, -0.006, -0.1261, -1.7399, 0, 0, 0);
		testMethod(145, -0.0066, -0.1352, -1.8021, 0, 0, 0);
		testMethod(150, -0.0073, -0.1445, -1.8642, 0, 0, 0);
		testMethod(155, -0.0081, -0.1541, -1.9264, 0, 0, 0);
		testMethod(160, -0.0089, -0.1641, -1.9885, 0, 0, 0);
		testMethod(165, -0.0097, -0.1743, -2.0506, 0, 0, 0);
		testMethod(170, -0.0106, -0.1849, -2.1128, 0, 0, 0);
		testMethod(175, -0.0116, -0.1957, -2.1749, 0, 0, 0);
		testMethod(180, -0.0126, -0.2069, -2.2371, 0, 0, 0);
		testMethod(185, -0.0137, -0.2184, -2.2992, 0, 0, 0);
		testMethod(190, -0.0148, -0.2302, -2.3613, 0, 0, 0);
		testMethod(195, -0.016, -0.2423, -2.4235, 0, 0, 0);
		testMethod(200, -0.0172, -0.2548, -2.4856, 0, 0, 0);
		testMethod(205, -0.0185, -0.2672, -2.4856, 0, 0, 0);
		testMethod(210, -0.0199, -0.2796, -2.4856, 0, 0, 0);
		testMethod(215, -0.0213, -0.2921, -2.4856, 0, 0, 0);
		testMethod(220, -0.0228, -0.3045, -2.4856, 0, 0, 0);
		testMethod(225, -0.0243, -0.3169, -2.4856, 0, 0, 0);
		testMethod(230, -0.026, -0.3293, -2.4856, 0, 0, 0);
		testMethod(235, -0.0276, -0.3418, -2.4856, 0, 0, 0);
		testMethod(240, -0.0294, -0.3542, -2.4856, 0, 0, 0);
		testMethod(245, -0.0312, -0.3666, -2.4856, 0, 0, 0);
		testMethod(250, -0.033, -0.3791, -2.4856, 0, 0, 0);
		testMethod(255, -0.035, -0.3915, -2.4856, 0, 0, 0);
		testMethod(260, -0.037, -0.4039, -2.4856, 0, 0, 0);
		testMethod(265, -0.039, -0.4163, -2.4856, 0, 0, 0);
		testMethod(270, -0.0411, -0.4288, -2.4856, 0, 0, 0);
		testMethod(275, -0.0433, -0.4412, -2.4856, 0, 0, 0);
		testMethod(280, -0.0455, -0.4536, -2.4856, 0, 0, 0);
		testMethod(285, -0.0478, -0.4661, -2.4856, 0, 0, 0);
		testMethod(290, -0.0502, -0.4785, -2.4856, 0, 0, 0);
		testMethod(295, -0.0526, -0.4909, -2.4856, 0, 0, 0);
		testMethod(300, -0.0551, -0.5033, -2.4856, 0, 0, 0);
		testMethod(305, -0.0577, -0.5158, -2.4856, 0, 0, 0);
		testMethod(310, -0.0603, -0.5282, -2.4856, 0, 0, 0);
		testMethod(315, -0.0629, -0.5406, -2.4856, 0, 0, 0);
		testMethod(320, -0.0657, -0.553, -2.4856, 0, 0, 0);
		testMethod(325, -0.0685, -0.5655, -2.4856, 0, 0, 0);
		testMethod(330, -0.0713, -0.5779, -2.4856, 0, 0, 0);
		testMethod(335, -0.0742, -0.5903, -2.4856, 0, 0, 0);
		testMethod(340, -0.0772, -0.6028, -2.4856, 0, 0, 0);
		testMethod(345, -0.0803, -0.6152, -2.4856, 0, 0, 0);
		testMethod(350, -0.0834, -0.6276, -2.4856, 0, 0, 0);
		testMethod(355, -0.0865, -0.64, -2.4856, 0, 0, 0);
		testMethod(360, -0.0898, -0.6525, -2.4856, 0, 0, 0);
		testMethod(365, -0.0931, -0.6649, -2.4856, 0, 0, 0);
		testMethod(370, -0.0964, -0.6773, -2.4856, 0, 0, 0);
		testMethod(375, -0.0998, -0.6898, -2.4856, 0, 0, 0);
		testMethod(380, -0.1033, -0.7022, -2.4856, 0, 0, 0);
		testMethod(385, -0.1069, -0.7146, -2.4856, 0, 0, 0);
		testMethod(390, -0.1105, -0.727, -2.4856, 0, 0, 0);
		testMethod(395, -0.1141, -0.7395, -2.4856, 0, 0, 0);
		testMethod(400, -0.1179, -0.7519, -2.4856, 0, 0, 0);
		testMethod(405, -0.1217, -0.7643, -2.4856, 0, 0, 0);
		testMethod(410, -0.1255, -0.7768, -2.4856, 0, 0, 0);
		testMethod(415, -0.1294, -0.7892, -2.4856, 0, 0, 0);
		testMethod(420, -0.1334, -0.8016, -2.4856, 0, 0, 0);
		testMethod(425, -0.1374, -0.814, -2.4856, 0, 0, 0);
		testMethod(430, -0.1415, -0.8265, -2.4856, 0, 0, 0);
		testMethod(435, -0.1457, -0.8389, -2.4856, 0, 0, 0);
		testMethod(440, -0.1499, -0.8513, -2.4856, 0, 0, 0);
		testMethod(445, -0.1542, -0.8638, -2.4856, 0, 0, 0);
		testMethod(450, -0.1586, -0.8762, -2.4856, 0, 0, 0);
		testMethod(455, -0.163, -0.8886, -2.4856, 0, 0, 0);
		testMethod(460, -0.1675, -0.901, -2.4856, 0, 0, 0);
		testMethod(465, -0.172, -0.9135, -2.4856, 0, 0, 0);
		testMethod(470, -0.1766, -0.9259, -2.4856, 0, 0, 0);
		testMethod(475, -0.1812, -0.9383, -2.4856, 0, 0, 0);
		testMethod(480, -0.186, -0.9507, -2.4856, 0, 0, 0);
		testMethod(485, -0.1908, -0.9632, -2.4856, 0, 0, 0);
		testMethod(490, -0.1956, -0.9756, -2.4856, 0, 0, 0);
		testMethod(495, -0.2005, -0.988, -2.4856, 0, 0, 0);
		testMethod(500, -0.2055, -1.0005, -2.4856, 0, 0, 0);
		testMethod(505, -0.2105, -1.0129, -2.4856, 0, 0, 0);
		testMethod(510, -0.2156, -1.0253, -2.4856, 0, 0, 0);
		testMethod(515, -0.2208, -1.0377, -2.4856, 0, 0, 0);
		testMethod(520, -0.226, -1.0502, -2.4856, 0, 0, 0);
		testMethod(525, -0.2313, -1.0626, -2.4856, 0, 0, 0);
		testMethod(530, -0.2366, -1.075, -2.4856, 0, 0, 0);
		testMethod(535, -0.242, -1.0875, -2.4856, 0, 0, 0);
		testMethod(540, -0.2475, -1.0999, -2.4856, 0, 0, 0);
		testMethod(545, -0.253, -1.1123, -2.4856, 0, 0, 0);
		testMethod(550, -0.2586, -1.1247, -2.4856, 0, 0, 0);
		testMethod(555, -0.2643, -1.1372, -2.4856, 0, 0, 0);
		testMethod(560, -0.27, -1.1496, -2.4856, 0, 0, 0);
		testMethod(565, -0.2758, -1.162, -2.4856, 0, 0, 0);
		testMethod(570, -0.2816, -1.1745, -2.4856, -0, -0, -0.0002);
		testMethod(575, -0.2875, -1.1869, -2.4856, -0, -0.0001, -0.0275);
		testMethod(580, -0.2935, -1.1993, -2.4856, -0, -0.0005, -0.0756);
		testMethod(585, -0.2995, -1.2117, -2.4856, -0, -0.0011, -0.1266);
		testMethod(590, -0.3056, -1.2242, -2.4856, -0, -0.0021, -0.1808);
		testMethod(595, -0.3117, -1.2366, -2.4856, -0, -0.0032, -0.238);
		testMethod(600, -0.318, -1.249, -2.4856, -0, -0.0047, -0.2985);
		testMethod(605, -0.3242, -1.2615, -2.4856, -0.0001, -0.0065, -0.3622);
		testMethod(610, -0.3306, -1.2739, -2.4856, -0.0001, -0.0087, -0.4294);
		testMethod(615, -0.337, -1.2863, -2.4856, -0.0002, -0.0112, -0.4999);
		testMethod(620, -0.3434, -1.2987, -2.4856, -0.0002, -0.0141, -0.5741);
		testMethod(625, -0.35, -1.3112, -2.4856, -0.0003, -0.0173, -0.6518);
		testMethod(630, -0.3565, -1.3236, -2.4856, -0.0004, -0.021, -0.7332);
		testMethod(635, -0.3632, -1.336, -2.4856, -0.0005, -0.0251, -0.8184);
		testMethod(640, -0.3699, -1.3484, -2.4856, -0.0007, -0.0296, -0.9075);
		testMethod(645, -0.3767, -1.3609, -2.4856, -0.0008, -0.0346, -1.0006);
		testMethod(650, -0.3835, -1.3733, -2.4856, -0.001, -0.0401, -1.0976);
		testMethod(655, -0.3904, -1.3857, -2.4856, -0.0012, -0.0461, -1.1989);
		testMethod(660, -0.3974, -1.3982, -2.4856, -0.0015, -0.0526, -1.3043);
		testMethod(665, -0.4044, -1.4106, -2.4856, -0.0017, -0.0597, -1.414);
		testMethod(670, -0.4115, -1.423, -2.4856, -0.0021, -0.0673, -1.5282);
		testMethod(675, -0.4186, -1.4354, -2.4856, -0.0024, -0.0756, -1.6468);
		testMethod(680, -0.4258, -1.4479, -2.4856, -0.0028, -0.0844, -1.77);
		testMethod(685, -0.4331, -1.4603, -2.4856, -0.0033, -0.0939, -1.8979);
		testMethod(690, -0.4404, -1.4727, -2.4856, -0.0038, -0.1041, -2.0306);
		testMethod(695, -0.4478, -1.4852, -2.4856, -0.0043, -0.1149, -2.1681);
		testMethod(700, -0.4553, -1.4976, -2.4856, -0.0049, -0.1265, -2.3106);
		testMethod(705, -0.4628, -1.51, -2.4856, -0.0056, -0.1387, -2.4581);
		testMethod(710, -0.4704, -1.5224, -2.4856, -0.0063, -0.1518, -2.6108);
		testMethod(715, -0.478, -1.5349, -2.4856, -0.0071, -0.1656, -2.7687);
		testMethod(720, -0.4857, -1.5473, -2.4856, -0.008, -0.1803, -2.9319);
		testMethod(725, -0.4935, -1.5597, -2.4856, -0.0089, -0.1958, -3.1006);
		testMethod(730, -0.5013, -1.5722, -2.4856, -0.0099, -0.2122, -3.2749);
		testMethod(735, -0.5092, -1.5846, -2.4856, -0.011, -0.2295, -3.4548);
		testMethod(740, -0.5172, -1.597, -2.4856, -0.0122, -0.2477, -3.6404);
		testMethod(745, -0.5252, -1.6094, -2.4856, -0.0135, -0.2668, -3.8319);
		testMethod(750, -0.5333, -1.6219, -2.4856, -0.0149, -0.287, -4.0293);
		testMethod(755, -0.5414, -1.6343, -2.4856, -0.0164, -0.3081, -4.2328);
		testMethod(760, -0.5496, -1.6467, -2.4856, -0.018, -0.3303, -4.4424);
		testMethod(765, -0.5579, -1.6591, -2.4856, -0.0197, -0.3536, -4.6583);
		testMethod(770, -0.5662, -1.6716, -2.4856, -0.0215, -0.378, -4.8806);
		testMethod(775, -0.5746, -1.684, -2.4856, -0.0235, -0.4036, -5.1093);
		testMethod(780, -0.583, -1.6961, -2.4235, -0.0255, -0.4302, -5.3285);
		testMethod(785, -0.5916, -1.7079, -2.3613, -0.0278, -0.458, -5.5506);
		testMethod(790, -0.6001, -1.7194, -2.2992, -0.0301, -0.4869, -5.7756);
		testMethod(795, -0.6088, -1.7306, -2.2371, -0.0326, -0.5169, -6.0031);
		testMethod(800, -0.6174, -1.7415, -2.1749, -0.0353, -0.548, -6.2331);
		testMethod(805, -0.6262, -1.752, -2.1128, -0.0381, -0.5804, -6.4651);
		testMethod(810, -0.635, -1.7623, -2.0506, -0.0411, -0.6139, -6.6991);
		testMethod(815, -0.6438, -1.7722, -1.9885, -0.0442, -0.6481, -6.8449);
		testMethod(820, -0.6527, -1.7819, -1.9264, -0.0476, -0.6818, -6.7389);
		testMethod(825, -0.6616, -1.7912, -1.8642, -0.0511, -0.715, -6.6531);
		testMethod(830, -0.6706, -1.8002, -1.8021, -0.0547, -0.7478, -6.5587);
		testMethod(835, -0.6796, -1.8089, -1.7399, -0.0585, -0.7801, -6.4559);
		testMethod(840, -0.6887, -1.8173, -1.6778, -0.0625, -0.8118, -6.3447);
		testMethod(845, -0.6978, -1.8254, -1.6157, -0.0667, -0.843, -6.2256);
		testMethod(850, -0.7069, -1.8331, -1.5535, -0.071, -0.8735, -6.0985);
		testMethod(855, -0.7161, -1.8406, -1.4914, -0.0754, -0.9033, -5.9637);
		testMethod(860, -0.7253, -1.8477, -1.4292, -0.08, -0.9324, -5.8214);
		testMethod(865, -0.7346, -1.8546, -1.3671, -0.0847, -0.9607, -5.6719);
		testMethod(870, -0.7439, -1.8611, -1.3049, -0.0896, -0.9883, -5.5153);
		testMethod(875, -0.7532, -1.8673, -1.2428, -0.0946, -1.0151, -5.3519);
		testMethod(880, -0.7625, -1.8732, -1.1807, -0.0997, -1.041, -5.182);
		testMethod(885, -0.7719, -1.8788, -1.1185, -0.105, -1.066, -5.0057);
		testMethod(890, -0.7813, -1.8841, -1.0564, -0.1104, -1.0901, -4.8234);
		testMethod(895, -0.7908, -1.8891, -0.9942, -0.1159, -1.1133, -4.6352);
		testMethod(900, -0.8002, -1.8937, -0.9321, -0.1215, -1.1355, -4.4415);
		testMethod(905, -0.8097, -1.8981, -0.87, -0.1273, -1.1567, -4.2426);
		testMethod(910, -0.8192, -1.9021, -0.8078, -0.1331, -1.1769, -4.0386);
		testMethod(915, -0.8287, -1.9058, -0.7457, -0.139, -1.1961, -3.83);
		testMethod(920, -0.8383, -1.9093, -0.6835, -0.1451, -1.2142, -3.617);
		testMethod(925, -0.8478, -1.9124, -0.6214, -0.1512, -1.2312, -3.3998);
		testMethod(930, -0.8574, -1.9152, -0.5593, -0.1574, -1.2471, -3.1788);
		testMethod(935, -0.867, -1.9177, -0.4971, -0.1636, -1.2618, -2.9543);
		testMethod(940, -0.8766, -1.9198, -0.435, -0.17, -1.2755, -2.7266);
		testMethod(945, -0.8862, -1.9217, -0.3728, -0.1764, -1.2879, -2.4959);
		testMethod(950, -0.8958, -1.9232, -0.3107, -0.1829, -1.2992, -2.2627);
		testMethod(955, -0.9054, -1.9245, -0.2486, -0.1894, -1.3094, -2.0272);
		testMethod(960, -0.915, -1.9254, -0.1864, -0.1959, -1.3183, -1.7897);
		testMethod(965, -0.9247, -1.926, -0.1243, -0.2026, -1.3261, -1.5506);
		testMethod(970, -0.9343, -1.9264, -0.0621, -0.2092, -1.3326, -1.3101);
		testMethod(975, -0.9439, -1.9264, -0, -0.2159, -1.338, -1.0687);
		testMethod(980, -0.9535, -1.9264, -0, -0.2226, -1.3423, -0.8699);
		testMethod(985, -0.9632, -1.9264, -0, -0.2293, -1.3457, -0.6711);
		testMethod(990, -0.9728, -1.9264, -0, -0.236, -1.348, -0.4723);
		testMethod(995, -0.9824, -1.9264, -0, -0.2428, -1.3494, -0.2735);
		testMethod(1000, -0.9921, -1.9264, -0, -0.2495, -1.3498, -0.0746);
		testMethod(1005, -1.0017, -1.9264, -0, -0.2563, -1.3492, 0.125);
		testMethod(1010, -1.0113, -1.9264, -0, -0.263, -1.3475, 0.3237);
		testMethod(1015, -1.021, -1.9264, -0, -0.2698, -1.3449, 0.5225);
		testMethod(1020, -1.0306, -1.9264, -0, -0.2765, -1.3413, 0.7213);
		testMethod(1025, -1.0402, -1.9264, -0, -0.2832, -1.3367, 0.9201);
		testMethod(1030, -1.0499, -1.9264, -0, -0.2898, -1.3311, 1.1189);
		testMethod(1035, -1.0595, -1.9264, -0, -0.2965, -1.3245, 1.3177);
		testMethod(1040, -1.0691, -1.9264, -0, -0.3031, -1.317, 1.5165);
		testMethod(1045, -1.0788, -1.9264, -0, -0.3096, -1.3084, 1.7153);
		testMethod(1050, -1.0884, -1.9264, -0, -0.3162, -1.2988, 1.914);
		testMethod(1055, -1.098, -1.9264, -0, -0.3226, -1.2882, 2.1128);
		testMethod(1060, -1.1077, -1.9264, -0, -0.329, -1.2767, 2.3116);
		testMethod(1065, -1.1173, -1.9264, -0, -0.3354, -1.2641, 2.5104);
		testMethod(1070, -1.1269, -1.9264, -0, -0.3417, -1.2506, 2.7092);
		testMethod(1075, -1.1365, -1.9264, -0, -0.3479, -1.2361, 2.908);
		testMethod(1080, -1.1462, -1.9264, -0, -0.354, -1.2205, 3.1068);
		testMethod(1085, -1.1558, -1.9264, -0, -0.3601, -1.204, 3.3056);
		testMethod(1090, -1.1654, -1.9264, -0, -0.3661, -1.1865, 3.5043);
		testMethod(1095, -1.1751, -1.9264, -0, -0.372, -1.168, 3.7031);
		testMethod(1100, -1.1847, -1.9264, -0, -0.3778, -1.1484, 3.9019);
		testMethod(1105, -1.1943, -1.9264, -0, -0.3834, -1.1279, 4.1007);
		testMethod(1110, -1.204, -1.9264, -0, -0.389, -1.1064, 4.2995);
		testMethod(1115, -1.2136, -1.9264, -0, -0.3945, -1.084, 4.4983);
		testMethod(1120, -1.2232, -1.9264, -0, -0.3999, -1.0605, 4.6971);
		testMethod(1125, -1.2329, -1.9264, -0, -0.4051, -1.036, 4.8959);
		testMethod(1130, -1.2425, -1.9264, -0, -0.4102, -1.0105, 5.0946);
		testMethod(1135, -1.2521, -1.9264, -0, -0.4152, -0.984, 5.2934);
		testMethod(1140, -1.2618, -1.9264, -0, -0.4201, -0.9566, 5.4922);
		testMethod(1145, -1.2714, -1.9264, -0, -0.4248, -0.9281, 5.691);
		testMethod(1150, -1.281, -1.9264, -0, -0.4293, -0.8987, 5.8898);
		testMethod(1155, -1.2907, -1.9264, -0, -0.4338, -0.8682, 6.0886);
		testMethod(1160, -1.3003, -1.9264, -0, -0.438, -0.8368, 6.2874);
		testMethod(1165, -1.3099, -1.9264, -0, -0.4421, -0.8044, 6.4862);
		testMethod(1170, -1.3196, -1.9264, -0, -0.4461, -0.7709, 6.6849);
		testMethod(1175, -1.3292, -1.9264, -0, -0.4498, -0.7365, 6.8837);
		testMethod(1180, -1.3388, -1.9264, -0, -0.4534, -0.7011, 7.0825);
		testMethod(1185, -1.3484, -1.9264, -0, -0.4568, -0.6646, 7.2996);
		testMethod(1190, -1.3581, -1.9264, -0, -0.4601, -0.6288, 7.1702);
		testMethod(1195, -1.3677, -1.9264, -0, -0.4631, -0.5939, 6.9714);
		testMethod(1200, -1.3773, -1.9264, -0, -0.466, -0.56, 6.7726);
		testMethod(1205, -1.387, -1.9264, -0, -0.4687, -0.5272, 6.5738);
		testMethod(1210, -1.3966, -1.9264, -0, -0.4713, -0.4953, 6.375);
		testMethod(1215, -1.4062, -1.9264, -0, -0.4737, -0.4644, 6.1763);
		testMethod(1220, -1.4159, -1.9264, -0, -0.4759, -0.4345, 5.9775);
		testMethod(1225, -1.4255, -1.9264, -0, -0.478, -0.4056, 5.7787);
		testMethod(1230, -1.4351, -1.9264, -0, -0.48, -0.3777, 5.5799);
		testMethod(1235, -1.4448, -1.9264, -0, -0.4818, -0.3508, 5.3811);
		testMethod(1240, -1.4544, -1.9264, -0, -0.4835, -0.3249, 5.1823);
		testMethod(1245, -1.464, -1.9264, -0, -0.4851, -0.3, 4.9835);
		testMethod(1250, -1.4737, -1.9264, -0, -0.4865, -0.2761, 4.7847);
		testMethod(1255, -1.4833, -1.9264, -0, -0.4878, -0.2532, 4.586);
		testMethod(1260, -1.4929, -1.9264, -0, -0.489, -0.2312, 4.3872);
		testMethod(1265, -1.5026, -1.9264, -0, -0.4901, -0.2103, 4.1884);
		testMethod(1270, -1.5122, -1.9264, -0, -0.4911, -0.1903, 3.9896);
		testMethod(1275, -1.5218, -1.9264, -0, -0.4921, -0.1714, 3.7908);
		testMethod(1280, -1.5315, -1.9264, -0, -0.4929, -0.1534, 3.592);
		testMethod(1285, -1.5411, -1.9264, -0, -0.4936, -0.1364, 3.3932);
		testMethod(1290, -1.5507, -1.9264, -0, -0.4942, -0.1205, 3.1944);
		testMethod(1295, -1.5603, -1.9264, -0, -0.4948, -0.1055, 2.9957);
		testMethod(1300, -1.57, -1.9264, -0, -0.4953, -0.0915, 2.7969);
		testMethod(1305, -1.5796, -1.9264, -0, -0.4957, -0.0785, 2.5981);
		testMethod(1310, -1.5892, -1.9264, -0, -0.4961, -0.0665, 2.3993);
		testMethod(1315, -1.5989, -1.9264, -0, -0.4964, -0.0555, 2.2005);
		testMethod(1320, -1.6085, -1.9264, -0, -0.4966, -0.0455, 2.0017);
		testMethod(1325, -1.6181, -1.9264, -0, -0.4968, -0.0365, 1.8029);
		testMethod(1330, -1.6278, -1.9264, -0, -0.497, -0.0285, 1.6041);
		testMethod(1335, -1.6374, -1.9264, -0, -0.4971, -0.0214, 1.4054);
		testMethod(1340, -1.647, -1.9264, -0, -0.4972, -0.0154, 1.2066);
		testMethod(1345, -1.6567, -1.9264, -0, -0.4973, -0.0104, 1.0078);
		testMethod(1350, -1.6663, -1.9264, -0, -0.4973, -0.0063, 0.809);
		testMethod(1355, -1.6759, -1.9264, -0, -0.4973, -0.0033, 0.6102);
		testMethod(1360, -1.6856, -1.9264, -0, -0.4974, -0.0012, 0.4114);
		testMethod(1365, -1.6952, -1.9264, -0, -0.4974, -0.0002, 0.2126);
		testMethod(1370, -1.7048, -1.9264, -0, -0.4974, 0, 0.0323);
		testMethod(1375, -1.7145, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1380, -1.7241, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1385, -1.7337, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1390, -1.7433, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1395, -1.753, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1400, -1.7626, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1405, -1.7722, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1410, -1.7819, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1415, -1.7915, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1420, -1.8011, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1425, -1.8108, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1430, -1.8204, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1435, -1.83, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1440, -1.8397, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1445, -1.8493, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1450, -1.8589, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1455, -1.8686, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1460, -1.8782, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1465, -1.8878, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1470, -1.8975, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1475, -1.9071, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1480, -1.9167, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1485, -1.9264, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1490, -1.936, -1.9264, -0, -0.4974, 0, 0);
		testMethod(1495, -1.9456, -1.9264, -0, -0.4974, 0.0001, 0.0219);
		testMethod(1500, -1.9552, -1.9264, -0, -0.4974, 0.0011, 0.1928);
		testMethod(1505, -1.9649, -1.9264, -0, -0.4973, 0.003, 0.3916);
		testMethod(1510, -1.9745, -1.9264, -0, -0.4973, 0.006, 0.5904);
		testMethod(1515, -1.9841, -1.9264, -0, -0.4973, 0.0099, 0.7892);
		testMethod(1520, -1.9938, -1.9264, -0, -0.4972, 0.0149, 0.988);
		testMethod(1525, -2.0034, -1.9264, -0, -0.4971, 0.0208, 1.1867);
		testMethod(1530, -2.013, -1.9264, -0, -0.497, 0.0277, 1.3855);
		testMethod(1535, -2.0227, -1.9264, -0, -0.4969, 0.0357, 1.5843);
		testMethod(1540, -2.0323, -1.9264, -0, -0.4967, 0.0446, 1.7831);
		testMethod(1545, -2.0419, -1.9264, -0, -0.4964, 0.0545, 1.9819);
		testMethod(1550, -2.0516, -1.9264, -0, -0.4961, 0.0654, 2.1807);
		testMethod(1555, -2.0612, -1.9264, -0, -0.4958, 0.0773, 2.3795);
		testMethod(1560, -2.0708, -1.9264, -0, -0.4953, 0.0902, 2.5783);
		testMethod(1565, -2.0805, -1.9264, -0, -0.4948, 0.1041, 2.777);
		testMethod(1570, -2.0901, -1.9264, -0, -0.4943, 0.1189, 2.9758);
		testMethod(1575, -2.0997, -1.9264, -0, -0.4937, 0.1348, 3.1746);
		testMethod(1580, -2.1094, -1.9264, -0, -0.4929, 0.1517, 3.3734);
		testMethod(1585, -2.119, -1.9264, -0, -0.4921, 0.1695, 3.5722);
		testMethod(1590, -2.1286, -1.9264, -0, -0.4912, 0.1884, 3.771);
		testMethod(1595, -2.1383, -1.9264, -0, -0.4903, 0.2082, 3.9698);
		testMethod(1600, -2.1479, -1.9264, -0, -0.4892, 0.2291, 4.1686);
		testMethod(1605, -2.1575, -1.9264, -0, -0.488, 0.2509, 4.3673);
		testMethod(1610, -2.1671, -1.9264, -0, -0.4866, 0.2737, 4.5661);
		testMethod(1615, -2.1768, -1.9264, -0, -0.4852, 0.2976, 4.7649);
		testMethod(1620, -2.1864, -1.9264, -0, -0.4837, 0.3224, 4.9637);
		testMethod(1625, -2.196, -1.9264, -0, -0.482, 0.3479, 5.096);
		testMethod(1630, -2.2057, -1.9264, -0, -0.4802, 0.3724, 4.9131);
		testMethod(1635, -2.2153, -1.9264, -0, -0.4783, 0.396, 4.7143);
		testMethod(1640, -2.2249, -1.9264, -0, -0.4762, 0.4186, 4.5156);
		testMethod(1645, -2.2346, -1.9264, -0, -0.4741, 0.4402, 4.3168);
		testMethod(1650, -2.2442, -1.9264, -0, -0.4718, 0.4608, 4.118);
		testMethod(1655, -2.2538, -1.9264, -0, -0.4695, 0.4804, 3.9192);
		testMethod(1660, -2.2635, -1.926, 0.0621, -0.467, 0.4989, 3.704);
		testMethod(1665, -2.2731, -1.9254, 0.1243, -0.4645, 0.5163, 3.4866);
		testMethod(1670, -2.2827, -1.9245, 0.1864, -0.4619, 0.5326, 3.2674);
		testMethod(1675, -2.2923, -1.9232, 0.2486, -0.4592, 0.5479, 3.0465);
		testMethod(1680, -2.3019, -1.9217, 0.3107, -0.4564, 0.562, 2.8245);
		testMethod(1685, -2.3116, -1.9198, 0.3728, -0.4536, 0.575, 2.6015);
		testMethod(1690, -2.3211, -1.9177, 0.435, -0.4506, 0.5869, 2.3779);
		testMethod(1695, -2.3307, -1.9152, 0.4971, -0.4477, 0.5977, 2.154);
		testMethod(1700, -2.3403, -1.9124, 0.5593, -0.4447, 0.6073, 1.9302);
		testMethod(1705, -2.3499, -1.9093, 0.6214, -0.4416, 0.6159, 1.7067);
		testMethod(1710, -2.3594, -1.9058, 0.6835, -0.4385, 0.6233, 1.4839);
		testMethod(1715, -2.3689, -1.9021, 0.7457, -0.4354, 0.6296, 1.262);
		testMethod(1720, -2.3784, -1.8981, 0.8078, -0.4322, 0.6348, 1.0415);
		testMethod(1725, -2.3879, -1.8937, 0.87, -0.429, 0.6389, 0.8225);
		testMethod(1730, -2.3973, -1.8891, 0.9321, -0.4258, 0.6419, 0.6055);
		testMethod(1735, -2.4068, -1.8841, 0.9942, -0.4226, 0.6439, 0.3906);
		testMethod(1740, -2.4162, -1.8788, 1.0564, -0.4194, 0.6448, 0.1783);
		testMethod(1745, -2.4256, -1.8732, 1.1185, -0.4162, 0.6446, -0.0313);
		testMethod(1750, -2.4349, -1.8673, 1.1807, -0.413, 0.6434, -0.2379);
		testMethod(1755, -2.4442, -1.8611, 1.2428, -0.4097, 0.6412, -0.4413);
		testMethod(1760, -2.4535, -1.8546, 1.3049, -0.4065, 0.638, -0.6411);
		testMethod(1765, -2.4628, -1.8477, 1.3671, -0.4034, 0.6338, -0.8368);
		testMethod(1770, -2.472, -1.8406, 1.4292, -0.4002, 0.6287, -1.0284);
		testMethod(1775, -2.4812, -1.8331, 1.4914, -0.3971, 0.6226, -1.2156);
		testMethod(1780, -2.4903, -1.8254, 1.5535, -0.394, 0.6156, -1.3981);
		testMethod(1785, -2.4994, -1.8173, 1.6157, -0.3909, 0.6077, -1.5758);
		testMethod(1790, -2.5085, -1.8089, 1.6778, -0.3879, 0.599, -1.7483);
		testMethod(1795, -2.5175, -1.8002, 1.7399, -0.3849, 0.5894, -1.9155);
		testMethod(1800, -2.5265, -1.7912, 1.8021, -0.382, 0.579, -2.0772);
		testMethod(1805, -2.5354, -1.7819, 1.8642, -0.3791, 0.5679, -2.233);
		testMethod(1810, -2.5443, -1.7722, 1.9264, -0.3763, 0.556, -2.3829);
		testMethod(1815, -2.5532, -1.7623, 1.9885, -0.3736, 0.5433, -2.5267);
		testMethod(1820, -2.562, -1.752, 2.0506, -0.3709, 0.53, -2.6641);
		testMethod(1825, -2.5707, -1.7415, 2.1128, -0.3683, 0.516, -2.795);
		testMethod(1830, -2.5794, -1.7306, 2.1749, -0.3657, 0.5014, -2.9192);
		testMethod(1835, -2.588, -1.7194, 2.2371, -0.3633, 0.4863, -3.0366);
		testMethod(1840, -2.5966, -1.7079, 2.2992, -0.3609, 0.4705, -3.147);
		testMethod(1845, -2.6051, -1.6961, 2.3613, -0.3586, 0.4543, -3.2503);
		testMethod(1850, -2.6135, -1.684, 2.4235, -0.3563, 0.4375, -3.3464);
		testMethod(1855, -2.6219, -1.6716, 2.4856, -0.3542, 0.4204, -3.4351);
		testMethod(1860, -2.6302, -1.6591, 2.4856, -0.3521, 0.4028, -3.5016);
		testMethod(1865, -2.6385, -1.6467, 2.4856, -0.3502, 0.385, -3.5627);
		testMethod(1870, -2.6467, -1.6343, 2.4856, -0.3483, 0.3669, -3.6188);
		testMethod(1875, -2.6548, -1.6219, 2.4856, -0.3465, 0.3486, -3.6697);
		testMethod(1880, -2.6629, -1.6094, 2.4856, -0.3448, 0.33, -3.7158);
		testMethod(1885, -2.6709, -1.597, 2.4856, -0.3432, 0.3112, -3.7569);
		testMethod(1890, -2.6789, -1.5846, 2.4856, -0.3417, 0.2923, -3.7934);
		testMethod(1895, -2.6868, -1.5722, 2.4856, -0.3403, 0.2731, -3.8252);
		testMethod(1900, -2.6946, -1.5597, 2.4856, -0.339, 0.2542, -3.7815);
		testMethod(1905, -2.7024, -1.5473, 2.4856, -0.3377, 0.2363, -3.5899);
		testMethod(1910, -2.7101, -1.5349, 2.4856, -0.3366, 0.2192, -3.4117);
		testMethod(1915, -2.7177, -1.5224, 2.4856, -0.3355, 0.203, -3.239);
		testMethod(1920, -2.7253, -1.51, 2.4856, -0.3346, 0.1877, -3.0717);
		testMethod(1925, -2.7328, -1.4976, 2.4856, -0.3337, 0.1731, -2.9098);
		testMethod(1930, -2.7403, -1.4852, 2.4856, -0.3328, 0.1594, -2.753);
		testMethod(1935, -2.7477, -1.4727, 2.4856, -0.3321, 0.1463, -2.6014);
		testMethod(1940, -2.755, -1.4603, 2.4856, -0.3314, 0.1341, -2.4549);
		testMethod(1945, -2.7623, -1.4479, 2.4856, -0.3307, 0.1225, -2.3132);
		testMethod(1950, -2.7695, -1.4354, 2.4856, -0.3301, 0.1116, -2.1765);
		testMethod(1955, -2.7766, -1.423, 2.4856, -0.3296, 0.1014, -2.0444);
		testMethod(1960, -2.7837, -1.4106, 2.4856, -0.3291, 0.0918, -1.917);
		testMethod(1965, -2.7907, -1.3982, 2.4856, -0.3287, 0.0828, -1.7942);
		testMethod(1970, -2.7977, -1.3857, 2.4856, -0.3283, 0.0745, -1.6759);
		testMethod(1975, -2.8046, -1.3733, 2.4856, -0.3279, 0.0667, -1.5619);
		testMethod(1980, -2.8114, -1.3609, 2.4856, -0.3276, 0.0594, -1.4523);
		testMethod(1985, -2.8182, -1.3484, 2.4856, -0.3273, 0.0527, -1.3468);
		testMethod(1990, -2.8249, -1.336, 2.4856, -0.3271, 0.0464, -1.2455);
		testMethod(1995, -2.8316, -1.3236, 2.4856, -0.3269, 0.0407, -1.1482);
		testMethod(2000, -2.8382, -1.3112, 2.4856, -0.3267, 0.0354, -1.0549);
		testMethod(2005, -2.8447, -1.2987, 2.4856, -0.3265, 0.0306, -0.9654);
		testMethod(2010, -2.8511, -1.2863, 2.4856, -0.3264, 0.0262, -0.8797);
		testMethod(2015, -2.8575, -1.2739, 2.4856, -0.3263, 0.0222, -0.7977);
		testMethod(2020, -2.8639, -1.2615, 2.4856, -0.3262, 0.0186, -0.7193);
		testMethod(2025, -2.8702, -1.249, 2.4856, -0.3261, 0.0154, -0.6444);
		testMethod(2030, -2.8764, -1.2366, 2.4856, -0.326, 0.0125, -0.5729);
		testMethod(2035, -2.8825, -1.2242, 2.4856, -0.326, 0.01, -0.5049);
		testMethod(2040, -2.8886, -1.2117, 2.4856, -0.3259, 0.0078, -0.4401);
		testMethod(2045, -2.8946, -1.1993, 2.4856, -0.3259, 0.0059, -0.3785);
		testMethod(2050, -2.9006, -1.1869, 2.4856, -0.3258, 0.0043, -0.3201);
		testMethod(2055, -2.9065, -1.1745, 2.4856, -0.3258, 0.003, -0.2647);
		testMethod(2060, -2.9124, -1.162, 2.4856, -0.3258, 0.0019, -0.2123);
		testMethod(2065, -2.9181, -1.1496, 2.4856, -0.3258, 0.0011, -0.1628);
		testMethod(2070, -2.9238, -1.1372, 2.4856, -0.3258, 0.0005, -0.1161);
		testMethod(2075, -2.9295, -1.1247, 2.4856, -0.3258, 0.0002, -0.0722);
		testMethod(2080, -2.9351, -1.1123, 2.4856, -0.3258, 0, -0.0309);
		testMethod(2085, -2.9406, -1.0999, 2.4856, -0.3258, 0, -0.0016);
		testMethod(2090, -2.9461, -1.0875, 2.4856, -0.3258, 0, 0);
		testMethod(2095, -2.9515, -1.075, 2.4856, -0.3258, 0, 0);
		testMethod(2100, -2.9568, -1.0626, 2.4856, -0.3258, 0, 0);
		testMethod(2105, -2.9621, -1.0502, 2.4856, -0.3258, 0, 0);
		testMethod(2110, -2.9673, -1.0377, 2.4856, -0.3258, 0, 0);
		testMethod(2115, -2.9725, -1.0253, 2.4856, -0.3258, 0, 0);
		testMethod(2120, -2.9776, -1.0129, 2.4856, -0.3258, 0, 0);
		testMethod(2125, -2.9826, -1.0005, 2.4856, -0.3258, 0, 0);
		testMethod(2130, -2.9876, -0.988, 2.4856, -0.3258, 0, 0);
		testMethod(2135, -2.9925, -0.9756, 2.4856, -0.3258, 0, 0);
		testMethod(2140, -2.9974, -0.9632, 2.4856, -0.3258, 0, 0);
		testMethod(2145, -3.0021, -0.9507, 2.4856, -0.3258, 0, 0);
		testMethod(2150, -3.0069, -0.9383, 2.4856, -0.3258, 0, 0);
		testMethod(2155, -3.0115, -0.9259, 2.4856, -0.3258, 0, 0);
		testMethod(2160, -3.0161, -0.9135, 2.4856, -0.3258, 0, 0);
		testMethod(2165, -3.0207, -0.901, 2.4856, -0.3258, 0, 0);
		testMethod(2170, -3.0251, -0.8886, 2.4856, -0.3258, 0, 0);
		testMethod(2175, -3.0295, -0.8762, 2.4856, -0.3258, 0, 0);
		testMethod(2180, -3.0339, -0.8638, 2.4856, -0.3258, 0, 0);
		testMethod(2185, -3.0382, -0.8513, 2.4856, -0.3258, 0, 0);
		testMethod(2190, -3.0424, -0.8389, 2.4856, -0.3258, 0, 0);
		testMethod(2195, -3.0466, -0.8265, 2.4856, -0.3258, 0, 0);
		testMethod(2200, -3.0507, -0.814, 2.4856, -0.3258, 0, 0);
		testMethod(2205, -3.0547, -0.8016, 2.4856, -0.3258, 0, 0);
		testMethod(2210, -3.0587, -0.7892, 2.4856, -0.3258, 0, 0);
		testMethod(2215, -3.0626, -0.7768, 2.4856, -0.3258, 0, 0);
		testMethod(2220, -3.0665, -0.7643, 2.4856, -0.3258, 0, 0);
		testMethod(2225, -3.0703, -0.7519, 2.4856, -0.3258, 0, 0);
		testMethod(2230, -3.074, -0.7395, 2.4856, -0.3258, 0, 0);
		testMethod(2235, -3.0776, -0.727, 2.4856, -0.3258, 0, 0);
		testMethod(2240, -3.0812, -0.7146, 2.4856, -0.3258, 0, 0);
		testMethod(2245, -3.0848, -0.7022, 2.4856, -0.3258, 0, 0);
		testMethod(2250, -3.0883, -0.6898, 2.4856, -0.3258, 0, 0);
		testMethod(2255, -3.0917, -0.6773, 2.4856, -0.3258, 0, 0);
		testMethod(2260, -3.095, -0.6649, 2.4856, -0.3258, 0, 0);
		testMethod(2265, -3.0983, -0.6525, 2.4856, -0.3258, 0, 0);
		testMethod(2270, -3.1016, -0.64, 2.4856, -0.3258, 0, 0);
		testMethod(2275, -3.1047, -0.6276, 2.4856, -0.3258, 0, 0);
		testMethod(2280, -3.1078, -0.6152, 2.4856, -0.3258, 0, 0);
		testMethod(2285, -3.1109, -0.6028, 2.4856, -0.3258, 0, 0);
		testMethod(2290, -3.1139, -0.5903, 2.4856, -0.3258, 0, 0);
		testMethod(2295, -3.1168, -0.5779, 2.4856, -0.3258, 0, 0);
		testMethod(2300, -3.1197, -0.5655, 2.4856, -0.3258, 0, 0);
		testMethod(2305, -3.1224, -0.553, 2.4856, -0.3258, 0, 0);
		testMethod(2310, -3.1252, -0.5406, 2.4856, -0.3258, 0, 0);
		testMethod(2315, -3.1279, -0.5282, 2.4856, -0.3258, 0, 0);
		testMethod(2320, -3.1305, -0.5158, 2.4856, -0.3258, 0, 0);
		testMethod(2325, -3.133, -0.5033, 2.4856, -0.3258, 0, 0);
		testMethod(2330, -3.1355, -0.4909, 2.4856, -0.3258, 0, 0);
		testMethod(2335, -3.1379, -0.4785, 2.4856, -0.3258, 0, 0);
		testMethod(2340, -3.1403, -0.4661, 2.4856, -0.3258, 0, 0);
		testMethod(2345, -3.1426, -0.4536, 2.4856, -0.3258, 0, 0);
		testMethod(2350, -3.1448, -0.4412, 2.4856, -0.3258, 0, 0);
		testMethod(2355, -3.147, -0.4288, 2.4856, -0.3258, 0, 0);
		testMethod(2360, -3.1491, -0.4163, 2.4856, -0.3258, 0, 0);
		testMethod(2365, -3.1512, -0.4039, 2.4856, -0.3258, 0, 0);
		testMethod(2370, -3.1531, -0.3915, 2.4856, -0.3258, 0, 0);
		testMethod(2375, -3.1551, -0.3791, 2.4856, -0.3258, 0, 0);
		testMethod(2380, -3.1569, -0.3666, 2.4856, -0.3258, 0, 0);
		testMethod(2385, -3.1587, -0.3542, 2.4856, -0.3258, 0, 0);
		testMethod(2390, -3.1605, -0.3418, 2.4856, -0.3258, 0, 0);
		testMethod(2395, -3.1622, -0.3293, 2.4856, -0.3258, 0, 0);
		testMethod(2400, -3.1638, -0.3169, 2.4856, -0.3258, 0, 0);
		testMethod(2405, -3.1653, -0.3045, 2.4856, -0.3258, 0, 0);
		testMethod(2410, -3.1668, -0.2921, 2.4856, -0.3258, 0, 0);
		testMethod(2415, -3.1682, -0.2796, 2.4856, -0.3258, 0, 0);
		testMethod(2420, -3.1696, -0.2672, 2.4856, -0.3258, 0, 0);
		testMethod(2425, -3.1709, -0.2548, 2.4856, -0.3258, 0, 0);
		testMethod(2430, -3.1722, -0.2423, 2.4856, -0.3258, 0, 0);
		testMethod(2435, -3.1733, -0.2302, 2.4235, -0.3258, 0, 0);
		testMethod(2440, -3.1745, -0.2184, 2.3613, -0.3258, 0, 0);
		testMethod(2445, -3.1755, -0.2069, 2.2992, -0.3258, 0, 0);
		testMethod(2450, -3.1765, -0.1957, 2.2371, -0.3258, 0, 0);
		testMethod(2455, -3.1775, -0.1849, 2.1749, -0.3258, 0, 0);
		testMethod(2460, -3.1784, -0.1743, 2.1128, -0.3258, 0, 0);
		testMethod(2465, -3.1792, -0.1641, 2.0506, -0.3258, 0, 0);
		testMethod(2470, -3.18, -0.1541, 1.9885, -0.3258, 0, 0);
		testMethod(2475, -3.1808, -0.1445, 1.9264, -0.3258, 0, 0);
		testMethod(2480, -3.1815, -0.1352, 1.8642, -0.3258, 0, 0);
		testMethod(2485, -3.1821, -0.1261, 1.8021, -0.3258, 0, 0);
		testMethod(2490, -3.1827, -0.1174, 1.7399, -0.3258, 0, 0);
		testMethod(2495, -3.1833, -0.1091, 1.6778, -0.3258, 0, 0);
		testMethod(2500, -3.1838, -0.101, 1.6157, -0.3258, 0, 0);
		testMethod(2505, -3.1843, -0.0932, 1.5535, -0.3258, 0, 0);
		testMethod(2510, -3.1848, -0.0858, 1.4914, -0.3258, 0, 0);
		testMethod(2515, -3.1852, -0.0786, 1.4292, -0.3258, 0, 0);
		testMethod(2520, -3.1855, -0.0718, 1.3671, -0.3258, 0, 0);
		testMethod(2525, -3.1859, -0.0652, 1.3049, -0.3258, 0, 0);
		testMethod(2530, -3.1862, -0.059, 1.2428, -0.3258, 0, 0);
		testMethod(2535, -3.1865, -0.0531, 1.1807, -0.3258, 0, 0);
		testMethod(2540, -3.1867, -0.0475, 1.1185, -0.3258, 0, 0);
		testMethod(2545, -3.187, -0.0423, 1.0564, -0.3258, 0, 0);
		testMethod(2550, -3.1872, -0.0373, 0.9942, -0.3258, 0, 0);
		testMethod(2555, -3.1873, -0.0326, 0.9321, -0.3258, 0, 0);
		testMethod(2560, -3.1875, -0.0283, 0.87, -0.3258, 0, 0);
		testMethod(2565, -3.1876, -0.0242, 0.8078, -0.3258, 0, 0);
		testMethod(2570, -3.1877, -0.0205, 0.7457, -0.3258, 0, 0);
		testMethod(2575, -3.1878, -0.0171, 0.6835, -0.3258, 0, 0);
		testMethod(2580, -3.1879, -0.014, 0.6214, -0.3258, 0, 0);
		testMethod(2585, -3.188, -0.0112, 0.5593, -0.3258, 0, 0);
		testMethod(2590, -3.188, -0.0087, 0.4971, -0.3258, 0, 0);
		testMethod(2595, -3.188, -0.0065, 0.435, -0.3258, 0, 0);
		testMethod(2600, -3.1881, -0.0047, 0.3728, -0.3258, 0, 0);
		testMethod(2605, -3.1881, -0.0031, 0.3107, -0.3258, 0, 0);
		testMethod(2610, -3.1881, -0.0019, 0.2486, -0.3258, 0, 0);
		testMethod(2615, -3.1881, -0.0009, 0.1864, -0.3258, 0, 0);
		testMethod(2620, -3.1881, -0.0003, 0.1243, -0.3258, 0, 0);
		testMethod(2625, -3.1881, -0, 0.0621, -0.3258, 0, 0);
		testMethod(2630, -3.1881, -0, -0, -0.3258, 0, 0);
		testMethod(2630, -3.1881, -0, -0, -0.3258, 0, 0);
	}
	public void testMethod(int t, double pos, double vel, double acc, double hed, double omg, double alf) {
		time.add((long) t);
		translation.add(new MotionState1D(pos, vel, acc));
		rotation.add(new MotionState1D(hed, omg, alf));
	}

}